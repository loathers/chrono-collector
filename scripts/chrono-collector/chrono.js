"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __esm = function(fn, res) {
  return function __init() {
    return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
  };
};
var __commonJS = function(cb, mod) {
  return function __require() {
    return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
};
var __export = function(target, all2) {
  for (var name in all2)
    __defProp(target, name, { get: all2[name], enumerable: true });
};
var __copyProps = function(to, from, except, desc) {
  if (from && typeof from === "object" || typeof from === "function")
    for (var keys = __getOwnPropNames(from), i = 0, n = keys.length, key; i < n; i++) {
      key = keys[i];
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: function(k) {
          return from[k];
        }.bind(null, key), enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
    }
  return to;
};
var __toESM = function(mod, isNodeMode, target) {
  return target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
    // If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
    mod
  );
};
var __toCommonJS = function(mod) {
  return __copyProps(__defProp({}, "__esModule", { value: true }), mod);
};

// node_modules/libram/dist/logger.js
function _typeof2(o) {
  "@babel/helpers - typeof";
  return _typeof2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof2(o);
}
function _classCallCheck2(a, n) {
  if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties2(e, r) {
  for (var t = 0; t < r.length; t++) {
    var o = r[t];
    o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e, _toPropertyKey2(o.key), o);
  }
}
function _createClass2(e, r, t) {
  return r && _defineProperties2(e.prototype, r), t && _defineProperties2(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
}
function _defineProperty2(e, r, t) {
  return (r = _toPropertyKey2(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
}
function _toPropertyKey2(t) {
  var i = _toPrimitive2(t, "string");
  return "symbol" == _typeof2(i) ? i : i + "";
}
function _toPrimitive2(t, r) {
  if ("object" != _typeof2(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof2(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
var import_kolmafia2, LogLevels, defaultHandlers, Logger, logger_default;
var init_logger = __esm({
  "node_modules/libram/dist/logger.js": function() {
    import_kolmafia2 = require("kolmafia");
    (function(LogLevels2) {
      LogLevels2[LogLevels2["NONE"] = 0] = "NONE";
      LogLevels2[LogLevels2["ERROR"] = 1] = "ERROR";
      LogLevels2[LogLevels2["WARNING"] = 2] = "WARNING";
      LogLevels2[LogLevels2["INFO"] = 3] = "INFO";
      LogLevels2[LogLevels2["DEBUG"] = 4] = "DEBUG";
    })(LogLevels || (LogLevels = {}));
    defaultHandlers = _defineProperty2(_defineProperty2(_defineProperty2(_defineProperty2({}, LogLevels.INFO, function(message) {
      (0, import_kolmafia2.printHtml)("<b>[Libram Info]</b> ".concat(message));
      (0, import_kolmafia2.logprint)("[Libram] ".concat(message));
      return;
    }), LogLevels.WARNING, function(message) {
      (0, import_kolmafia2.printHtml)('<span style="background: orange; color: white;"><b>[Libram Warning]</b> '.concat(message, "</span>"));
      (0, import_kolmafia2.logprint)("[Libram] ".concat(message));
      return;
    }), LogLevels.ERROR, function(error2) {
      (0, import_kolmafia2.printHtml)('<span style="background: red; color: white;"><b>[Libram Error]</b> '.concat(error2.toString(), "</span>"));
      (0, import_kolmafia2.logprint)("[Libram] ".concat(error2));
      return;
    }), LogLevels.DEBUG, function(message) {
      (0, import_kolmafia2.printHtml)('<span style="background: red; color: white;"><b>[Libram Debug]</b> '.concat(message, "</span>"));
      (0, import_kolmafia2.logprint)("[Libram] ".concat(message));
      return;
    });
    Logger = /* @__PURE__ */ function() {
      function Logger2() {
        _classCallCheck2(this, Logger2);
        _defineProperty2(this, "handlers", defaultHandlers);
      }
      return _createClass2(Logger2, [{
        key: "level",
        get: function get4() {
          return Logger2.currentLevel;
        }
      }, {
        key: "setLevel",
        value: function setLevel(level) {
          Logger2.currentLevel = level;
        }
      }, {
        key: "setHandler",
        value: function setHandler(level, callback) {
          this.handlers[level] = callback;
        }
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
      }, {
        key: "log",
        value: function log2(level, message) {
          if (this.level >= level) this.handlers[level](message);
        }
      }, {
        key: "info",
        value: function info2(message) {
          this.log(LogLevels.INFO, message);
        }
      }, {
        key: "warning",
        value: function warning(message) {
          this.log(LogLevels.WARNING, message);
        }
      }, {
        key: "error",
        value: function error2(message) {
          this.log(LogLevels.ERROR, message);
        }
      }, {
        key: "debug",
        value: function debug(message) {
          this.log(LogLevels.DEBUG, message);
        }
      }]);
    }();
    _defineProperty2(Logger, "currentLevel", LogLevels.ERROR);
    logger_default = new Logger();
  }
});

// node_modules/libram/dist/propertyTypes.js
var propertyTypes_exports = {};
__export(propertyTypes_exports, {
  booleanProperties: function() {
    return booleanProperties;
  },
  familiarNumericProperties: function() {
    return familiarNumericProperties;
  },
  familiarProperties: function() {
    return familiarProperties;
  },
  itemNumericProperties: function() {
    return itemNumericProperties;
  },
  itemProperties: function() {
    return itemProperties;
  },
  locationProperties: function() {
    return locationProperties;
  },
  monsterNumericProperties: function() {
    return monsterNumericProperties;
  },
  monsterProperties: function() {
    return monsterProperties;
  },
  numericOrStringProperties: function() {
    return numericOrStringProperties;
  },
  numericProperties: function() {
    return numericProperties;
  },
  phylumProperties: function() {
    return phylumProperties;
  },
  statProperties: function() {
    return statProperties;
  },
  stringProperties: function() {
    return stringProperties;
  }
});
var booleanProperties, numericProperties, monsterProperties, monsterNumericProperties, locationProperties, stringProperties, numericOrStringProperties, familiarProperties, familiarNumericProperties, statProperties, phylumProperties, itemProperties, itemNumericProperties;
var init_propertyTypes = __esm({
  "node_modules/libram/dist/propertyTypes.js": function() {
    booleanProperties = ["abortOnChoiceWhenNotInChoice", "addChatCommandLine", "addCreationQueue", "addStatusBarToFrames", "allowCloseableDesktopTabs", "allowNegativeTally", "allowNonMoodBurning", "allowSummonBurning", "autoHighlightOnFocus", "broadcastEvents", "cacheMallSearches", "chatBeep", "chatLinksUseRelay", "compactChessboard", "copyAsHTML", "customizedTabs", "debugBuy", "debugConsequences", "debugFoxtrotRemoval", "debugPathnames", "debugTopMenuStyle", "gapProtection", "gitInstallDependencies", "gitShowCommitMessages", "gitUpdateOnLogin", "greenScreenProtection", "guiUsesOneWindow", "hideServerDebugText", "logAcquiredItems", "logBattleAction", "logBrowserInteractions", "logChatMessages", "logChatRequests", "logCleanedHTML", "logDecoratedResponses", "logFamiliarActions", "logGainMessages", "logReadableHTML", "logPreferenceChange", "logMonsterHealth", "logReverseOrder", "logStatGains", "logStatusEffects", "logStatusOnLogin", "macroDebug", "macroLens", "mementoListActive", "mergeHobopolisChat", "pingLogin", "pingStealthyTimein", "printStackOnAbort", "proxySet", "relayAddSounds", "relayAddsCustomCombat", "relayAddsDiscoHelper", "relayAddsGraphicalCLI", "relayAddsQuickScripts", "relayAddsRestoreLinks", "relayAddsUpArrowLinks", "relayAddsUseLinks", "relayAddsWikiLinks", "relayAllowRemoteAccess", "relayBrowserOnly", "relayCacheUncacheable", "relayFormatsChatText", "relayHidesJunkMallItems", "relayMaintainsEffects", "relayMaintainsHealth", "relayMaintainsMana", "relayOverridesImages", "relayRunsAfterAdventureScript", "relayRunsBeforeBattleScript", "relayRunsBeforePVPScript", "relayScriptButtonFirst", "relayTextualizesEffects", "relayTrimsZapList", "relayUsesInlineLinks", "relayUsesIntegratedChat", "relayWarnOnRecoverFailure", "removeMalignantEffects", "saveSettingsOnSet", "sharePriceData", "showAllRequests", "showExceptionalRequests", "stealthLogin", "svnAlwaysAdd", "svnAlwaysOverwrite", "svnInstallDependencies", "svnShowCommitMessages", "svnUpdateOnLogin", "switchEquipmentForBuffs", "syncAfterSvnUpdate", "useChatToolbar", "useContactsFrame", "useDevServer", "useDockIconBadge", "useHugglerChannel", "useImageCache", "useLastUserAgent", "useSystemTrayIcon", "useTabbedChatFrame", "useToolbars", "useCachedVolcanoMaps", "useZoneComboBox", "verboseSpeakeasy", "verboseFloundry", "wrapLongLines", "_faxDataChanged", "_gitUpdated", "_svnRepoFileFetched", "_svnUpdated", "antagonisticSnowmanKitAvailable", "arcadeGameHints", "armoryUnlocked", "autoForbidIgnoringStores", "autoCraft", "autoQuest", "autoEntangle", "autoGarish", "autoManaRestore", "autoFillMayoMinder", "autoPinkyRing", "autoPlantHardcore", "autoPlantSoftcore", "autoPotionID", "autoRepairBoxServants", "autoSatisfyWithCloset", "autoSatisfyWithCoinmasters", "autoSatisfyWithMall", "autoSatisfyWithNPCs", "autoSatisfyWithStash", "autoSatisfyWithStorage", "autoSatisfyWithShop", "autoSetConditions", "autoSteal", "autoTuxedo", "backupCameraReverserEnabled", "badMoonEncounter01", "badMoonEncounter02", "badMoonEncounter03", "badMoonEncounter04", "badMoonEncounter05", "badMoonEncounter06", "badMoonEncounter07", "badMoonEncounter08", "badMoonEncounter09", "badMoonEncounter10", "badMoonEncounter11", "badMoonEncounter12", "badMoonEncounter13", "badMoonEncounter14", "badMoonEncounter15", "badMoonEncounter16", "badMoonEncounter17", "badMoonEncounter18", "badMoonEncounter19", "badMoonEncounter20", "badMoonEncounter21", "badMoonEncounter22", "badMoonEncounter23", "badMoonEncounter24", "badMoonEncounter25", "badMoonEncounter26", "badMoonEncounter27", "badMoonEncounter28", "badMoonEncounter29", "badMoonEncounter30", "badMoonEncounter31", "badMoonEncounter32", "badMoonEncounter33", "badMoonEncounter34", "badMoonEncounter35", "badMoonEncounter36", "badMoonEncounter37", "badMoonEncounter38", "badMoonEncounter39", "badMoonEncounter40", "badMoonEncounter41", "badMoonEncounter42", "badMoonEncounter43", "badMoonEncounter44", "badMoonEncounter45", "badMoonEncounter46", "badMoonEncounter47", "badMoonEncounter48", "barrelShrineUnlocked", "batWingsBatHoleEntrance", "batWingsBatratBurrow", "batWingsBeanbatChamber", "batWingsGuanoJunction", "bigBrotherRescued", "blackBartsBootyAvailable", "bondAdv", "bondBeach", "bondBeat", "bondBooze", "bondBridge", "bondDesert", "bondDR", "bondDrunk1", "bondDrunk2", "bondHoney", "bondHP", "bondInit", "bondItem1", "bondItem2", "bondItem3", "bondJetpack", "bondMartiniDelivery", "bondMartiniPlus", "bondMartiniTurn", "bondMeat", "bondMox1", "bondMox2", "bondMPregen", "bondMus1", "bondMus2", "bondMys1", "bondMys2", "bondSpleen", "bondStat", "bondStat2", "bondStealth", "bondStealth2", "bondSymbols", "bondWar", "bondWeapon2", "bondWpn", "bookOfIronyAvailable", "booPeakLit", "bootsCharged", "breakfastCompleted", "burlyBodyguardReceivedBonus", "burrowgrubHiveUsed", "calzoneOfLegendEaten", "candyCaneSwordApartmentBuilding", "candyCaneSwordBlackForest", "candyCaneSwordBowlingAlley", "candyCaneSwordCopperheadClub", "candyCaneSwordDailyDungeon", "candyCaneSwordDefiledCranny", "candyCaneSwordFunHouse", "candyCaneSwordShore", "candyCaneSwordWarFratRoom", "candyCaneSwordWarFratZetas", "candyCaneSwordWarHippyBait", "candyCaneSwordWarHippyLine", "canteenUnlocked", "chaosButterflyThrown", "chatbotScriptExecuted", "chateauAvailable", "chatLiterate", "chatServesUpdates", "checkJackassHardcore", "checkJackassSoftcore", "clanAttacksEnabled", "coldAirportAlways", "considerShadowNoodles", "controlRoomUnlock", "concertVisited", "controlPanel1", "controlPanel2", "controlPanel3", "controlPanel4", "controlPanel5", "controlPanel6", "controlPanel7", "controlPanel8", "controlPanel9", "corralUnlocked", "crAlways", "crimbo23ArmoryAtWar", "crimbo23BarAtWar", "crimbo23CafeAtWar", "crimbo23CottageAtWar", "crimbo23FoundryAtWar", "cyberDatastickCollected", "dailyDungeonDone", "dampOldBootPurchased", "daycareOpen", "deepDishOfLegendEaten", "demonSummoned", "dinseyAudienceEngagement", "dinseyGarbagePirate", "dinseyRapidPassEnabled", "dinseyRollercoasterNext", "dinseySafetyProtocolsLoose", "doghouseBoarded", "dontStopForCounters", "drippingHallUnlocked", "drippyShieldUnlocked", "edUsedLash", "eldritchFissureAvailable", "eldritchHorrorAvailable", "enqueueForConsumption", "errorOnAmbiguousFold", "essenceOfAnnoyanceAvailable", "essenceOfBearAvailable", "expressCardUsed", "falloutShelterChronoUsed", "falloutShelterCoolingTankUsed", "fireExtinguisherBatHoleUsed", "fireExtinguisherChasmUsed", "fireExtinguisherCyrptUsed", "fireExtinguisherDesertUsed", "fireExtinguisherHaremUsed", "fistTeachingsHaikuDungeon", "fistTeachingsPokerRoom", "fistTeachingsBarroomBrawl", "fistTeachingsConservatory", "fistTeachingsBatHole", "fistTeachingsFunHouse", "fistTeachingsMenagerie", "fistTeachingsSlums", "fistTeachingsFratHouse", "fistTeachingsRoad", "fistTeachingsNinjaSnowmen", "flickeringPixel1", "flickeringPixel2", "flickeringPixel3", "flickeringPixel4", "flickeringPixel5", "flickeringPixel6", "flickeringPixel7", "flickeringPixel8", "floristFriarAvailable", "floristFriarChecked", "frAlways", "frCemetaryUnlocked", "friarsBlessingReceived", "frMountainsUnlocked", "frSwampUnlocked", "frVillageUnlocked", "frWoodUnlocked", "getawayCampsiteUnlocked", "ghostPencil1", "ghostPencil2", "ghostPencil3", "ghostPencil4", "ghostPencil5", "ghostPencil6", "ghostPencil7", "ghostPencil8", "ghostPencil9", "gingerAdvanceClockUnlocked", "gingerBlackmailAccomplished", "gingerbreadCityAvailable", "gingerExtraAdventures", "gingerNegativesDropped", "gingerSewersUnlocked", "gingerSubwayLineUnlocked", "gingerRetailUnlocked", "glitchItemAvailable", "grabCloversHardcore", "grabCloversSoftcore", "guideToSafariAvailable", "guyMadeOfBeesDefeated", "hallowienerDefiledNook", "hallowienerGuanoJunction", "hallowienerKnollGym", "hallowienerMadnessBakery", "hallowienerMiddleChamber", "hallowienerOvergrownLot", "hallowienerSkeletonStore", "hallowienerSmutOrcs", "hallowienerSonofaBeach", "hallowienerVolcoino", "hardcorePVPWarning", "harvestBatteriesHardcore", "harvestBatteriesSoftcore", "hasAutumnaton", "hasBartender", "hasChef", "hasCocktailKit", "hasCosmicBowlingBall", "hasDetectiveSchool", "hasMaydayContract", "hasOven", "hasRange", "hasShaker", "hasSushiMat", "hasTwinkleVision", "haveBoxingDaydreamHardcore", "haveBoxingDaydreamSoftcore", "hermitHax0red", "holidayHalsBookAvailable", "horseryAvailable", "hotAirportAlways", "intenseCurrents", "itemBoughtPerAscension637", "itemBoughtPerAscension8266", "itemBoughtPerAscension10790", "itemBoughtPerAscension10794", "itemBoughtPerAscension10795", "itemBoughtPerCharacter6423", "itemBoughtPerCharacter6428", "itemBoughtPerCharacter6429", "kingLiberated", "lastPirateInsult1", "lastPirateInsult2", "lastPirateInsult3", "lastPirateInsult4", "lastPirateInsult5", "lastPirateInsult6", "lastPirateInsult7", "lastPirateInsult8", "lawOfAveragesAvailable", "leafletCompleted", "ledCandleDropped", "libraryCardUsed", "lockPicked", "logBastilleBattalionBattles", "loginRecoveryHardcore", "loginRecoverySoftcore", "lovebugsUnlocked", "loveTunnelAvailable", "lowerChamberUnlock", "madnessBakeryAvailable", "makePocketWishesHardcore", "makePocketWishesSoftcore", "manualOfNumberologyAvailable", "mappingMonsters", "mapToAnemoneMinePurchased", "mapToKokomoAvailable", "mapToMadnessReefPurchased", "mapToTheDiveBarPurchased", "mapToTheMarinaraTrenchPurchased", "mapToTheSkateParkPurchased", "maraisBeaverUnlock", "maraisCorpseUnlock", "maraisDarkUnlock", "maraisVillageUnlock", "maraisWildlifeUnlock", "maraisWizardUnlock", "maximizerAlwaysCurrent", "maximizerCreateOnHand", "maximizerCurrentMallPrices", "maximizerFoldables", "maximizerIncludeAll", "maximizerNoAdventures", "maximizerUseScope", "middleChamberUnlock", "milkOfMagnesiumActive", "moonTuned", "neverendingPartyAlways", "noncombatForcerActive", "oasisAvailable", "odeBuffbotCheck", "oilPeakLit", "oscusSodaUsed", "outrageousSombreroUsed", "overgrownLotAvailable", "ownsFloristFriar", "ownsSpeakeasy", "pathedSummonsHardcore", "pathedSummonsSoftcore", "pirateRealmUnlockedAnemometer", "pirateRealmUnlockedBlunderbuss", "pirateRealmUnlockedBreastplate", "pirateRealmUnlockedClipper", "pirateRealmUnlockedCrabsicle", "pirateRealmUnlockedFlag", "pirateRealmUnlockedFork", "pirateRealmUnlockedGoldRing", "pirateRealmUnlockedManOWar", "pirateRealmUnlockedPlushie", "pirateRealmUnlockedRadioRing", "pirateRealmUnlockedRhum", "pirateRealmUnlockedScurvySkillbook", "pirateRealmUnlockedShavingCream", "pirateRealmUnlockedSpyglass", "pirateRealmUnlockedTattoo", "pirateRealmUnlockedThirdCrewmate", "pirateRealmUnlockedTikiSkillbook", "pizzaOfLegendEaten", "popularTartUnlocked", "potatoAlarmClockUsed", "prAlways", "prayedForGlamour", "prayedForProtection", "prayedForVigor", "primaryLabCheerCoreGrabbed", "pumpkinSpiceWhorlUsed", "pyramidBombUsed", "rageGlandVented", "readManualHardcore", "readManualSoftcore", "relayShowSpoilers", "relayShowWarnings", "rememberDesktopSize", "replicaChateauAvailable", "replicaNeverendingPartyAlways", "replicaWitchessSetAvailable", "requireBoxServants", "requireSewerTestItems", "restUsingCampAwayTent", "restUsingChateau", "ROMOfOptimalityAvailable", "safePickpocket", "schoolOfHardKnocksDiplomaAvailable", "scriptCascadingMenus", "serverAddsCustomCombat", "serverAddsBothCombat", "SHAWARMAInitiativeUnlocked", "showForbiddenStores", "showGainsPerUnit", "showIgnoringStorePrices", "showNoSummonOnly", "showTurnFreeOnly", "skeletonStoreAvailable", "sleazeAirportAlways", "snojoAvailable", "sortByEffect", "sortByRoom", "spacegateAlways", "spacegateVaccine1", "spacegateVaccine2", "spacegateVaccine3", "spaceInvaderDefeated", "spelunkyHints", "spiceMelangeUsed", "spookyAirportAlways", "stenchAirportAlways", "stopForFixedWanderer", "stopForUltraRare", "styxPixieVisited", "superconductorDefeated", "suppressCyberRealmDarkMode", "suppressCyberRealmGreenImages", "suppressInappropriateNags", "suppressPowerPixellation", "suppressMallPriceCacheMessages", "telegraphOfficeAvailable", "telescopeLookedHigh", "timeTowerAvailable", "trackLightsOut", "uneffectWithHotTub", "universalSeasoningActive", "universalSeasoningAvailable", "useBookOfEverySkillHardcore", "useBookOfEverySkillSoftcore", "useCrimboToysHardcore", "useCrimboToysSoftcore", "verboseMaximizer", "visitLoungeHardcore", "visitLoungeSoftcore", "visitRumpusHardcore", "visitRumpusSoftcore", "voteAlways", "wildfireBarrelCaulked", "wildfireDusted", "wildfireFracked", "wildfirePumpGreased", "wildfireSprinkled", "yearbookCameraPending", "youRobotScavenged", "_2002MrStoreCreditsCollected", "_affirmationCookieEaten", "_affirmationHateUsed", "_airFryerUsed", "_akgyxothUsed", "_alienAnimalMilkUsed", "_alienPlantPodUsed", "_allYearSucker", "_aprilShower", "_aprilShowerGlobsCollected", "_aprilShowerLungingThrustSmack", "_aprilShowerNorthernExplosion", "_aprilShowerSimmer", "_armyToddlerCast", "_aug1Cast", "_aug2Cast", "_aug3Cast", "_aug4Cast", "_aug5Cast", "_aug6Cast", "_aug7Cast", "_aug8Cast", "_aug9Cast", "_aug10Cast", "_aug11Cast", "_aug12Cast", "_aug13Cast", "_aug14Cast", "_aug15Cast", "_aug16Cast", "_aug17Cast", "_aug18Cast", "_aug19Cast", "_aug20Cast", "_aug21Cast", "_aug22Cast", "_aug23Cast", "_aug24Cast", "_aug25Cast", "_aug26Cast", "_aug27Cast", "_aug28Cast", "_aug29Cast", "_aug30Cast", "_aug31Cast", "_augTodayCast", "_authorsInkUsed", "_baconMachineUsed", "_bagOfCandy", "_bagOfCandyUsed", "_bagOTricksUsed", "_ballastTurtleUsed", "_ballInACupUsed", "_ballpit", "_barrelPrayer", "_bastilleLastBattleWon", "_beachCombing", "_bendHellUsed", "_blackMonolithUsed", "_blankoutUsed", "_bloodBagDoctorBag", "_bloodBagCloake", "_bloodBankIntimidated", "_bloodBankVisited", "_bonersSummoned", "_bookOfEverySkillUsed", "_borrowedTimeUsed", "_bowleggedSwaggerUsed", "_bowlFullOfJellyUsed", "_boxOfHammersUsed", "_brainPreservationFluidUsed", "_brassDreadFlaskUsed", "_cameraUsed", "_canSeekBirds", "_candyCaneSwordBackAlley", "_candyCaneSwordHauntedBedroom", "_candyCaneSwordHauntedLibrary", "_candyCaneSwordLyle", "_candyCaneSwordMadnessBakery", "_candyCaneSwordOvergrownLot", "_candyCaneSwordOvergrownShrine", "_candyCaneSwordPalindome", "_candyCaneSwordSouthOfTheBorder", "_candyCaneSwordSpookyForest", "_carboLoaded", "_cargoPocketEmptied", "_ceciHatUsed", "_chateauDeskHarvested", "_chateauMonsterFought", "_chibiChanged", "_chronerCrossUsed", "_chronerTriggerUsed", "_chubbyAndPlumpUsed", "_circadianRhythmsRecalled", "_circleDrumUsed", "_clanFortuneBuffUsed", "_claraBellUsed", "_coalPaperweightUsed", "_cocoaDispenserUsed", "_cocktailShakerUsed", "_coldAirportToday", "_coldOne", "_communismUsed", "_confusingLEDClockUsed", "_controlPanelUsed", "_cookbookbatRecipeDrops", "_corruptedStardustUsed", "_cosmicSixPackConjured", "_crappyCameraUsed", "_creepyVoodooDollUsed", "_crimboTraining", "_crimboTree", "_crToday", "_cursedKegUsed", "_cursedMicrowaveUsed", "_cyberTrashCollected", "_dailyDungeonMalwareUsed", "_darkChocolateHeart", "_daycareFights", "_daycareNap", "_daycareSpa", "_daycareToday", "_defectiveTokenChecked", "_defectiveTokenUsed", "_dinseyGarbageDisposed", "_discoKnife", "_distentionPillUsed", "_dnaHybrid", "_docClocksThymeCocktailDrunk", "_douseFoeSuccess", "_drippingHallDoor1", "_drippingHallDoor2", "_drippingHallDoor3", "_drippingHallDoor4", "_drippyCaviarUsed", "_drippyNuggetUsed", "_drippyPilsnerUsed", "_drippyPlumUsed", "_drippyWineUsed", "_eldritchHorrorEvoked", "_eldritchTentacleFought", "_emberingHulkFought", "_entauntaunedToday", "_envyfishEggUsed", "_epicMcTwistUsed", "_essentialTofuUsed", "_etchedHourglassUsed", "_eternalCarBatteryUsed", "_everfullGlassUsed", "_extraGreasySliderEaten", "_eyeAndATwistUsed", "_fancyChessSetUsed", "_falloutShelterSpaUsed", "_fancyHotDogEaten", "_farmerItemsCollected", "_favoriteBirdVisited", "_firedJokestersGun", "_fireExtinguisherRefilled", "_fireStartingKitUsed", "_fireworksShop", "_fireworksShopHatBought", "_fireworksShopEquipmentBought", "_fireworkUsed", "_fishyPipeUsed", "_floundryItemCreated", "_floundryItemUsed", "_freePillKeeperUsed", "_frToday", "_frostyMugUsed", "_fudgeSporkUsed", "_garbageItemChanged", "_gingerBiggerAlligators", "_gingerbreadCityToday", "_gingerbreadClockAdvanced", "_gingerbreadClockVisited", "_gingerbreadColumnDestroyed", "_gingerbreadMobHitUsed", "_glennGoldenDiceUsed", "_glitchItemImplemented", "_gnollEyeUsed", "_gnomePart", "_governmentPerDiemUsed", "_grimBuff", "_guildManualUsed", "_guzzlrQuestAbandoned", "_hardKnocksDiplomaUsed", "_hippyMeatCollected", "_hobbyHorseUsed", "_hodgmansBlanketDrunk", "_holidayFunUsed", "_holoWristCrystal", "_hotAirportToday", "_hungerSauceUsed", "_hyperinflatedSealLungUsed", "_iceHotelRoomsRaided", "_iceSculptureUsed", "_incredibleSelfEsteemCast", "_infernoDiscoVisited", "_infiniteJellyUsed", "_internetDailyDungeonMalwareBought", "_internetGallonOfMilkBought", "_internetPlusOneBought", "_internetPrintScreenButtonBought", "_internetViralVideoBought", "_interviewIsabella", "_interviewMasquerade", "_interviewVlad", "_inquisitorsUnidentifiableObjectUsed", "_ironicMoustache", "_jackassPlumberGame", "_jarlsCheeseSummoned", "_jarlsCreamSummoned", "_jarlsDoughSummoned", "_jarlsEggsSummoned", "_jarlsFruitSummoned", "_jarlsMeatSummoned", "_jarlsPotatoSummoned", "_jarlsVeggiesSummoned", "_jingleBellUsed", "_jukebox", "_kgbFlywheelCharged", "_kgbLeftDrawerUsed", "_kgbOpened", "_kgbRightDrawerUsed", "_kolConSixPackUsed", "_kolhsCutButNotDried", "_kolhsIsskayLikeAnAshtray", "_kolhsPoeticallyLicenced", "_kolhsSchoolSpirited", "_kudzuSaladEaten", "_lastCombatLost", "_lastCombatWon", "_latteBanishUsed", "_latteCopyUsed", "_latteDrinkUsed", "_leafAntEggCrafted", "_leafDayShortenerCrafted", "_leafTattooCrafted", "_leavesJumped", "_legendaryBeat", "_licenseToChillUsed", "_lodestoneUsed", "_lookingGlass", "_loveTunnelToday", "_loveTunnelUsed", "_luckyGoldRingVolcoino", "_lunchBreak", "_lupineHormonesUsed", "_lyleFavored", "_madLiquorDrunk", "_madTeaParty", "_mafiaMiddleFingerRingUsed", "_managerialManipulationUsed", "_mansquitoSerumUsed", "_mapToACandyRichBlockUsed", "_maydayDropped", "_mayoDeviceRented", "_mayoTankSoaked", "_meatballMachineUsed", "_meatifyMatterUsed", "_milkOfMagnesiumUsed", "_mimeArmyShotglassUsed", "_miniKiwiIntoxicatingSpiritsBought", "_missGravesVermouthDrunk", "_missileLauncherUsed", "_molehillMountainUsed", "_momFoodReceived", "_mrBurnsgerEaten", "_muffinOrderedToday", "_mulliganStewEaten", "_mushroomGardenVisited", "_neverendingPartyToday", "_newYouQuestCompleted", "_olympicSwimmingPool", "_olympicSwimmingPoolItemFound", "_overflowingGiftBasketUsed", "_partyHard", "_pastaAdditive", "_perfectFreezeUsed", "_perfectlyFairCoinUsed", "_petePartyThrown", "_peteRiotIncited", "_photocopyUsed", "_pickyTweezersUsed", "_pickleJuiceDrunk", "_pingPongGame", "_pirateBellowUsed", "_pirateDinghyUsed", "_pirateForkUsed", "_pirateRealmSoldCompass", "_pirateRealmWindicleUsed", "_pixelOrbUsed", "_plumbersMushroomStewEaten", "_pneumaticityPotionUsed", "_portableSteamUnitUsed", "_pottedTeaTreeUsed", "_prToday", "_psychoJarFilled", "_psychoJarUsed", "_psychokineticHugUsed", "_punchingMirrorUsed", "_rainStickUsed", "_redwoodRainStickUsed", "_replicaSnowconeTomeUsed", "_replicaResolutionLibramUsed", "_replicaSmithsTomeUsed", "_requestSandwichSucceeded", "_rhinestonesAcquired", "_saladForkUsed", "_seaJellyHarvested", "_septEmberBalanceChecked", "_setOfJacksUsed", "_sewingKitUsed", "_sexChanged", "_shadowAffinityToday", "_shadowForestLooted", "_shrubDecorated", "_silverDreadFlaskUsed", "_sitCourseCompleted", "_skateBuff1", "_skateBuff2", "_skateBuff3", "_skateBuff4", "_skateBuff5", "_sleazeAirportToday", "_snowballFactoryUsed", "_sobrieTeaUsed", "_softwareGlitchTurnReceived", "_sotParcelReturned", "_spacegateMurderbot", "_spacegateRuins", "_spacegateSpant", "_spacegateToday", "_spacegateVaccine", "_spaghettiBreakfast", "_spaghettiBreakfastEaten", "_spinmasterLatheVisited", "_spinningWheel", "_spookyAirportToday", "_stabonicScrollUsed", "_steelyEyedSquintUsed", "_stenchAirportToday", "_stinkyCheeseBanisherUsed", "_strangeStalagmiteUsed", "_streamsCrossed", "_structuralEmberUsed", "_stuffedPocketwatchUsed", "_styxSprayUsed", "_summonAnnoyanceUsed", "_summonCarrotUsed", "_summonResortPassUsed", "_sweetToothUsed", "_syntheticDogHairPillUsed", "_tacoFlierUsed", "_takerSpaceSuppliesDelivered", "_telegraphOfficeToday", "_templeHiddenPower", "_tempuraAirUsed", "_thesisDelivered", "_tiedUpFlamingLeafletFought", "_tiedUpFlamingMonsteraFought", "_tiedUpLeaviathanFought", "_timeSpinnerReplicatorUsed", "_toastSummoned", "_tonicDjinn", "_treasuryEliteMeatCollected", "_treasuryHaremMeatCollected", "_trivialAvocationsGame", "_tryptophanDartUsed", "_turtlePowerCast", "_twelveNightEnergyUsed", "_ultraMegaSourBallUsed", "_victorSpoilsUsed", "_villainLairCanLidUsed", "_villainLairColorChoiceUsed", "_villainLairDoorChoiceUsed", "_villainLairFirecrackerUsed", "_villainLairSymbologyChoiceUsed", "_villainLairWebUsed", "_vmaskBanisherUsed", "_voraciTeaUsed", "_volcanoItemRedeemed", "_volcanoSuperduperheatedMetal", "_voodooSnuffUsed", "_voteToday", "_VYKEACafeteriaRaided", "_VYKEALoungeRaided", "_walfordQuestStartedToday", "_warbearBankUsed", "_warbearBreakfastMachineUsed", "_warbearGyrocopterUsed", "_warbearSodaMachineUsed", "_wildfireBarrelHarvested", "_witchessBuff", "_workshedItemUsed", "_yamBatteryUsed", "_zombieClover", "_preventScurvy", "lockedItem4637", "lockedItem4638", "lockedItem4639", "lockedItem4646", "lockedItem4647", "unknownRecipe3542", "unknownRecipe3543", "unknownRecipe3544", "unknownRecipe3545", "unknownRecipe3546", "unknownRecipe3547", "unknownRecipe3548", "unknownRecipe3749", "unknownRecipe3751", "unknownRecipe4172", "unknownRecipe4173", "unknownRecipe4174", "unknownRecipe5060", "unknownRecipe5061", "unknownRecipe5062", "unknownRecipe5063", "unknownRecipe5064", "unknownRecipe5066", "unknownRecipe5067", "unknownRecipe5069", "unknownRecipe5070", "unknownRecipe5072", "unknownRecipe5073", "unknownRecipe5670", "unknownRecipe5671", "unknownRecipe6501", "unknownRecipe6564", "unknownRecipe6565", "unknownRecipe6566", "unknownRecipe6567", "unknownRecipe6568", "unknownRecipe6569", "unknownRecipe6570", "unknownRecipe6571", "unknownRecipe6572", "unknownRecipe6573", "unknownRecipe6574", "unknownRecipe6575", "unknownRecipe6576", "unknownRecipe6577", "unknownRecipe6578", "unknownRecipe7752", "unknownRecipe7753", "unknownRecipe7754", "unknownRecipe7755", "unknownRecipe7756", "unknownRecipe7757", "unknownRecipe7758", "unknownRecipe10970", "unknownRecipe10971", "unknownRecipe10972", "unknownRecipe10973", "unknownRecipe10974", "unknownRecipe10975", "unknownRecipe10976", "unknownRecipe10977", "unknownRecipe10978", "unknownRecipe10988", "unknownRecipe10989", "unknownRecipe10990", "unknownRecipe10991", "unknownRecipe10992", "unknownRecipe11000"];
    numericProperties = ["coinMasterIndex", "dailyDeedsVersion", "defaultDropdown1", "defaultDropdown2", "defaultDropdownSplit", "defaultLimit", "fixedThreadPoolSize", "itemManagerIndex", "lastBuffRequestType", "lastGlobalCounterDay", "lastImageCacheClear", "pingDefaultTestPings", "pingLoginCount", "pingLoginGoal", "pingLoginThreshold", "pingTestPings", "previousUpdateRevision", "relayDelayForSVN", "relaySkillButtonCount", "scriptButtonPosition", "statusDropdown", "svnThreadPoolSize", "toolbarPosition", "_beachTides", "_g9Effect", "8BitBonusTurns", "8BitScore", "addingScrolls", "affirmationCookiesEaten", "aminoAcidsUsed", "antagonisticSnowmanKitCost", "ascensionsToday", "asolDeferredPoints", "asolPointsPigSkinner", "asolPointsCheeseWizard", "asolPointsJazzAgent", "autoAbortThreshold", "autoAntidote", "autoBuyPriceLimit", "autopsyTweezersUsed", "autumnatonQuestTurn", "availableCandyCredits", "availableDimes", "availableFunPoints", "availableMrStore2002Credits", "availableQuarters", "availableSeptEmbers", "availableStoreCredits", "availableSwagger", "avantGuardPoints", "averageSwagger", "awolMedicine", "awolPointsBeanslinger", "awolPointsCowpuncher", "awolPointsSnakeoiler", "awolDeferredPointsBeanslinger", "awolDeferredPointsCowpuncher", "awolDeferredPointsSnakeoiler", "awolVenom", "bagOTricksCharges", "ballpitBonus", "bankedKarma", "bartenderTurnsUsed", "basementMallPrices", "basementSafetyMargin", "batmanFundsAvailable", "batmanBonusInitialFunds", "batmanTimeLeft", "bearSwagger", "beeCounter", "beGregariousCharges", "beGregariousFightsLeft", "birdformCold", "birdformHot", "birdformRoc", "birdformSleaze", "birdformSpooky", "birdformStench", "blackBartsBootyCost", "blackPuddingsDefeated", "blackForestProgress", "blankOutUsed", "bloodweiserDrunk", "bodyguardCharge", "bondPoints", "bondVillainsDefeated", "boneAbacusVictories", "bookOfFactsGummi", "bookOfFactsPinata", "bookOfIronyCost", "booPeakProgress", "borisPoints", "breakableHandling", "breakableHandling1964", "breakableHandling9691", "breakableHandling9692", "breakableHandling9699", "breathitinCharges", "brodenBacteria", "brodenSprinkles", "buffBotMessageDisposal", "buffBotPhilanthropyType", "buffJimmyIngredients", "burnoutsDefeated", "burrowgrubSummonsRemaining", "bwApronMealsEaten", "camelSpit", "camerasUsed", "campAwayDecoration", "candyWitchTurnsUsed", "candyWitchCandyTotal", "carboLoading", "catBurglarBankHeists", "cellarLayout", "charitableDonations", "chasmBridgeProgress", "chefTurnsUsed", "chessboardsCleared", "chibiAlignment", "chibiBirthday", "chibiFitness", "chibiIntelligence", "chibiLastVisit", "chibiSocialization", "chilledToTheBone", "cinchoSaltAndLime", "cinderellaMinutesToMidnight", "cinderellaScore", "cocktailSummons", "commerceGhostCombats", "cookbookbatIngredientsCharge", "controlPanelOmega", "cornucopiasOpened", "cosmicBowlingBallReturnCombats", "cozyCounter6332", "cozyCounter6333", "cozyCounter6334", "craftingClay", "craftingLeather", "craftingPlansCharges", "craftingStraw", "crimbo16BeardChakraCleanliness", "crimbo16BootsChakraCleanliness", "crimbo16BungChakraCleanliness", "crimbo16CrimboHatChakraCleanliness", "crimbo16GutsChakraCleanliness", "crimbo16HatChakraCleanliness", "crimbo16JellyChakraCleanliness", "crimbo16LiverChakraCleanliness", "crimbo16NippleChakraCleanliness", "crimbo16NoseChakraCleanliness", "crimbo16ReindeerChakraCleanliness", "crimbo16SackChakraCleanliness", "crimboTrainingSkill", "crimboTreeDays", "cubelingProgress", "cupidBowFights", "currentExtremity", "currentHedgeMazeRoom", "currentMojoFilters", "currentNunneryMeat", "currentPortalEnergy", "currentReplicaStoreYear", "cursedMagnifyingGlassCount", "cyrptAlcoveEvilness", "cyrptCrannyEvilness", "cyrptNicheEvilness", "cyrptNookEvilness", "cyrptTotalEvilness", "darkGyfftePoints", "dartsThrown", "daycareEquipment", "daycareInstructorItemQuantity", "daycareInstructors", "daycareLastScavenge", "daycareToddlers", "dbNemesisSkill1", "dbNemesisSkill2", "dbNemesisSkill3", "desertExploration", "desktopHeight", "desktopWidth", "dinseyFilthLevel", "dinseyFunProgress", "dinseyNastyBearsDefeated", "dinseySocialJusticeIProgress", "dinseySocialJusticeIIProgress", "dinseyTouristsFed", "dinseyToxicMultiplier", "doctorBagQuestLights", "doctorBagUpgrades", "dreadScroll1", "dreadScroll2", "dreadScroll3", "dreadScroll4", "dreadScroll5", "dreadScroll6", "dreadScroll7", "dreadScroll8", "dripAdventuresSinceAscension", "drippingHallAdventuresSinceAscension", "drippingTreesAdventuresSinceAscension", "drippyBatsUnlocked", "drippyJuice", "drippyOrbsClaimed", "droneSelfDestructChipsUsed", "drunkenSwagger", "edDefeatAbort", "edPoints", "eldritchTentaclesFought", "electricKoolAidEaten", "elfGratitude", "encountersUntilDMTChoice", "encountersUntilYachtzeeChoice", "encountersUntilNEPChoice", "encountersUntilSRChoice", "ensorceleeLevel", "entauntaunedColdRes", "essenceOfAnnoyanceCost", "essenceOfBearCost", "extraRolloverAdventures", "falloutShelterLevel", "familiarSweat", "fingernailsClipped", "fistSkillsKnown", "flyeredML", "fossilB", "fossilD", "fossilN", "fossilP", "fossilS", "fossilW", "fratboysDefeated", "frenchGuardTurtlesFreed", "funGuyMansionKills", "garbageChampagneCharge", "garbageFireProgress", "garbageShirtCharge", "garbageTreeCharge", "garlandUpgrades", "getsYouDrunkTurnsLeft", "ghostPepperTurnsLeft", "gingerDigCount", "gingerLawChoice", "gingerMuscleChoice", "gingerTrainScheduleStudies", "gladiatorBallMovesKnown", "gladiatorBladeMovesKnown", "gladiatorNetMovesKnown", "glitchItemCost", "glitchItemImplementationCount", "glitchItemImplementationLevel", "glitchSwagger", "gloverPoints", "gnasirProgress", "goldenMrAccessories", "gongPath", "gooseDronesRemaining", "goreCollected", "gourdItemCount", "greyYouPoints", "grimoire1Summons", "grimoire2Summons", "grimoire3Summons", "grimstoneCharge", "guardTurtlesFreed", "guideToSafariCost", "guyMadeOfBeesCount", "guzzlrBronzeDeliveries", "guzzlrDeliveryProgress", "guzzlrGoldDeliveries", "guzzlrPlatinumDeliveries", "haciendaLayout", "hallowiener8BitRealm", "hallowienerCoinspiracy", "hareMillisecondsSaved", "hareTurnsUsed", "heavyRainsStartingThunder", "heavyRainsStartingRain", "heavyRainsStartingLightning", "heroDonationBoris", "heroDonationJarlsberg", "heroDonationSneakyPete", "hiddenApartmentProgress", "hiddenBowlingAlleyProgress", "hiddenHospitalProgress", "hiddenOfficeProgress", "hiddenTavernUnlock", "highTopPumped", "hippiesDefeated", "holidayHalsBookCost", "holidaySwagger", "homemadeRobotUpgrades", "homebodylCharges", "hpAutoRecovery", "hpAutoRecoveryTarget", "iceSwagger", "ironicSwagger", "jarlsbergPoints", "juicyGarbageUsed", "jungCharge", "junglePuns", "knownAscensions", "kolhsTotalSchoolSpirited", "lastAnticheeseDay", "lastArcadeAscension", "lastBadMoonReset", "lastBangPotionReset", "lastBattlefieldReset", "lastBeardBuff", "lastBreakfast", "lastCartographyBooPeak", "lastCartographyCastleTop", "lastCartographyDarkNeck", "lastCartographyDefiledNook", "lastCartographyFratHouse", "lastCartographyFratHouseVerge", "lastCartographyGuanoJunction", "lastCartographyHauntedBilliards", "lastCartographyHippyCampVerge", "lastCartographyZeppelinProtesters", "lastCastleGroundUnlock", "lastCastleTopUnlock", "lastCellarReset", "lastChanceThreshold", "lastChasmReset", "lastColosseumRoundWon", "lastCouncilVisit", "lastCounterDay", "lastDesertUnlock", "lastDispensaryOpen", "lastDMTDuplication", "lastDwarfFactoryReset", "lastEVHelmetValue", "lastEVHelmetReset", "lastEmptiedStorage", "lastFilthClearance", "lastGoofballBuy", "lastGuildStoreOpen", "lastGuyMadeOfBeesReset", "lastFratboyCall", "lastFriarCeremonyAscension", "lastFriarsElbowNC", "lastFriarsHeartNC", "lastFriarsNeckNC", "lastHippyCall", "lastIslandUnlock", "lastKeyotronUse", "lastKingLiberation", "lastLightsOutTurn", "lastMushroomPlot", "lastMiningReset", "lastNemesisReset", "lastPaperStripReset", "lastPirateEphemeraReset", "lastPirateInsultReset", "lastPlusSignUnlock", "lastQuartetAscension", "lastQuartetRequest", "lastSecondFloorUnlock", "lastShadowForgeUnlockAdventure", "lastSkateParkReset", "lastStillBeatingSpleen", "lastTavernAscension", "lastTavernSquare", "lastTelescopeReset", "lastTempleAdventures", "lastTempleButtonsUnlock", "lastTempleUnlock", "lastThingWithNoNameDefeated", "lastTowelAscension", "lastTr4pz0rQuest", "lastTrainsetConfiguration", "lastVioletFogMap", "lastVoteMonsterTurn", "lastWartDinseyDefeated", "lastWuTangDefeated", "lastYearbookCameraAscension", "lastZapperWand", "lastZapperWandExplosionDay", "lawOfAveragesCost", "legacyPoints", "leprecondoLastNeedChange", "libramSummons", "lightsOutAutomation", "louvreDesiredGoal", "louvreGoal", "lovebugsAridDesert", "lovebugsBeachBuck", "lovebugsBooze", "lovebugsChroner", "lovebugsCoinspiracy", "lovebugsCyrpt", "lovebugsFreddy", "lovebugsFunFunds", "lovebugsHoboNickel", "lovebugsItemDrop", "lovebugsMeat", "lovebugsMeatDrop", "lovebugsMoxie", "lovebugsMuscle", "lovebugsMysticality", "lovebugsOilPeak", "lovebugsOrcChasm", "lovebugsPowder", "lovebugsWalmart", "lttQuestDifficulty", "lttQuestStageCount", "manaBurnSummonThreshold", "manaBurningThreshold", "manaBurningTrigger", "manorDrawerCount", "manualOfNumberologyCost", "mapToKokomoCost", "masksUnlocked", "maximizerMRUSize", "maximizerCombinationLimit", "maximizerEquipmentLevel", "maximizerEquipmentScope", "maximizerMaxPrice", "maximizerPriceLevel", "maxManaBurn", "mayflyExperience", "mayoLevel", "meansuckerPrice", "merkinVocabularyMastery", "miniAdvClass", "miniKiwiAiolisUsed", "miniMartinisDrunk", "moleTunnelLevel", "mothershipProgress", "mpAutoRecovery", "mpAutoRecoveryTarget", "munchiesPillsUsed", "mushroomGardenCropLevel", "nanopolymerSpiderWebsUsed", "nextAprilBandTurn", "nextParanormalActivity", "nextQuantumFamiliarOwnerId", "nextQuantumFamiliarTurn", "noobPoints", "noobDeferredPoints", "noodleSummons", "nsContestants1", "nsContestants2", "nsContestants3", "nuclearAutumnPoints", "numericSwagger", "nunsVisits", "oilPeakProgress", "optimalSwagger", "optimisticCandleProgress", "palindomeDudesDefeated", "parasolUsed", "peaceTurkeyIndex", "pendingMapReflections", "phosphorTracesUses", "pingpongSkill", "pirateRealmPlasticPiratesDefeated", "pirateRealmShipsDestroyed", "pirateRealmStormsEscaped", "pirateSwagger", "plantingDay", "plumberBadgeCost", "plumberCostumeCost", "plumberPoints", "pokefamPoints", "poolSharkCount", "poolSkill", "powerPillProgress", "preworkoutPowderUses", "primaryLabGooIntensity", "prismaticSummons", "procrastinatorLanguageFluency", "promptAboutCrafting", "puzzleChampBonus", "pyramidPosition", "quantumPoints", "reagentSummons", "reanimatorArms", "reanimatorLegs", "reanimatorSkulls", "reanimatorWeirdParts", "reanimatorWings", "recentLocations", "redSnapperProgress", "relayPort", "relocatePygmyJanitor", "relocatePygmyLawyer", "rockinRobinProgress", "romanCandelabraRedCasts", "romanCandelabraBlueCasts", "romanCandelabraYellowCasts", "romanCandelabraGreenCasts", "romanCandelabraPurpleCasts", "ROMOfOptimalityCost", "rumpelstiltskinKidsRescued", "rumpelstiltskinTurnsUsed", "rwbMonsterCount", "safariSwagger", "sausageGrinderUnits", "schoolOfHardKnocksDiplomaCost", "schoolSwagger", "scrapbookCharges", "screechCombats", "scriptMRULength", "seaodesFound", "SeasoningSwagger", "sexChanges", "shenInitiationDay", "shockingLickCharges", "singleFamiliarRun", "skillBurn3", "skillBurn90", "skillBurn153", "skillBurn154", "skillBurn155", "skillBurn236", "skillBurn237", "skillBurn1019", "skillBurn5017", "skillBurn6014", "skillBurn6015", "skillBurn6016", "skillBurn6020", "skillBurn6021", "skillBurn6022", "skillBurn6023", "skillBurn6024", "skillBurn6026", "skillBurn6028", "skillBurn7323", "skillBurn14008", "skillBurn14028", "skillBurn14038", "skillBurn15011", "skillBurn15028", "skillBurn17005", "skillBurn22034", "skillBurn22035", "skillBurn23301", "skillBurn23302", "skillBurn23303", "skillBurn23304", "skillBurn23305", "skillBurn23306", "skillLevel46", "skillLevel47", "skillLevel48", "skillLevel117", "skillLevel118", "skillLevel121", "skillLevel128", "skillLevel134", "skillLevel135", "skillLevel144", "skillLevel180", "skillLevel188", "skillLevel227", "skillLevel245", "skillLevel7254", "slimelingFullness", "slimelingStacksDropped", "slimelingStacksDue", "smoresEaten", "smutOrcNoncombatProgress", "sneakyPetePoints", "snojoMoxieWins", "snojoMuscleWins", "snojoMysticalityWins", "sourceAgentsDefeated", "sourceEnlightenment", "sourceInterval", "sourcePoints", "sourceTerminalGram", "sourceTerminalPram", "sourceTerminalSpam", "spaceBabyLanguageFluency", "spacePirateLanguageFluency", "spelunkyNextNoncombat", "spelunkySacrifices", "spelunkyWinCount", "spookyPuttyCopiesMade", "spookyVHSTapeMonsterTurn", "statbotUses", "sugarCounter4178", "sugarCounter4179", "sugarCounter4180", "sugarCounter4181", "sugarCounter4182", "sugarCounter4183", "sugarCounter4191", "summonAnnoyanceCost", "sweat", "tacoDanCocktailSauce", "tacoDanFishMeat", "takerSpaceAnchor", "takerSpaceGold", "takerSpaceMast", "takerSpaceRum", "takerSpaceSilk", "takerSpaceSpice", "tavernLayout", "telescopeUpgrades", "tempuraSummons", "timeSpinnerMedals", "timesRested", "tomeSummons", "totalCharitableDonations", "trainsetPosition", "turtleBlessingTurns", "twinPeakProgress", "twoCRSPoints", "unicornHornInflation", "universalSeasoningCost", "usable1HWeapons", "usable1xAccs", "usable2HWeapons", "usable3HWeapons", "usableAccessories", "usableHats", "usableOffhands", "usableOther", "usablePants", "usableShirts", "valueOfAdventure", "valueOfInventory", "valueOfStill", "valueOfTome", "vintnerCharge", "vintnerWineLevel", "violetFogGoal", "walfordBucketProgress", "warehouseProgress", "welcomeBackAdv", "wereProfessorBite", "wereProfessorKick", "wereProfessorLiver", "wereProfessorPoints", "wereProfessorRend", "wereProfessorResearchPoints", "wereProfessorStomach", "wereProfessorTransformTurns", "whetstonesUsed", "wolfPigsEvicted", "wolfTurnsUsed", "writingDesksDefeated", "xoSkeleltonXProgress", "xoSkeleltonOProgress", "yearbookCameraAscensions", "yearbookCameraUpgrades", "youRobotBody", "youRobotBottom", "youRobotLeft", "youRobotPoints", "youRobotRight", "youRobotTop", "zeppelinProgress", "zeppelinProtestors", "zigguratLianas", "zombiePoints", "zootSpecimensPrepared", "zootomistPoints", "_absintheDrops", "_abstractionDropsCrown", "_aguaDrops", "_xenomorphCharge", "_ancestralRecallCasts", "_antihangoverBonus", "_aprilShowerDiscoNap", "_aprilBandInstruments", "_aprilBandSaxophoneUses", "_aprilBandTomUses", "_aprilBandTubaUses", "_aprilBandStaffUses", "_aprilBandPiccoloUses", "_astralDrops", "_augSkillsCast", "_assertYourAuthorityCast", "_automatedFutureManufactures", "_autumnatonQuests", "_backUpUses", "_badlyRomanticArrows", "_badgerCharge", "_balefulHowlUses", "_banderRunaways", "_bastilleCheese", "_bastilleGames", "_bastilleGameTurn", "_bastilleLastCheese", "_batWingsCauldronUsed", "_batWingsFreeFights", "_batWingsRestUsed", "_batWingsSwoopUsed", "_beanCannonUses", "_bearHugs", "_beerLensDrops", "_bellydancerPickpockets", "_benettonsCasts", "_beretBlastUses", "_beretBoastUses", "_beretBuskingUses", "_birdsSoughtToday", "_bookOfFactsWishes", "_bookOfFactsTatters", "_boomBoxFights", "_boomBoxSongsLeft", "_bootStomps", "_boxingGloveArrows", "_brickoEyeSummons", "_brickoFights", "_campAwayCloudBuffs", "_campAwaySmileBuffs", "_candyEggsDeviled", "_candySummons", "_captainHagnkUsed", "_carnieCandyDrops", "_carnivorousPottedPlantWins", "_carrotNoseDrops", "_catBurglarCharge", "_catBurglarHeistsComplete", "_cheerleaderSteam", "_chestXRayUsed", "_chibiAdventures", "_chipBags", "_chocolateCigarsUsed", "_chocolateCoveredPingPongBallsUsed", "_chocolateSculpturesUsed", "_chocolatesUsed", "_chronolithActivations", "_chronolithNextCost", "_cinchUsed", "_cinchoRests", "_circadianRhythmsAdventures", "_clanFortuneConsultUses", "_clipartSummons", "_cloversPurchased", "_coldMedicineConsults", "_coldMedicineEquipmentTaken", "_companionshipCasts", "_concoctionDatabaseRefreshes", "_cookbookbatCrafting", "_cookbookbatCombatsUntilNewQuest", "_cosmicBowlingSkillsUsed", "_crimbo21ColdResistance", "_cyberFreeFights", "_cyberZone1Turns", "_cyberZone2Turns", "_cyberZone3Turns", "_dailySpecialPrice", "_dartsLeft", "_daycareGymScavenges", "_daycareRecruits", "_deckCardsDrawn", "_deluxeKlawSummons", "_demandSandwich", "_detectiveCasesCompleted", "_disavowed", "_dnaPotionsMade", "_donhosCasts", "_douseFoeUses", "_dreamJarDrops", "_drunkPygmyBanishes", "_edDefeats", "_edLashCount", "_eldritchTentaclesFoughtToday", "_elfGuardCookingUsed", "_elronsCasts", "_enamorangs", "_energyCollected", "_expertCornerCutterUsed", "_extraTimeUsed", "_favorRareSummons", "_feastUsed", "_feelinTheRhythm", "_feelPrideUsed", "_feelExcitementUsed", "_feelHatredUsed", "_feelLonelyUsed", "_feelNervousUsed", "_feelEnvyUsed", "_feelDisappointedUsed", "_feelSuperiorUsed", "_feelLostUsed", "_feelNostalgicUsed", "_feelPeacefulUsed", "_fingertrapArrows", "_fireExtinguisherCharge", "_fragrantHerbsUsed", "_freeBeachWalksUsed", "_frButtonsPressed", "_fudgeWaspFights", "_gapBuffs", "_garbageFireDrops", "_garbageFireDropsCrown", "_generateIronyUsed", "_genieFightsUsed", "_genieWishesUsed", "_gibbererAdv", "_gibbererCharge", "_gingerbreadCityTurns", "_glarkCableUses", "_glitchMonsterFights", "_gnomeAdv", "_godLobsterFights", "_goldenMoneyCharge", "_gongDrops", "_gothKidCharge", "_gothKidFights", "_greyYouAdventures", "_grimBrotherCharge", "_grimFairyTaleDrops", "_grimFairyTaleDropsCrown", "_grimoireConfiscatorSummons", "_grimoireGeekySummons", "_grimstoneMaskDrops", "_grimstoneMaskDropsCrown", "_grooseCharge", "_grooseDrops", "_grubbyWoolDrops", "_guzzlrDeliveries", "_guzzlrGoldDeliveries", "_guzzlrPlatinumDeliveries", "_hareAdv", "_hareCharge", "_highTopPumps", "_hipsterAdv", "_hoardedCandyDropsCrown", "_hoboUnderlingSummons", "_holidayMultitaskingUsed", "_holoWristDrops", "_holoWristProgress", "_hotAshesDrops", "_hotJellyUses", "_hotTubSoaks", "_humanMuskUses", "_iceballUses", "_inigosCasts", "_ironTricornHeadbuttUsed", "_jerksHealthMagazinesUsed", "_jiggleCheese", "_jiggleCream", "_jiggleLife", "_jiggleSteak", "_jitbCharge", "_juneCleaverAdvs", "_juneCleaverFightsLeft", "_juneCleaverEncounters", "_juneCleaverStench", "_juneCleaverSpooky", "_juneCleaverSleaze", "_juneCleaverHot", "_juneCleaverCold", "_juneCleaverSkips", "_jungDrops", "_kgbClicksUsed", "_kgbDispenserUses", "_kgbTranquilizerDartUses", "_klawSummons", "_kloopCharge", "_kloopDrops", "_kolhsAdventures", "_kolhsSavedByTheBell", "_lastDailyDungeonRoom", "_lastSausageMonsterTurn", "_lastZomboEye", "_latteRefillsUsed", "_lawOfAveragesUsed", "_leafblowerML", "_leafLassosCrafted", "_leafMonstersFought", "_leavesBurned", "_legionJackhammerCrafting", "_leprecondoRearrangements", "_leprecondoFurniture", "_llamaCharge", "_longConUsed", "_lovebugsBeachBuck", "_lovebugsChroner", "_lovebugsCoinspiracy", "_lovebugsFreddy", "_lovebugsFunFunds", "_lovebugsHoboNickel", "_lovebugsWalmart", "_loveChocolatesUsed", "_lynyrdSnareUses", "_machineTunnelsAdv", "_macrometeoriteUses", "_mafiaThumbRingAdvs", "_mapToACandyRichBlockDrops", "_mayamRests", "_mayflowerDrops", "_mayflySummons", "_mcHugeLargeAvalancheUses", "_mcHugeLargeSkiPlowUses", "_mcHugeLargeSlashUses", "_mediumSiphons", "_meteoriteAdesUsed", "_meteorShowerUses", "_micrometeoriteUses", "_mildEvilPerpetrated", "_mimicEggsDonated", "_mimicEggsObtained", "_miniKiwiDrops", "_miniMartiniDrops", "_monkeyPawWishesUsed", "_monsterHabitatsFightsLeft", "_monsterHabitatsRecalled", "_monstersMapped", "_mushroomGardenFights", "_nanorhinoCharge", "_navelRunaways", "_neverendingPartyFreeTurns", "_newYouQuestSharpensDone", "_newYouQuestSharpensToDo", "_nextColdMedicineConsult", "_nextQuantumAlignment", "_nightmareFuelCharges", "_noobSkillCount", "_nuclearStockpileUsed", "_oilExtracted", "_oldSchoolCocktailCraftingUsed", "_olfactionsUsed", "_optimisticCandleDropsCrown", "_oreDropsCrown", "_otoscopeUsed", "_oysterEggsFound", "_pantsgivingBanish", "_pantsgivingCount", "_pantsgivingCrumbs", "_pantsgivingFullness", "_pasteDrops", "_perilsForeseen", "_peteJukeboxFixed", "_peteJumpedShark", "_petePeeledOut", "_photoBoothEffects", "_photoBoothEquipment", "_pieDrops", "_piePartsCount", "_pirateRealmGold", "_pirateRealmGlue", "_pirateRealmGrog", "_pirateRealmGrub", "_pirateRealmGuns", "_pirateRealmIslandMonstersDefeated", "_pirateRealmSailingTurns", "_pirateRealmShipSpeed", "_pixieCharge", "_pocketProfessorLectures", "_poisonArrows", "_pokeGrowFertilizerDrops", "_poolGames", "_powderedGoldDrops", "_powderedMadnessUses", "_powerfulGloveBatteryPowerUsed", "_powerPillDrops", "_powerPillUses", "_precisionCasts", "_questPartyFairItemsOpened", "_radlibSummons", "_raindohCopiesMade", "_rapidPrototypingUsed", "_raveStealCount", "_reflexHammerUsed", "_resolutionAdv", "_resolutionRareSummons", "_riftletAdv", "_robinEggDrops", "_roboDrops", "_rogueProgramCharge", "_romanticFightsLeft", "_saberForceMonsterCount", "_saberForceUses", "_saberMod", "_saltGrainsConsumed", "_sandwormCharge", "_saplingsPlanted", "_sausageFights", "_sausagesEaten", "_sausagesMade", "_sealFigurineUses", "_sealScreeches", "_sealsSummoned", "_shadowBricksUsed", "_shadowRiftCombats", "_shatteringPunchUsed", "_shortOrderCookCharge", "_shrubCharge", "_slimeVialsHarvested", "_sloppyDinerBeachBucks", "_smilesOfMrA", "_smithsnessSummons", "_smoochArmyHQCombats", "_snojoFreeFights", "_snojoParts", "_snokebombUsed", "_snowconeSummons", "_snowglobeDrops", "_snowmanHatPlaceUsed", "_snowSuitCount", "_sourceTerminalDigitizeMonsterCount", "_sourceTerminalDigitizeUses", "_sourceTerminalDuplicateUses", "_sourceTerminalEnhanceUses", "_sourceTerminalExtrudes", "_sourceTerminalPortscanUses", "_spaceFurDropsCrown", "_spacegatePlanetIndex", "_spacegateTurnsLeft", "_spaceJellyfishDrops", "_speakeasyDrinksDrunk", "_speakeasyFreeFights", "_spelunkerCharges", "_spelunkingTalesDrops", "_spikolodonSpikeUses", "_spiritOfTheMountainsAdvs", "_spookyJellyUses", "_stackLumpsUses", "_steamCardDrops", "_stickerSummons", "_stinkyCheeseCount", "_stressBallSqueezes", "_sugarSummons", "_surprisinglySweetSlashUsed", "_surprisinglySweetStabUsed", "_sweatOutSomeBoozeUsed", "_taffyRareSummons", "_taffyYellowSummons", "_tearawayPantsAdvs", "_thanksgettingFoodsEaten", "_thingfinderCasts", "_thinknerdPackageDrops", "_thorsPliersCrafting", "_timeHelmetAdv", "_timeSpinnerMinutesUsed", "_tokenDrops", "_transponderDrops", "_turkeyBlastersUsed", "_turkeyBooze", "_turkeyMuscle", "_turkeyMyst", "_turkeyMoxie", "_unaccompaniedMinerUsed", "_unconsciousCollectiveCharge", "_universalSeasoningsUsed", "_universeCalculated", "_universeImploded", "_usedReplicaBatoomerang", "_vampyreCloakeFormUses", "_villainLairProgress", "_vitachocCapsulesUsed", "_vmaskAdv", "_voidFreeFights", "_volcanoItem1", "_volcanoItem2", "_volcanoItem3", "_volcanoItemCount1", "_volcanoItemCount2", "_volcanoItemCount3", "_voteFreeFights", "_VYKEACompanionLevel", "_warbearAutoAnvilCrafting", "_waxGlobDrops", "_whiteRiceDrops", "_witchessFights", "_xoHugsUsed", "_yellowPixelDropsCrown", "_zapCount", "_zombieSmashPocketsUsed", "lastNoncombat15", "lastNoncombat257", "lastNoncombat270", "lastNoncombat273", "lastNoncombat280", "lastNoncombat297", "lastNoncombat322", "lastNoncombat323", "lastNoncombat324", "lastNoncombat341", "lastNoncombat343", "lastNoncombat384", "lastNoncombat386", "lastNoncombat391", "lastNoncombat405", "lastNoncombat406", "lastNoncombat439", "lastNoncombat440", "lastNoncombat441", "lastNoncombat450", "lastNoncombat533", "lastNoncombat539", "lastNoncombat540", "lastNoncombat541", "lastNoncombat588", "lastNoncombat589", "lastNoncombat590", "lastNoncombat591", "lastNoncombat592"];
    monsterProperties = ["beGregariousMonster", "bodyguardChatMonster", "cameraMonster", "chateauMonster", "clumsinessGroveBoss", "crappyCameraMonster", "crudeMonster", "enamorangMonster", "envyfishMonster", "glacierOfJerksBoss", "holdHandsMonster", "iceSculptureMonster", "lastCopyableMonster", "longConMonster", "maelstromOfLoversBoss", "makeFriendsMonster", "merkinLockkeyMonster", "monkeyPointMonster", "motifMonster", "nosyNoseMonster", "olfactedMonster", "photocopyMonster", "rainDohMonster", "romanticTarget", "rufusDesiredEntity", "rwbMonster", "screencappedMonster", "spookyPuttyMonster", "spookyVHSTapeMonster", "stenchCursedMonster", "superficiallyInterestedMonster", "waxMonster", "yearbookCameraTarget", "_afterimageMonster", "_chainedRelativityMonster", "_chainedPurpleCandleMonster", "_chainedAfterimageMonster", "_cookbookbatQuestMonster", "_gallapagosMonster", "_jiggleCreamedMonster", "_latteMonster", "_monsterHabitatsMonster", "_nanorhinoBanishedMonster", "_newYouQuestMonster", "_prankCardMonster", "_relativityMonster", "_saberForceMonster", "_sourceTerminalDigitizeMonster", "_trickCoinMonster", "_voteMonster"];
    monsterNumericProperties = [];
    locationProperties = ["autumnatonQuestLocation", "currentJunkyardLocation", "doctorBagQuestLocation", "ghostLocation", "guzzlrQuestLocation", "holdHandsLocation", "lastAdventure", "nextAdventure", "nextSpookyravenElizabethRoom", "nextSpookyravenStephenRoom", "rwbLocation", "sourceOracleTarget", "_cookbookbatQuestLastLocation", "_floundryBassLocation", "_floundryCarpLocation", "_floundryCodLocation", "_floundryHatchetfishLocation", "_floundryTroutLocation", "_floundryTunaLocation", "_lastPirateRealmIsland", "_sotParcelLocation"];
    stringProperties = ["autoLogin", "browserBookmarks", "chatFontSize", "combatHotkey0", "combatHotkey1", "combatHotkey2", "combatHotkey3", "combatHotkey4", "combatHotkey5", "combatHotkey6", "combatHotkey7", "combatHotkey8", "combatHotkey9", "commandBufferGCLI", "commandBufferTabbedChat", "commandLineNamespace", "dailyDeedsOptions", "defaultBorderColor", "displayName", "externalEditor", "getBreakfast", "headerStates", "highlightList", "http.proxyHost", "http.proxyPassword", "http.proxyPort", "http.proxyUser", "https.proxyHost", "https.proxyPassword", "https.proxyPort", "https.proxyUser", "initialDesktop", "initialFrames", "lastRelayUpdate", "lastUserAgent", "lastUsername", "logPreferenceChangeFilter", "loginScript", "loginServerName", "loginWindowLogo", "logoutScript", "pingDefaultTestPage", "pingLatest", "pingLoginAbort", "pingLoginCheck", "pingLoginFail", "pingLongest", "pingShortest", "pingTestPage", "previousNotifyList", "previousUpdateVersion", "saveState", "saveStateActive", "scriptList", "swingLookAndFeel", "userAgent", "8BitColor", "afterAdventureScript", "antiScientificMethod", "autoOlfact", "autoPutty", "autumnatonUpgrades", "backupCameraMode", "banishedMonsters", "banishedPhyla", "banishingShoutMonsters", "batmanStats", "batmanZone", "batmanUpgrades", "battleAction", "beachHeadsUnlocked", "beastSkillsAvailable", "beastSkillsKnown", "beforePVPScript", "betweenBattleScript", "boomBoxSong", "breakfastAlways", "breakfastHardcore", "breakfastSoftcore", "buffBotCasting", "buyScript", "cargoPocketsEmptied", "cargoPocketScraps", "chatbotScript", "chatPlayerScript", "chibiName", "choiceAdventureScript", "chosenTrip", "clanFortuneReply1", "clanFortuneReply2", "clanFortuneReply3", "clanFortuneWord1", "clanFortuneWord2", "clanFortuneWord3", "counterScript", "copperheadClubHazard", "crimbo23ArmoryControl", "crimbo23BarControl", "crimbo23CafeControl", "crimbo23CottageControl", "crimbo23FoundryControl", "crimbotChassis", "crimbotArm", "crimbotPropulsion", "crystalBallPredictions", "csServicesPerformed", "currentAstralTrip", "currentDistillateMods", "currentEasyBountyItem", "currentHardBountyItem", "currentHippyStore", "currentJunkyardTool", "currentLlamaForm", "currentMood", "currentPVPSeason", "currentPvpVictories", "currentSpecialBountyItem", "currentSITSkill", "customCombatScript", "cyrusAdjectives", "defaultFlowerLossMessage", "defaultFlowerWinMessage", "demonName1", "demonName2", "demonName3", "demonName4", "demonName5", "demonName6", "demonName7", "demonName8", "demonName9", "demonName10", "demonName11", "demonName12", "demonName13", "dinseyGatorStenchDamage", "dinseyRollercoasterStats", "duckAreasCleared", "duckAreasSelected", "edPiece", "enamorangMonsterTurn", "ensorcelee", "EVEDirections", "everfullDartPerks", "extraCosmeticModifiers", "familiarScript", "forbiddenStores", "gameProBossSpecialPower", "gooseReprocessed", "grimoireSkillsHardcore", "grimoireSkillsSoftcore", "grimstoneMaskPath", "guzzlrQuestClient", "guzzlrQuestTier", "harvestGardenHardcore", "harvestGardenSoftcore", "holdHandsMonsterCount", "hpAutoRecoveryItems", "invalidBuffMessage", "jickSwordModifier", "juneCleaverQueue", "kingLiberatedScript", "lassoTraining", "lastAdventureContainer", "lastAdventureTrail", "lastBangPotion819", "lastBangPotion820", "lastBangPotion821", "lastBangPotion822", "lastBangPotion823", "lastBangPotion824", "lastBangPotion825", "lastBangPotion826", "lastBangPotion827", "lastChanceBurn", "lastChessboard", "lastCombatEnvironments", "lastDwarfDiceRolls", "lastDwarfDigitRunes", "lastDwarfEquipmentRunes", "lastDwarfFactoryItem118", "lastDwarfFactoryItem119", "lastDwarfFactoryItem120", "lastDwarfFactoryItem360", "lastDwarfFactoryItem361", "lastDwarfFactoryItem362", "lastDwarfFactoryItem363", "lastDwarfFactoryItem364", "lastDwarfFactoryItem365", "lastDwarfFactoryItem910", "lastDwarfFactoryItem3199", "lastDwarfOfficeItem3208", "lastDwarfOfficeItem3209", "lastDwarfOfficeItem3210", "lastDwarfOfficeItem3211", "lastDwarfOfficeItem3212", "lastDwarfOfficeItem3213", "lastDwarfOfficeItem3214", "lastDwarfOreRunes", "lastDwarfHopper1", "lastDwarfHopper2", "lastDwarfHopper3", "lastDwarfHopper4", "lastEncounter", "lastMacroError", "lastMessageId", "lastPaperStrip3144", "lastPaperStrip4138", "lastPaperStrip4139", "lastPaperStrip4140", "lastPaperStrip4141", "lastPaperStrip4142", "lastPaperStrip4143", "lastPaperStrip4144", "lastPirateEphemera", "lastPorkoBoard", "lastPorkoPayouts", "lastPorkoExpected", "lastSlimeVial3885", "lastSlimeVial3886", "lastSlimeVial3887", "lastSlimeVial3888", "lastSlimeVial3889", "lastSlimeVial3890", "lastSlimeVial3891", "lastSlimeVial3892", "lastSlimeVial3893", "lastSlimeVial3894", "lastSlimeVial3895", "lastSlimeVial3896", "lastSelectedFaxbot", "lastSuccessfulFaxbot", "latteIngredients", "latteModifier", "latteUnlocks", "ledCandleMode", "leprecondoCurrentNeed", "leprecondoDiscovered", "leprecondoInstalled", "leprecondoNeedOrder", "libramSkillsHardcore", "libramSkillsSoftcore", "louvreOverride", "lovePotion", "lttQuestName", "maximizerList", "maximizerMRUList", "mayoInMouth", "mayoMinderSetting", "merkinQuestPath", "mimicEggMonsters", "mineLayout1", "mineLayout2", "mineLayout3", "mineLayout4", "mineLayout5", "mineLayout6", "mineState1", "mineState2", "mineState3", "mineState4", "mineState5", "mineState6", "mpAutoRecoveryItems", "nextDistillateMods", "nextQuantumFamiliarName", "nextQuantumFamiliarOwner", "noncombatForcers", "nsChallenge2", "nsChallenge3", "nsChallenge4", "nsChallenge5", "nsTowerDoorKeysUsed", "oceanAction", "oceanDestination", "parkaMode", "pastaThrall1", "pastaThrall2", "pastaThrall3", "pastaThrall4", "pastaThrall5", "pastaThrall6", "pastaThrall7", "pastaThrall8", "peteMotorbikeTires", "peteMotorbikeGasTank", "peteMotorbikeHeadlight", "peteMotorbikeCowling", "peteMotorbikeMuffler", "peteMotorbikeSeat", "pieStuffing", "plantingDate", "plantingLength", "plantingScript", "plumberCostumeWorn", "pokefamBoosts", "postAscensionScript", "preAscensionScript", "questClumsinessGrove", "questDoctorBag", "questECoBucket", "questESlAudit", "questESlBacteria", "questESlCheeseburger", "questESlCocktail", "questESlDebt", "questESlFish", "questESlMushStash", "questESlSalt", "questESlSprinkles", "questESpClipper", "questESpEVE", "questESpFakeMedium", "questESpGore", "questESpJunglePun", "questESpOutOfOrder", "questESpSerum", "questESpSmokes", "questEStFishTrash", "questEStGiveMeFuel", "questEStNastyBears", "questEStSocialJusticeI", "questEStSocialJusticeII", "questEStSuperLuber", "questEStWorkWithFood", "questEStZippityDooDah", "questEUNewYou", "questF01Primordial", "questF02Hyboria", "questF03Future", "questF04Elves", "questF05Clancy", "questG01Meatcar", "questG02Whitecastle", "questG03Ego", "questG04Nemesis", "questG05Dark", "questG06Delivery", "questG07Myst", "questG08Moxie", "questG09Muscle", "questGlacierOfJerks", "questGuzzlr", "questI01Scapegoat", "questI02Beat", "questL02Larva", "questL03Rat", "questL04Bat", "questL05Goblin", "questL06Friar", "questL07Cyrptic", "questL08Trapper", "questL09Topping", "questL10Garbage", "questL11Black", "questL11Business", "questL11Curses", "questL11Desert", "questL11Doctor", "questL11MacGuffin", "questL11Manor", "questL11Palindome", "questL11Pyramid", "questL11Ron", "questL11Shen", "questL11Spare", "questL11Worship", "questL12HippyFrat", "questL12War", "questL13Final", "questL13Warehouse", "questLTTQuestByWire", "questM01Untinker", "questM02Artist", "questM03Bugbear", "questM05Toot", "questM06Gourd", "questM07Hammer", "questM08Baker", "questM09Rocks", "questM10Azazel", "questM11Postal", "questM12Pirate", "questM13Escape", "questM14Bounty", "questM15Lol", "questM16Temple", "questM17Babies", "questM18Swamp", "questM19Hippy", "questM20Necklace", "questM21Dance", "questM22Shirt", "questM23Meatsmith", "questM24Doc", "questM25Armorer", "questM26Oracle", "questMaelstromOfLovers", "questPAGhost", "questRufus", "questS01OldGuy", "questS02Monkees", "raveCombo1", "raveCombo2", "raveCombo3", "raveCombo4", "raveCombo5", "raveCombo6", "recoveryScript", "relayCounters", "retroCapeSuperhero", "retroCapeWashingInstructions", "royalty", "rufusQuestTarget", "rufusQuestType", "scriptMRUList", "seahorseName", "shadowLabyrinthGoal", "shadowRiftIngress", "shrubGarland", "shrubGifts", "shrubLights", "shrubTopper", "sideDefeated", "sidequestArenaCompleted", "sidequestFarmCompleted", "sidequestJunkyardCompleted", "sidequestLighthouseCompleted", "sidequestNunsCompleted", "sidequestOrchardCompleted", "skateParkStatus", "snowsuit", "sourceTerminalChips", "sourceTerminalEducate1", "sourceTerminalEducate2", "sourceTerminalEnquiry", "sourceTerminalEducateKnown", "sourceTerminalEnhanceKnown", "sourceTerminalEnquiryKnown", "sourceTerminalExtrudeKnown", "spadingData", "spadingScript", "speakeasyName", "spelunkyStatus", "spelunkyUpgrades", "spookyravenRecipeUsed", "stationaryButton1", "stationaryButton2", "stationaryButton3", "stationaryButton4", "stationaryButton5", "streamCrossDefaultTarget", "sweetSynthesisBlacklist", "telescope1", "telescope2", "telescope3", "telescope4", "telescope5", "testudinalTeachings", "textColors", "thanksMessage", "tomeSkillsHardcore", "tomeSkillsSoftcore", "trackVoteMonster", "trackedMonsters", "trackedPhyla", "trainsetConfiguration", "umbrellaState", "umdLastObtained", "vintnerWineEffect", "vintnerWineName", "vintnerWineType", "violetFogLayout", "volcanoMaze1", "volcanoMaze2", "volcanoMaze3", "volcanoMaze4", "volcanoMaze5", "warProgress", "watchedPreferences", "wereProfessorAdvancedResearch", "workteaClue", "yourFavoriteBird", "yourFavoriteBirdMods", "youRobotCPUUpgrades", "zootGraftedMods", "zootMilkCrueltyMods", "zootMilkKindnessMods", "_automatedFutureSide", "_bastilleBoosts", "_bastilleChoice1", "_bastilleChoice2", "_bastilleChoice3", "_bastilleCurrentStyles", "_bastilleEnemyCastle", "_bastilleEnemyName", "_bastilleLastBattleResults", "_bastilleLastEncounter", "_bastilleStats", "_beachHeadsUsed", "_beachLayout", "_beachMinutes", "_birdOfTheDay", "_birdOfTheDayMods", "_bittycar", "_campAwaySmileBuffSign", "_citizenZone", "_citizenZoneMods", "_cloudTalkMessage", "_cloudTalkSmoker", "_coatOfPaintModifier", "_cupidBowFamiliars", "_currentDartboard", "_cyberZone1Defense", "_cyberZone1Hacker", "_cyberZone1Owner", "_cyberZone2Defense", "_cyberZone2Hacker", "_cyberZone2Owner", "_cyberZone3Defense", "_cyberZone3Hacker", "_cyberZone3Owner", "_deckCardsSeen", "_feastedFamiliars", "_floristPlantsUsed", "_frAreasUnlocked", "_frHoursLeft", "_frMonstersKilled", "_futuristicCollarModifier", "_futuristicHatModifier", "_futuristicShirtModifier", "_horsery", "_horseryCrazyMox", "_horseryCrazyMus", "_horseryCrazyMys", "_horseryCrazyName", "_horseryCurrentName", "_horseryDarkName", "_horseryNormalName", "_horseryPaleName", "_jickJarAvailable", "_jiggleCheesedMonsters", "_lastCombatActions", "_lastCombatStarted", "_locketMonstersFought", "_mayamSymbolsUsed", "_mummeryMods", "_mummeryUses", "_newYouQuestSkill", "_noHatModifier", "_pantogramModifier", "_perilLocations", "_pirateRealmCrewmate", "_pirateRealmCrewmate1", "_pirateRealmCrewmate2", "_pirateRealmCrewmate3", "_pirateRealmShip", "_pottedPowerPlant", "_questESp", "_questPartyFair", "_questPartyFairProgress", "_questPartyFairQuest", "_questPirateRealm", "_roboDrinks", "_roninStoragePulls", "_savageBeastMods", "_spacegateAnimalLife", "_spacegateCoordinates", "_spacegateGear", "_spacegateHazards", "_spacegateIntelligentLife", "_spacegatePlanetName", "_spacegatePlantLife", "_stolenAccordions", "_tempRelayCounters", "_timeSpinnerFoodAvailable", "_trickOrTreatBlock", "_unknownEasyBountyItem", "_unknownHardBountyItem", "_unknownSpecialBountyItem", "_untakenEasyBountyItem", "_untakenHardBountyItem", "_untakenSpecialBountyItem", "_userMods", "_villainLairColor", "_villainLairKey", "_voteLocal1", "_voteLocal2", "_voteLocal3", "_voteLocal4", "_voteMonster1", "_voteMonster2", "_voteModifier", "_VYKEACompanionType", "_VYKEACompanionRune", "_VYKEACompanionName"];
    numericOrStringProperties = ["statusEngineering", "statusGalley", "statusMedbay", "statusMorgue", "statusNavigation", "statusScienceLab", "statusSonar", "statusSpecialOps", "statusWasteProcessing", "choiceAdventure2", "choiceAdventure3", "choiceAdventure4", "choiceAdventure5", "choiceAdventure6", "choiceAdventure7", "choiceAdventure8", "choiceAdventure9", "choiceAdventure10", "choiceAdventure11", "choiceAdventure12", "choiceAdventure14", "choiceAdventure15", "choiceAdventure16", "choiceAdventure17", "choiceAdventure18", "choiceAdventure19", "choiceAdventure20", "choiceAdventure21", "choiceAdventure22", "choiceAdventure23", "choiceAdventure24", "choiceAdventure25", "choiceAdventure26", "choiceAdventure27", "choiceAdventure28", "choiceAdventure29", "choiceAdventure40", "choiceAdventure41", "choiceAdventure42", "choiceAdventure45", "choiceAdventure46", "choiceAdventure47", "choiceAdventure71", "choiceAdventure72", "choiceAdventure73", "choiceAdventure74", "choiceAdventure75", "choiceAdventure76", "choiceAdventure77", "choiceAdventure86", "choiceAdventure87", "choiceAdventure88", "choiceAdventure89", "choiceAdventure90", "choiceAdventure91", "choiceAdventure105", "choiceAdventure106", "choiceAdventure107", "choiceAdventure108", "choiceAdventure109", "choiceAdventure110", "choiceAdventure111", "choiceAdventure112", "choiceAdventure113", "choiceAdventure114", "choiceAdventure115", "choiceAdventure116", "choiceAdventure117", "choiceAdventure118", "choiceAdventure120", "choiceAdventure123", "choiceAdventure125", "choiceAdventure126", "choiceAdventure127", "choiceAdventure129", "choiceAdventure131", "choiceAdventure132", "choiceAdventure135", "choiceAdventure136", "choiceAdventure137", "choiceAdventure138", "choiceAdventure139", "choiceAdventure140", "choiceAdventure141", "choiceAdventure142", "choiceAdventure143", "choiceAdventure144", "choiceAdventure145", "choiceAdventure146", "choiceAdventure147", "choiceAdventure148", "choiceAdventure149", "choiceAdventure151", "choiceAdventure152", "choiceAdventure153", "choiceAdventure154", "choiceAdventure155", "choiceAdventure156", "choiceAdventure157", "choiceAdventure158", "choiceAdventure159", "choiceAdventure160", "choiceAdventure161", "choiceAdventure162", "choiceAdventure163", "choiceAdventure164", "choiceAdventure165", "choiceAdventure166", "choiceAdventure167", "choiceAdventure168", "choiceAdventure169", "choiceAdventure170", "choiceAdventure171", "choiceAdventure172", "choiceAdventure177", "choiceAdventure178", "choiceAdventure180", "choiceAdventure181", "choiceAdventure182", "choiceAdventure184", "choiceAdventure185", "choiceAdventure186", "choiceAdventure187", "choiceAdventure188", "choiceAdventure189", "choiceAdventure191", "choiceAdventure197", "choiceAdventure198", "choiceAdventure199", "choiceAdventure200", "choiceAdventure201", "choiceAdventure202", "choiceAdventure203", "choiceAdventure204", "choiceAdventure205", "choiceAdventure206", "choiceAdventure207", "choiceAdventure208", "choiceAdventure211", "choiceAdventure212", "choiceAdventure213", "choiceAdventure214", "choiceAdventure215", "choiceAdventure216", "choiceAdventure217", "choiceAdventure218", "choiceAdventure219", "choiceAdventure220", "choiceAdventure221", "choiceAdventure222", "choiceAdventure223", "choiceAdventure224", "choiceAdventure225", "choiceAdventure230", "choiceAdventure272", "choiceAdventure273", "choiceAdventure276", "choiceAdventure277", "choiceAdventure278", "choiceAdventure279", "choiceAdventure280", "choiceAdventure281", "choiceAdventure282", "choiceAdventure283", "choiceAdventure284", "choiceAdventure285", "choiceAdventure286", "choiceAdventure287", "choiceAdventure288", "choiceAdventure289", "choiceAdventure290", "choiceAdventure291", "choiceAdventure292", "choiceAdventure293", "choiceAdventure294", "choiceAdventure295", "choiceAdventure296", "choiceAdventure297", "choiceAdventure298", "choiceAdventure299", "choiceAdventure302", "choiceAdventure303", "choiceAdventure304", "choiceAdventure305", "choiceAdventure306", "choiceAdventure307", "choiceAdventure308", "choiceAdventure309", "choiceAdventure310", "choiceAdventure311", "choiceAdventure317", "choiceAdventure318", "choiceAdventure319", "choiceAdventure320", "choiceAdventure321", "choiceAdventure322", "choiceAdventure326", "choiceAdventure327", "choiceAdventure328", "choiceAdventure329", "choiceAdventure330", "choiceAdventure331", "choiceAdventure332", "choiceAdventure333", "choiceAdventure334", "choiceAdventure335", "choiceAdventure336", "choiceAdventure337", "choiceAdventure338", "choiceAdventure339", "choiceAdventure340", "choiceAdventure341", "choiceAdventure342", "choiceAdventure343", "choiceAdventure344", "choiceAdventure345", "choiceAdventure346", "choiceAdventure347", "choiceAdventure348", "choiceAdventure349", "choiceAdventure350", "choiceAdventure351", "choiceAdventure352", "choiceAdventure353", "choiceAdventure354", "choiceAdventure355", "choiceAdventure356", "choiceAdventure357", "choiceAdventure358", "choiceAdventure360", "choiceAdventure361", "choiceAdventure362", "choiceAdventure363", "choiceAdventure364", "choiceAdventure365", "choiceAdventure366", "choiceAdventure367", "choiceAdventure372", "choiceAdventure376", "choiceAdventure387", "choiceAdventure388", "choiceAdventure389", "choiceAdventure390", "choiceAdventure391", "choiceAdventure392", "choiceAdventure393", "choiceAdventure395", "choiceAdventure396", "choiceAdventure397", "choiceAdventure398", "choiceAdventure399", "choiceAdventure400", "choiceAdventure401", "choiceAdventure402", "choiceAdventure403", "choiceAdventure423", "choiceAdventure424", "choiceAdventure425", "choiceAdventure426", "choiceAdventure427", "choiceAdventure428", "choiceAdventure429", "choiceAdventure430", "choiceAdventure431", "choiceAdventure432", "choiceAdventure433", "choiceAdventure435", "choiceAdventure438", "choiceAdventure439", "choiceAdventure442", "choiceAdventure444", "choiceAdventure445", "choiceAdventure446", "choiceAdventure447", "choiceAdventure448", "choiceAdventure449", "choiceAdventure451", "choiceAdventure452", "choiceAdventure453", "choiceAdventure454", "choiceAdventure455", "choiceAdventure456", "choiceAdventure457", "choiceAdventure458", "choiceAdventure460", "choiceAdventure461", "choiceAdventure462", "choiceAdventure463", "choiceAdventure464", "choiceAdventure465", "choiceAdventure467", "choiceAdventure468", "choiceAdventure469", "choiceAdventure470", "choiceAdventure471", "choiceAdventure472", "choiceAdventure473", "choiceAdventure474", "choiceAdventure475", "choiceAdventure477", "choiceAdventure478", "choiceAdventure480", "choiceAdventure483", "choiceAdventure484", "choiceAdventure485", "choiceAdventure486", "choiceAdventure488", "choiceAdventure489", "choiceAdventure490", "choiceAdventure491", "choiceAdventure496", "choiceAdventure497", "choiceAdventure502", "choiceAdventure503", "choiceAdventure504", "choiceAdventure505", "choiceAdventure506", "choiceAdventure507", "choiceAdventure509", "choiceAdventure510", "choiceAdventure511", "choiceAdventure512", "choiceAdventure513", "choiceAdventure514", "choiceAdventure515", "choiceAdventure517", "choiceAdventure518", "choiceAdventure519", "choiceAdventure521", "choiceAdventure522", "choiceAdventure523", "choiceAdventure527", "choiceAdventure528", "choiceAdventure529", "choiceAdventure530", "choiceAdventure531", "choiceAdventure532", "choiceAdventure533", "choiceAdventure534", "choiceAdventure535", "choiceAdventure536", "choiceAdventure538", "choiceAdventure539", "choiceAdventure542", "choiceAdventure543", "choiceAdventure544", "choiceAdventure546", "choiceAdventure548", "choiceAdventure549", "choiceAdventure550", "choiceAdventure551", "choiceAdventure552", "choiceAdventure553", "choiceAdventure554", "choiceAdventure556", "choiceAdventure557", "choiceAdventure558", "choiceAdventure559", "choiceAdventure560", "choiceAdventure561", "choiceAdventure562", "choiceAdventure563", "choiceAdventure564", "choiceAdventure565", "choiceAdventure566", "choiceAdventure567", "choiceAdventure568", "choiceAdventure569", "choiceAdventure571", "choiceAdventure572", "choiceAdventure573", "choiceAdventure574", "choiceAdventure575", "choiceAdventure576", "choiceAdventure577", "choiceAdventure578", "choiceAdventure579", "choiceAdventure581", "choiceAdventure582", "choiceAdventure583", "choiceAdventure584", "choiceAdventure594", "choiceAdventure595", "choiceAdventure596", "choiceAdventure597", "choiceAdventure598", "choiceAdventure599", "choiceAdventure600", "choiceAdventure603", "choiceAdventure604", "choiceAdventure616", "choiceAdventure634", "choiceAdventure640", "choiceAdventure654", "choiceAdventure655", "choiceAdventure656", "choiceAdventure657", "choiceAdventure658", "choiceAdventure664", "choiceAdventure669", "choiceAdventure670", "choiceAdventure671", "choiceAdventure672", "choiceAdventure673", "choiceAdventure674", "choiceAdventure675", "choiceAdventure676", "choiceAdventure677", "choiceAdventure678", "choiceAdventure679", "choiceAdventure681", "choiceAdventure683", "choiceAdventure684", "choiceAdventure685", "choiceAdventure686", "choiceAdventure687", "choiceAdventure688", "choiceAdventure689", "choiceAdventure690", "choiceAdventure691", "choiceAdventure692", "choiceAdventure693", "choiceAdventure694", "choiceAdventure695", "choiceAdventure696", "choiceAdventure697", "choiceAdventure698", "choiceAdventure700", "choiceAdventure701", "choiceAdventure705", "choiceAdventure706", "choiceAdventure707", "choiceAdventure708", "choiceAdventure709", "choiceAdventure710", "choiceAdventure711", "choiceAdventure712", "choiceAdventure713", "choiceAdventure714", "choiceAdventure715", "choiceAdventure716", "choiceAdventure717", "choiceAdventure721", "choiceAdventure725", "choiceAdventure729", "choiceAdventure733", "choiceAdventure737", "choiceAdventure741", "choiceAdventure745", "choiceAdventure749", "choiceAdventure753", "choiceAdventure771", "choiceAdventure778", "choiceAdventure780", "choiceAdventure781", "choiceAdventure783", "choiceAdventure784", "choiceAdventure785", "choiceAdventure786", "choiceAdventure787", "choiceAdventure788", "choiceAdventure789", "choiceAdventure791", "choiceAdventure793", "choiceAdventure794", "choiceAdventure795", "choiceAdventure796", "choiceAdventure797", "choiceAdventure803", "choiceAdventure805", "choiceAdventure808", "choiceAdventure809", "choiceAdventure813", "choiceAdventure815", "choiceAdventure830", "choiceAdventure832", "choiceAdventure833", "choiceAdventure834", "choiceAdventure835", "choiceAdventure837", "choiceAdventure838", "choiceAdventure839", "choiceAdventure840", "choiceAdventure841", "choiceAdventure842", "choiceAdventure851", "choiceAdventure852", "choiceAdventure853", "choiceAdventure854", "choiceAdventure855", "choiceAdventure856", "choiceAdventure857", "choiceAdventure858", "choiceAdventure866", "choiceAdventure873", "choiceAdventure875", "choiceAdventure876", "choiceAdventure877", "choiceAdventure878", "choiceAdventure879", "choiceAdventure880", "choiceAdventure881", "choiceAdventure882", "choiceAdventure888", "choiceAdventure889", "choiceAdventure918", "choiceAdventure919", "choiceAdventure920", "choiceAdventure921", "choiceAdventure923", "choiceAdventure924", "choiceAdventure925", "choiceAdventure926", "choiceAdventure927", "choiceAdventure928", "choiceAdventure929", "choiceAdventure930", "choiceAdventure931", "choiceAdventure932", "choiceAdventure940", "choiceAdventure941", "choiceAdventure942", "choiceAdventure943", "choiceAdventure944", "choiceAdventure945", "choiceAdventure946", "choiceAdventure950", "choiceAdventure955", "choiceAdventure957", "choiceAdventure958", "choiceAdventure959", "choiceAdventure960", "choiceAdventure961", "choiceAdventure962", "choiceAdventure963", "choiceAdventure964", "choiceAdventure965", "choiceAdventure966", "choiceAdventure970", "choiceAdventure973", "choiceAdventure974", "choiceAdventure975", "choiceAdventure976", "choiceAdventure977", "choiceAdventure979", "choiceAdventure980", "choiceAdventure981", "choiceAdventure982", "choiceAdventure983", "choiceAdventure988", "choiceAdventure989", "choiceAdventure993", "choiceAdventure998", "choiceAdventure1000", "choiceAdventure1003", "choiceAdventure1005", "choiceAdventure1006", "choiceAdventure1007", "choiceAdventure1008", "choiceAdventure1009", "choiceAdventure1010", "choiceAdventure1011", "choiceAdventure1012", "choiceAdventure1013", "choiceAdventure1015", "choiceAdventure1016", "choiceAdventure1017", "choiceAdventure1018", "choiceAdventure1019", "choiceAdventure1020", "choiceAdventure1021", "choiceAdventure1022", "choiceAdventure1023", "choiceAdventure1026", "choiceAdventure1027", "choiceAdventure1028", "choiceAdventure1029", "choiceAdventure1030", "choiceAdventure1031", "choiceAdventure1032", "choiceAdventure1033", "choiceAdventure1034", "choiceAdventure1035", "choiceAdventure1036", "choiceAdventure1037", "choiceAdventure1038", "choiceAdventure1039", "choiceAdventure1040", "choiceAdventure1041", "choiceAdventure1042", "choiceAdventure1044", "choiceAdventure1045", "choiceAdventure1046", "choiceAdventure1048", "choiceAdventure1051", "choiceAdventure1052", "choiceAdventure1053", "choiceAdventure1054", "choiceAdventure1055", "choiceAdventure1056", "choiceAdventure1057", "choiceAdventure1059", "choiceAdventure1060", "choiceAdventure1061", "choiceAdventure1062", "choiceAdventure1065", "choiceAdventure1067", "choiceAdventure1068", "choiceAdventure1069", "choiceAdventure1070", "choiceAdventure1071", "choiceAdventure1073", "choiceAdventure1077", "choiceAdventure1080", "choiceAdventure1081", "choiceAdventure1082", "choiceAdventure1083", "choiceAdventure1084", "choiceAdventure1085", "choiceAdventure1091", "choiceAdventure1094", "choiceAdventure1095", "choiceAdventure1096", "choiceAdventure1097", "choiceAdventure1102", "choiceAdventure1106", "choiceAdventure1107", "choiceAdventure1108", "choiceAdventure1110", "choiceAdventure1114", "choiceAdventure1115", "choiceAdventure1116", "choiceAdventure1118", "choiceAdventure1119", "choiceAdventure1120", "choiceAdventure1121", "choiceAdventure1122", "choiceAdventure1123", "choiceAdventure1171", "choiceAdventure1172", "choiceAdventure1173", "choiceAdventure1174", "choiceAdventure1175", "choiceAdventure1193", "choiceAdventure1195", "choiceAdventure1196", "choiceAdventure1197", "choiceAdventure1198", "choiceAdventure1199", "choiceAdventure1202", "choiceAdventure1203", "choiceAdventure1204", "choiceAdventure1205", "choiceAdventure1206", "choiceAdventure1207", "choiceAdventure1208", "choiceAdventure1209", "choiceAdventure1210", "choiceAdventure1211", "choiceAdventure1212", "choiceAdventure1213", "choiceAdventure1214", "choiceAdventure1215", "choiceAdventure1219", "choiceAdventure1222", "choiceAdventure1223", "choiceAdventure1224", "choiceAdventure1225", "choiceAdventure1226", "choiceAdventure1227", "choiceAdventure1228", "choiceAdventure1229", "choiceAdventure1236", "choiceAdventure1237", "choiceAdventure1238", "choiceAdventure1239", "choiceAdventure1240", "choiceAdventure1241", "choiceAdventure1242", "choiceAdventure1243", "choiceAdventure1244", "choiceAdventure1245", "choiceAdventure1246", "choiceAdventure1247", "choiceAdventure1248", "choiceAdventure1249", "choiceAdventure1250", "choiceAdventure1251", "choiceAdventure1252", "choiceAdventure1253", "choiceAdventure1254", "choiceAdventure1255", "choiceAdventure1256", "choiceAdventure1266", "choiceAdventure1280", "choiceAdventure1281", "choiceAdventure1282", "choiceAdventure1283", "choiceAdventure1284", "choiceAdventure1285", "choiceAdventure1286", "choiceAdventure1287", "choiceAdventure1288", "choiceAdventure1289", "choiceAdventure1290", "choiceAdventure1291", "choiceAdventure1292", "choiceAdventure1293", "choiceAdventure1294", "choiceAdventure1295", "choiceAdventure1296", "choiceAdventure1297", "choiceAdventure1298", "choiceAdventure1299", "choiceAdventure1300", "choiceAdventure1301", "choiceAdventure1302", "choiceAdventure1303", "choiceAdventure1304", "choiceAdventure1305", "choiceAdventure1307", "choiceAdventure1310", "choiceAdventure1312", "choiceAdventure1313", "choiceAdventure1314", "choiceAdventure1315", "choiceAdventure1316", "choiceAdventure1317", "choiceAdventure1318", "choiceAdventure1319", "choiceAdventure1321", "choiceAdventure1322", "choiceAdventure1323", "choiceAdventure1324", "choiceAdventure1325", "choiceAdventure1326", "choiceAdventure1327", "choiceAdventure1328", "choiceAdventure1332", "choiceAdventure1333", "choiceAdventure1335", "choiceAdventure1340", "choiceAdventure1341", "choiceAdventure1345", "choiceAdventure1389", "choiceAdventure1392", "choiceAdventure1397", "choiceAdventure1399", "choiceAdventure1405", "choiceAdventure1411", "choiceAdventure1415", "choiceAdventure1427", "choiceAdventure1428", "choiceAdventure1429", "choiceAdventure1430", "choiceAdventure1431", "choiceAdventure1432", "choiceAdventure1433", "choiceAdventure1434", "choiceAdventure1436", "choiceAdventure1460", "choiceAdventure1461", "choiceAdventure1467", "choiceAdventure1468", "choiceAdventure1469", "choiceAdventure1470", "choiceAdventure1471", "choiceAdventure1472", "choiceAdventure1473", "choiceAdventure1474", "choiceAdventure1475", "choiceAdventure1486", "choiceAdventure1487", "choiceAdventure1488", "choiceAdventure1489", "choiceAdventure1491", "choiceAdventure1494", "choiceAdventure1505", "choiceAdventure1528", "choiceAdventure1534", "choiceAdventure1538", "choiceAdventure1539", "choiceAdventure1540", "choiceAdventure1541", "choiceAdventure1542", "choiceAdventure1545", "choiceAdventure1546", "choiceAdventure1547", "choiceAdventure1548", "choiceAdventure1549", "choiceAdventure1550"];
    familiarProperties = ["commaFamiliar", "cupidBowLastFamiliar", "nextQuantumFamiliar", "stillsuitFamiliar", "zootGraftedButtCheekLeftFamiliar", "zootGraftedButtCheekRightFamiliar", "zootGraftedFootLeftFamiliar", "zootGraftedFootRightFamiliar", "zootGraftedHandLeftFamiliar", "zootGraftedHandRightFamiliar", "zootGraftedHeadFamiliar", "zootGraftedNippleLeftFamiliar", "zootGraftedNippleRightFamiliar", "zootGraftedShoulderLeftFamiliar", "zootGraftedShoulderRightFamiliar"];
    familiarNumericProperties = ["cupidBowLastFamiliar", "zootGraftedButtCheekLeftFamiliar", "zootGraftedButtCheekRightFamiliar", "zootGraftedFootLeftFamiliar", "zootGraftedFootRightFamiliar", "zootGraftedHandLeftFamiliar", "zootGraftedHandRightFamiliar", "zootGraftedHeadFamiliar", "zootGraftedNippleLeftFamiliar", "zootGraftedNippleRightFamiliar", "zootGraftedShoulderLeftFamiliar", "zootGraftedShoulderRightFamiliar"];
    statProperties = ["nsChallenge1", "snojoSetting"];
    phylumProperties = ["dnaSyringe", "locketPhylum", "redSnapperPhylum", "_circadianRhythmsPhylum"];
    itemProperties = ["commerceGhostItem", "daycareInstructorItem", "doctorBagQuestItem", "dolphinItem", "guzzlrQuestBooze", "implementGlitchItem", "muffinOnOrder", "rufusDesiredArtifact", "rufusDesiredItems", "shenQuestItem", "trapperOre", "walfordBucketItem", "_cookbookbatQuestIngredient", "_dailySpecial", "_pirateRealmCurio"];
    itemNumericProperties = ["daycareInstructorItem"];
  }
});

// node_modules/libram/dist/propertyTyping.js
function isBooleanProperty(property) {
  return booleanPropertiesSet.has(property);
}
function isNumericProperty(property) {
  return numericPropertiesSet.has(property);
}
function isNumericOrStringProperty(property) {
  return numericOrStringPropertiesSet.has(property);
}
function isStringProperty(property) {
  return stringPropertiesSet.has(property);
}
function isLocationProperty(property) {
  return locationPropertiesSet.has(property);
}
function isMonsterProperty(property) {
  return monsterPropertiesSet.has(property);
}
function isFamiliarProperty(property) {
  return familiarPropertiesSet.has(property);
}
function isStatProperty(property) {
  return statPropertiesSet.has(property);
}
function isPhylumProperty(property) {
  return phylumPropertiesSet.has(property);
}
function isItemProperty(property) {
  return itemPropertiesSet.has(property);
}
var booleanPropertiesSet, numericPropertiesSet, numericOrStringPropertiesSet, stringPropertiesSet, locationPropertiesSet, monsterPropertiesSet, familiarPropertiesSet, statPropertiesSet, phylumPropertiesSet, itemPropertiesSet;
var init_propertyTyping = __esm({
  "node_modules/libram/dist/propertyTyping.js": function() {
    init_propertyTypes();
    booleanPropertiesSet = new Set(booleanProperties);
    numericPropertiesSet = new Set(numericProperties);
    numericOrStringPropertiesSet = new Set(numericOrStringProperties);
    stringPropertiesSet = new Set(stringProperties);
    locationPropertiesSet = new Set(locationProperties);
    monsterPropertiesSet = new Set(monsterProperties);
    familiarPropertiesSet = new Set(familiarProperties);
    statPropertiesSet = new Set(statProperties);
    phylumPropertiesSet = new Set(phylumProperties);
    itemPropertiesSet = new Set(itemProperties);
  }
});

// node_modules/libram/dist/property.js
var property_exports = {};
__export(property_exports, {
  PropertiesManager: function() {
    return PropertiesManager;
  },
  decrement: function() {
    return decrement;
  },
  get: function() {
    return get;
  },
  getBoolean: function() {
    return getBoolean;
  },
  getBounty: function() {
    return getBounty;
  },
  getClass: function() {
    return getClass;
  },
  getCoinmaster: function() {
    return getCoinmaster;
  },
  getCommaSeparated: function() {
    return getCommaSeparated;
  },
  getEffect: function() {
    return getEffect;
  },
  getElement: function() {
    return getElement;
  },
  getFamiliar: function() {
    return getFamiliar;
  },
  getItem: function() {
    return getItem;
  },
  getLocation: function() {
    return getLocation;
  },
  getMonster: function() {
    return getMonster;
  },
  getNumber: function() {
    return getNumber;
  },
  getPhylum: function() {
    return getPhylum;
  },
  getServant: function() {
    return getServant;
  },
  getSkill: function() {
    return getSkill;
  },
  getSlot: function() {
    return getSlot;
  },
  getStat: function() {
    return getStat;
  },
  getString: function() {
    return getString;
  },
  getThrall: function() {
    return getThrall;
  },
  increment: function() {
    return increment;
  },
  set: function() {
    return _set;
  },
  setProperties: function() {
    return setProperties;
  },
  withChoice: function() {
    return withChoice;
  },
  withChoices: function() {
    return withChoices;
  },
  withProperties: function() {
    return withProperties;
  },
  withProperty: function() {
    return withProperty;
  }
});
function _typeof3(o) {
  "@babel/helpers - typeof";
  return _typeof3 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof3(o);
}
function ownKeys2(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread2(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys2(Object(t), true).forEach(function(r2) {
      _defineProperty3(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys2(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _toConsumableArray(r) {
  return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray2(r) || _nonIterableSpread();
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles(r) {
  if (Array.isArray(r)) return _arrayLikeToArray2(r);
}
function _classCallCheck3(a, n) {
  if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties3(e, r) {
  for (var t = 0; t < r.length; t++) {
    var o = r[t];
    o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e, _toPropertyKey3(o.key), o);
  }
}
function _createClass3(e, r, t) {
  return r && _defineProperties3(e.prototype, r), t && _defineProperties3(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
}
function _defineProperty3(e, r, t) {
  return (r = _toPropertyKey3(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
}
function _toPropertyKey3(t) {
  var i = _toPrimitive3(t, "string");
  return "symbol" == _typeof3(i) ? i : i + "";
}
function _toPrimitive3(t, r) {
  if ("object" != _typeof3(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof3(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _slicedToArray(r, e) {
  return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray2(r, e) || _nonIterableRest();
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray2(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray2(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray2(r, a) : void 0;
  }
}
function _arrayLikeToArray2(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _iterableToArrayLimit(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles(r) {
  if (Array.isArray(r)) return r;
}
function createMafiaClassPropertyGetter(Type, toType) {
  var numericPropertyNames = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
  return createPropertyGetter(function(value, property) {
    if (value === "") return null;
    var v = numericPropertyNames.includes(property) ? value.match(/^[0-9]+$/) ? toType(parseInt(value)) : null : toType(value);
    return v === Type.none ? null : v;
  });
}
function get(property, _default) {
  var value = getString(property);
  if (isBooleanProperty(property)) {
    var _getBoolean;
    return (_getBoolean = getBoolean(property, _default)) !== null && _getBoolean !== void 0 ? _getBoolean : false;
  } else if (isNumericProperty(property)) {
    var _getNumber;
    return (_getNumber = getNumber(property, _default)) !== null && _getNumber !== void 0 ? _getNumber : 0;
  } else if (isNumericOrStringProperty(property)) {
    return value.match(/^\d+$/) ? parseInt(value) : value;
  } else if (isLocationProperty(property)) {
    return getLocation(property, _default);
  } else if (isMonsterProperty(property)) {
    return getMonster(property, _default);
  } else if (isFamiliarProperty(property)) {
    return getFamiliar(property, _default);
  } else if (isStatProperty(property)) {
    return getStat(property, _default);
  } else if (isPhylumProperty(property)) {
    return getPhylum(property, _default);
  } else if (isItemProperty(property)) {
    return getItem(property, _default);
  } else if (isStringProperty(property)) {
    return value === "" && _default !== void 0 ? _default : value;
  }
  if (_default instanceof import_kolmafia3.Location) {
    return getLocation(property, _default);
  } else if (_default instanceof import_kolmafia3.Monster) {
    return getMonster(property, _default);
  } else if (_default instanceof import_kolmafia3.Familiar) {
    return getFamiliar(property, _default);
  } else if (_default instanceof import_kolmafia3.Stat) {
    return getStat(property, _default);
  } else if (_default instanceof import_kolmafia3.Phylum) {
    return getPhylum(property, _default);
  } else if (_default instanceof import_kolmafia3.Item) {
    return getItem(property, _default);
  } else if (typeof _default === "boolean") {
    return value === "true" ? true : value === "false" ? false : _default;
  } else if (typeof _default === "number") {
    return value === "" ? _default : parseInt(value);
  } else if (value === "") {
    return _default === void 0 ? "" : _default;
  } else {
    return value;
  }
}
function _set(property, value) {
  var stringValue = value === null ? "" : value.toString();
  (0, import_kolmafia3.setProperty)(property, stringValue);
  return value;
}
function increment(property) {
  var delta = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  var max = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : Infinity;
  var value = get(property);
  if (!isNumericProperty(property)) return value;
  var nextValue = Math.min(max, value + delta);
  return _set(property, nextValue);
}
function decrement(property) {
  var delta = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  var min = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : Infinity;
  var value = get(property);
  if (!isNumericProperty(property)) return value;
  var nextValue = Math.max(min, value - delta);
  return _set(property, nextValue);
}
function setProperties(properties) {
  for (var _i = 0, _Object$entries = Object.entries(properties); _i < _Object$entries.length; _i++) {
    var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2), prop = _Object$entries$_i[0], value = _Object$entries$_i[1];
    _set(prop, value);
  }
}
function withProperties(properties, callback) {
  var propertiesBackup = Object.fromEntries(Object.entries(properties).map(function(_ref) {
    var _ref2 = _slicedToArray(_ref, 1), prop = _ref2[0];
    return [prop, get(prop)];
  }));
  setProperties(properties);
  try {
    return callback();
  } finally {
    setProperties(propertiesBackup);
  }
}
function withProperty(property, value, callback) {
  return withProperties(_defineProperty3({}, property, value), callback);
}
function withChoices(choices2, callback) {
  var properties = Object.fromEntries(Object.entries(choices2).map(function(_ref3) {
    var _ref4 = _slicedToArray(_ref3, 2), choice = _ref4[0], option = _ref4[1];
    return ["choiceAdventure".concat(choice), option];
  }));
  return withProperties(properties, callback);
}
function withChoice(choice, value, callback) {
  return withChoices(_defineProperty3({}, choice, value), callback);
}
var import_kolmafia3, createPropertyGetter, getString, getCommaSeparated, getBoolean, getNumber, getBounty, getClass, getCoinmaster, getEffect, getElement, getFamiliar, getItem, getLocation, getMonster, getPhylum, getServant, getSkill, getSlot, getStat, getThrall, PropertiesManager;
var init_property = __esm({
  "node_modules/libram/dist/property.js": function() {
    import_kolmafia3 = require("kolmafia");
    init_propertyTypes();
    init_propertyTyping();
    createPropertyGetter = function(transform2) {
      return function(property, default_) {
        var value = (0, import_kolmafia3.getProperty)(property);
        if (default_ !== void 0 && value === "") {
          return default_;
        }
        return transform2(value, property);
      };
    };
    getString = createPropertyGetter(function(value) {
      return value;
    });
    getCommaSeparated = createPropertyGetter(function(value) {
      return value.split(/, ?/);
    });
    getBoolean = createPropertyGetter(function(value) {
      return value === "true";
    });
    getNumber = createPropertyGetter(function(value) {
      return Number(value);
    });
    getBounty = createMafiaClassPropertyGetter(import_kolmafia3.Bounty, import_kolmafia3.toBounty);
    getClass = createMafiaClassPropertyGetter(import_kolmafia3.Class, import_kolmafia3.toClass);
    getCoinmaster = createMafiaClassPropertyGetter(import_kolmafia3.Coinmaster, import_kolmafia3.toCoinmaster);
    getEffect = createMafiaClassPropertyGetter(import_kolmafia3.Effect, import_kolmafia3.toEffect);
    getElement = createMafiaClassPropertyGetter(import_kolmafia3.Element, import_kolmafia3.toElement);
    getFamiliar = createMafiaClassPropertyGetter(import_kolmafia3.Familiar, import_kolmafia3.toFamiliar, familiarNumericProperties);
    getItem = createMafiaClassPropertyGetter(import_kolmafia3.Item, import_kolmafia3.toItem, itemNumericProperties);
    getLocation = createMafiaClassPropertyGetter(import_kolmafia3.Location, import_kolmafia3.toLocation);
    getMonster = createMafiaClassPropertyGetter(import_kolmafia3.Monster, import_kolmafia3.toMonster, monsterNumericProperties);
    getPhylum = createMafiaClassPropertyGetter(import_kolmafia3.Phylum, import_kolmafia3.toPhylum);
    getServant = createMafiaClassPropertyGetter(import_kolmafia3.Servant, import_kolmafia3.toServant);
    getSkill = createMafiaClassPropertyGetter(import_kolmafia3.Skill, import_kolmafia3.toSkill);
    getSlot = createMafiaClassPropertyGetter(import_kolmafia3.Slot, import_kolmafia3.toSlot);
    getStat = createMafiaClassPropertyGetter(import_kolmafia3.Stat, import_kolmafia3.toStat);
    getThrall = createMafiaClassPropertyGetter(import_kolmafia3.Thrall, import_kolmafia3.toThrall);
    PropertiesManager = /* @__PURE__ */ function() {
      function PropertiesManager2() {
        _classCallCheck3(this, PropertiesManager2);
        _defineProperty3(this, "properties", {});
      }
      return _createClass3(PropertiesManager2, [{
        key: "storedValues",
        get: function get4() {
          return this.properties;
        }
        /**
         * Sets a collection of properties to the given values, storing the old values.
         *
         * @param propertiesToSet A Properties object, keyed by property name.
         */
      }, {
        key: "set",
        value: function set3(propertiesToSet) {
          for (var _i2 = 0, _Object$entries2 = Object.entries(propertiesToSet); _i2 < _Object$entries2.length; _i2++) {
            var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i2], 2), propertyName = _Object$entries2$_i[0], propertyValue = _Object$entries2$_i[1];
            if (!(propertyName in this.properties)) {
              this.properties[propertyName] = (0, import_kolmafia3.propertyExists)(propertyName) ? get(propertyName) : PropertiesManager2.EMPTY_PREFERENCE;
            }
            _set(propertyName, propertyValue);
          }
        }
        /**
         * Sets a collection of choice adventure properties to the given values, storing the old values.
         *
         * @param choicesToSet An object keyed by choice adventure number.
         */
      }, {
        key: "setChoices",
        value: function setChoices(choicesToSet) {
          this.set(Object.fromEntries(Object.entries(choicesToSet).map(function(_ref5) {
            var _ref6 = _slicedToArray(_ref5, 2), choiceNumber = _ref6[0], choiceValue = _ref6[1];
            return ["choiceAdventure".concat(choiceNumber), choiceValue];
          })));
        }
        /**
         * Sets a single choice adventure property to the given value, storing the old value.
         *
         * @param choiceToSet The number of the choice adventure to set the property for.
         * @param value The value to assign to that choice adventure.
         */
      }, {
        key: "setChoice",
        value: function setChoice2(choiceToSet, value) {
          this.setChoices(_defineProperty3({}, choiceToSet, value));
        }
        /**
         * Resets the given properties to their original stored value. Does not delete entries from the manager.
         *
         * @param properties Collection of properties to reset.
         */
      }, {
        key: "reset",
        value: function reset() {
          for (var _len = arguments.length, properties = new Array(_len), _key = 0; _key < _len; _key++) {
            properties[_key] = arguments[_key];
          }
          for (var _i3 = 0, _properties = properties; _i3 < _properties.length; _i3++) {
            var property = _properties[_i3];
            if (!(property in this.properties)) continue;
            var value = this.properties[property];
            if (value === PropertiesManager2.EMPTY_PREFERENCE) {
              (0, import_kolmafia3.removeProperty)(property);
            } else {
              _set(property, value);
            }
          }
        }
        /**
         * Iterates over all stored values, setting each property back to its original stored value. Does not delete entries from the manager.
         */
      }, {
        key: "resetAll",
        value: function resetAll() {
          this.reset.apply(this, _toConsumableArray(Object.keys(this.properties)));
        }
        /**
         * Stops storing the original values of inputted properties.
         *
         * @param properties Properties for the manager to forget.
         */
      }, {
        key: "clear",
        value: function clear() {
          for (var _len2 = arguments.length, properties = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            properties[_key2] = arguments[_key2];
          }
          for (var _i4 = 0, _properties2 = properties; _i4 < _properties2.length; _i4++) {
            var property = _properties2[_i4];
            if (this.properties[property]) {
              delete this.properties[property];
            }
          }
        }
        /**
         * Clears all properties.
         */
      }, {
        key: "clearAll",
        value: function clearAll() {
          this.properties = {};
        }
        /**
         * Increases a numeric property to the given value if necessary.
         *
         * @param property The numeric property we want to potentially raise.
         * @param value The minimum value we want that property to have.
         * @returns Whether we needed to change the property.
         */
      }, {
        key: "setMinimumValue",
        value: function setMinimumValue(property, value) {
          if (get(property, 0) < value) {
            this.set(_defineProperty3({}, property, value));
            return true;
          }
          return false;
        }
        /**
         * Decrease a numeric property to the given value if necessary.
         *
         * @param property The numeric property we want to potentially lower.
         * @param value The maximum value we want that property to have.
         * @returns Whether we needed to change the property.
         */
      }, {
        key: "setMaximumValue",
        value: function setMaximumValue(property, value) {
          if (get(property, 0) > value) {
            this.set(_defineProperty3({}, property, value));
            return true;
          }
          return false;
        }
        /**
         * Creates a new PropertiesManager with identical stored values to this one.
         *
         * @returns A new PropertiesManager, with identical stored values to this one.
         */
      }, {
        key: "clone",
        value: function clone() {
          var newGuy = new PropertiesManager2();
          newGuy.properties = this.storedValues;
          return newGuy;
        }
        /**
         * Clamps a numeric property, modulating it up or down to fit within a specified range
         *
         * @param property The numeric property to clamp
         * @param min The lower bound for what we want the property to be allowed to be.
         * @param max The upper bound for what we want the property to be allowed to be.
         * @returns Whether we ended up changing the property or not.
         */
      }, {
        key: "clamp",
        value: function clamp2(property, min, max) {
          if (max < min) return false;
          var start = get(property);
          this.setMinimumValue(property, min);
          this.setMaximumValue(property, max);
          return start !== get(property);
        }
        /**
         * Determines whether this PropertiesManager has identical stored values to another.
         *
         * @param other The PropertiesManager to compare to this one.
         * @returns Whether their StoredValues are identical.
         */
      }, {
        key: "equals",
        value: function equals(other) {
          var thisProps = Object.entries(this.storedValues);
          var otherProps = new Map(Object.entries(other.storedValues));
          if (thisProps.length !== otherProps.size) return false;
          for (var _i5 = 0, _thisProps = thisProps; _i5 < _thisProps.length; _i5++) {
            var _thisProps$_i = _slicedToArray(_thisProps[_i5], 2), propertyName = _thisProps$_i[0], propertyValue = _thisProps$_i[1];
            if (otherProps.get(propertyName) === propertyValue) return false;
          }
          return true;
        }
        /**
         * Merges a PropertiesManager onto this one, letting the input win in the event that both PropertiesManagers have a value stored.
         *
         * @param other The PropertiesManager to be merged onto this one.
         * @returns A new PropertiesManager with stored values from both its parents.
         */
      }, {
        key: "merge",
        value: function merge(other) {
          var newGuy = new PropertiesManager2();
          newGuy.properties = _objectSpread2(_objectSpread2({}, this.properties), other.properties);
          return newGuy;
        }
        /**
         * Merges an arbitrary collection of PropertiesManagers, letting the rightmost PropertiesManager win in the event of verlap.
         *
         * @param mergees The PropertiesManagers to merge together.
         * @returns A PropertiesManager that is just an amalgam of all the constituents.
         */
      }], [{
        key: "merge",
        value: function merge() {
          for (var _len3 = arguments.length, mergees = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
            mergees[_key3] = arguments[_key3];
          }
          if (mergees.length === 0) return new PropertiesManager2();
          return mergees.reduce(function(a, b) {
            return a.merge(b);
          });
        }
      }]);
    }();
    _defineProperty3(PropertiesManager, "EMPTY_PREFERENCE", Symbol("empty preference"));
  }
});

// node_modules/libram/dist/utils.js
function _createForOfIteratorHelper2(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t) {
    if (Array.isArray(r) || (t = _unsupportedIterableToArray3(r)) || e && r && "number" == typeof r.length) {
      t && (r = t);
      var _n = 0, F = function F2() {
      };
      return { s: F, n: function n() {
        return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
      }, e: function e2(r2) {
        throw r2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o, a = true, u = false;
  return { s: function s() {
    t = t.call(r);
  }, n: function n() {
    var r2 = t.next();
    return a = r2.done, r2;
  }, e: function e2(r2) {
    u = true, o = r2;
  }, f: function f() {
    try {
      a || null == t.return || t.return();
    } finally {
      if (u) throw o;
    }
  } };
}
function _slicedToArray2(r, e) {
  return _arrayWithHoles2(r) || _iterableToArrayLimit2(r, e) || _unsupportedIterableToArray3(r, e) || _nonIterableRest2();
}
function _nonIterableRest2() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit2(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles2(r) {
  if (Array.isArray(r)) return r;
}
function _toConsumableArray2(r) {
  return _arrayWithoutHoles2(r) || _iterableToArray2(r) || _unsupportedIterableToArray3(r) || _nonIterableSpread2();
}
function _nonIterableSpread2() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray3(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray3(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray3(r, a) : void 0;
  }
}
function _iterableToArray2(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles2(r) {
  if (Array.isArray(r)) return _arrayLikeToArray3(r);
}
function _arrayLikeToArray3(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function notNull(value) {
  return value !== null;
}
function notNullish(value) {
  return notNull(value) && value !== void 0;
}
function parseNumber(n) {
  return Number.parseInt(n.replace(/,/g, ""));
}
function clamp(n, min, max) {
  return Math.max(min, Math.min(max, n));
}
function chunk(array, chunkSize) {
  var result = [];
  for (var i = 0; i < array.length; i += chunkSize) {
    result.push(array.slice(i, i + chunkSize));
  }
  return result;
}
function arrayToCountedMap(array) {
  if (!Array.isArray(array)) return array;
  var map = /* @__PURE__ */ new Map();
  array.forEach(function(item15) {
    map.set(item15, (map.get(item15) || 0) + 1);
  });
  return map;
}
function countedMapToArray(map) {
  var _ref;
  return (_ref = []).concat.apply(_ref, _toConsumableArray2(_toConsumableArray2(map).map(function(_ref2) {
    var _ref3 = _slicedToArray2(_ref2, 2), item15 = _ref3[0], quantity = _ref3[1];
    return Array(quantity).fill(item15);
  })));
}
function countedMapToString(map) {
  return _toConsumableArray2(map).map(function(_ref4) {
    var _ref5 = _slicedToArray2(_ref4, 2), item15 = _ref5[0], quantity = _ref5[1];
    return "".concat(quantity, " x ").concat(item15);
  }).join(", ");
}
function sum(addends, x) {
  return addends.reduce(function(subtotal, element) {
    return subtotal + (typeof x === "function" ? x(element) : element[x]);
  }, 0);
}
function sumNumbers(addends) {
  return sum(addends, function(x) {
    return x;
  });
}
function arrayContains(item15, array) {
  return array.includes(item15);
}
function setEqual(a, b) {
  var sortedA = _toConsumableArray2(a).sort();
  var sortedB = _toConsumableArray2(b).sort();
  return a.length === b.length && sortedA.every(function(item15, index) {
    return item15 === sortedB[index];
  });
}
function invertMap(map) {
  var returnValue = /* @__PURE__ */ new Map();
  var _iterator = _createForOfIteratorHelper2(map), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var _step$value = _slicedToArray2(_step.value, 2), key = _step$value[0], value = _step$value[1];
      returnValue.set(value, key);
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return returnValue;
}
function splitByCommasWithEscapes(str) {
  var returnValue = [];
  var ignoreNext = false;
  var currentString = "";
  var _iterator2 = _createForOfIteratorHelper2(str.split("")), _step2;
  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
      var char = _step2.value;
      if (char === "\\") {
        ignoreNext = true;
      } else {
        if (char == "," && !ignoreNext) {
          returnValue.push(currentString.trim());
          currentString = "";
        } else {
          currentString += char;
        }
        ignoreNext = false;
      }
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
  returnValue.push(currentString.trim());
  return returnValue;
}
function maxBy(array, optimizer) {
  var reverse = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
  if (!array.length) throw new Error("Cannot call maxBy on an empty array!");
  if (typeof optimizer === "function") {
    return _toConsumableArray2(array).reduce(function(_ref6, other) {
      var value = _ref6.value, item15 = _ref6.item;
      var otherValue = optimizer(other);
      return value >= otherValue !== reverse ? {
        value: value,
        item: item15
      } : {
        value: otherValue,
        item: other
      };
    }, {
      item: array[0],
      value: optimizer(array[0])
    }).item;
  } else {
    return array.reduce(function(a, b) {
      return a[optimizer] >= b[optimizer] !== reverse ? a : b;
    });
  }
}
function tuple() {
  for (var _len = arguments.length, args2 = new Array(_len), _key = 0; _key < _len; _key++) {
    args2[_key] = arguments[_key];
  }
  return args2;
}
function arrayEquals(left, right) {
  if (left.length !== right.length) return false;
  return left.every(function(element, index) {
    return element === right[index];
  });
}
function undelay(delayedObject) {
  for (var _len2 = arguments.length, args2 = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
    args2[_key2 - 1] = arguments[_key2];
  }
  return typeof delayedObject === "function" ? delayedObject.apply(void 0, args2) : delayedObject;
}
function makeByXFunction(source) {
  return function(options, alternateSource) {
    var _options$val;
    var val = undelay(alternateSource !== null && alternateSource !== void 0 ? alternateSource : source);
    if ("default" in options) return (_options$val = options[val]) !== null && _options$val !== void 0 ? _options$val : options.default;
    return options[val];
  };
}
function flat(arr) {
  var depth = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Infinity;
  var flatArray = [];
  var _iterator3 = _createForOfIteratorHelper2(arr), _step3;
  try {
    for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
      var item15 = _step3.value;
      if (Array.isArray(item15) && depth > 0) {
        var child = flat(item15, depth - 1);
        flatArray = flatArray.concat(child);
      } else {
        flatArray.push(item15);
      }
    }
  } catch (err) {
    _iterator3.e(err);
  } finally {
    _iterator3.f();
  }
  return flatArray;
}
function random(array) {
  return array[Math.floor(Math.random() * array.length)];
}
var tc;
var init_utils = __esm({
  "node_modules/libram/dist/utils.js": function() {
    tc = function(word) {
      return word.charAt(0).toUpperCase() + word.slice(1);
    };
  }
});

// node_modules/libram/dist/template-string.js
var import_kolmafia4, concatTemplateString, handleTypeGetError, createSingleConstant, createPluralConstant, $bounty, $bounties, $class, $classes, $coinmaster, $coinmasters, $effect, $effects, $element, $elements, $familiar, $familiars, $item, $items, $location, $locations, $modifier, $modifiers, $monster, $monsters, $path, $paths, $phylum, $phyla, $servant, $servants, $skill, $skills, $slot, $slots, $stat, $stats, $thrall, $thralls;
var init_template_string = __esm({
  "node_modules/libram/dist/template-string.js": function() {
    import_kolmafia4 = require("kolmafia");
    init_utils();
    concatTemplateString = function concatTemplateString2(literals) {
      for (var _len = arguments.length, placeholders = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        placeholders[_key - 1] = arguments[_key];
      }
      return literals.raw.reduce(function(acc, literal, i) {
        var _placeholders$i;
        return acc + literal + ((_placeholders$i = placeholders[i]) !== null && _placeholders$i !== void 0 ? _placeholders$i : "");
      }, "");
    };
    handleTypeGetError = function(Type, error2) {
      var message = "".concat(error2);
      var match = message.match(RegExp("Bad ".concat(Type.name.toLowerCase(), " value: .*")));
      if (match) {
        (0, import_kolmafia4.print)("".concat(match[0], "; if you're certain that this ").concat(Type.name, " exists and is spelled correctly, please update KoLMafia"), "red");
      } else {
        (0, import_kolmafia4.print)(message);
      }
    };
    createSingleConstant = function(Type, converter) {
      var tagFunction = function tagFunction2(literals) {
        for (var _len2 = arguments.length, placeholders = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
          placeholders[_key2 - 1] = arguments[_key2];
        }
        var input = concatTemplateString.apply(void 0, [literals].concat(placeholders));
        try {
          return Type.get(input);
        } catch (error2) {
          handleTypeGetError(Type, error2);
        }
        (0, import_kolmafia4.abort)();
      };
      tagFunction.cls = Type;
      tagFunction.none = Type.none;
      tagFunction.get = function(name) {
        var value = converter(name);
        return value === Type.none ? null : value;
      };
      return tagFunction;
    };
    createPluralConstant = function(Type) {
      var tagFunction = function tagFunction2(literals) {
        for (var _len3 = arguments.length, placeholders = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
          placeholders[_key3 - 1] = arguments[_key3];
        }
        var input = concatTemplateString.apply(void 0, [literals].concat(placeholders));
        if (input === "") {
          return Type.all();
        }
        try {
          return Type.get(splitByCommasWithEscapes(input));
        } catch (error2) {
          handleTypeGetError(Type, error2);
        }
        (0, import_kolmafia4.abort)();
      };
      tagFunction.all = function() {
        return Type.all();
      };
      return tagFunction;
    };
    $bounty = createSingleConstant(import_kolmafia4.Bounty, import_kolmafia4.toBounty);
    $bounties = createPluralConstant(import_kolmafia4.Bounty);
    $class = createSingleConstant(import_kolmafia4.Class, import_kolmafia4.toClass);
    $classes = createPluralConstant(import_kolmafia4.Class);
    $coinmaster = createSingleConstant(import_kolmafia4.Coinmaster, import_kolmafia4.toCoinmaster);
    $coinmasters = createPluralConstant(import_kolmafia4.Coinmaster);
    $effect = createSingleConstant(import_kolmafia4.Effect, import_kolmafia4.toEffect);
    $effects = createPluralConstant(import_kolmafia4.Effect);
    $element = createSingleConstant(import_kolmafia4.Element, import_kolmafia4.toElement);
    $elements = createPluralConstant(import_kolmafia4.Element);
    $familiar = createSingleConstant(import_kolmafia4.Familiar, import_kolmafia4.toFamiliar);
    $familiars = createPluralConstant(import_kolmafia4.Familiar);
    $item = createSingleConstant(import_kolmafia4.Item, import_kolmafia4.toItem);
    $items = createPluralConstant(import_kolmafia4.Item);
    $location = createSingleConstant(import_kolmafia4.Location, import_kolmafia4.toLocation);
    $locations = createPluralConstant(import_kolmafia4.Location);
    $modifier = createSingleConstant(import_kolmafia4.Modifier, import_kolmafia4.toModifier);
    $modifiers = createPluralConstant(import_kolmafia4.Modifier);
    $monster = createSingleConstant(import_kolmafia4.Monster, import_kolmafia4.toMonster);
    $monsters = createPluralConstant(import_kolmafia4.Monster);
    $path = createSingleConstant(import_kolmafia4.Path, import_kolmafia4.toPath);
    $paths = createPluralConstant(import_kolmafia4.Path);
    $phylum = createSingleConstant(import_kolmafia4.Phylum, import_kolmafia4.toPhylum);
    $phyla = createPluralConstant(import_kolmafia4.Phylum);
    $servant = createSingleConstant(import_kolmafia4.Servant, import_kolmafia4.toServant);
    $servants = createPluralConstant(import_kolmafia4.Servant);
    $skill = createSingleConstant(import_kolmafia4.Skill, import_kolmafia4.toSkill);
    $skills = createPluralConstant(import_kolmafia4.Skill);
    $slot = createSingleConstant(import_kolmafia4.Slot, import_kolmafia4.toSlot);
    $slots = createPluralConstant(import_kolmafia4.Slot);
    $stat = createSingleConstant(import_kolmafia4.Stat, import_kolmafia4.toStat);
    $stats = createPluralConstant(import_kolmafia4.Stat);
    $thrall = createSingleConstant(import_kolmafia4.Thrall, import_kolmafia4.toThrall);
    $thralls = createPluralConstant(import_kolmafia4.Thrall);
  }
});

// node_modules/libram/dist/lib.js
function _typeof4(o) {
  "@babel/helpers - typeof";
  return _typeof4 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof4(o);
}
function _toConsumableArray3(r) {
  return _arrayWithoutHoles3(r) || _iterableToArray3(r) || _unsupportedIterableToArray4(r) || _nonIterableSpread3();
}
function _nonIterableSpread3() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray3(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles3(r) {
  if (Array.isArray(r)) return _arrayLikeToArray4(r);
}
function _defineProperties4(e, r) {
  for (var t = 0; t < r.length; t++) {
    var o = r[t];
    o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e, _toPropertyKey4(o.key), o);
  }
}
function _createClass4(e, r, t) {
  return r && _defineProperties4(e.prototype, r), t && _defineProperties4(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
}
function _toPropertyKey4(t) {
  var i = _toPrimitive4(t, "string");
  return "symbol" == _typeof4(i) ? i : i + "";
}
function _toPrimitive4(t, r) {
  if ("object" != _typeof4(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof4(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _classCallCheck4(a, n) {
  if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _callSuper(t, o, e) {
  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(t, e) {
  if (e && ("object" == _typeof4(e) || "function" == typeof e)) return e;
  if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
  return _assertThisInitialized(t);
}
function _assertThisInitialized(e) {
  if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e;
}
function _inherits(t, e) {
  if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
  t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: true, configurable: true } }), Object.defineProperty(t, "prototype", { writable: false }), e && _setPrototypeOf(t, e);
}
function _wrapNativeSuper(t) {
  var r = "function" == typeof Map ? /* @__PURE__ */ new Map() : void 0;
  return _wrapNativeSuper = function _wrapNativeSuper5(t2) {
    if (null === t2 || !_isNativeFunction(t2)) return t2;
    if ("function" != typeof t2) throw new TypeError("Super expression must either be null or a function");
    if (void 0 !== r) {
      if (r.has(t2)) return r.get(t2);
      r.set(t2, Wrapper);
    }
    function Wrapper() {
      return _construct(t2, arguments, _getPrototypeOf(this).constructor);
    }
    return Wrapper.prototype = Object.create(t2.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }), _setPrototypeOf(Wrapper, t2);
  }, _wrapNativeSuper(t);
}
function _construct(t, e, r) {
  if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments);
  var o = [null];
  o.push.apply(o, e);
  var p = new (t.bind.apply(t, o))();
  return r && _setPrototypeOf(p, r.prototype), p;
}
function _isNativeReflectConstruct() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct = function _isNativeReflectConstruct10() {
    return !!t;
  })();
}
function _isNativeFunction(t) {
  try {
    return -1 !== Function.toString.call(t).indexOf("[native code]");
  } catch (n) {
    return "function" == typeof t;
  }
}
function _setPrototypeOf(t, e) {
  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t2, e2) {
    return t2.__proto__ = e2, t2;
  }, _setPrototypeOf(t, e);
}
function _getPrototypeOf(t) {
  return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t2) {
    return t2.__proto__ || Object.getPrototypeOf(t2);
  }, _getPrototypeOf(t);
}
function _createForOfIteratorHelper3(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t) {
    if (Array.isArray(r) || (t = _unsupportedIterableToArray4(r)) || e && r && "number" == typeof r.length) {
      t && (r = t);
      var _n = 0, F = function F2() {
      };
      return { s: F, n: function n() {
        return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
      }, e: function e2(r2) {
        throw r2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o, a = true, u = false;
  return { s: function s() {
    t = t.call(r);
  }, n: function n() {
    var r2 = t.next();
    return a = r2.done, r2;
  }, e: function e2(r2) {
    u = true, o = r2;
  }, f: function f() {
    try {
      a || null == t.return || t.return();
    } finally {
      if (u) throw o;
    }
  } };
}
function _slicedToArray3(r, e) {
  return _arrayWithHoles3(r) || _iterableToArrayLimit3(r, e) || _unsupportedIterableToArray4(r, e) || _nonIterableRest3();
}
function _nonIterableRest3() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray4(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray4(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray4(r, a) : void 0;
  }
}
function _arrayLikeToArray4(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _iterableToArrayLimit3(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles3(r) {
  if (Array.isArray(r)) return r;
}
function _taggedTemplateLiteral(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function getSongLimit() {
  return 3 + ((0, import_kolmafia5.booleanModifier)("Four Songs") ? 1 : 0) + (0, import_kolmafia5.numericModifier)("Additional Song");
}
function isSong(skillOrEffect) {
  if (skillOrEffect instanceof import_kolmafia5.Effect && skillOrEffect.attributes.includes("song")) {
    return true;
  } else {
    var skill = skillOrEffect instanceof import_kolmafia5.Effect ? (0, import_kolmafia5.toSkill)(skillOrEffect) : skillOrEffect;
    return skill.class === $class(_templateObject || (_templateObject = _taggedTemplateLiteral(["Accordion Thief"]))) && skill.buff;
  }
}
function getActiveEffects() {
  return Object.keys((0, import_kolmafia5.myEffects)()).map(function(e) {
    return import_kolmafia5.Effect.get(e);
  });
}
function getActiveSongs() {
  return getActiveEffects().filter(isSong);
}
function getSongCount() {
  return getActiveSongs().length;
}
function canRememberSong() {
  var quantity = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1;
  return getSongLimit() - getSongCount() >= quantity;
}
function getMonsterLocations(monster2) {
  return import_kolmafia5.Location.all().filter(function(location7) {
    return monster2.name in (0, import_kolmafia5.appearanceRates)(location7);
  });
}
function getRemainingLiver() {
  return (0, import_kolmafia5.inebrietyLimit)() - (0, import_kolmafia5.myInebriety)();
}
function getRemainingStomach() {
  return (0, import_kolmafia5.fullnessLimit)() - (0, import_kolmafia5.myFullness)();
}
function getRemainingSpleen() {
  return (0, import_kolmafia5.spleenLimit)() - (0, import_kolmafia5.mySpleenUse)();
}
function have(thing) {
  var quantity = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  if (thing instanceof import_kolmafia5.Effect) {
    return (0, import_kolmafia5.haveEffect)(thing) >= quantity;
  }
  if (thing instanceof import_kolmafia5.Familiar) {
    return (0, import_kolmafia5.haveFamiliar)(thing);
  }
  if (thing instanceof import_kolmafia5.Item) {
    return (0, import_kolmafia5.availableAmount)(thing) >= quantity;
  }
  if (thing instanceof import_kolmafia5.Servant) {
    return (0, import_kolmafia5.haveServant)(thing);
  }
  if (thing instanceof import_kolmafia5.Skill) {
    return (0, import_kolmafia5.haveSkill)(thing);
  }
  if (thing instanceof import_kolmafia5.Thrall) {
    var thrall = (0, import_kolmafia5.myThrall)();
    return thrall.id === thing.id && thrall.level >= quantity;
  }
  return false;
}
function haveInCampground(item15) {
  return Object.keys((0, import_kolmafia5.getCampground)()).map(function(i) {
    return import_kolmafia5.Item.get(i);
  }).includes(item15);
}
function haveCounter(counterName) {
  var minTurns = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
  var maxTurns = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 500;
  return (0, import_kolmafia5.getCounters)(counterName, minTurns, maxTurns) === counterName;
}
function haveWandererCounter(wanderer) {
  if (deterministicWanderers.includes(wanderer)) {
    return haveCounter(wanderer);
  }
  var begin = wanderer + " window begin";
  var end = wanderer + " window end";
  return haveCounter(begin) || haveCounter(end);
}
function isVoteWandererNow() {
  return (0, import_kolmafia5.totalTurnsPlayed)() % 11 === 1 && get("lastVoteMonsterTurn") < (0, import_kolmafia5.totalTurnsPlayed)();
}
function isWandererNow(wanderer) {
  if (deterministicWanderers.includes(wanderer)) {
    return haveCounter(wanderer, 0, 0);
  }
  if (wanderer === Wanderer.Kramco) {
    return true;
  }
  if (wanderer === Wanderer.Vote) {
    return isVoteWandererNow();
  }
  if (wanderer === Wanderer.Familiar) {
    return get("_hipsterAdv") < 7;
  }
  var begin = wanderer + " window begin";
  var end = wanderer + " window end";
  return !haveCounter(begin, 1) && haveCounter(end);
}
function getKramcoWandererChance() {
  var fights = get("_sausageFights");
  var lastFight = get("_lastSausageMonsterTurn");
  var totalTurns = (0, import_kolmafia5.totalTurnsPlayed)();
  if (fights < 1) {
    return lastFight === totalTurns && (0, import_kolmafia5.myTurncount)() < 1 ? 0.5 : 1;
  }
  var turnsSinceLastFight = totalTurns - lastFight;
  return Math.min(1, (turnsSinceLastFight + 1) / (5 + fights * 3 + Math.pow(Math.max(0, fights - 5), 3)));
}
function getFamiliarWandererChance() {
  var totalFights = get("_hipsterAdv");
  var probability = [0.5, 0.4, 0.3, 0.2];
  if (totalFights < 4) {
    return probability[totalFights];
  }
  return totalFights > 7 ? 0 : 0.1;
}
function getWandererChance(wanderer) {
  if (deterministicWanderers.includes(wanderer)) {
    return haveCounter(wanderer, 0, 0) ? 1 : 0;
  }
  if (wanderer === Wanderer.Kramco) {
    getKramcoWandererChance();
  }
  if (wanderer === Wanderer.Vote) {
    return isVoteWandererNow() ? 1 : 0;
  }
  if (wanderer === Wanderer.Familiar) {
    getFamiliarWandererChance();
  }
  var begin = wanderer + " window begin";
  var end = wanderer + " window end";
  if (haveCounter(begin, 1, 100)) {
    return 0;
  }
  var counters = get("relayCounters");
  var re = new RegExp("(\\d+):" + end);
  var matches = counters.match(re);
  if (matches && matches.length === 2) {
    var window = Number.parseInt(matches[1]) - (0, import_kolmafia5.myTurncount)();
    return 1 / window;
  }
  return 0;
}
function isCurrentFamiliar(familiar10) {
  return (0, import_kolmafia5.myFamiliar)() === familiar10;
}
function getFoldGroup(item15) {
  var cache = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
  if (cache) {
    var cached = foldGroupCache.get(item15);
    if (cached !== void 0) return cached;
  }
  var result = Object.entries((0, import_kolmafia5.getRelated)(item15, "fold")).sort(function(_ref, _ref2) {
    var _ref3 = _slicedToArray3(_ref, 2), a = _ref3[1];
    var _ref4 = _slicedToArray3(_ref2, 2), b = _ref4[1];
    return a - b;
  }).map(function(_ref5) {
    var _ref6 = _slicedToArray3(_ref5, 1), i = _ref6[0];
    return import_kolmafia5.Item.get(i);
  });
  var _iterator = _createForOfIteratorHelper3(result), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var fold = _step.value;
      foldGroupCache.set(fold, result);
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return result;
}
function getZapGroup(item15) {
  return Object.keys((0, import_kolmafia5.getRelated)(item15, "zap")).map(function(i) {
    return import_kolmafia5.Item.get(i);
  });
}
function multiSplit(prop, outerDelimiter, innerDelimiter, mappers) {
  var initialSplit = get(prop).split(outerDelimiter).filter(Boolean);
  var multiDimensionalArray = outerDelimiter === innerDelimiter ? chunk(initialSplit, mappers.length) : initialSplit.map(function(entry) {
    return entry.split(innerDelimiter);
  });
  return multiDimensionalArray.map(function(tup) {
    return mappers.map(function(func, index) {
      return func(tup[index]);
    });
  });
}
function getBanishedMonsters() {
  return new Map(multiSplit("banishedMonsters", ":", ":", [import_kolmafia5.toMonster, banishSource, Number]).map(function(_ref7) {
    var _ref8 = _slicedToArray3(_ref7, 2), monster2 = _ref8[0], source = _ref8[1];
    return [source, monster2];
  }));
}
function canUse(item15) {
  var path3 = (0, import_kolmafia5.myPath)();
  if (path3 !== import_kolmafia5.Path.get("Nuclear Autumn")) {
    if ($items(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["Shrieking Weasel holo-record, Power-Guy 2000 holo-record, Lucky Strikes holo-record, EMD holo-record, Superdrifter holo-record, The Pigs holo-record, Drunk Uncles holo-record"]))).includes(item15)) {
      return false;
    }
  }
  if (path3 === import_kolmafia5.Path.get("G-Lover")) {
    if (!item15.name.toLowerCase().includes("g")) return false;
  }
  if (path3 === import_kolmafia5.Path.get("Bees Hate You")) {
    if (item15.name.toLowerCase().includes("b")) return false;
  }
  return true;
}
function noneToNull(thing) {
  var type = import_kolmafia5.MafiaClasses.find(function(t) {
    return thing instanceof t;
  });
  return type && thing === type.none ? null : thing;
}
function getRange(range) {
  var _range$match$slice$ma, _range$match;
  var _ref9 = (_range$match$slice$ma = (_range$match = range.match(/^(-?\d+)(?:-(-?\d+))?$/)) === null || _range$match === void 0 ? void 0 : _range$match.slice(1, 3).map(function(v) {
    return parseInt(v);
  })) !== null && _range$match$slice$ma !== void 0 ? _range$match$slice$ma : [0], _ref0 = _slicedToArray3(_ref9, 2), lower = _ref0[0], upper = _ref0[1];
  return [lower, Number.isNaN(upper) || upper === void 0 ? lower : upper];
}
function getAverage(range) {
  var _getRange = getRange(range), _getRange2 = _slicedToArray3(_getRange, 2), min = _getRange2[0], max = _getRange2[1];
  return (min + max) / 2;
}
function getAverageAdventures(item15) {
  return getAverage(item15.adventures);
}
function uneffect(effect2) {
  return (0, import_kolmafia5.cliExecute)("uneffect ".concat(effect2.name));
}
function getPlayerIdFromName(name) {
  var onMissing = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "throw";
  var playerId = (0, import_kolmafia5.getPlayerId)(name);
  if (playerId === name) {
    if (onMissing === "throw") {
      throw new Error("Player not found: ".concat(name));
    }
    return null;
  }
  return parseInt(playerId);
}
function getPlayerNameFromId(id) {
  var onMissing = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "throw";
  var playerName = (0, import_kolmafia5.getPlayerName)(id);
  if (playerName === id.toString()) {
    if (onMissing === "throw") {
      throw new Error("Player not found: ".concat(playerName));
    }
    return null;
  }
  return playerName;
}
function getPlayerFromIdOrName(idOrName) {
  var onMissing = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "throw";
  if (typeof idOrName === "number") {
    var name = getPlayerNameFromId(idOrName, onMissing);
    if (name === null) return null;
    return {
      name: name,
      id: idOrName
    };
  } else {
    var id = getPlayerIdFromName(idOrName, onMissing);
    if (id === null) return null;
    var _name = (0, import_kolmafia5.getPlayerName)(id);
    return {
      name: _name,
      id: id
    };
  }
}
function questStep(questName) {
  var stringStep = get(questName);
  if (stringStep === "unstarted") return -1;
  else if (stringStep === "started") return 0;
  else if (stringStep === "finished" || stringStep === "") return 999;
  else {
    if (stringStep.substring(0, 4) !== "step") {
      throw new Error("Quest state parsing error.");
    }
    return parseInt(stringStep.substring(4), 10);
  }
}
function ensureEffect(ef) {
  var turns2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  if ((0, import_kolmafia5.haveEffect)(ef) < turns2) {
    if (ef.default === null) {
      throw new EnsureError(ef, "No default action");
    }
    if (!(0, import_kolmafia5.cliExecute)(ef.default) || (0, import_kolmafia5.haveEffect)(ef) === 0) {
      throw new EnsureError(ef);
    }
  }
}
function getSaleValue() {
  for (var _len = arguments.length, items = new Array(_len), _key = 0; _key < _len; _key++) {
    items[_key] = arguments[_key];
  }
  return items.map(function(item15) {
    if (valueMap.has(item15)) return valueMap.get(item15) || 0;
    if (item15.discardable) {
      valueMap.set(item15, (0, import_kolmafia5.mallPrice)(item15) > Math.max(2 * (0, import_kolmafia5.autosellPrice)(item15), 100) ? MALL_VALUE_MODIFIER * (0, import_kolmafia5.mallPrice)(item15) : (0, import_kolmafia5.autosellPrice)(item15));
    } else {
      valueMap.set(item15, (0, import_kolmafia5.mallPrice)(item15) > 100 ? MALL_VALUE_MODIFIER * (0, import_kolmafia5.mallPrice)(item15) : 0);
    }
    return valueMap.get(item15) || 0;
  }).reduce(function(s, price2) {
    return s + price2;
  }, 0) / items.length;
}
function findLeprechaunMultiplier(familiar10) {
  if (familiar10 === $familiar(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral(["Mutant Cactus Bud"])))) {
    return (0, import_kolmafia5.numericModifier)(familiar10, "Leprechaun Effectiveness", 1, $item.none);
  }
  if (familiar10 === $familiar(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral(["Reanimated Reanimator"])))) return 0;
  var meatBonus = (0, import_kolmafia5.numericModifier)(familiar10, "Meat Drop", 1, $item.none);
  if (meatBonus === 0) return 0;
  return Math.pow(Math.sqrt(meatBonus / 2 + 55 / 4 + 3) - Math.sqrt(55) / 2, 2);
}
function findFairyMultiplier(familiar10) {
  if (familiar10 === $familiar(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral(["Mutant Fire Ant"])))) {
    return (0, import_kolmafia5.numericModifier)(familiar10, "Fairy Effectiveness", 1, $item.none);
  }
  if (familiar10 === $familiar(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral(["Reanimated Reanimator"])))) return 0;
  var itemBonus = (0, import_kolmafia5.numericModifier)(familiar10, "Item Drop", 1, $item.none);
  if (itemBonus === 0) return 0;
  if (familiar10 === $familiar(_templateObject0 || (_templateObject0 = _taggedTemplateLiteral(["Jill-of-All-Trades"])))) return 1.5;
  return Math.pow(Math.sqrt(itemBonus + 55 / 4 + 3) - Math.sqrt(55) / 2, 2);
}
function getTodaysHolidayWanderers() {
  return (0, import_kolmafia5.holiday)().split("/").flatMap(function(holiday2) {
    var _holidayWanderers$get;
    return (_holidayWanderers$get = holidayWanderers.get(holiday2)) !== null && _holidayWanderers$get !== void 0 ? _holidayWanderers$get : [];
  });
}
function canVisitUrl() {
  if ((0, import_kolmafia5.currentRound)()) {
    logger_default.debug("Current round is ".concat((0, import_kolmafia5.currentRound)(), "; you're in combat."));
    return false;
  }
  if ((0, import_kolmafia5.inMultiFight)()) {
    logger_default.debug("You're in a multifight.");
    return false;
  }
  if ((0, import_kolmafia5.choiceFollowsFight)()) {
    logger_default.debug("A choice follows this fight.");
    return false;
  }
  if ((0, import_kolmafia5.handlingChoice)()) {
    logger_default.debug("You're currently in a choice adventure");
    return false;
  }
  return true;
}
function damageTakenByElement(baseDamage, element) {
  if (baseDamage < 0) return 1;
  var res = (0, import_kolmafia5.elementalResistance)(element);
  return Math.max(1, Math.ceil(baseDamage - baseDamage * res / 100));
}
function telescope() {
  return Object.fromEntries(Object.entries({
    statContest: telescopeStats.get(get("telescope1")),
    elementContest: telescopeElements.get(get("telescope2")),
    hedge1: hedgeTrap1.get(get("telescope3")),
    hedge2: hedgeTrap2.get(get("telescope4")),
    hedge3: hedgeTrap3.get(get("telescope5"))
  }).filter(function(_ref1) {
    var _ref10 = _slicedToArray3(_ref1, 2), value = _ref10[1];
    return value;
  }));
}
function examine(thing) {
  var url = thing instanceof import_kolmafia5.Item ? "desc_item.php?whichitem=".concat(thing.descid) : thing instanceof import_kolmafia5.Familiar ? "desc_familiar.php?which=".concat(thing.id) : thing instanceof import_kolmafia5.Effect ? "desc_effect.php?whicheffect=".concat(thing.descid) : "desc_skill.php?whichskill=".concat(thing.id);
  return (0, import_kolmafia5.visitUrl)(url);
}
function directlyUse(item15) {
  return (0, import_kolmafia5.visitUrl)("inv_use.php?which=3&whichitem=".concat(item15.id, "&pwd"));
}
function unequip(thing) {
  if (thing instanceof import_kolmafia5.Slot) return (0, import_kolmafia5.equip)(thing, $item.none);
  var failedSlots = import_kolmafia5.Slot.all().filter(function(s) {
    if ((0, import_kolmafia5.equippedItem)(s) !== thing) return false;
    return !unequip(s);
  });
  if (failedSlots.length) logger_default.debug("Failed to unequip ".concat(thing, " from slots ").concat(failedSlots.join(", ")));
  return failedSlots.length === 0;
}
function gameDay() {
  var _todayToString$match;
  var _map = ((_todayToString$match = (0, import_kolmafia5.todayToString)().match(/(\d{4})(\d{2})(\d{2})/)) !== null && _todayToString$match !== void 0 ? _todayToString$match : []).map(Number), _map2 = _slicedToArray3(_map, 4), year = _map2[1], month = _map2[2], day = _map2[3];
  return new Date(year, month - 1, day, 0, 0, 0);
}
function freeCrafts() {
  var type = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "all";
  var effectCrafts = function(effect2) {
    return Math.floor((0, import_kolmafia5.haveEffect)(effect2) / 5);
  };
  var all2 = (have($skill(_templateObject35 || (_templateObject35 = _taggedTemplateLiteral(["Rapid Prototyping"])))) ? 5 - get("_rapidPrototypingUsed") : 0) + (have($skill(_templateObject36 || (_templateObject36 = _taggedTemplateLiteral(["Expert Corner-Cutter"])))) ? 5 - get("_expertCornerCutterUsed") : 0) + effectCrafts($effect(_templateObject37 || (_templateObject37 = _taggedTemplateLiteral(["Inigo's Incantation of Inspiration"])))) + effectCrafts($effect(_templateObject38 || (_templateObject38 = _taggedTemplateLiteral(["Craft Tea"])))) + effectCrafts($effect(_templateObject39 || (_templateObject39 = _taggedTemplateLiteral(["Cooking Concentrate"]))));
  var food = type === "food" ? 5 - get("_cookbookbatCrafting") : 0;
  var smith = type === "smith" ? 5 - get("_thorsPliersCrafting") : 0;
  var booze = 0;
  return all2 + food + smith + booze;
}
function realmAvailable(identifier) {
  switch (identifier) {
    case "fantasy":
      return todayOrAlways("fr");
    case "pirate":
      return todayOrAlways("pr");
    case "cyber":
      return todayOrAlways("cr");
    default:
      return todayOrAlways("".concat(identifier, "Airport"));
  }
}
function realmCurrency(realm) {
  switch (realm) {
    case "sleaze":
      return $item(_templateObject40 || (_templateObject40 = _taggedTemplateLiteral(["Beach Buck"])));
    case "spooky":
      return $item(_templateObject41 || (_templateObject41 = _taggedTemplateLiteral(["Coinspiracy"])));
    case "stench":
      return $item(_templateObject42 || (_templateObject42 = _taggedTemplateLiteral(["FunFunds\u2122"])));
    case "cold":
      return $item(_templateObject43 || (_templateObject43 = _taggedTemplateLiteral(["Wal-Mart gift certificate"])));
    case "hot":
      return $item(_templateObject44 || (_templateObject44 = _taggedTemplateLiteral(["Volcoino"])));
    case "fantasy":
      return $item(_templateObject45 || (_templateObject45 = _taggedTemplateLiteral(["Rubee\u2122"])));
    default:
      return null;
  }
}
function lgrCurrencies() {
  return realmTypes.filter(function(realm) {
    return realmAvailable(realm) && !(realm === "hot" && get("_luckyGoldRingVolcoino"));
  }).map(realmCurrency).filter(notNull);
}
function getCombatFlags() {
  var flags = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [].concat(ACCOUNT_COMBAT_FLAGS);
  var accountPage = (0, import_kolmafia5.visitUrl)("account.php?tab=combat");
  return flags.map(function(flag) {
    return {
      flag: flag,
      value: (0, import_kolmafia5.xpath)(accountPage, '//*[@id="opt_flag_'.concat(flag, "\"]/label/input[@type='checkbox']@checked"))[0] === "checked"
    };
  });
}
function setCombatFlags() {
  for (var _len2 = arguments.length, flags = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    flags[_key2] = arguments[_key2];
  }
  return (0, import_kolmafia5.visitUrl)("account.php?".concat(([].concat(_toConsumableArray3(flags.flatMap(function(_ref11) {
    var flag = _ref11.flag, value = _ref11.value;
    return ["actions[]=flag_".concat(flag), "flag_".concat(flag, "=").concat(Number(value))];
  })), ["action=Update", "am=1", "ajax=1", "pwd"]).join("&"), true)));
}
function withCombatFlags(action) {
  for (var _len3 = arguments.length, flags = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
    flags[_key3 - 1] = arguments[_key3];
  }
  var initialValues = getCombatFlags(flags.map(function(_ref12) {
    var flag = _ref12.flag;
    return flag;
  }));
  try {
    return action();
  } finally {
    setCombatFlags.apply(void 0, _toConsumableArray3(initialValues));
  }
}
function haveIntrinsic(effect2) {
  return (0, import_kolmafia5.haveEffect)(effect2) >= 2147483647;
}
function extractItems(text) {
  return new Map(Object.entries((0, import_kolmafia5.extractItems)(text)).map(function(_ref13) {
    var _ref14 = _slicedToArray3(_ref13, 2), itemName = _ref14[0], quantity = _ref14[1];
    return [import_kolmafia5.Item.get(itemName), quantity];
  }));
}
function makeScalerCalcFunction(cache, pattern) {
  return function(monster2) {
    var _find, _pattern$exec$slice, _pattern$exec;
    var current2 = cache.get(monster2);
    if (current2 !== void 0) return (0, import_kolmafia5.monsterEval)(current2);
    var result = (_find = ((_pattern$exec$slice = (_pattern$exec = pattern.exec(monster2.attributes)) === null || _pattern$exec === void 0 ? void 0 : _pattern$exec.slice(1)) !== null && _pattern$exec$slice !== void 0 ? _pattern$exec$slice : []).find(function(m) {
      return m !== void 0;
    })) !== null && _find !== void 0 ? _find : "0";
    cache.set(monster2, result);
    return (0, import_kolmafia5.monsterEval)(result);
  };
}
function withBatch(action) {
  (0, import_kolmafia5.batchOpen)();
  try {
    return action();
  } finally {
    (0, import_kolmafia5.batchClose)();
  }
}
function totalFamiliarWeight() {
  var familiar10 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (0, import_kolmafia5.myFamiliar)();
  var considerAdjustment = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
  return clamp(clamp((0, import_kolmafia5.familiarWeight)(familiar10), have($effect(_templateObject46 || (_templateObject46 = _taggedTemplateLiteral(["Fidoxene"])))) ? 20 : 0, Infinity) + familiar10.soupWeight + (considerAdjustment ? (0, import_kolmafia5.weightAdjustment)() : 0) + (familiar10.feasted ? 10 : 0), 1, Infinity);
}
function isRegularFamiliarTag(tag) {
  return regularFamiliarTagSet.has(tag);
}
function getRegularFamiliarTags(familiar10) {
  return familiar10.attributes.split("; ").filter(isRegularFamiliarTag);
}
function getAllFamiliarTags(familiar10) {
  var _SPECIAL_ULTS$get;
  return [].concat(_toConsumableArray3(getRegularFamiliarTags(familiar10)), _toConsumableArray3((_SPECIAL_ULTS$get = SPECIAL_ULTS.get(familiar10)) !== null && _SPECIAL_ULTS$get !== void 0 ? _SPECIAL_ULTS$get : []));
}
function getAcquirePrice(item15) {
  var quantity = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  if (quantity <= 0) return 0;
  var currentAmount = (0, import_kolmafia5.availableAmount)(item15);
  var amountNeeded = Math.max(0, quantity - currentAmount);
  var retrieveCost = (0, import_kolmafia5.retrievePrice)(item15, currentAmount + quantity) - (0, import_kolmafia5.retrievePrice)(item15, currentAmount);
  var mallMinPrice = Math.max(100, 2 * (0, import_kolmafia5.autosellPrice)(item15));
  if ((0, import_kolmafia5.craftType)(item15) === "Meatpasting" && retrieveCost > 0) {
    return retrieveCost;
  }
  if ((0, import_kolmafia5.isNpcItem)(item15) && (0, import_kolmafia5.npcPrice)(item15) > 0 && (0, import_kolmafia5.npcPrice)(item15) < (0, import_kolmafia5.mallPrice)(item15)) {
    return quantity * (0, import_kolmafia5.npcPrice)(item15);
  }
  if (item15.tradeable) {
    if ((0, import_kolmafia5.mallPrice)(item15) === mallMinPrice) {
      return clamp(currentAmount, 0, quantity) * (0, import_kolmafia5.autosellPrice)(item15) + amountNeeded * (0, import_kolmafia5.mallPrice)(item15);
    }
    if ((0, import_kolmafia5.mallPrice)(item15) > mallMinPrice) {
      return quantity * (0, import_kolmafia5.mallPrice)(item15);
    }
    return quantity * (0, import_kolmafia5.autosellPrice)(item15);
  }
  if (item15.discardable) {
    return have(item15, quantity) ? quantity * (0, import_kolmafia5.autosellPrice)(item15) : Infinity;
  }
  return 0;
}
var import_kolmafia5, _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject0, _templateObject1, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14, _templateObject15, _templateObject16, _templateObject17, _templateObject18, _templateObject19, _templateObject20, _templateObject21, _templateObject22, _templateObject23, _templateObject24, _templateObject25, _templateObject26, _templateObject27, _templateObject28, _templateObject29, _templateObject30, _templateObject31, _templateObject32, _templateObject33, _templateObject34, _templateObject35, _templateObject36, _templateObject37, _templateObject38, _templateObject39, _templateObject40, _templateObject41, _templateObject42, _templateObject43, _templateObject44, _templateObject45, _templateObject46, _templateObject47, _templateObject48, _templateObject49, _templateObject50, _templateObject51, _templateObject52, Wanderer, deterministicWanderers, foldGroupCache, banishSource, EnsureError, valueMap, MALL_VALUE_MODIFIER, Environment, holidayWanderers, telescopeStats, telescopeElements, hedgeTrap1, hedgeTrap2, hedgeTrap3, byStat, byClass, realmTypes, todayOrAlways, ACCOUNT_COMBAT_FLAGS, scalerRates, scalerCaps, SCALE_RATE_PATTERN, SCALE_CAP_PATTERN, getScalingRate, getScalingCap, makeBulkFunction, bulkAutosell, bulkPutCloset, bulkPutDisplay, bulkPutStash, bulkTakeCloset, bulkTakeDisplay, bulkTakeShop, bulkTakeStash, bulkTakeStorage, bulkPutShop, bulkSell, bulkRepriceShop, regularFamiliarTags, regularFamiliarTagSet, pokefamUltTags, SPECIAL_ULTS;
var init_lib = __esm({
  "node_modules/libram/dist/lib.js": function() {
    import_kolmafia5 = require("kolmafia");
    init_logger();
    init_property();
    init_template_string();
    init_utils();
    (function(Wanderer2) {
      Wanderer2["Digitize"] = "Digitize Monster";
      Wanderer2["Enamorang"] = "Enamorang Monster";
      Wanderer2["Familiar"] = "Familiar";
      Wanderer2["Holiday"] = "Holiday Monster";
      Wanderer2["Kramco"] = "Kramco";
      Wanderer2["Nemesis"] = "Nemesis Assassin";
      Wanderer2["Portscan"] = "portscan.edu";
      Wanderer2["Romantic"] = "Romantic Monster";
      Wanderer2["Vote"] = "Vote Monster";
    })(Wanderer || (Wanderer = {}));
    deterministicWanderers = [Wanderer.Digitize, Wanderer.Portscan];
    foldGroupCache = /* @__PURE__ */ new Map();
    banishSource = function(banisher) {
      if (banisher.toLowerCase() === "saber force") return $skill(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["Use the Force"])));
      if (banisher.toLowerCase() === "nanorhino") return $skill(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["Unleash Nanites"])));
      var item15 = (0, import_kolmafia5.toItem)(banisher);
      if ($items(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["none, training scroll:  Snokebomb, tomayohawk-style reflex hammer"]))).includes(item15)) {
        return (0, import_kolmafia5.toSkill)(banisher);
      }
      return item15;
    };
    EnsureError = /* @__PURE__ */ function(_Error) {
      function EnsureError2(cause, reason) {
        var _this;
        _classCallCheck4(this, EnsureError2);
        _this = _callSuper(this, EnsureError2, ["Failed to ensure ".concat(cause.name, "!").concat(reason ? " ".concat(reason) : "")]);
        _this.name = "Ensure Error";
        return _this;
      }
      _inherits(EnsureError2, _Error);
      return _createClass4(EnsureError2);
    }(/* @__PURE__ */ _wrapNativeSuper(Error));
    valueMap = /* @__PURE__ */ new Map();
    MALL_VALUE_MODIFIER = 0.9;
    Environment = {
      Outdoor: "outdoor",
      Indoor: "indoor",
      Underground: "underground",
      Underwater: "underwater"
    };
    holidayWanderers = /* @__PURE__ */ new Map([["El Dia De Los Muertos Borrachos", $monsters(_templateObject1 || (_templateObject1 = _taggedTemplateLiteral(["Novia Cad\xE1ver, Novio Cad\xE1ver, Padre Cad\xE1ver, Persona Inocente Cad\xE1ver"])))], ["Feast of Boris", $monsters(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral(["Candied Yam Golem, Malevolent Tofurkey, Possessed Can of Cranberry Sauce, Stuffing Golem"])))], ["Talk Like a Pirate Day", $monsters(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral(["ambulatory pirate, migratory pirate, peripatetic pirate"])))]]);
    telescopeStats = /* @__PURE__ */ new Map([["standing around flexing their muscles and using grip exercisers", $stat(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral(["Muscle"])))], ["sitting around playing chess and solving complicated-looking logic puzzles", $stat(_templateObject13 || (_templateObject13 = _taggedTemplateLiteral(["Mysticality"])))], ["all wearing sunglasses and dancing", $stat(_templateObject14 || (_templateObject14 = _taggedTemplateLiteral(["Moxie"])))]]);
    telescopeElements = /* @__PURE__ */ new Map([["people, all of whom appear to be on fire", $element(_templateObject15 || (_templateObject15 = _taggedTemplateLiteral(["hot"])))], ["people, surrounded by a cloud of eldritch mist", $element(_templateObject16 || (_templateObject16 = _taggedTemplateLiteral(["spooky"])))], ["greasy-looking people furtively skulking around", $element(_templateObject17 || (_templateObject17 = _taggedTemplateLiteral(["sleaze"])))], ["people, surrounded by garbage and clouds of flies", $element(_templateObject18 || (_templateObject18 = _taggedTemplateLiteral(["stench"])))], ["people, clustered around a group of igloos", $element(_templateObject19 || (_templateObject19 = _taggedTemplateLiteral(["cold"])))]]);
    hedgeTrap1 = /* @__PURE__ */ new Map([["smoldering bushes on the outskirts of a hedge maze", $element(_templateObject20 || (_templateObject20 = _taggedTemplateLiteral(["hot"])))], ["creepy-looking black bushes on the outskirts of a hedge maze", $element(_templateObject21 || (_templateObject21 = _taggedTemplateLiteral(["spooky"])))], ["purplish, greasy-looking hedges", $element(_templateObject22 || (_templateObject22 = _taggedTemplateLiteral(["sleaze"])))], ["nasty-looking, dripping green bushes on the outskirts of a hedge maze", $element(_templateObject23 || (_templateObject23 = _taggedTemplateLiteral(["stench"])))], ["frost-rimed bushes on the outskirts of a hedge maze", $element(_templateObject24 || (_templateObject24 = _taggedTemplateLiteral(["cold"])))]]);
    hedgeTrap2 = /* @__PURE__ */ new Map([["smoke rising from deeper within the maze", $element(_templateObject25 || (_templateObject25 = _taggedTemplateLiteral(["hot"])))], ["a miasma of eldritch vapors rising from deeper within the maze", $element(_templateObject26 || (_templateObject26 = _taggedTemplateLiteral(["spooky"])))], ["a greasy purple cloud hanging over the center of the maze", $element(_templateObject27 || (_templateObject27 = _taggedTemplateLiteral(["sleaze"])))], ["a cloud of green gas hovering over the maze", $element(_templateObject28 || (_templateObject28 = _taggedTemplateLiteral(["stench"])))], ["wintry mists rising from deeper within the maze", $element(_templateObject29 || (_templateObject29 = _taggedTemplateLiteral(["cold"])))]]);
    hedgeTrap3 = /* @__PURE__ */ new Map([["with lava slowly oozing out of it", $element(_templateObject30 || (_templateObject30 = _taggedTemplateLiteral(["hot"])))], ["surrounded by creepy black mist", $element(_templateObject31 || (_templateObject31 = _taggedTemplateLiteral(["spooky"])))], ["that occasionally vomits out a greasy ball of hair", $element(_templateObject32 || (_templateObject32 = _taggedTemplateLiteral(["sleaze"])))], ["disgorging a really surprising amount of sewage", $element(_templateObject33 || (_templateObject33 = _taggedTemplateLiteral(["stench"])))], ["occasionally disgorging a bunch of ice cubes", $element(_templateObject34 || (_templateObject34 = _taggedTemplateLiteral(["cold"])))]]);
    byStat = makeByXFunction(function() {
      return (0, import_kolmafia5.myPrimestat)().toString();
    });
    byClass = makeByXFunction(function() {
      return (0, import_kolmafia5.myClass)().toString();
    });
    realmTypes = ["spooky", "stench", "hot", "cold", "sleaze", "fantasy", "pirate", "cyber"];
    todayOrAlways = function(x) {
      return get("_".concat(x, "Today")) || get("".concat(x, "Always"));
    };
    ACCOUNT_COMBAT_FLAGS = ["aabosses", "wowbar", "bothcombatinterf", "compactmanuel", "eternalmrj", "disablelovebugs", "boringdarts"];
    scalerRates = /* @__PURE__ */ new Map();
    scalerCaps = /* @__PURE__ */ new Map();
    SCALE_RATE_PATTERN = /Scale: (?:\[([^\]]*)\]|(\d*))/;
    SCALE_CAP_PATTERN = /Cap: (?:\[([^\]]*)\]|(\d*))/;
    getScalingRate = makeScalerCalcFunction(scalerRates, SCALE_RATE_PATTERN);
    getScalingCap = makeScalerCalcFunction(scalerCaps, SCALE_CAP_PATTERN);
    makeBulkFunction = function(action) {
      return function(items) {
        (0, import_kolmafia5.batchOpen)();
        var _iterator2 = _createForOfIteratorHelper3(items.entries()), _step2;
        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
            var _step2$value = _slicedToArray3(_step2.value, 2), item15 = _step2$value[0], quantity = _step2$value[1];
            action(quantity, item15);
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
        return (0, import_kolmafia5.batchClose)();
      };
    };
    bulkAutosell = makeBulkFunction(import_kolmafia5.autosell);
    bulkPutCloset = makeBulkFunction(import_kolmafia5.putCloset);
    bulkPutDisplay = makeBulkFunction(import_kolmafia5.putDisplay);
    bulkPutStash = makeBulkFunction(import_kolmafia5.putStash);
    bulkTakeCloset = makeBulkFunction(import_kolmafia5.takeCloset);
    bulkTakeDisplay = makeBulkFunction(import_kolmafia5.takeDisplay);
    bulkTakeShop = makeBulkFunction(import_kolmafia5.takeShop);
    bulkTakeStash = makeBulkFunction(import_kolmafia5.takeStash);
    bulkTakeStorage = makeBulkFunction(import_kolmafia5.takeStorage);
    bulkPutShop = function(items) {
      (0, import_kolmafia5.batchOpen)();
      var _iterator3 = _createForOfIteratorHelper3(items.entries()), _step3;
      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
          var _step3$value = _slicedToArray3(_step3.value, 2), item15 = _step3$value[0], _step3$value$ = _step3$value[1], quantity = _step3$value$.quantity, limit = _step3$value$.limit, price2 = _step3$value$.price;
          if (quantity) {
            (0, import_kolmafia5.putShop)(price2, limit !== null && limit !== void 0 ? limit : 0, quantity, item15);
          } else {
            (0, import_kolmafia5.putShop)(price2, limit !== null && limit !== void 0 ? limit : 0, item15);
          }
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
      return (0, import_kolmafia5.batchClose)();
    };
    bulkSell = function(coinmaster, items) {
      (0, import_kolmafia5.batchOpen)();
      var _iterator4 = _createForOfIteratorHelper3(items.entries()), _step4;
      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
          var _step4$value = _slicedToArray3(_step4.value, 2), item15 = _step4$value[0], quantity = _step4$value[1];
          (0, import_kolmafia5.sell)(coinmaster, quantity, item15);
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }
      return (0, import_kolmafia5.batchClose)();
    };
    bulkRepriceShop = function(items) {
      (0, import_kolmafia5.batchOpen)();
      var _iterator5 = _createForOfIteratorHelper3(items.entries()), _step5;
      try {
        for (_iterator5.s(); !(_step5 = _iterator5.n()).done; ) {
          var _step5$value = _slicedToArray3(_step5.value, 2), item15 = _step5$value[0], _step5$value$ = _step5$value[1], limit = _step5$value$.limit, price2 = _step5$value$.price;
          if (limit) {
            (0, import_kolmafia5.repriceShop)(price2, limit, item15);
          } else {
            (0, import_kolmafia5.repriceShop)(price2, item15);
          }
        }
      } catch (err) {
        _iterator5.e(err);
      } finally {
        _iterator5.f();
      }
      return (0, import_kolmafia5.batchClose)();
    };
    regularFamiliarTags = Object.freeze(["animal", "insect", "haseyes", "haswings", "fast", "bite", "flies", "hashands", "wearsclothes", "organic", "vegetable", "hovers", "edible", "food", "sentient", "cute", "mineral", "polygonal", "object", "undead", "cantalk", "evil", "orb", "spooky", "sleaze", "aquatic", "swims", "isclothes", "phallic", "stench", "hot", "hasbeak", "haslegs", "robot", "technological", "hard", "cold", "hasbones", "hasclaws", "reallyevil", "good", "person", "humanoid", "animatedart", "software", "hasshell", "hasstinger"]);
    regularFamiliarTagSet = new Set(regularFamiliarTags);
    pokefamUltTags = Object.freeze(["ult_bearhug", "ult_sticktreats", "ult_owlstare", "ult_bloodbath", "ult_pepperscorn", "ult_rainbowstorm"]);
    SPECIAL_ULTS = /* @__PURE__ */ new Map([[$familiar(_templateObject47 || (_templateObject47 = _taggedTemplateLiteral(["Nursine"]))), ["ult_bearhug"]], [$familiar(_templateObject48 || (_templateObject48 = _taggedTemplateLiteral(["Caramel"]))), ["ult_sticktreats"]], [$familiar(_templateObject49 || (_templateObject49 = _taggedTemplateLiteral(["Smashmoth"]))), ["ult_owlstare"]], [$familiar(_templateObject50 || (_templateObject50 = _taggedTemplateLiteral(["Slotter"]))), ["ult_bloodbath"]], [$familiar(_templateObject51 || (_templateObject51 = _taggedTemplateLiteral(["Cornbeefadon"]))), ["ult_pepperscorn"]], [$familiar(_templateObject52 || (_templateObject52 = _taggedTemplateLiteral(["Mu"]))), ["ult_rainbowstorm"]]]);
  }
});

// node_modules/libram/dist/overlappingNames.js
var overlappingItemNames, overlappingSkillNames;
var init_overlappingNames = __esm({
  "node_modules/libram/dist/overlappingNames.js": function() {
    overlappingItemNames = ["spider web", "really sticky spider web", "dictionary", "NG", "Cloaca-Cola", "yo-yo", "top", "ball", "kite", "yo", "red potion", "blue potion", "bowling ball", "adder", "red button", "tennis ball", "pile of sand", "mushroom", "deluxe mushroom", "spoon"];
    overlappingSkillNames = ["Shoot", "Thrust-Smack", "Headbutt", "Toss", "Knife in the Dark", "Sing", "Disarm", "LIGHT", "BURN", "Extract", "Meteor Shower", "Snipe", "Bite", "Kick", "Howl", "Cleave", "Boil", "Slice", "Rainbow"];
  }
});

// node_modules/libram/dist/combat.js
function _typeof5(o) {
  "@babel/helpers - typeof";
  return _typeof5 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof5(o);
}
function _superPropGet(t, o, e, r) {
  var p = _get(_getPrototypeOf2(1 & r ? t.prototype : t), o, e);
  return 2 & r && "function" == typeof p ? function(t2) {
    return p.apply(e, t2);
  } : p;
}
function _get() {
  return _get = "undefined" != typeof Reflect && Reflect.get ? Reflect.get.bind() : function(e, t, r) {
    var p = _superPropBase(e, t);
    if (p) {
      var n = Object.getOwnPropertyDescriptor(p, t);
      return n.get ? n.get.call(arguments.length < 3 ? e : r) : n.value;
    }
  }, _get.apply(null, arguments);
}
function _superPropBase(t, o) {
  for (; !{}.hasOwnProperty.call(t, o) && null !== (t = _getPrototypeOf2(t)); ) ;
  return t;
}
function _createForOfIteratorHelper4(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t) {
    if (Array.isArray(r) || (t = _unsupportedIterableToArray5(r)) || e && r && "number" == typeof r.length) {
      t && (r = t);
      var _n = 0, F = function F2() {
      };
      return { s: F, n: function n() {
        return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
      }, e: function e2(r2) {
        throw r2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o, a = true, u = false;
  return { s: function s() {
    t = t.call(r);
  }, n: function n() {
    var r2 = t.next();
    return a = r2.done, r2;
  }, e: function e2(r2) {
    u = true, o = r2;
  }, f: function f() {
    try {
      a || null == t.return || t.return();
    } finally {
      if (u) throw o;
    }
  } };
}
function _toConsumableArray4(r) {
  return _arrayWithoutHoles4(r) || _iterableToArray4(r) || _unsupportedIterableToArray5(r) || _nonIterableSpread4();
}
function _nonIterableSpread4() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray5(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray5(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray5(r, a) : void 0;
  }
}
function _iterableToArray4(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles4(r) {
  if (Array.isArray(r)) return _arrayLikeToArray5(r);
}
function _arrayLikeToArray5(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _defineProperty4(e, r, t) {
  return (r = _toPropertyKey5(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
}
function _defineProperties5(e, r) {
  for (var t = 0; t < r.length; t++) {
    var o = r[t];
    o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e, _toPropertyKey5(o.key), o);
  }
}
function _createClass5(e, r, t) {
  return r && _defineProperties5(e.prototype, r), t && _defineProperties5(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
}
function _toPropertyKey5(t) {
  var i = _toPrimitive5(t, "string");
  return "symbol" == _typeof5(i) ? i : i + "";
}
function _toPrimitive5(t, r) {
  if ("object" != _typeof5(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof5(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _classCallCheck5(a, n) {
  if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _callSuper2(t, o, e) {
  return o = _getPrototypeOf2(o), _possibleConstructorReturn2(t, _isNativeReflectConstruct2() ? Reflect.construct(o, e || [], _getPrototypeOf2(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn2(t, e) {
  if (e && ("object" == _typeof5(e) || "function" == typeof e)) return e;
  if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
  return _assertThisInitialized2(t);
}
function _assertThisInitialized2(e) {
  if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e;
}
function _inherits2(t, e) {
  if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
  t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: true, configurable: true } }), Object.defineProperty(t, "prototype", { writable: false }), e && _setPrototypeOf2(t, e);
}
function _wrapNativeSuper2(t) {
  var r = "function" == typeof Map ? /* @__PURE__ */ new Map() : void 0;
  return _wrapNativeSuper2 = function _wrapNativeSuper5(t2) {
    if (null === t2 || !_isNativeFunction2(t2)) return t2;
    if ("function" != typeof t2) throw new TypeError("Super expression must either be null or a function");
    if (void 0 !== r) {
      if (r.has(t2)) return r.get(t2);
      r.set(t2, Wrapper);
    }
    function Wrapper() {
      return _construct2(t2, arguments, _getPrototypeOf2(this).constructor);
    }
    return Wrapper.prototype = Object.create(t2.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }), _setPrototypeOf2(Wrapper, t2);
  }, _wrapNativeSuper2(t);
}
function _construct2(t, e, r) {
  if (_isNativeReflectConstruct2()) return Reflect.construct.apply(null, arguments);
  var o = [null];
  o.push.apply(o, e);
  var p = new (t.bind.apply(t, o))();
  return r && _setPrototypeOf2(p, r.prototype), p;
}
function _isNativeReflectConstruct2() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct2 = function _isNativeReflectConstruct10() {
    return !!t;
  })();
}
function _isNativeFunction2(t) {
  try {
    return -1 !== Function.toString.call(t).indexOf("[native code]");
  } catch (n) {
    return "function" == typeof t;
  }
}
function _setPrototypeOf2(t, e) {
  return _setPrototypeOf2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t2, e2) {
    return t2.__proto__ = e2, t2;
  }, _setPrototypeOf2(t, e);
}
function _getPrototypeOf2(t) {
  return _getPrototypeOf2 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t2) {
    return t2.__proto__ || Object.getPrototypeOf(t2);
  }, _getPrototypeOf2(t);
}
function getMacroId() {
  var name = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : MACRO_NAME;
  var query = '//select[@name="macroid"]/option[text()="'.concat(name, '"]/@value');
  var macroText = (0, import_kolmafia6.visitUrl)("account_combatmacros.php");
  var macroMatches = (0, import_kolmafia6.xpath)(macroText, query);
  if (macroMatches.length === 0) {
    (0, import_kolmafia6.visitUrl)("account_combatmacros.php?action=new");
    var newMacroText = (0, import_kolmafia6.visitUrl)("account_combatmacros.php?macroid=0&name=".concat(name, "&macrotext=abort&action=save"));
    macroMatches = (0, import_kolmafia6.xpath)(newMacroText, query);
  }
  if (macroMatches.length === 0) {
    if ((0, import_kolmafia6.xpath)(macroText, '//select[@name="macroid"]/option').length >= 100) {
      throw new InvalidMacroError("Please delete at least one existing macro to make some space for Libram");
    }
    throw new InvalidMacroError("Could not find or create macro ".concat(name));
  }
  return parseInt(macroMatches[0], 10);
}
function itemOrNameToItem(itemOrName) {
  return typeof itemOrName === "string" ? import_kolmafia6.Item.get(itemOrName) : itemOrName;
}
function itemOrItemsBallsMacroName(itemOrItems) {
  if (Array.isArray(itemOrItems)) {
    return itemOrItems.map(itemOrItemsBallsMacroName).join(", ");
  } else {
    var item15 = itemOrNameToItem(itemOrItems);
    return !overlappingItemNames.includes(item15.name) ? item15.name : item15.id.toFixed(0);
  }
}
function itemOrItemsBallsMacroPredicate(itemOrItems) {
  if (Array.isArray(itemOrItems)) {
    if (itemOrItems[0] === itemOrItems[1]) return "hastwocombatitems ".concat(itemOrItemsBallsMacroName(itemOrItems[0]));
    return itemOrItems.map(itemOrItemsBallsMacroPredicate).join(" && ");
  } else {
    return "hascombatitem ".concat(itemOrItemsBallsMacroName(itemOrItems));
  }
}
function skillOrNameToSkill(skillOrName) {
  if (typeof skillOrName === "string") {
    return import_kolmafia6.Skill.get(skillOrName);
  } else {
    return skillOrName;
  }
}
function skillBallsMacroName(skillOrName) {
  var skill = skillOrNameToSkill(skillOrName);
  return skill.name.match(/^[A-Za-z ]+$/) && !overlappingSkillNames.includes(skill.name) ? skill.name : skill.id;
}
function adventureMacro(loc, macro) {
  macro.save();
  (0, import_kolmafia6.setAutoAttack)(0);
  try {
    (0, import_kolmafia6.adv1)(loc, 0, "");
    while ((0, import_kolmafia6.inMultiFight)()) (0, import_kolmafia6.runCombat)();
    if ((0, import_kolmafia6.choiceFollowsFight)()) (0, import_kolmafia6.visitUrl)("choice.php");
  } finally {
    Macro.clearSaved();
  }
}
function adventureMacroAuto(loc, autoMacro) {
  var nextMacro = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
  nextMacro = nextMacro !== null && nextMacro !== void 0 ? nextMacro : Macro.abort();
  autoMacro.setAutoAttack();
  nextMacro.save();
  try {
    (0, import_kolmafia6.adv1)(loc, 0, "");
    while ((0, import_kolmafia6.inMultiFight)()) (0, import_kolmafia6.runCombat)();
    if ((0, import_kolmafia6.choiceFollowsFight)()) (0, import_kolmafia6.visitUrl)("choice.php");
  } finally {
    Macro.clearSaved();
  }
}
var import_kolmafia6, MACRO_NAME, InvalidMacroError, Macro, StrictMacro;
var init_combat = __esm({
  "node_modules/libram/dist/combat.js": function() {
    import_kolmafia6 = require("kolmafia");
    init_lib();
    init_overlappingNames();
    init_property();
    MACRO_NAME = "Script Autoattack Macro";
    InvalidMacroError = /* @__PURE__ */ function(_Error) {
      function InvalidMacroError2() {
        _classCallCheck5(this, InvalidMacroError2);
        return _callSuper2(this, InvalidMacroError2, arguments);
      }
      _inherits2(InvalidMacroError2, _Error);
      return _createClass5(InvalidMacroError2);
    }(/* @__PURE__ */ _wrapNativeSuper2(Error));
    Macro = /* @__PURE__ */ function() {
      function Macro3() {
        _classCallCheck5(this, Macro3);
        _defineProperty4(this, "components", []);
        _defineProperty4(this, "name", MACRO_NAME);
      }
      return _createClass5(Macro3, [{
        key: "toString",
        value: (
          /**
           * Convert macro to string.
           *
           * @returns BALLS macro
           */
          function toString() {
            return (this.components.join(";") + ";").replace(/;;+/g, ";");
          }
        )
        /**
         * Gives your macro a new name to be used when saving an autoattack.
         *
         * @param name The name to be used when saving as an autoattack.
         * @returns The macro in question
         */
      }, {
        key: "rename",
        value: function rename(name) {
          this.name = name;
          return this;
        }
        /**
         * Creates a new Macro with a name other than the default name.
         *
         * @param name The name to assign this macro.
         * @returns A new Macro with the assigned name.
         */
      }, {
        key: "save",
        value: (
          /**
           * Save a macro to a Mafia property for use in a consult script.
           */
          function save() {
            _set(Macro3.SAVED_MACRO_PROPERTY, this.toString());
          }
        )
        /**
         * Load a saved macro from the Mafia property.
         *
         * @returns Loaded macro text
         */
      }, {
        key: "step",
        value: (
          /**
           * Statefully add one or several steps to a macro.
           *
           * @param nextSteps The steps to add to the macro.
           * @returns {Macro} This object itself.
           */
          function step() {
            var _ref, _this$components;
            for (var _len = arguments.length, nextSteps = new Array(_len), _key = 0; _key < _len; _key++) {
              nextSteps[_key] = arguments[_key];
            }
            var nextStepsStrings = (_ref = []).concat.apply(_ref, _toConsumableArray4(nextSteps.map(function(x) {
              return x instanceof Macro3 ? x.components : [x];
            })));
            (_this$components = this.components).push.apply(_this$components, _toConsumableArray4(nextStepsStrings.filter(Boolean)));
            return this;
          }
        )
        /**
         * Statefully add one or several steps to a macro.
         *
         * @param nextSteps The steps to add to the macro.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "submit",
        value: (
          /**
           * Submit the built macro to KoL. Only works inside combat.
           *
           * @returns Contents of the fight page after macro submission
           */
          function submit2() {
            var final = this.toString();
            return (0, import_kolmafia6.visitUrl)("fight.php?action=macro&macrotext=".concat((0, import_kolmafia6.urlEncode)(final)), true, true);
          }
        )
        /**
         * Set this macro as a KoL native autoattack.
         */
      }, {
        key: "setAutoAttack",
        value: function setAutoAttack4() {
          var id = Macro3.cachedMacroIds.get(this.name);
          if (id === void 0) {
            id = getMacroId(this.name);
            Macro3.cachedMacroIds.set(this.name, id);
          }
          if ((0, import_kolmafia6.getAutoAttack)() === 99e6 + id && this.toString() === Macro3.cachedAutoAttacks.get(this.name)) {
            return;
          }
          (0, import_kolmafia6.visitUrl)("account_combatmacros.php?macroid=".concat(id, "&name=").concat((0, import_kolmafia6.urlEncode)(this.name), "&macrotext=").concat((0, import_kolmafia6.urlEncode)(this.toString()), "&action=save"), true, true);
          (0, import_kolmafia6.visitUrl)("account.php?am=1&action=autoattack&value=".concat(99e6 + id, "&ajax=1"));
          Macro3.cachedAutoAttacks.set(this.name, this.toString());
        }
        /**
         * Renames the macro, then sets it as an autoattack.
         *
         * @param name The name to save the macro under as an autoattack.
         */
      }, {
        key: "setAutoAttackAs",
        value: function setAutoAttackAs(name) {
          this.name = name;
          this.setAutoAttack();
        }
        /**
         * Clear all cached autoattacks, and delete all stored macros server-side.
         */
      }, {
        key: "abort",
        value: (
          /**
           * Add an "abort" step to this macro.
           *
           * @returns {Macro} This object itself.
           */
          function abort2() {
            return this.step("abort");
          }
        )
        /**
         * Create a new macro with an "abort" step.
         *
         * @returns {Macro} This object itself.
         */
      }, {
        key: "abortWithWarning",
        value: (
          /**
           * Adds an "abort" step to this macro, with a warning message to print
           *
           * @param warning The warning message to print
           * @returns  {Macro} This object itself.
           */
          function abortWithWarning(warning) {
            return this.step('abort "'.concat(warning, '"'));
          }
        )
        /**
         * Create a new macro with an "abort" step to this macro, with a warning message to print
         *
         * @param warning The warning message to print
         * @returns {Macro} This object itself.
         */
      }, {
        key: "runaway",
        value: (
          /**
           * Add a "runaway" step to this macro.
           *
           * @returns {Macro} This object itself.
           */
          function runaway() {
            return this.step("runaway");
          }
        )
        /**
         * Create a new macro with an "runaway" step.
         *
         * @returns {Macro} This object itself.
         */
      }, {
        key: "if_",
        value: (
          /**
           * Add an "if" statement to this macro.
           *
           * @param condition The BALLS condition for the if statement.
           * @param ifTrue Continuation if the condition is true.
           * @returns {Macro} This object itself.
           */
          function if_(condition, ifTrue) {
            return this.step("if ".concat(Macro3.makeBALLSPredicate(condition))).step(ifTrue).step("endif");
          }
        )
        /**
         * Create a new macro with an "if" statement.
         *
         * @param condition The BALLS condition for the if statement.
         * @param ifTrue Continuation if the condition is true.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "ifNot",
        value: (
          /**
           * Add an "if" statement to this macro, inverting the condition.
           *
           * @param condition The BALLS condition for the if statement.
           * @param ifTrue Continuation if the condition is true.
           * @returns {Macro} This object itself.
           */
          function ifNot(condition, ifTrue) {
            return this.if_("!".concat(Macro3.makeBALLSPredicate(condition)), ifTrue);
          }
        )
        /**
         * Create a new macro with an "if" statement, inverting the condition.
         *
         * @param condition The BALLS condition for the if statement.
         * @param ifTrue Continuation if the condition is true.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "while_",
        value: (
          /**
           * Add a "while" statement to this macro.
           *
           * @param condition The BALLS condition for the while statement.
           * @param contents Loop to repeat while the condition is true.
           * @returns {Macro} This object itself.
           */
          function while_(condition, contents) {
            return this.step("while ".concat(Macro3.makeBALLSPredicate(condition))).step(contents).step("endwhile");
          }
        )
        /**
         * Create a new macro with a "while" statement.
         *
         * @param condition The BALLS condition for the while statement.
         * @param contents Loop to repeat while the condition is true.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "externalIf",
        value: (
          /**
           * Conditionally add a step to a macro based on a condition evaluated at the time of building the macro.
           *
           * @param condition The JS condition.
           * @param ifTrue Continuation to add if the condition is true.
           * @param ifFalse Optional input to turn this into an if...else statement.
           * @returns {Macro} This object itself.
           */
          function externalIf(condition, ifTrue, ifFalse) {
            if (condition) return this.step(ifTrue);
            else if (ifFalse) return this.step(ifFalse);
            else return this;
          }
        )
        /**
         * Create a new macro with a condition evaluated at the time of building the macro.
         *
         * @param condition The JS condition.
         * @param ifTrue Continuation to add if the condition is true.
         * @param ifFalse Optional input to turn this into an if...else statement.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "repeat",
        value: (
          /**
           * Add a repeat step to the macro.
           *
           * @param condition The BALLS condition for the repeat statement, optional.
           * @returns {Macro} This object itself.
           */
          function repeat(condition) {
            return condition === void 0 ? this.step("repeat") : this.step("repeat ".concat(Macro3.makeBALLSPredicate(condition)));
          }
        )
        /**
         * Add one or more skill cast steps to the macro.
         *
         * @param skills Skills to cast.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "skill",
        value: function skill() {
          for (var _len2 = arguments.length, skills4 = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            skills4[_key2] = arguments[_key2];
          }
          return this.step.apply(this, _toConsumableArray4(skills4.map(function(skill2) {
            return "skill ".concat(skillBallsMacroName(skill2));
          })));
        }
        /**
         * Create a new macro with one or more skill cast steps.
         *
         * @param skills Skills to cast.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "trySkill",
        value: (
          /**
           * Add one or more skill cast steps to the macro, where each step checks if you have the skill first.
           *
           * @param skills Skills to try casting.
           * @returns {Macro} This object itself.
           */
          function trySkill() {
            for (var _len3 = arguments.length, skills4 = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
              skills4[_key3] = arguments[_key3];
            }
            return this.step.apply(this, _toConsumableArray4(skills4.map(function(skillOrName) {
              return skillOrNameToSkill(skillOrName);
            }).map(function(skill) {
              return Macro3.if_(Macro3.makeBALLSPredicate(skill), Macro3.skill(skill));
            })));
          }
        )
        /**
         * Create a new macro with one or more skill cast steps, where each step checks if you have the skill first.
         *
         * @param skills Skills to try casting.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "trySkillRepeat",
        value: (
          /**
           * Add one or more skill-cast-and-repeat steps to the macro, where each step checks if you have the skill first.
           *
           * @param skills Skills to try repeatedly casting.
           * @returns {Macro} This object itself.
           */
          function trySkillRepeat() {
            for (var _len4 = arguments.length, skills4 = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
              skills4[_key4] = arguments[_key4];
            }
            return this.step.apply(this, _toConsumableArray4(skills4.map(function(skillOrName) {
              return skillOrNameToSkill(skillOrName);
            }).map(function(skill) {
              return Macro3.if_(Macro3.makeBALLSPredicate(skill), Macro3.skill(skill).repeat(skill));
            })));
          }
        )
        /**
         * Create a new macro with one or more skill-cast-and-repeat steps, where each step checks if you have the skill first.
         *
         * @param skills Skills to try repeatedly casting.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "item",
        value: (
          /**
           * Add one or more item steps to the macro.
           *
           * @param items Items to use. Pass a tuple [item1, item2] to funksling.
           * @returns {Macro} This object itself.
           */
          function item15() {
            for (var _len5 = arguments.length, items = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
              items[_key5] = arguments[_key5];
            }
            return this.step.apply(this, _toConsumableArray4(items.map(function(itemOrItems) {
              return "use ".concat(itemOrItemsBallsMacroName(itemOrItems));
            })));
          }
        )
        /**
         * Create a new macro with one or more item steps.
         *
         * @param items Items to use. Pass a tuple [item1, item2] to funksling.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "tryItem",
        value: (
          /**
           * Add one or more item steps to the macro, where each step checks to see if you have the item first.
           *
           * @param items Items to try using. Pass a tuple [item1, item2] to funksling.
           * @returns {Macro} This object itself.
           */
          function tryItem() {
            for (var _len6 = arguments.length, items = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
              items[_key6] = arguments[_key6];
            }
            return this.step.apply(this, _toConsumableArray4(items.map(function(item15) {
              return Macro3.if_(itemOrItemsBallsMacroPredicate(item15), Macro3.item(item15));
            })));
          }
        )
        /**
         * Create a new macro with one or more item steps, where each step checks to see if you have the item first.
         *
         * @param items Items to try using. Pass a tuple [item1, item2] to funksling.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "attack",
        value: (
          /**
           * Add an attack step to the macro.
           *
           * @returns {Macro} This object itself.
           */
          function attack() {
            return this.step("attack");
          }
        )
        /**
         * Create a new macro with an attack step.
         *
         * @returns {Macro} This object itself.
         */
      }, {
        key: "ifHolidayWanderer",
        value: (
          /**
           * Create an if_ statement based on what holiday of loathing it currently is. On non-holidays, returns the original macro, unmutated.
           *
           * @param macro The macro to place in the if_ statement
           * @returns This macro with supplied macro wapped in if statement matching holiday wanderers
           */
          function ifHolidayWanderer(macro) {
            var todaysWanderers = getTodaysHolidayWanderers();
            if (todaysWanderers.length === 0) return this;
            return this.if_(todaysWanderers.map(function(monster2) {
              return "monsterid ".concat(monster2.id);
            }).join(" || "), macro);
          }
        )
        /**
         * Create a new macro starting with an ifHolidayWanderer step.
         *
         * @param macro The macro to place inside the if_ statement
         * @returns New macro with supplied macro wrapped in if statement matching holiday wanderers
         */
      }, {
        key: "ifNotHolidayWanderer",
        value: (
          /**
           * Create an if_ statement based on what holiday of loathing it currently is. On non-holidays, returns the original macro, with the input macro appended.
           *
           * @param macro The macro to place in the if_ statement.
           * @returns This macro with supplied macro wrapped in if statement matching monsters that are not holiday wanderers
           */
          function ifNotHolidayWanderer(macro) {
            var todaysWanderers = getTodaysHolidayWanderers();
            if (todaysWanderers.length === 0) return this.step(macro);
            return this.if_(todaysWanderers.map(function(monster2) {
              return "!monsterid ".concat(monster2.id);
            }).join(" && "), macro);
          }
        )
        /**
         * Create a new macro starting with an ifNotHolidayWanderer step.
         *
         * @param macro The macro to place inside the if_ statement
         * @returns New macro with supplied macro wrapped in if statement matching monsters that are not holiday wanderers
         */
      }], [{
        key: "rename",
        value: function rename(name) {
          return new this().rename(name);
        }
      }, {
        key: "load",
        value: function load() {
          var _this;
          return (_this = new this()).step.apply(_this, _toConsumableArray4(get(Macro3.SAVED_MACRO_PROPERTY).split(";")));
        }
        /**
         * Clear the saved macro in the Mafia property.
         */
      }, {
        key: "clearSaved",
        value: function clearSaved() {
          (0, import_kolmafia6.removeProperty)(Macro3.SAVED_MACRO_PROPERTY);
        }
      }, {
        key: "step",
        value: function step() {
          var _this2;
          return (_this2 = new this()).step.apply(_this2, arguments);
        }
      }, {
        key: "clearAutoAttackMacros",
        value: function clearAutoAttackMacros() {
          var _iterator = _createForOfIteratorHelper4(Macro3.cachedAutoAttacks.keys()), _step;
          try {
            for (_iterator.s(); !(_step = _iterator.n()).done; ) {
              var _Macro$cachedMacroIds;
              var name = _step.value;
              var id = (_Macro$cachedMacroIds = Macro3.cachedMacroIds.get(name)) !== null && _Macro$cachedMacroIds !== void 0 ? _Macro$cachedMacroIds : getMacroId(name);
              (0, import_kolmafia6.visitUrl)("account_combatmacros.php?macroid=".concat(id, "&action=edit&what=Delete&confirm=1"));
              Macro3.cachedAutoAttacks.delete(name);
              Macro3.cachedMacroIds.delete(name);
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
        }
      }, {
        key: "abort",
        value: function abort2() {
          return new this().abort();
        }
      }, {
        key: "abortWithWarning",
        value: function abortWithWarning(warning) {
          return new this().abortWithWarning(warning);
        }
      }, {
        key: "runaway",
        value: function runaway() {
          return new this().runaway();
        }
        /**
         *
         * @param condition The BALLS condition or a type to make a condition for (Monster, Item, Skill, etc.)
         * @returns {string} The BALLS condition string
         */
      }, {
        key: "makeBALLSPredicate",
        value: function makeBALLSPredicate(condition) {
          if (condition instanceof import_kolmafia6.Monster) {
            return "monsterid ".concat(condition.id);
          } else if (condition instanceof Array) {
            if (condition[0] instanceof import_kolmafia6.Item) return itemOrItemsBallsMacroPredicate(condition);
            return "(".concat(condition.map(function(entry) {
              return Macro3.makeBALLSPredicate(entry);
            }).join(" || "), ")");
          } else if (condition instanceof import_kolmafia6.Effect) {
            return "haseffect ".concat(condition.id);
          } else if (condition instanceof import_kolmafia6.Skill) {
            return condition.combat ? "hasskill ".concat(skillBallsMacroName(condition)) : "knowsskill ".concat(condition.id);
          } else if (condition instanceof import_kolmafia6.Item) {
            if (!condition.combat) {
              throw new InvalidMacroError("Item ".concat(condition, " cannot be made a valid BALLS predicate (it is not combat-usable)"));
            }
            return "hascombatitem ".concat(itemOrItemsBallsMacroName(condition));
          } else if (condition instanceof import_kolmafia6.Location) {
            var snarfblat = condition.id;
            if (snarfblat < 1) {
              throw new InvalidMacroError("Location ".concat(condition, " cannot be made a valid BALLS predicate (it has no location id)"));
            }
            return "snarfblat ".concat(snarfblat);
          } else if (condition instanceof import_kolmafia6.Class) {
            if (condition.id > 6) {
              throw new InvalidMacroError("Class ".concat(condition, " cannot be made a valid BALLS predicate (it is not a standard class)"));
            }
            return condition.toString().replaceAll(" ", "").toLowerCase();
          } else if (condition instanceof import_kolmafia6.Stat) {
            return "".concat(condition.toString().toLowerCase(), "class");
          } else if (condition instanceof import_kolmafia6.Phylum) {
            return "monsterphylum ".concat(condition);
          } else if (condition instanceof import_kolmafia6.Element) {
            return "monsterelement ".concat(condition);
          }
          return condition;
        }
      }, {
        key: "if_",
        value: function if_(condition, ifTrue) {
          return new this().if_(condition, ifTrue);
        }
      }, {
        key: "ifNot",
        value: function ifNot(condition, ifTrue) {
          return new this().ifNot(condition, ifTrue);
        }
      }, {
        key: "while_",
        value: function while_(condition, contents) {
          return new this().while_(condition, contents);
        }
      }, {
        key: "externalIf",
        value: function externalIf(condition, ifTrue, ifFalse) {
          return new this().externalIf(condition, ifTrue, ifFalse);
        }
      }, {
        key: "skill",
        value: function skill() {
          var _this3;
          return (_this3 = new this()).skill.apply(_this3, arguments);
        }
      }, {
        key: "trySkill",
        value: function trySkill() {
          var _this4;
          return (_this4 = new this()).trySkill.apply(_this4, arguments);
        }
      }, {
        key: "trySkillRepeat",
        value: function trySkillRepeat() {
          var _this5;
          return (_this5 = new this()).trySkillRepeat.apply(_this5, arguments);
        }
      }, {
        key: "item",
        value: function item15() {
          var _this6;
          return (_this6 = new this()).item.apply(_this6, arguments);
        }
      }, {
        key: "tryItem",
        value: function tryItem() {
          var _this7;
          return (_this7 = new this()).tryItem.apply(_this7, arguments);
        }
      }, {
        key: "attack",
        value: function attack() {
          return new this().attack();
        }
      }, {
        key: "ifHolidayWanderer",
        value: function ifHolidayWanderer(macro) {
          return new this().ifHolidayWanderer(macro);
        }
      }, {
        key: "ifNotHolidayWanderer",
        value: function ifNotHolidayWanderer(macro) {
          return new this().ifNotHolidayWanderer(macro);
        }
      }]);
    }();
    _defineProperty4(Macro, "SAVED_MACRO_PROPERTY", "libram_savedMacro");
    _defineProperty4(Macro, "cachedMacroIds", /* @__PURE__ */ new Map());
    _defineProperty4(Macro, "cachedAutoAttacks", /* @__PURE__ */ new Map());
    StrictMacro = /* @__PURE__ */ function(_Macro2) {
      function StrictMacro2() {
        _classCallCheck5(this, StrictMacro2);
        return _callSuper2(this, StrictMacro2, arguments);
      }
      _inherits2(StrictMacro2, _Macro2);
      return _createClass5(StrictMacro2, [{
        key: "skill",
        value: (
          /**
           * Add one or more skill cast steps to the macro.
           *
           * @param skills Skills to cast.
           * @returns {StrictMacro} This object itself.
           */
          function skill() {
            for (var _len7 = arguments.length, skills4 = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
              skills4[_key7] = arguments[_key7];
            }
            return _superPropGet(StrictMacro2, "skill", this, 3)(skills4);
          }
        )
        /**
         * Create a new macro with one or more skill cast steps.
         *
         * @param skills Skills to cast.
         * @returns {StrictMacro} This object itself.
         */
      }, {
        key: "item",
        value: (
          /**
           * Add one or more item steps to the macro.
           *
           * @param items Items to use. Pass a tuple [item1, item2] to funksling.
           * @returns {StrictMacro} This object itself.
           */
          function item15() {
            for (var _len8 = arguments.length, items = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
              items[_key8] = arguments[_key8];
            }
            return _superPropGet(StrictMacro2, "item", this, 3)(items);
          }
        )
        /**
         * Create a new macro with one or more item steps.
         *
         * @param items Items to use. Pass a tuple [item1, item2] to funksling.
         * @returns {StrictMacro} This object itself.
         */
      }, {
        key: "trySkill",
        value: (
          /**
           * Add one or more skill cast steps to the macro, where each step checks if you have the skill first.
           *
           * @param skills Skills to try casting.
           * @returns {StrictMacro} This object itself.
           */
          function trySkill() {
            for (var _len9 = arguments.length, skills4 = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {
              skills4[_key9] = arguments[_key9];
            }
            return _superPropGet(StrictMacro2, "trySkill", this, 3)(skills4);
          }
        )
        /**
         * Create a new macro with one or more skill cast steps, where each step checks if you have the skill first.
         *
         * @param skills Skills to try casting.
         * @returns {StrictMacro} This object itself.
         */
      }, {
        key: "tryItem",
        value: (
          /**
           * Add one or more item steps to the macro, where each step checks to see if you have the item first.
           *
           * @param items Items to try using. Pass a tuple [item1, item2] to funksling.
           * @returns {StrictMacro} This object itself.
           */
          function tryItem() {
            for (var _len0 = arguments.length, items = new Array(_len0), _key0 = 0; _key0 < _len0; _key0++) {
              items[_key0] = arguments[_key0];
            }
            return _superPropGet(StrictMacro2, "tryItem", this, 3)(items);
          }
        )
        /**
         * Create a new macro with one or more item steps, where each step checks to see if you have the item first.
         *
         * @param items Items to try using. Pass a tuple [item1, item2] to funksling.
         * @returns {StrictMacro} This object itself.
         */
      }, {
        key: "trySkillRepeat",
        value: (
          /**
           * Add one or more skill-cast-and-repeat steps to the macro, where each step checks if you have the skill first.
           *
           * @param skills Skills to try repeatedly casting.
           * @returns {StrictMacro} This object itself.
           */
          function trySkillRepeat() {
            for (var _len1 = arguments.length, skills4 = new Array(_len1), _key1 = 0; _key1 < _len1; _key1++) {
              skills4[_key1] = arguments[_key1];
            }
            return _superPropGet(StrictMacro2, "trySkillRepeat", this, 3)(skills4);
          }
        )
        /**
         * Create a new macro with one or more skill-cast-and-repeat steps, where each step checks if you have the skill first.
         *
         * @param skills Skills to try repeatedly casting.
         * @returns {StrictMacro} This object itself.
         */
      }], [{
        key: "skill",
        value: function skill() {
          var _this8;
          return (_this8 = new this()).skill.apply(_this8, arguments);
        }
      }, {
        key: "item",
        value: function item15() {
          var _this9;
          return (_this9 = new this()).item.apply(_this9, arguments);
        }
      }, {
        key: "trySkill",
        value: function trySkill() {
          var _this0;
          return (_this0 = new this()).trySkill.apply(_this0, arguments);
        }
      }, {
        key: "tryItem",
        value: function tryItem() {
          var _this1;
          return (_this1 = new this()).tryItem.apply(_this1, arguments);
        }
      }, {
        key: "trySkillRepeat",
        value: function trySkillRepeat() {
          var _this10;
          return (_this10 = new this()).trySkillRepeat.apply(_this10, arguments);
        }
      }]);
    }(Macro);
  }
});

// node_modules/libram/dist/maximize.js
function _typeof6(o) {
  "@babel/helpers - typeof";
  return _typeof6 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof6(o);
}
function _slicedToArray4(r, e) {
  return _arrayWithHoles4(r) || _iterableToArrayLimit4(r, e) || _unsupportedIterableToArray6(r, e) || _nonIterableRest4();
}
function _nonIterableRest4() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit4(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles4(r) {
  if (Array.isArray(r)) return r;
}
function _classPrivateFieldInitSpec(e, t, a) {
  _checkPrivateRedeclaration(e, t), t.set(e, a);
}
function _checkPrivateRedeclaration(e, t) {
  if (t.has(e)) throw new TypeError("Cannot initialize the same private elements twice on an object");
}
function _classPrivateFieldGet(s, a) {
  return s.get(_assertClassBrand(s, a));
}
function _classPrivateFieldSet(s, a, r) {
  return s.set(_assertClassBrand(s, a), r), r;
}
function _assertClassBrand(e, t, n) {
  if ("function" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n;
  throw new TypeError("Private element is not present on this object");
}
function _defineProperties6(e, r) {
  for (var t = 0; t < r.length; t++) {
    var o = r[t];
    o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e, _toPropertyKey6(o.key), o);
  }
}
function _createClass6(e, r, t) {
  return r && _defineProperties6(e.prototype, r), t && _defineProperties6(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
}
function _classCallCheck6(a, n) {
  if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _createForOfIteratorHelper5(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t) {
    if (Array.isArray(r) || (t = _unsupportedIterableToArray6(r)) || e && r && "number" == typeof r.length) {
      t && (r = t);
      var _n = 0, F = function F2() {
      };
      return { s: F, n: function n() {
        return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
      }, e: function e2(r2) {
        throw r2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o, a = true, u = false;
  return { s: function s() {
    t = t.call(r);
  }, n: function n() {
    var r2 = t.next();
    return a = r2.done, r2;
  }, e: function e2(r2) {
    u = true, o = r2;
  }, f: function f() {
    try {
      a || null == t.return || t.return();
    } finally {
      if (u) throw o;
    }
  } };
}
function _taggedTemplateLiteral2(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function ownKeys3(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread3(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys3(Object(t), true).forEach(function(r2) {
      _defineProperty5(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys3(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty5(e, r, t) {
  return (r = _toPropertyKey6(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
}
function _toPropertyKey6(t) {
  var i = _toPrimitive6(t, "string");
  return "symbol" == _typeof6(i) ? i : i + "";
}
function _toPrimitive6(t, r) {
  if ("object" != _typeof6(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof6(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _toConsumableArray5(r) {
  return _arrayWithoutHoles5(r) || _iterableToArray5(r) || _unsupportedIterableToArray6(r) || _nonIterableSpread5();
}
function _nonIterableSpread5() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray6(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray6(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray6(r, a) : void 0;
  }
}
function _iterableToArray5(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles5(r) {
  if (Array.isArray(r)) return _arrayLikeToArray6(r);
}
function _arrayLikeToArray6(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function toMaximizerName(_ref) {
  var name = _ref.name, id = _ref.id;
  return name.includes(";") ? "\xB6".concat(id) : name;
}
function mergeMaximizeOptions(defaultOptions, addendums) {
  var _addendums$updateOnFa, _addendums$updateOnCa, _addendums$updateOnLo, _addendums$useOutfitC, _addendums$forceEquip, _addendums$preventEqu, _addendums$bonusEquip, _addendums$onlySlot, _addendums$preventSlo, _addendums$forceUpdat, _addendums$modes;
  return {
    updateOnFamiliarChange: (_addendums$updateOnFa = addendums.updateOnFamiliarChange) !== null && _addendums$updateOnFa !== void 0 ? _addendums$updateOnFa : defaultOptions.updateOnFamiliarChange,
    updateOnCanEquipChanged: (_addendums$updateOnCa = addendums.updateOnCanEquipChanged) !== null && _addendums$updateOnCa !== void 0 ? _addendums$updateOnCa : defaultOptions.updateOnCanEquipChanged,
    updateOnLocationChange: (_addendums$updateOnLo = addendums.updateOnLocationChange) !== null && _addendums$updateOnLo !== void 0 ? _addendums$updateOnLo : defaultOptions.updateOnLocationChange,
    useOutfitCaching: (_addendums$useOutfitC = addendums.useOutfitCaching) !== null && _addendums$useOutfitC !== void 0 ? _addendums$useOutfitC : defaultOptions.useOutfitCaching,
    forceEquip: [].concat(_toConsumableArray5(defaultOptions.forceEquip), _toConsumableArray5((_addendums$forceEquip = addendums.forceEquip) !== null && _addendums$forceEquip !== void 0 ? _addendums$forceEquip : [])),
    preventEquip: [].concat(_toConsumableArray5(defaultOptions.preventEquip), _toConsumableArray5((_addendums$preventEqu = addendums.preventEquip) !== null && _addendums$preventEqu !== void 0 ? _addendums$preventEqu : [])).filter(function(item15) {
      var _addendums$forceEquip2;
      return !defaultOptions.forceEquip.includes(item15) && !((_addendums$forceEquip2 = addendums.forceEquip) !== null && _addendums$forceEquip2 !== void 0 && _addendums$forceEquip2.includes(item15));
    }),
    bonusEquip: new Map([].concat(_toConsumableArray5(defaultOptions.bonusEquip), _toConsumableArray5((_addendums$bonusEquip = addendums.bonusEquip) !== null && _addendums$bonusEquip !== void 0 ? _addendums$bonusEquip : []))),
    onlySlot: (_addendums$onlySlot = addendums.onlySlot) !== null && _addendums$onlySlot !== void 0 ? _addendums$onlySlot : defaultOptions.onlySlot,
    preventSlot: [].concat(_toConsumableArray5(defaultOptions.preventSlot), _toConsumableArray5((_addendums$preventSlo = addendums.preventSlot) !== null && _addendums$preventSlo !== void 0 ? _addendums$preventSlo : [])),
    forceUpdate: (_addendums$forceUpdat = addendums.forceUpdate) !== null && _addendums$forceUpdat !== void 0 ? _addendums$forceUpdat : defaultOptions.forceUpdate,
    modes: _objectSpread3(_objectSpread3({}, defaultOptions.modes), (_addendums$modes = addendums.modes) !== null && _addendums$modes !== void 0 ? _addendums$modes : {})
  };
}
function setDefaultMaximizeOptions(options) {
  Object.assign(defaultMaximizeOptions, options);
}
function getCurrentModes() {
  var modes = {};
  var _iterator = _createForOfIteratorHelper5(modeableCommands), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var key = _step.value;
      if ((0, import_kolmafia7.haveEquipped)(modeableItems[key])) {
        modes[key] = modeableState[key]();
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return modes;
}
function applyModes(modes) {
  var _iterator2 = _createForOfIteratorHelper5(modeableCommands), _step2;
  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
      var command = _step2.value;
      if ((0, import_kolmafia7.haveEquipped)(modeableItems[command]) && modes[command] !== void 0) {
        if (modeableState[command]() !== modes[command]) {
          (0, import_kolmafia7.cliExecute)(command + " " + modes[command]);
        }
      }
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
}
function saveOutfit(name) {
  (0, import_kolmafia7.cliExecute)("outfit save ".concat(name));
}
function canEquipItemCount() {
  var stats = $stats(_templateObject92 || (_templateObject92 = _taggedTemplateLiteral2(["Muscle, Mysticality, Moxie"]))).map(function(stat) {
    return Math.min((0, import_kolmafia7.myBasestat)(stat), 300);
  });
  if (stats.every(function(value, index) {
    return value === cachedStats[index];
  })) {
    return cachedCanEquipItemCount;
  }
  cachedStats = stats;
  cachedCanEquipItemCount = import_kolmafia7.Item.all().filter(function(item15) {
    return (0, import_kolmafia7.canEquip)(item15);
  }).length;
  return cachedCanEquipItemCount;
}
function checkCache(cacheKey, options) {
  var entry = cachedObjectives[cacheKey];
  if (!entry) {
    return null;
  }
  if (options.updateOnFamiliarChange && (0, import_kolmafia7.myFamiliar)() !== entry.familiar) {
    logger_default.warning("Equipment found in maximize cache but familiar is different.");
    return null;
  }
  if (options.updateOnCanEquipChanged && entry.canEquipItemCount !== canEquipItemCount()) {
    logger_default.warning("Equipment found in maximize cache but equippable item list is out of date.");
    return null;
  }
  return entry;
}
function applyCached(entry, options) {
  var outfitName = options.useOutfitCaching ? outfitCache.get(entry) : void 0;
  if (outfitName) {
    if (!(0, import_kolmafia7.isWearingOutfit)(outfitName)) {
      (0, import_kolmafia7.outfit)(outfitName);
    }
    var familiarEquip = entry.equipment.get($slot(_templateObject02 || (_templateObject02 = _taggedTemplateLiteral2(["familiar"]))));
    if (familiarEquip) (0, import_kolmafia7.equip)($slot(_templateObject110 || (_templateObject110 = _taggedTemplateLiteral2(["familiar"]))), familiarEquip);
  } else {
    var _iterator3 = _createForOfIteratorHelper5(entry.equipment), _step3;
    try {
      for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
        var _step3$value = _slicedToArray4(_step3.value, 2), slot = _step3$value[0], item15 = _step3$value[1];
        if ((0, import_kolmafia7.equippedItem)(slot) !== item15 && (0, import_kolmafia7.availableAmount)(item15) > 0) {
          (0, import_kolmafia7.equip)(slot, item15);
        }
      }
    } catch (err) {
      _iterator3.e(err);
    } finally {
      _iterator3.f();
    }
    if (verifyCached(entry) && options.useOutfitCaching) {
      var _outfitName = outfitCache.insert(entry);
      logger_default.info("Saving equipment to outfit ".concat(_outfitName, "."));
      saveOutfit(_outfitName);
    }
  }
  if ((0, import_kolmafia7.equippedAmount)($item(_templateObject102 || (_templateObject102 = _taggedTemplateLiteral2(["Crown of Thrones"])))) > 0 && entry.rider.get($item(_templateObject112 || (_templateObject112 = _taggedTemplateLiteral2(["Crown of Thrones"]))))) {
    (0, import_kolmafia7.enthroneFamiliar)(entry.rider.get($item(_templateObject122 || (_templateObject122 = _taggedTemplateLiteral2(["Crown of Thrones"])))) || $familiar.none);
  }
  if ((0, import_kolmafia7.equippedAmount)($item(_templateObject132 || (_templateObject132 = _taggedTemplateLiteral2(["Buddy Bjorn"])))) > 0 && entry.rider.get($item(_templateObject142 || (_templateObject142 = _taggedTemplateLiteral2(["Buddy Bjorn"]))))) {
    (0, import_kolmafia7.bjornifyFamiliar)(entry.rider.get($item(_templateObject152 || (_templateObject152 = _taggedTemplateLiteral2(["Buddy Bjorn"])))) || $familiar.none);
  }
  applyModes(_objectSpread3(_objectSpread3({}, entry.modes), options.modes));
}
function verifyCached(entry) {
  var warn2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
  var success = true;
  var _iterator4 = _createForOfIteratorHelper5(slotStructure), _step4;
  try {
    for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
      var slotGroup = _step4.value;
      var desiredSlots = slotGroup.map(function(slot) {
        var _entry$equipment$get;
        return [slot, (_entry$equipment$get = entry.equipment.get(slot)) !== null && _entry$equipment$get !== void 0 ? _entry$equipment$get : null];
      }).filter(function(_ref2) {
        var _ref3 = _slicedToArray4(_ref2, 2), item15 = _ref3[1];
        return item15 !== null;
      });
      var desiredSet = desiredSlots.map(function(_ref4) {
        var _ref5 = _slicedToArray4(_ref4, 2), item15 = _ref5[1];
        return item15;
      });
      var equippedSet = desiredSlots.map(function(_ref6) {
        var _ref7 = _slicedToArray4(_ref6, 1), slot = _ref7[0];
        return (0, import_kolmafia7.equippedItem)(slot);
      });
      if (!setEqual(desiredSet, equippedSet)) {
        if (warn2) {
          logger_default.warning("Failed to apply cached ".concat(desiredSet.join(", "), " in ").concat(slotGroup.join(", "), "."));
        }
        success = false;
      }
    }
  } catch (err) {
    _iterator4.e(err);
  } finally {
    _iterator4.f();
  }
  if ((0, import_kolmafia7.equippedAmount)($item(_templateObject232 || (_templateObject232 = _taggedTemplateLiteral2(["Crown of Thrones"])))) > 0 && entry.rider.get($item(_templateObject242 || (_templateObject242 = _taggedTemplateLiteral2(["Crown of Thrones"]))))) {
    if (entry.rider.get($item(_templateObject252 || (_templateObject252 = _taggedTemplateLiteral2(["Crown of Thrones"])))) !== (0, import_kolmafia7.myEnthronedFamiliar)()) {
      if (warn2) {
        logger_default.warning("Failed to apply ".concat(entry.rider.get($item(_templateObject262 || (_templateObject262 = _taggedTemplateLiteral2(["Crown of Thrones"])))), " in ").concat($item(_templateObject272 || (_templateObject272 = _taggedTemplateLiteral2(["Crown of Thrones"]))), "."));
      }
      success = false;
    }
  }
  if ((0, import_kolmafia7.equippedAmount)($item(_templateObject282 || (_templateObject282 = _taggedTemplateLiteral2(["Buddy Bjorn"])))) > 0 && entry.rider.get($item(_templateObject292 || (_templateObject292 = _taggedTemplateLiteral2(["Buddy Bjorn"]))))) {
    if (entry.rider.get($item(_templateObject302 || (_templateObject302 = _taggedTemplateLiteral2(["Buddy Bjorn"])))) !== (0, import_kolmafia7.myBjornedFamiliar)()) {
      if (warn2) {
        logger_default.warning("Failed to apply".concat(entry.rider.get($item(_templateObject312 || (_templateObject312 = _taggedTemplateLiteral2(["Buddy Bjorn"])))), " in ").concat($item(_templateObject322 || (_templateObject322 = _taggedTemplateLiteral2(["Buddy Bjorn"]))), "."));
      }
      success = false;
    }
  }
  return success;
}
function saveCached(cacheKey, options) {
  var equipment = /* @__PURE__ */ new Map();
  var rider = /* @__PURE__ */ new Map();
  var _iterator5 = _createForOfIteratorHelper5(cachedSlots), _step5;
  try {
    for (_iterator5.s(); !(_step5 = _iterator5.n()).done; ) {
      var _slot2 = _step5.value;
      equipment.set(_slot2, (0, import_kolmafia7.equippedItem)(_slot2));
    }
  } catch (err) {
    _iterator5.e(err);
  } finally {
    _iterator5.f();
  }
  if ((0, import_kolmafia7.equippedAmount)($item(_templateObject332 || (_templateObject332 = _taggedTemplateLiteral2(["card sleeve"])))) > 0) {
    equipment.set($slot(_templateObject342 || (_templateObject342 = _taggedTemplateLiteral2(["card-sleeve"]))), (0, import_kolmafia7.equippedItem)($slot(_templateObject352 || (_templateObject352 = _taggedTemplateLiteral2(["card-sleeve"])))));
  }
  if ((0, import_kolmafia7.equippedAmount)($item(_templateObject362 || (_templateObject362 = _taggedTemplateLiteral2(["Crown of Thrones"])))) > 0) {
    rider.set($item(_templateObject372 || (_templateObject372 = _taggedTemplateLiteral2(["Crown of Thrones"]))), (0, import_kolmafia7.myEnthronedFamiliar)());
  }
  if ((0, import_kolmafia7.equippedAmount)($item(_templateObject382 || (_templateObject382 = _taggedTemplateLiteral2(["Buddy Bjorn"])))) > 0) {
    rider.set($item(_templateObject392 || (_templateObject392 = _taggedTemplateLiteral2(["Buddy Bjorn"]))), (0, import_kolmafia7.myBjornedFamiliar)());
  }
  if (options.preventSlot && options.preventSlot.length > 0) {
    var _iterator6 = _createForOfIteratorHelper5(options.preventSlot), _step6;
    try {
      for (_iterator6.s(); !(_step6 = _iterator6.n()).done; ) {
        var slot = _step6.value;
        equipment.delete(slot);
      }
    } catch (err) {
      _iterator6.e(err);
    } finally {
      _iterator6.f();
    }
    if (options.preventSlot.includes($slot(_templateObject402 || (_templateObject402 = _taggedTemplateLiteral2(["buddy-bjorn"]))))) {
      rider.delete($item(_templateObject412 || (_templateObject412 = _taggedTemplateLiteral2(["Buddy Bjorn"]))));
    }
    if (options.preventSlot.includes($slot(_templateObject422 || (_templateObject422 = _taggedTemplateLiteral2(["crown-of-thrones"]))))) {
      rider.delete($item(_templateObject432 || (_templateObject432 = _taggedTemplateLiteral2(["Crown of Thrones"]))));
    }
  }
  if (options.onlySlot && options.onlySlot.length > 0) {
    var _iterator7 = _createForOfIteratorHelper5(import_kolmafia7.Slot.all()), _step7;
    try {
      for (_iterator7.s(); !(_step7 = _iterator7.n()).done; ) {
        var _slot = _step7.value;
        if (!options.onlySlot.includes(_slot)) {
          equipment.delete(_slot);
        }
      }
    } catch (err) {
      _iterator7.e(err);
    } finally {
      _iterator7.f();
    }
    if (!options.onlySlot.includes($slot(_templateObject442 || (_templateObject442 = _taggedTemplateLiteral2(["buddy-bjorn"]))))) {
      rider.delete($item(_templateObject452 || (_templateObject452 = _taggedTemplateLiteral2(["Buddy Bjorn"]))));
    }
    if (!options.onlySlot.includes($slot(_templateObject462 || (_templateObject462 = _taggedTemplateLiteral2(["crown-of-thrones"]))))) {
      rider.delete($item(_templateObject472 || (_templateObject472 = _taggedTemplateLiteral2(["Crown of Thrones"]))));
    }
  }
  var entry = new CacheEntry(equipment, rider, (0, import_kolmafia7.myFamiliar)(), canEquipItemCount(), _objectSpread3(_objectSpread3({}, getCurrentModes()), options.modes));
  cachedObjectives[cacheKey] = entry;
  if (options.useOutfitCaching) {
    var outfitName = outfitCache.insert(entry);
    logger_default.info("Saving equipment to outfit ".concat(outfitName, "."));
    saveOutfit(outfitName);
  }
}
function maximizeCached(objectives) {
  var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var fullOptions = mergeMaximizeOptions(defaultMaximizeOptions, options);
  var forceEquip = fullOptions.forceEquip, preventEquip = fullOptions.preventEquip, bonusEquip = fullOptions.bonusEquip, onlySlot = fullOptions.onlySlot, preventSlot = fullOptions.preventSlot, forceUpdate = fullOptions.forceUpdate;
  var objective = _toConsumableArray5(new Set([].concat(_toConsumableArray5(objectives.sort()), _toConsumableArray5(forceEquip.map(function(item15) {
    return '"equip '.concat(toMaximizerName(item15), '"');
  }).sort()), _toConsumableArray5(preventEquip.map(function(item15) {
    return '-"equip '.concat(toMaximizerName(item15), '"');
  }).sort()), _toConsumableArray5(onlySlot.map(function(slot) {
    return "".concat(slot);
  }).sort()), _toConsumableArray5(preventSlot.map(function(slot) {
    return "-".concat(slot);
  }).sort()), _toConsumableArray5(Array.from(bonusEquip.entries()).filter(function(_ref8) {
    var _ref9 = _slicedToArray4(_ref8, 2), bonus = _ref9[1];
    return bonus !== 0;
  }).map(function(_ref0) {
    var _ref1 = _slicedToArray4(_ref0, 2), item15 = _ref1[0], bonus = _ref1[1];
    return "".concat(Math.round(bonus * 100) / 100, ' "bonus ').concat(toMaximizerName(item15), '"');
  }).sort())))).join(", ");
  var untouchedSlots = cachedSlots.filter(function(slot) {
    return preventSlot.includes(slot) || onlySlot.length > 0 && !onlySlot.includes(slot);
  });
  var cacheKey = [objective].concat(_toConsumableArray5(untouchedSlots.map(function(slot) {
    return "".concat(slot, ":").concat((0, import_kolmafia7.equippedItem)(slot));
  }).sort()), [have($effect(_templateObject482 || (_templateObject482 = _taggedTemplateLiteral2(["Offhand Remarkable"])))), options.updateOnLocationChange && (0, import_kolmafia7.myLocation)()]).join("; ");
  var cacheEntry = checkCache(cacheKey, fullOptions);
  if (cacheEntry && !forceUpdate) {
    if (verifyCached(cacheEntry, false)) return true;
    logger_default.info("Equipment found in maximize cache, equipping...");
    applyCached(cacheEntry, fullOptions);
    if (verifyCached(cacheEntry)) {
      logger_default.info("Equipped cached ".concat(cacheKey));
      return true;
    }
    logger_default.warning("Maximize cache application failed, maximizing...");
  }
  var result = (0, import_kolmafia7.maximize)(objective, false);
  saveCached(cacheKey, fullOptions);
  return result;
}
function mergeOptionalOptions(optionsA, optionsB) {
  for (var _len = arguments.length, keys = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    keys[_key - 2] = arguments[_key];
  }
  return keys.reduce(function(current2, key) {
    return _objectSpread3(_objectSpread3({}, current2), (optionsA[key] || optionsB[key]) === void 0 ? {} : _defineProperty5({}, key, optionsA[key] || optionsB[key]));
  }, {});
}
function clearMaximizerCache() {
  outfitCache.clear();
  for (var member in cachedObjectives) delete cachedObjectives[member];
}
var import_kolmafia7, _templateObject53, _templateObject210, _templateObject310, _templateObject410, _templateObject54, _templateObject62, _templateObject72, _templateObject82, _templateObject92, _templateObject02, _templateObject110, _templateObject102, _templateObject112, _templateObject122, _templateObject132, _templateObject142, _templateObject152, _templateObject162, _templateObject172, _templateObject182, _templateObject192, _templateObject202, _templateObject212, _templateObject222, _templateObject232, _templateObject242, _templateObject252, _templateObject262, _templateObject272, _templateObject282, _templateObject292, _templateObject302, _templateObject312, _templateObject322, _templateObject332, _templateObject342, _templateObject352, _templateObject362, _templateObject372, _templateObject382, _templateObject392, _templateObject402, _templateObject412, _templateObject422, _templateObject432, _templateObject442, _templateObject452, _templateObject462, _templateObject472, _templateObject482, defaultMaximizeOptions, modeableCommands, modeableItems, modeableState, cachedSlots, CacheEntry, _outfitSlots, _useHistory, _maxSize, OutfitLRUCache, cachedObjectives, outfitCache, cachedStats, cachedCanEquipItemCount, slotStructure, _maximizeParameters, _maximizeOptions, Requirement;
var init_maximize = __esm({
  "node_modules/libram/dist/maximize.js": function() {
    import_kolmafia7 = require("kolmafia");
    init_lib();
    init_logger();
    init_template_string();
    init_utils();
    defaultMaximizeOptions = {
      updateOnFamiliarChange: true,
      updateOnCanEquipChanged: true,
      updateOnLocationChange: false,
      useOutfitCaching: true,
      forceEquip: [],
      preventEquip: [],
      bonusEquip: /* @__PURE__ */ new Map(),
      onlySlot: [],
      preventSlot: [],
      forceUpdate: false,
      modes: {}
    };
    modeableCommands = ["backupcamera", "umbrella", "snowsuit", "edpiece", "retrocape", "parka", "jillcandle"];
    modeableItems = {
      backupcamera: $item(_templateObject53 || (_templateObject53 = _taggedTemplateLiteral2(["backup camera"]))),
      umbrella: $item(_templateObject210 || (_templateObject210 = _taggedTemplateLiteral2(["unbreakable umbrella"]))),
      snowsuit: $item(_templateObject310 || (_templateObject310 = _taggedTemplateLiteral2(["Snow Suit"]))),
      edpiece: $item(_templateObject410 || (_templateObject410 = _taggedTemplateLiteral2(["The Crown of Ed the Undying"]))),
      retrocape: $item(_templateObject54 || (_templateObject54 = _taggedTemplateLiteral2(["unwrapped knock-off retro superhero cape"]))),
      parka: $item(_templateObject62 || (_templateObject62 = _taggedTemplateLiteral2(["Jurassic Parka"]))),
      jillcandle: $item(_templateObject72 || (_templateObject72 = _taggedTemplateLiteral2(["LED candle"])))
    };
    modeableState = {
      backupcamera: function() {
        return (0, import_kolmafia7.getProperty)("backupCameraMode");
      },
      umbrella: function() {
        return (0, import_kolmafia7.getProperty)("umbrellaState");
      },
      snowsuit: function() {
        return (0, import_kolmafia7.getProperty)("snowsuit");
      },
      edpiece: function() {
        return (0, import_kolmafia7.getProperty)("edPiece");
      },
      retrocape: function() {
        return (0, import_kolmafia7.getProperty)("retroCapeSuperhero") + " " + (0, import_kolmafia7.getProperty)("retroCapeWashingInstructions");
      },
      parka: function() {
        return (0, import_kolmafia7.getProperty)("parkaMode");
      },
      jillcandle: function() {
        return (0, import_kolmafia7.getProperty)("ledCandleMode");
      }
    };
    cachedSlots = $slots(_templateObject82 || (_templateObject82 = _taggedTemplateLiteral2(["hat, weapon, off-hand, back, shirt, pants, acc1, acc2, acc3, familiar"])));
    CacheEntry = /* @__PURE__ */ _createClass6(function CacheEntry2(equipment, rider, familiar10, canEquipItemCount2, modes) {
      _classCallCheck6(this, CacheEntry2);
      _defineProperty5(this, "equipment", void 0);
      _defineProperty5(this, "rider", void 0);
      _defineProperty5(this, "familiar", void 0);
      _defineProperty5(this, "canEquipItemCount", void 0);
      _defineProperty5(this, "modes", void 0);
      this.equipment = equipment;
      this.rider = rider;
      this.familiar = familiar10;
      this.canEquipItemCount = canEquipItemCount2;
      this.modes = modes;
    });
    _outfitSlots = /* @__PURE__ */ new WeakMap();
    _useHistory = /* @__PURE__ */ new WeakMap();
    _maxSize = /* @__PURE__ */ new WeakMap();
    OutfitLRUCache = /* @__PURE__ */ function() {
      function OutfitLRUCache2(maxSize) {
        _classCallCheck6(this, OutfitLRUCache2);
        _classPrivateFieldInitSpec(this, _outfitSlots, []);
        _classPrivateFieldInitSpec(this, _useHistory, []);
        _classPrivateFieldInitSpec(this, _maxSize, void 0);
        _classPrivateFieldSet(_maxSize, this, maxSize);
      }
      return _createClass6(OutfitLRUCache2, [{
        key: "checkConsistent",
        value: function checkConsistent() {
          if (_classPrivateFieldGet(_useHistory, this).length !== _classPrivateFieldGet(_outfitSlots, this).length || !_toConsumableArray5(_classPrivateFieldGet(_useHistory, this)).sort().every(function(value, index) {
            return value === index;
          })) {
            throw new Error("Outfit cache consistency failed.");
          }
        }
      }, {
        key: "promote",
        value: function promote(index) {
          _classPrivateFieldSet(_useHistory, this, [index].concat(_toConsumableArray5(_classPrivateFieldGet(_useHistory, this).filter(function(i) {
            return i !== index;
          }))));
          this.checkConsistent();
        }
      }, {
        key: "get",
        value: function get4(key) {
          var index = _classPrivateFieldGet(_outfitSlots, this).indexOf(key);
          if (index < 0) return void 0;
          this.promote(index);
          return "".concat(OutfitLRUCache2.OUTFIT_PREFIX, " ").concat(index);
        }
      }, {
        key: "insert",
        value: function insert(key) {
          var lastUseIndex = void 0;
          if (_classPrivateFieldGet(_outfitSlots, this).length >= _classPrivateFieldGet(_maxSize, this)) {
            lastUseIndex = _classPrivateFieldGet(_useHistory, this).pop();
            if (lastUseIndex === void 0) {
              throw new Error("Outfit cache consistency failed.");
            }
            _classPrivateFieldGet(_useHistory, this).splice(0, 0, lastUseIndex);
            _classPrivateFieldGet(_outfitSlots, this)[lastUseIndex] = key;
            this.checkConsistent();
            return "".concat(OutfitLRUCache2.OUTFIT_PREFIX, " ").concat(lastUseIndex);
          } else {
            var index = _classPrivateFieldGet(_outfitSlots, this).push(key) - 1;
            _classPrivateFieldGet(_useHistory, this).splice(0, 0, index);
            this.checkConsistent();
            return "".concat(OutfitLRUCache2.OUTFIT_PREFIX, " ").concat(index);
          }
        }
      }, {
        key: "clear",
        value: function clear() {
          _classPrivateFieldSet(_outfitSlots, this, []);
          _classPrivateFieldSet(_useHistory, this, []);
        }
      }]);
    }();
    _defineProperty5(OutfitLRUCache, "OUTFIT_PREFIX", "Script Outfit");
    cachedObjectives = {};
    outfitCache = new OutfitLRUCache(6);
    cachedStats = [0, 0, 0];
    cachedCanEquipItemCount = 0;
    slotStructure = [$slots(_templateObject162 || (_templateObject162 = _taggedTemplateLiteral2(["hat"]))), $slots(_templateObject172 || (_templateObject172 = _taggedTemplateLiteral2(["back"]))), $slots(_templateObject182 || (_templateObject182 = _taggedTemplateLiteral2(["shirt"]))), $slots(_templateObject192 || (_templateObject192 = _taggedTemplateLiteral2(["weapon, off-hand"]))), $slots(_templateObject202 || (_templateObject202 = _taggedTemplateLiteral2(["pants"]))), $slots(_templateObject212 || (_templateObject212 = _taggedTemplateLiteral2(["acc1, acc2, acc3"]))), $slots(_templateObject222 || (_templateObject222 = _taggedTemplateLiteral2(["familiar"])))];
    _maximizeParameters = /* @__PURE__ */ new WeakMap();
    _maximizeOptions = /* @__PURE__ */ new WeakMap();
    Requirement = /* @__PURE__ */ function() {
      function Requirement2(maximizeParameters, maximizeOptions) {
        _classCallCheck6(this, Requirement2);
        _classPrivateFieldInitSpec(this, _maximizeParameters, void 0);
        _classPrivateFieldInitSpec(this, _maximizeOptions, void 0);
        _classPrivateFieldSet(_maximizeParameters, this, maximizeParameters);
        _classPrivateFieldSet(_maximizeOptions, this, maximizeOptions);
      }
      return _createClass6(Requirement2, [{
        key: "maximizeParameters",
        get: function get4() {
          return _classPrivateFieldGet(_maximizeParameters, this);
        }
      }, {
        key: "maximizeOptions",
        get: function get4() {
          return _classPrivateFieldGet(_maximizeOptions, this);
        }
        /**
         * Merges two requirements, concanating relevant arrays. Typically used in static form.
         *
         * @param other Requirement to merge with.
         * @returns A new merged Requirement
         */
      }, {
        key: "merge",
        value: function merge(other) {
          var _optionsA$forceEquip, _other$maximizeOption, _optionsA$preventEqui, _other$maximizeOption3, _optionsA$bonusEquip$, _optionsA$bonusEquip, _optionsB$bonusEquip$, _optionsB$bonusEquip, _optionsA$onlySlot, _optionsB$onlySlot, _optionsA$preventSlot, _optionsB$preventSlot;
          var optionsA = this.maximizeOptions;
          var optionsB = other.maximizeOptions;
          var optionalBooleans = mergeOptionalOptions(optionsA, optionsB, "updateOnFamiliarChange", "updateOnCanEquipChanged", "updateOnLocationChange", "forceUpdate");
          return new Requirement2([].concat(_toConsumableArray5(this.maximizeParameters), _toConsumableArray5(other.maximizeParameters)), _objectSpread3(_objectSpread3({}, optionalBooleans), {}, {
            forceEquip: [].concat(_toConsumableArray5((_optionsA$forceEquip = optionsA.forceEquip) !== null && _optionsA$forceEquip !== void 0 ? _optionsA$forceEquip : []), _toConsumableArray5((_other$maximizeOption = other.maximizeOptions.forceEquip) !== null && _other$maximizeOption !== void 0 ? _other$maximizeOption : [])).filter(function(x) {
              var _other$maximizeOption2;
              return !((_other$maximizeOption2 = other.maximizeOptions.preventEquip) !== null && _other$maximizeOption2 !== void 0 && _other$maximizeOption2.includes(x));
            }),
            preventEquip: [].concat(_toConsumableArray5((_optionsA$preventEqui = optionsA.preventEquip) !== null && _optionsA$preventEqui !== void 0 ? _optionsA$preventEqui : []), _toConsumableArray5((_other$maximizeOption3 = other.maximizeOptions.preventEquip) !== null && _other$maximizeOption3 !== void 0 ? _other$maximizeOption3 : [])).filter(function(x) {
              var _other$maximizeOption4;
              return !((_other$maximizeOption4 = other.maximizeOptions.forceEquip) !== null && _other$maximizeOption4 !== void 0 && _other$maximizeOption4.includes(x));
            }),
            bonusEquip: new Map([].concat(_toConsumableArray5((_optionsA$bonusEquip$ = (_optionsA$bonusEquip = optionsA.bonusEquip) === null || _optionsA$bonusEquip === void 0 ? void 0 : _optionsA$bonusEquip.entries()) !== null && _optionsA$bonusEquip$ !== void 0 ? _optionsA$bonusEquip$ : []), _toConsumableArray5((_optionsB$bonusEquip$ = (_optionsB$bonusEquip = optionsB.bonusEquip) === null || _optionsB$bonusEquip === void 0 ? void 0 : _optionsB$bonusEquip.entries()) !== null && _optionsB$bonusEquip$ !== void 0 ? _optionsB$bonusEquip$ : []))),
            onlySlot: [].concat(_toConsumableArray5((_optionsA$onlySlot = optionsA.onlySlot) !== null && _optionsA$onlySlot !== void 0 ? _optionsA$onlySlot : []), _toConsumableArray5((_optionsB$onlySlot = optionsB.onlySlot) !== null && _optionsB$onlySlot !== void 0 ? _optionsB$onlySlot : [])),
            preventSlot: [].concat(_toConsumableArray5((_optionsA$preventSlot = optionsA.preventSlot) !== null && _optionsA$preventSlot !== void 0 ? _optionsA$preventSlot : []), _toConsumableArray5((_optionsB$preventSlot = optionsB.preventSlot) !== null && _optionsB$preventSlot !== void 0 ? _optionsB$preventSlot : []))
          }));
        }
        /**
         * Merges a set of requirements together, starting with an empty requirement.
         *
         * @param allRequirements Requirements to merge
         * @returns Merged requirements
         */
      }, {
        key: "maximize",
        value: (
          /**
           * Runs maximizeCached, using the maximizeParameters and maximizeOptions contained by this requirement.
           *
           * @returns Whether the maximize call succeeded.
           */
          function maximize2() {
            return maximizeCached(this.maximizeParameters, this.maximizeOptions);
          }
        )
        /**
         * Merges requirements, and then runs maximizeCached on the combined requirement.
         *
         * @param requirements Requirements to maximize on
         */
      }], [{
        key: "merge",
        value: function merge(allRequirements) {
          return allRequirements.reduce(function(x, y) {
            return x.merge(y);
          }, new Requirement2([], {}));
        }
      }, {
        key: "maximize",
        value: function maximize2() {
          for (var _len2 = arguments.length, requirements = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            requirements[_key2] = arguments[_key2];
          }
          Requirement2.merge(requirements).maximize();
        }
      }]);
    }();
  }
});

// node_modules/libram/dist/actions/ActionSource.js
function _typeof7(o) {
  "@babel/helpers - typeof";
  return _typeof7 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof7(o);
}
function _classCallCheck7(a, n) {
  if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties7(e, r) {
  for (var t = 0; t < r.length; t++) {
    var o = r[t];
    o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e, _toPropertyKey7(o.key), o);
  }
}
function _createClass7(e, r, t) {
  return r && _defineProperties7(e.prototype, r), t && _defineProperties7(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
}
function _toConsumableArray6(r) {
  return _arrayWithoutHoles6(r) || _iterableToArray6(r) || _unsupportedIterableToArray7(r) || _nonIterableSpread6();
}
function _nonIterableSpread6() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray7(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray7(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray7(r, a) : void 0;
  }
}
function _iterableToArray6(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles6(r) {
  if (Array.isArray(r)) return _arrayLikeToArray7(r);
}
function _arrayLikeToArray7(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function ownKeys4(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread4(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys4(Object(t), true).forEach(function(r2) {
      _defineProperty6(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys4(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty6(e, r, t) {
  return (r = _toPropertyKey7(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
}
function _toPropertyKey7(t) {
  var i = _toPrimitive7(t, "string");
  return "symbol" == _typeof7(i) ? i : i + "";
}
function _toPrimitive7(t, r) {
  if ("object" != _typeof7(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof7(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function mergeConstraints() {
  for (var _len = arguments.length, allConstraints = new Array(_len), _key = 0; _key < _len; _key++) {
    allConstraints[_key] = arguments[_key];
  }
  var familiars = allConstraints.map(function(constraints) {
    return constraints.familiar;
  }).filter(Boolean);
  if (familiars.length > 1) {
    return null;
  }
  var familiar10 = familiars.find(function(familiar11) {
    return familiar11;
  });
  return _objectSpread4(_objectSpread4({
    equipmentRequirements: function() {
      return Requirement.merge(_toConsumableArray6(allConstraints.map(function(constraints) {
        var _constraints$equipmen, _constraints$equipmen2;
        return (_constraints$equipmen = (_constraints$equipmen2 = constraints.equipmentRequirements) === null || _constraints$equipmen2 === void 0 ? void 0 : _constraints$equipmen2.call(constraints)) !== null && _constraints$equipmen !== void 0 ? _constraints$equipmen : new Requirement([], {});
      })));
    },
    preparation: function() {
      var success = true;
      for (var _i = 0, _allConstraints = allConstraints; _i < _allConstraints.length; _i++) {
        var constraints = _allConstraints[_i];
        success = success && (!constraints.preparation || constraints.preparation());
      }
      return success;
    }
  }, familiar10 ? {
    familiar: familiar10
  } : {}), {}, {
    cost: function() {
      return sum(allConstraints, function(constraints) {
        var _constraints$cost, _constraints$cost2;
        return (_constraints$cost = (_constraints$cost2 = constraints.cost) === null || _constraints$cost2 === void 0 ? void 0 : _constraints$cost2.call(constraints)) !== null && _constraints$cost !== void 0 ? _constraints$cost : 0;
      });
    }
  });
}
function filterAction(action, constraints) {
  var _constraints$requireF, _constraints$requireU, _constraints$noFamili, _constraints$noRequir, _constraints$noPrepar, _constraints$maximumC, _constraints$maximumC2;
  return action.available() && (constraints.allowedAction === void 0 || constraints.allowedAction(action)) && !((_constraints$requireF = constraints.requireFamiliar) !== null && _constraints$requireF !== void 0 && _constraints$requireF.call(constraints) && !action.constraints.familiar) && !((_constraints$requireU = constraints.requireUnlimited) !== null && _constraints$requireU !== void 0 && _constraints$requireU.call(constraints) && !action.isUnlimited()) && !((_constraints$noFamili = constraints.noFamiliar) !== null && _constraints$noFamili !== void 0 && _constraints$noFamili.call(constraints) && action.constraints.familiar) && !((_constraints$noRequir = constraints.noRequirements) !== null && _constraints$noRequir !== void 0 && _constraints$noRequir.call(constraints) && action.constraints.equipmentRequirements) && !((_constraints$noPrepar = constraints.noPreparation) !== null && _constraints$noPrepar !== void 0 && _constraints$noPrepar.call(constraints) && action.constraints.preparation) && action.cost() <= ((_constraints$maximumC = (_constraints$maximumC2 = constraints.maximumCost) === null || _constraints$maximumC2 === void 0 ? void 0 : _constraints$maximumC2.call(constraints)) !== null && _constraints$maximumC !== void 0 ? _constraints$maximumC : 0);
}
function findActionSource(actions) {
  var constraints = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var validActions = actions.filter(function(actions2) {
    return filterAction(actions2, constraints);
  });
  if (validActions.length < 1) return null;
  return validActions.reduce(function(a, b) {
    return a.cost() <= b.cost() ? a : b;
  });
}
function actionSourcesAvailable(actions) {
  var constraints = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  return sum(actions.filter(function(action) {
    return filterAction(action, constraints !== null && constraints !== void 0 ? constraints : {});
  }), function(action) {
    return action.potential();
  });
}
var import_kolmafia8, ActionSource;
var init_ActionSource = __esm({
  "node_modules/libram/dist/actions/ActionSource.js": function() {
    import_kolmafia8 = require("kolmafia");
    init_combat();
    init_maximize();
    init_utils();
    init_lib();
    ActionSource = /* @__PURE__ */ function() {
      function ActionSource2(source, potential, macro) {
        var constraints = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
        _classCallCheck7(this, ActionSource2);
        _defineProperty6(this, "source", void 0);
        _defineProperty6(this, "potential", void 0);
        _defineProperty6(this, "macro", void 0);
        _defineProperty6(this, "constraints", void 0);
        this.source = source;
        this.potential = potential;
        this.macro = macro;
        this.constraints = constraints;
      }
      return _createClass7(ActionSource2, [{
        key: "name",
        value: function name() {
          return this.source.toString();
        }
        /**
         * @returns Whether the action is available.
         */
      }, {
        key: "available",
        value: function available7() {
          return this.potential() > 0;
        }
        /**
         * @returns Cost in meat per usage of the action.
         */
      }, {
        key: "cost",
        value: function cost() {
          return this.constraints.cost ? this.constraints.cost() : 0;
        }
        /**
         * @returns Whether the action costs 0 meat to use.
         */
      }, {
        key: "isFree",
        value: function isFree() {
          return !this.cost || this.cost() === 0;
        }
        /**
         * @returns Whether unlimited uses of the action are available.
         */
      }, {
        key: "isUnlimited",
        value: function isUnlimited() {
          return this.potential() === Infinity;
        }
        /**
         * Create a compound action source with merged constraints.
         *
         * @param others Other actions to have available.
         * @returns Merged constraints, or null if they are inconsistent.
         */
      }, {
        key: "merge",
        value: function merge() {
          for (var _len2 = arguments.length, others = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            others[_key2] = arguments[_key2];
          }
          var actions = [this].concat(others);
          var constraints = mergeConstraints.apply(void 0, _toConsumableArray6(actions.map(function(action) {
            return action.constraints;
          })));
          if (constraints === null) {
            return null;
          }
          return new ActionSource2(actions.flatMap(function(action) {
            return action.source;
          }), function() {
            return sum(actions, function(action) {
              return action.potential();
            });
          }, Macro.step.apply(Macro, _toConsumableArray6(actions.map(function(action) {
            return action.macro;
          }))), constraints);
        }
        /**
         * Perform all preparation necessary to make this action available.
         *
         * @param otherRequirements Any other equipment requirements.
         * @returns Whether preparation succeeded.
         */
      }, {
        key: "prepare",
        value: function prepare(otherRequirements) {
          var _this$constraints$fam, _this$constraints;
          if ((_this$constraints$fam = (_this$constraints = this.constraints).familiar) !== null && _this$constraints$fam !== void 0 && _this$constraints$fam.call(_this$constraints)) {
            if (!(0, import_kolmafia8.useFamiliar)(this.constraints.familiar())) return false;
          }
          if (this.constraints.equipmentRequirements) {
            var requirement = otherRequirements ? otherRequirements.merge(this.constraints.equipmentRequirements()) : this.constraints.equipmentRequirements();
            if (!requirement.maximize()) return false;
          }
          if (this.constraints.preparation) return this.constraints.preparation();
          return true;
        }
        /**
         * Perform all preparation necessary to make this action available.
         * Throws an error if preparation fails.
         *
         * @param otherRequirements Any other equipment requirements.
         */
      }, {
        key: "ensure",
        value: function ensure(otherRequirements) {
          if (!this.prepare(otherRequirements)) {
            throw new Error("Failed to prepare action ".concat(this.name(), "."));
          }
        }
      }]);
    }();
    _defineProperty6(ActionSource, "defaultPriceFunction", function(item15) {
      return getAcquirePrice(item15) > 0 ? getAcquirePrice(item15) : Infinity;
    });
  }
});

// node_modules/libram/dist/resources/2017/AsdonMartin.js
var AsdonMartin_exports = {};
__export(AsdonMartin_exports, {
  Driving: function() {
    return Driving;
  },
  drive: function() {
    return drive;
  },
  fillTo: function() {
    return fillTo;
  },
  fillWithInventoryTo: function() {
    return fillWithInventoryTo;
  },
  have: function() {
    return have2;
  },
  insertFuel: function() {
    return insertFuel;
  },
  installed: function() {
    return installed;
  },
  isFuelItem: function() {
    return isFuelItem;
  }
});
function _slicedToArray5(r, e) {
  return _arrayWithHoles5(r) || _iterableToArrayLimit5(r, e) || _unsupportedIterableToArray8(r, e) || _nonIterableRest5();
}
function _nonIterableRest5() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray8(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray8(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray8(r, a) : void 0;
  }
}
function _arrayLikeToArray8(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _iterableToArrayLimit5(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles5(r) {
  if (Array.isArray(r)) return r;
}
function _taggedTemplateLiteral3(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function installed() {
  return (0, import_kolmafia9.getWorkshed)() === $item(_templateObject55 || (_templateObject55 = _taggedTemplateLiteral3(["Asdon Martin keyfob (on ring)"])));
}
function have2() {
  return installed() || have($item(_templateObject211 || (_templateObject211 = _taggedTemplateLiteral3(["Asdon Martin keyfob (on ring)"]))));
}
function priceTooOld(item15) {
  return (0, import_kolmafia9.historicalPrice)(item15) === 0 || (0, import_kolmafia9.historicalAge)(item15) >= 7;
}
function historicalPriceOrMax(item15) {
  var historical = (0, import_kolmafia9.historicalPrice)(item15);
  return historical < 0 ? 999999999 : historical;
}
function mallPriceOrMax(item15) {
  var mall = (0, import_kolmafia9.mallPrice)(item15);
  return mall < 0 ? 999999999 : mall;
}
function price(item15, priceAge) {
  switch (priceAge) {
    case PriceAge.HISTORICAL: {
      var historical = historicalPriceOrMax(item15);
      return historical === 0 ? mallPriceOrMax(item15) : historical;
    }
    case PriceAge.RECENT:
      return priceTooOld(item15) ? mallPriceOrMax(item15) : historicalPriceOrMax(item15);
    case PriceAge.TODAY:
      return mallPriceOrMax(item15);
  }
}
function inventoryItems() {
  return import_kolmafia9.Item.all().filter(isFuelItem).filter(function(item15) {
    return have(item15) && [100, (0, import_kolmafia9.autosellPrice)(item15)].includes(price(item15, PriceAge.RECENT));
  });
}
function calculateFuelUnitCost(it) {
  var priceAge = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : PriceAge.RECENT;
  var units = getAverageAdventures(it);
  return price(it, priceAge) / units;
}
function isFuelItem(it) {
  return !(0, import_kolmafia9.isNpcItem)(it) && it.fullness + it.inebriety > 0 && getAverageAdventures(it) > 0 && it.tradeable && it.discardable && !fuelSkiplist.includes(it);
}
function getBestFuels() {
  var allFuel = import_kolmafia9.Item.all().filter(isFuelItem);
  if (allFuel.filter(function(item15) {
    return (0, import_kolmafia9.historicalPrice)(item15) === 0;
  }).length > 100) {
    (0, import_kolmafia9.mallPrices)("food");
    (0, import_kolmafia9.mallPrices)("booze");
  }
  var keyHistorical = function(item15) {
    return calculateFuelUnitCost(item15, PriceAge.HISTORICAL);
  };
  allFuel.sort(function(x, y) {
    return keyHistorical(x) - keyHistorical(y);
  });
  var bestUnitCost = keyHistorical(allFuel[0]);
  var firstBadIndex = allFuel.findIndex(function(item15) {
    return keyHistorical(item15) > 5 * bestUnitCost;
  });
  var potentialFuel = firstBadIndex > 0 ? allFuel.slice(0, firstBadIndex) : allFuel;
  if (potentialFuel.filter(function(item15) {
    return priceTooOld(item15);
  }).length > 100) {
    (0, import_kolmafia9.mallPrices)("food");
    (0, import_kolmafia9.mallPrices)("booze");
  }
  var key1 = function(item15) {
    return -getAverageAdventures(item15);
  };
  var key2 = function(item15) {
    return calculateFuelUnitCost(item15, PriceAge.RECENT);
  };
  potentialFuel.sort(function(x, y) {
    return key1(x) - key1(y);
  });
  potentialFuel.sort(function(x, y) {
    return key2(x) - key2(y);
  });
  var candidates = potentialFuel.slice(0, 10);
  var key3 = function(item15) {
    return calculateFuelUnitCost(item15, PriceAge.TODAY);
  };
  candidates.sort(function(x, y) {
    return key3(x) - key3(y);
  });
  if (calculateFuelUnitCost(candidates[0], PriceAge.TODAY) > 100) {
    throw new Error("Could not identify any fuel with efficiency better than 100 meat per fuel. This means something went wrong.");
  }
  return candidates;
}
function insertFuel(it) {
  var quantity = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  var result = (0, import_kolmafia9.visitUrl)("campground.php?action=fuelconvertor&pwd&qty=".concat(quantity, "&iid=").concat(it.id, "&go=Convert%21"));
  return result.includes("The display updates with a");
}
function fillTo(targetUnits) {
  if (!installed()) return false;
  while ((0, import_kolmafia9.getFuel)() < targetUnits) {
    var _ref = (0, import_kolmafia9.canInteract)() ? getBestFuels() : [$item(_templateObject411 || (_templateObject411 = _taggedTemplateLiteral3(["loaf of soda bread"]))), void 0], _ref2 = _slicedToArray5(_ref, 2), bestFuel = _ref2[0], secondBest = _ref2[1];
    var count = Math.ceil(targetUnits / getAverageAdventures(bestFuel));
    var ceiling = void 0;
    if (secondBest) {
      var efficiencyOfSecondBest = (0, import_kolmafia9.mallPrice)(secondBest) / getAverageAdventures(secondBest);
      ceiling = Math.ceil(efficiencyOfSecondBest * getAverageAdventures(bestFuel));
    }
    if (!(0, import_kolmafia9.canInteract)()) {
      if ((0, import_kolmafia9.npcPrice)($item(_templateObject56 || (_templateObject56 = _taggedTemplateLiteral3(["wad of dough"])))) === 0 && (0, import_kolmafia9.npcPrice)($item(_templateObject63 || (_templateObject63 = _taggedTemplateLiteral3(["all-purpose flower"])))) > 0) {
        var maxTries = Math.ceil(count / 35);
        for (var i = 0; i < maxTries && (0, import_kolmafia9.availableAmount)($item(_templateObject73 || (_templateObject73 = _taggedTemplateLiteral3(["wad of dough"])))) < count; i++) {
          (0, import_kolmafia9.buy)($item(_templateObject83 || (_templateObject83 = _taggedTemplateLiteral3(["all-purpose flower"]))));
          (0, import_kolmafia9.use)($item(_templateObject93 || (_templateObject93 = _taggedTemplateLiteral3(["all-purpose flower"]))));
        }
        (0, import_kolmafia9.retrieveItem)(count, bestFuel);
      } else (0, import_kolmafia9.retrieveItem)(count, bestFuel);
    } else if (ceiling) (0, import_kolmafia9.buy)(count, bestFuel, ceiling);
    else (0, import_kolmafia9.buy)(count, bestFuel);
    if (!insertFuel(bestFuel, Math.min((0, import_kolmafia9.itemAmount)(bestFuel), count))) {
      throw new Error("Failed to fuel Asdon Martin.");
    }
  }
  return (0, import_kolmafia9.getFuel)() >= targetUnits;
}
function fillWithBestInventoryItem(targetUnits) {
  var options = inventoryItems().sort(function(a, b) {
    return getAverageAdventures(b) / (0, import_kolmafia9.autosellPrice)(b) - getAverageAdventures(a) / (0, import_kolmafia9.autosellPrice)(a);
  });
  if (options.length === 0) return false;
  var best = options[0];
  if ((0, import_kolmafia9.autosellPrice)(best) / getAverageAdventures(best) > 100) return false;
  var amountToUse = clamp(Math.ceil(targetUnits / getAverageAdventures(best)), 0, (0, import_kolmafia9.itemAmount)(best));
  return insertFuel(best, amountToUse);
}
function fillWithInventoryTo(targetUnits) {
  if (!installed()) return false;
  var continueFuelingFromInventory = true;
  while ((0, import_kolmafia9.getFuel)() < targetUnits && continueFuelingFromInventory) {
    continueFuelingFromInventory && (continueFuelingFromInventory = fillWithBestInventoryItem(targetUnits));
  }
  return fillTo(targetUnits);
}
function drive(style) {
  var turns2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  var preferInventory = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
  if (!Object.values(Driving).includes(style)) return false;
  if (!installed()) return false;
  if ((0, import_kolmafia9.haveEffect)(style) >= turns2) return true;
  var fuelNeeded = 37 * Math.ceil((turns2 - (0, import_kolmafia9.haveEffect)(style)) / 30);
  (preferInventory ? fillWithInventoryTo : fillTo)(fuelNeeded);
  while ((0, import_kolmafia9.getFuel)() >= 37 && (0, import_kolmafia9.haveEffect)(style) < turns2) {
    (0, import_kolmafia9.cliExecute)("asdonmartin drive ".concat(style.name.replace("Driving ", "")));
  }
  return (0, import_kolmafia9.haveEffect)(style) >= turns2;
}
var import_kolmafia9, _templateObject55, _templateObject211, _templateObject311, _templateObject411, _templateObject56, _templateObject63, _templateObject73, _templateObject83, _templateObject93, _templateObject03, _templateObject111, _templateObject103, _templateObject113, _templateObject123, _templateObject133, _templateObject143, _templateObject153, _templateObject163, PriceAge, fuelSkiplist, Driving;
var init_AsdonMartin = __esm({
  "node_modules/libram/dist/resources/2017/AsdonMartin.js": function() {
    import_kolmafia9 = require("kolmafia");
    init_lib();
    init_template_string();
    init_utils();
    (function(PriceAge2) {
      PriceAge2[PriceAge2["HISTORICAL"] = 0] = "HISTORICAL";
      PriceAge2[PriceAge2["RECENT"] = 1] = "RECENT";
      PriceAge2[PriceAge2["TODAY"] = 2] = "TODAY";
    })(PriceAge || (PriceAge = {}));
    fuelSkiplist = $items(_templateObject311 || (_templateObject311 = _taggedTemplateLiteral3(['cup of "tea", thermos of "whiskey", Lucky Lindy, Bee\'s Knees, Sockdollager, Ish Kabibble, Hot Socks, Phonus Balonus, Flivver, Sloppy Jalopy, glass of "milk"'])));
    Driving = {
      Obnoxiously: $effect(_templateObject03 || (_templateObject03 = _taggedTemplateLiteral3(["Driving Obnoxiously"]))),
      Stealthily: $effect(_templateObject111 || (_templateObject111 = _taggedTemplateLiteral3(["Driving Stealthily"]))),
      Wastefully: $effect(_templateObject103 || (_templateObject103 = _taggedTemplateLiteral3(["Driving Wastefully"]))),
      Safely: $effect(_templateObject113 || (_templateObject113 = _taggedTemplateLiteral3(["Driving Safely"]))),
      Recklessly: $effect(_templateObject123 || (_templateObject123 = _taggedTemplateLiteral3(["Driving Recklessly"]))),
      Intimidatingly: $effect(_templateObject133 || (_templateObject133 = _taggedTemplateLiteral3(["Driving Intimidatingly"]))),
      Quickly: $effect(_templateObject143 || (_templateObject143 = _taggedTemplateLiteral3(["Driving Quickly"]))),
      Observantly: $effect(_templateObject153 || (_templateObject153 = _taggedTemplateLiteral3(["Driving Observantly"]))),
      Waterproofly: $effect(_templateObject163 || (_templateObject163 = _taggedTemplateLiteral3(["Driving Waterproofly"])))
    };
  }
});

// node_modules/libram/dist/actions/Banish.js
function _toConsumableArray7(r) {
  return _arrayWithoutHoles7(r) || _iterableToArray7(r) || _unsupportedIterableToArray9(r) || _nonIterableSpread7();
}
function _nonIterableSpread7() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray9(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray9(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray9(r, a) : void 0;
  }
}
function _iterableToArray7(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles7(r) {
  if (Array.isArray(r)) return _arrayLikeToArray9(r);
}
function _arrayLikeToArray9(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _taggedTemplateLiteral4(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function tryFindBanish(constraints) {
  var source = findActionSource(banishSources, constraints);
  if (source && asdonMartinSource.available()) {
    source = asdonMartinSource.merge(source);
  }
  return source;
}
function ensureBanish(constraints) {
  var source = tryFindBanish(constraints);
  if (!source) {
    throw new Error("Failed to ensure Banish source");
  }
  return source;
}
var import_kolmafia10, _templateObject57, _templateObject213, _templateObject313, _templateObject413, _templateObject58, _templateObject64, _templateObject74, _templateObject84, _templateObject94, _templateObject04, _templateObject114, _templateObject104, _templateObject115, _templateObject124, _templateObject134, _templateObject144, _templateObject154, _templateObject164, _templateObject173, _templateObject183, _templateObject193, _templateObject203, _templateObject214, _templateObject223, _templateObject233, _templateObject243, _templateObject253, _templateObject263, _templateObject273, _templateObject283, _templateObject293, _templateObject303, _templateObject314, _templateObject323, _templateObject333, _templateObject343, _templateObject353, _templateObject363, _templateObject373, _templateObject383, _templateObject393, _templateObject403, _templateObject414, _templateObject423, scrapbookChargesLastUpdated, asdonMartinSource, banishSources;
var init_Banish = __esm({
  "node_modules/libram/dist/actions/Banish.js": function() {
    import_kolmafia10 = require("kolmafia");
    init_combat();
    init_lib();
    init_maximize();
    init_property();
    init_AsdonMartin();
    init_template_string();
    init_ActionSource();
    scrapbookChargesLastUpdated = get("_lastCombatStarted");
    asdonMartinSource = new ActionSource($skill(_templateObject57 || (_templateObject57 = _taggedTemplateLiteral4(["Asdon Martin: Spring-Loaded Front Bumper"]))), function() {
      if (!installed()) return 0;
      var banishes = get("banishedMonsters").split(":");
      var bumperIndex = banishes.map(function(string) {
        return string.toLowerCase();
      }).indexOf("spring-loaded front bumper");
      if (bumperIndex === -1) return 1;
      return (0, import_kolmafia10.myTurncount)() - parseInt(banishes[bumperIndex + 1]) > 30 ? 1 : 0;
    }, Macro.trySkill($skill(_templateObject213 || (_templateObject213 = _taggedTemplateLiteral4(["Asdon Martin: Spring-Loaded Front Bumper"])))), {
      preparation: function() {
        return fillTo(50);
      }
    });
    banishSources = [
      // Free limited sources
      new ActionSource($skill(_templateObject313 || (_templateObject313 = _taggedTemplateLiteral4(["Snokebomb"]))), function() {
        return have($skill(_templateObject413 || (_templateObject413 = _taggedTemplateLiteral4(["Snokebomb"])))) ? 3 - get("_snokebombUsed") : 0;
      }, Macro.skill($skill(_templateObject58 || (_templateObject58 = _taggedTemplateLiteral4(["Snokebomb"])))), {
        preparation: function() {
          return (0, import_kolmafia10.restoreMp)(50);
        }
      }),
      new ActionSource($skill(_templateObject64 || (_templateObject64 = _taggedTemplateLiteral4(["Emotionally Chipped"]))), function() {
        return have($skill(_templateObject74 || (_templateObject74 = _taggedTemplateLiteral4(["Emotionally Chipped"])))) ? 3 - get("_feelHatredUsed") : 0;
      }, Macro.skill($skill(_templateObject84 || (_templateObject84 = _taggedTemplateLiteral4(["Feel Hatred"]))))),
      new ActionSource($item(_templateObject94 || (_templateObject94 = _taggedTemplateLiteral4(["Kremlin's Greatest Briefcase"]))), function() {
        return have($item(_templateObject04 || (_templateObject04 = _taggedTemplateLiteral4(["Kremlin's Greatest Briefcase"])))) ? 3 - get("_kgbTranquilizerDartUses") : 0;
      }, Macro.skill($skill(_templateObject114 || (_templateObject114 = _taggedTemplateLiteral4(["KGB tranquilizer dart"])))), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject104 || (_templateObject104 = _taggedTemplateLiteral4(["Kremlin's Greatest Briefcase"])))
          });
        }
      }),
      new ActionSource($item(_templateObject115 || (_templateObject115 = _taggedTemplateLiteral4(["latte lovers member's mug"]))), function() {
        return have($item(_templateObject124 || (_templateObject124 = _taggedTemplateLiteral4(["latte lovers member's mug"])))) && !get("_latteBanishUsed") ? 1 : 0;
      }, Macro.skill($skill(_templateObject134 || (_templateObject134 = _taggedTemplateLiteral4(["Throw Latte on Opponent"])))), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject144 || (_templateObject144 = _taggedTemplateLiteral4(["latte lovers member's mug"])))
          });
        }
      }),
      new ActionSource($item(_templateObject154 || (_templateObject154 = _taggedTemplateLiteral4(["Lil' Doctor\u2122 bag"]))), function() {
        return have($item(_templateObject164 || (_templateObject164 = _taggedTemplateLiteral4(["Lil' Doctor\u2122 bag"])))) ? 3 - get("_reflexHammerUsed") : 0;
      }, Macro.skill($skill(_templateObject173 || (_templateObject173 = _taggedTemplateLiteral4(["Reflex Hammer"])))), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject183 || (_templateObject183 = _taggedTemplateLiteral4(["Lil' Doctor\u2122 bag"])))
          });
        }
      }),
      new ActionSource($item(_templateObject193 || (_templateObject193 = _taggedTemplateLiteral4(["mafia middle finger ring"]))), function() {
        return have($item(_templateObject203 || (_templateObject203 = _taggedTemplateLiteral4(["mafia middle finger ring"])))) && (0, import_kolmafia10.canEquip)($item(_templateObject214 || (_templateObject214 = _taggedTemplateLiteral4(["mafia middle finger ring"])))) && !get("_mafiaMiddleFingerRingUsed") ? 1 : 0;
      }, Macro.skill($skill(_templateObject223 || (_templateObject223 = _taggedTemplateLiteral4(["Show them your ring"])))), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject233 || (_templateObject233 = _taggedTemplateLiteral4(["mafia middle finger ring"])))
          });
        }
      }),
      new ActionSource($item(_templateObject243 || (_templateObject243 = _taggedTemplateLiteral4(["V for Vivala mask"]))), function() {
        return have($item(_templateObject253 || (_templateObject253 = _taggedTemplateLiteral4(["V for Vivala mask"])))) && !get("_vmaskBanisherUsed") ? 1 : 0;
      }, Macro.skill($skill(_templateObject263 || (_templateObject263 = _taggedTemplateLiteral4(["Creepy Grin"])))), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject273 || (_templateObject273 = _taggedTemplateLiteral4(["V for Vivala mask"])))
          });
        },
        preparation: function() {
          return (0, import_kolmafia10.restoreMp)(30);
        }
      }),
      new ActionSource($item(_templateObject283 || (_templateObject283 = _taggedTemplateLiteral4(["stinky cheese eye"]))), function() {
        return getFoldGroup($item(_templateObject293 || (_templateObject293 = _taggedTemplateLiteral4(["stinky cheese eye"])))).some(function(item15) {
          return have(item15);
        }) && !get("_stinkyCheeseBanisherUsed") ? 1 : 0;
      }, Macro.skill($skill(_templateObject303 || (_templateObject303 = _taggedTemplateLiteral4(["Give Your Opponent the Stinkeye"])))), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject314 || (_templateObject314 = _taggedTemplateLiteral4(["stinky cheese eye"])))
          });
        },
        preparation: function() {
          if (!have($item(_templateObject323 || (_templateObject323 = _taggedTemplateLiteral4(["stinky cheese eye"]))))) {
            (0, import_kolmafia10.cliExecute)("fold stinky cheese eye");
          }
          return have($item(_templateObject333 || (_templateObject333 = _taggedTemplateLiteral4(["stinky cheese eye"]))));
        }
      }),
      new ActionSource($skill(_templateObject343 || (_templateObject343 = _taggedTemplateLiteral4(["Show your boring familiar pictures"]))), function() {
        if (have($item(_templateObject353 || (_templateObject353 = _taggedTemplateLiteral4(["familiar scrapbook"]))))) {
          if (scrapbookChargesLastUpdated !== get("_lastCombatStarted")) {
            (0, import_kolmafia10.visitUrl)("desc_item.php?whichitem=463063785");
            scrapbookChargesLastUpdated = get("_lastCombatStarted");
          }
          return Math.floor(get("scrapbookCharges") / 100);
        }
        return 0;
      }, Macro.skill($skill(_templateObject363 || (_templateObject363 = _taggedTemplateLiteral4(["Show your boring familiar pictures"])))), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject373 || (_templateObject373 = _taggedTemplateLiteral4(["familiar scrapbook"])))
          });
        }
      }),
      new ActionSource($item(_templateObject383 || (_templateObject383 = _taggedTemplateLiteral4(["human musk"]))), function() {
        return Math.max(0, 3 - get("_humanMuskUses"));
      }, Macro.item($item(_templateObject393 || (_templateObject393 = _taggedTemplateLiteral4(["human musk"])))), {
        preparation: function() {
          return (0, import_kolmafia10.retrieveItem)($item(_templateObject403 || (_templateObject403 = _taggedTemplateLiteral4(["human musk"]))));
        },
        cost: function() {
          return ActionSource.defaultPriceFunction($item(_templateObject414 || (_templateObject414 = _taggedTemplateLiteral4(["human musk"]))));
        }
      })
    ].concat(_toConsumableArray7($items(_templateObject423 || (_templateObject423 = _taggedTemplateLiteral4(["Louder Than Bomb, divine champagne popper, tennis ball, stuffed yam stinkbomb, anchor bomb, handful of split pea soup"]))).map(function(item15) {
      return new ActionSource(item15, function() {
        return Infinity;
      }, Macro.item(item15), {
        preparation: function() {
          return (0, import_kolmafia10.retrieveItem)(item15);
        },
        cost: function() {
          return ActionSource.defaultPriceFunction(item15);
        }
      });
    })));
  }
});

// node_modules/libram/dist/actions/FreeKill.js
function _taggedTemplateLiteral5(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function _toConsumableArray8(r) {
  return _arrayWithoutHoles8(r) || _iterableToArray8(r) || _unsupportedIterableToArray10(r) || _nonIterableSpread8();
}
function _nonIterableSpread8() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray10(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray10(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray10(r, a) : void 0;
  }
}
function _iterableToArray8(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles8(r) {
  if (Array.isArray(r)) return _arrayLikeToArray10(r);
}
function _arrayLikeToArray10(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function tryFindFreeKill(constraints) {
  return findActionSource(freeKillSources, constraints);
}
function ensureFreeKill(constraints) {
  var source = tryFindFreeKill(constraints);
  if (!source) {
    throw new Error("Failed to ensure Free Kill source");
  }
  return source;
}
var import_kolmafia11, _templateObject59, _templateObject215, _templateObject315, _templateObject415, _templateObject510, _templateObject65, _templateObject75, _templateObject85, _templateObject95, _templateObject05, _templateObject116, _templateObject105, _templateObject117, _templateObject125, _templateObject135, _templateObject145, _templateObject155, _templateObject165, _templateObject174, _templateObject184, _templateObject194, _templateObject204, _templateObject216, _templateObject224, _templateObject234, _templateObject244, _templateObject254, _templateObject264, _templateObject274, _templateObject284, _templateObject294, _templateObject304, _templateObject316, _templateObject324, _templateObject334, _templateObject344, _templateObject354, _templateObject364, _templateObject374, _templateObject384, _templateObject394, _templateObject404, _templateObject416, _templateObject424, _templateObject433, freeKillSources;
var init_FreeKill = __esm({
  "node_modules/libram/dist/actions/FreeKill.js": function() {
    import_kolmafia11 = require("kolmafia");
    init_combat();
    init_lib();
    init_maximize();
    init_property();
    init_AsdonMartin();
    init_template_string();
    init_ActionSource();
    freeKillSources = [
      // Free limited sources
      new ActionSource($skill(_templateObject59 || (_templateObject59 = _taggedTemplateLiteral5(["Gingerbread Mob Hit"]))), function() {
        return !get("_gingerbreadMobHitUsed") && have($skill(_templateObject215 || (_templateObject215 = _taggedTemplateLiteral5(["Gingerbread Mob Hit"])))) ? 1 : 0;
      }, Macro.skill($skill(_templateObject315 || (_templateObject315 = _taggedTemplateLiteral5(["Gingerbread Mob Hit"])))), {
        preparation: function() {
          return (0, import_kolmafia11.restoreMp)(30);
        }
      }),
      new ActionSource($skill(_templateObject415 || (_templateObject415 = _taggedTemplateLiteral5(["Shattering Punch"]))), function() {
        return have($skill(_templateObject510 || (_templateObject510 = _taggedTemplateLiteral5(["Shattering Punch"])))) ? 3 - get("_shatteringPunchUsed") : 0;
      }, Macro.skill($skill(_templateObject65 || (_templateObject65 = _taggedTemplateLiteral5(["Shattering Punch"])))), {
        preparation: function() {
          return (0, import_kolmafia11.restoreMp)(30);
        }
      }),
      new ActionSource($item(_templateObject75 || (_templateObject75 = _taggedTemplateLiteral5(["replica bat-oomerang"]))), function() {
        return have($item(_templateObject85 || (_templateObject85 = _taggedTemplateLiteral5(["replica bat-oomerang"])))) ? 3 - get("_usedReplicaBatoomerang") : 0;
      }, Macro.item($item(_templateObject95 || (_templateObject95 = _taggedTemplateLiteral5(["replica bat-oomerang"]))))),
      new ActionSource($item(_templateObject05 || (_templateObject05 = _taggedTemplateLiteral5(["The Jokester's gun"]))), function() {
        return !get("_firedJokestersGun") && have($item(_templateObject116 || (_templateObject116 = _taggedTemplateLiteral5(["The Jokester's gun"])))) && (0, import_kolmafia11.canEquip)($item(_templateObject105 || (_templateObject105 = _taggedTemplateLiteral5(["The Jokester's gun"])))) ? 1 : 0;
      }, Macro.skill($skill(_templateObject117 || (_templateObject117 = _taggedTemplateLiteral5(["Fire the Jokester's Gun"])))), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject125 || (_templateObject125 = _taggedTemplateLiteral5(["The Jokester's gun"])))
          });
        }
      }),
      new ActionSource($item(_templateObject135 || (_templateObject135 = _taggedTemplateLiteral5(["Lil' Doctor\u2122 bag"]))), function() {
        return have($item(_templateObject145 || (_templateObject145 = _taggedTemplateLiteral5(["Lil' Doctor\u2122 bag"])))) ? 3 - get("_chestXRayUsed") : 0;
      }, Macro.skill($skill(_templateObject155 || (_templateObject155 = _taggedTemplateLiteral5(["Chest X-Ray"])))), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject165 || (_templateObject165 = _taggedTemplateLiteral5(["Lil' Doctor\u2122 bag"])))
          });
        }
      }),
      new ActionSource($skill(_templateObject174 || (_templateObject174 = _taggedTemplateLiteral5(["Asdon Martin: Missile Launcher"]))), function() {
        return !get("_missileLauncherUsed") && installed() ? 1 : 0;
      }, Macro.skill($skill(_templateObject184 || (_templateObject184 = _taggedTemplateLiteral5(["Asdon Martin: Missile Launcher"])))), {
        preparation: function() {
          return fillTo(100);
        }
      }),
      // Heavy Rains
      new ActionSource($skill(_templateObject194 || (_templateObject194 = _taggedTemplateLiteral5(["Lightning Strike"]))), function() {
        return have($skill(_templateObject204 || (_templateObject204 = _taggedTemplateLiteral5(["Lightning Strike"])))) ? Math.floor((0, import_kolmafia11.myLightning)() / 20) : 0;
      }, Macro.skill($skill(_templateObject216 || (_templateObject216 = _taggedTemplateLiteral5(["Lightning Strike"]))))),
      // Expensive limited sources
      new ActionSource($item(_templateObject224 || (_templateObject224 = _taggedTemplateLiteral5(["powdered madness"]))), function() {
        return 5 - get("_powderedMadnessUses");
      }, Macro.item($item(_templateObject234 || (_templateObject234 = _taggedTemplateLiteral5(["powdered madness"])))), {
        preparation: function() {
          return (0, import_kolmafia11.retrieveItem)($item(_templateObject244 || (_templateObject244 = _taggedTemplateLiteral5(["powdered madness"]))));
        },
        cost: function() {
          return ActionSource.defaultPriceFunction($item(_templateObject254 || (_templateObject254 = _taggedTemplateLiteral5(["powdered madness"]))));
        }
      }),
      new ActionSource($familiar(_templateObject264 || (_templateObject264 = _taggedTemplateLiteral5(["Puck Man"]))), function() {
        return have($familiar(_templateObject274 || (_templateObject274 = _taggedTemplateLiteral5(["Puck Man"])))) ? 20 - get("_powerPillUses") : 0;
      }, Macro.item($item(_templateObject284 || (_templateObject284 = _taggedTemplateLiteral5(["power pill"])))), {
        familiar: function() {
          return $familiar(_templateObject294 || (_templateObject294 = _taggedTemplateLiteral5(["Puck Man"])));
        },
        preparation: function() {
          return (0, import_kolmafia11.retrieveItem)($item(_templateObject304 || (_templateObject304 = _taggedTemplateLiteral5(["power pill"]))));
        },
        cost: function() {
          return ActionSource.defaultPriceFunction($item(_templateObject316 || (_templateObject316 = _taggedTemplateLiteral5(["power pill"]))));
        }
      }),
      new ActionSource($familiar(_templateObject324 || (_templateObject324 = _taggedTemplateLiteral5(["Ms. Puck Man"]))), function() {
        return have($familiar(_templateObject334 || (_templateObject334 = _taggedTemplateLiteral5(["Ms. Puck Man"])))) ? 20 - get("_powerPillUses") : 0;
      }, Macro.item($item(_templateObject344 || (_templateObject344 = _taggedTemplateLiteral5(["power pill"])))), {
        familiar: function() {
          return $familiar(_templateObject354 || (_templateObject354 = _taggedTemplateLiteral5(["Ms. Puck Man"])));
        },
        preparation: function() {
          return (0, import_kolmafia11.retrieveItem)($item(_templateObject364 || (_templateObject364 = _taggedTemplateLiteral5(["power pill"]))));
        },
        cost: function() {
          return ActionSource.defaultPriceFunction($item(_templateObject374 || (_templateObject374 = _taggedTemplateLiteral5(["power pill"]))));
        }
      }),
      // Expensive unlimited sources
      new ActionSource($skill(_templateObject384 || (_templateObject384 = _taggedTemplateLiteral5(["Shocking Lick"]))), function() {
        return Infinity;
      }, Macro.skill($skill(_templateObject394 || (_templateObject394 = _taggedTemplateLiteral5(["Shocking Lick"])))), {
        preparation: function() {
          if (get("shockingLickCharges") === 0 && (0, import_kolmafia11.retrieveItem)($item(_templateObject404 || (_templateObject404 = _taggedTemplateLiteral5(["battery (9-Volt)"]))))) {
            (0, import_kolmafia11.use)($item(_templateObject416 || (_templateObject416 = _taggedTemplateLiteral5(["battery (9-Volt)"]))));
          }
          return get("shockingLickCharges") > 0;
        },
        cost: function() {
          return ActionSource.defaultPriceFunction($item(_templateObject424 || (_templateObject424 = _taggedTemplateLiteral5(["battery (9-Volt)"]))));
        }
      })
    ].concat(_toConsumableArray8($items(_templateObject433 || (_templateObject433 = _taggedTemplateLiteral5(["Daily Affirmation: Think Win-Lose, superduperheated metal"]))).map(function(item15) {
      return new ActionSource(item15, function() {
        return Infinity;
      }, Macro.item(item15), {
        preparation: function() {
          return (0, import_kolmafia11.retrieveItem)(item15);
        },
        cost: function() {
          return ActionSource.defaultPriceFunction(item15);
        }
      });
    })));
  }
});

// node_modules/libram/dist/resources/2009/Bandersnatch.js
var Bandersnatch_exports = {};
__export(Bandersnatch_exports, {
  canRunaway: function() {
    return canRunaway;
  },
  couldRunaway: function() {
    return couldRunaway;
  },
  getMaxRunaways: function() {
    return getMaxRunaways;
  },
  getRemainingRunaways: function() {
    return getRemainingRunaways;
  },
  getRunaways: function() {
    return getRunaways;
  },
  have: function() {
    return have3;
  },
  prepareRunaway: function() {
    return prepareRunaway;
  }
});
function _createForOfIteratorHelper6(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t) {
    if (Array.isArray(r) || (t = _unsupportedIterableToArray11(r)) || e && r && "number" == typeof r.length) {
      t && (r = t);
      var _n = 0, F = function F2() {
      };
      return { s: F, n: function n() {
        return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
      }, e: function e2(r2) {
        throw r2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o, a = true, u = false;
  return { s: function s() {
    t = t.call(r);
  }, n: function n() {
    var r2 = t.next();
    return a = r2.done, r2;
  }, e: function e2(r2) {
    u = true, o = r2;
  }, f: function f() {
    try {
      a || null == t.return || t.return();
    } finally {
      if (u) throw o;
    }
  } };
}
function _unsupportedIterableToArray11(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray11(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray11(r, a) : void 0;
  }
}
function _arrayLikeToArray11(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _taggedTemplateLiteral6(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have3() {
  return have(familiar);
}
function getRunaways() {
  return get("_banderRunaways");
}
function getMaxRunaways() {
  var considerWeightAdjustment = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
  return Math.floor(totalFamiliarWeight(familiar, considerWeightAdjustment) / 5);
}
function getRemainingRunaways() {
  var considerWeightAdjustment = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
  return Math.max(0, getMaxRunaways(considerWeightAdjustment) - getRunaways());
}
function couldRunaway() {
  var considerWeightAdjustment = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
  return have3() && getRemainingRunaways(considerWeightAdjustment) > 0;
}
function canRunaway() {
  return isCurrentFamiliar(familiar) && couldRunaway() && have(odeEffect);
}
function prepareRunaway(songsToRemove) {
  if (!have(odeEffect)) {
    if (!have(odeSkill)) {
      return false;
    }
    if (!canRememberSong()) {
      var activeSongs = getActiveSongs();
      var _iterator = _createForOfIteratorHelper6(songsToRemove), _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var song2 = _step.value;
          if (activeSongs.includes(song2) && uneffect(song2)) {
            break;
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    if (!(0, import_kolmafia12.useSkill)(odeSkill)) {
      return false;
    }
  }
  return (0, import_kolmafia12.useFamiliar)(familiar);
}
var import_kolmafia12, _templateObject60, _templateObject217, _templateObject317, familiar, odeSkill, odeEffect;
var init_Bandersnatch = __esm({
  "node_modules/libram/dist/resources/2009/Bandersnatch.js": function() {
    import_kolmafia12 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    familiar = $familiar(_templateObject60 || (_templateObject60 = _taggedTemplateLiteral6(["Frumious Bandersnatch"])));
    odeSkill = $skill(_templateObject217 || (_templateObject217 = _taggedTemplateLiteral6(["The Ode to Booze"])));
    odeEffect = $effect(_templateObject317 || (_templateObject317 = _taggedTemplateLiteral6(["Ode to Booze"])));
  }
});

// node_modules/libram/dist/resources/2011/StompingBoots.js
var StompingBoots_exports = {};
__export(StompingBoots_exports, {
  canRunaway: function() {
    return canRunaway2;
  },
  couldRunaway: function() {
    return couldRunaway2;
  },
  getMaxRunaways: function() {
    return getMaxRunaways2;
  },
  getRemainingRunaways: function() {
    return getRemainingRunaways2;
  },
  getRunaways: function() {
    return getRunaways2;
  },
  have: function() {
    return have4;
  },
  prepareRunaway: function() {
    return prepareRunaway2;
  }
});
function _taggedTemplateLiteral7(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have4() {
  return have(familiar2);
}
function getRunaways2() {
  return get("_banderRunaways");
}
function getMaxRunaways2() {
  var considerWeightAdjustment = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
  return Math.floor(totalFamiliarWeight(familiar2, considerWeightAdjustment) / 5);
}
function getRemainingRunaways2() {
  var considerWeightAdjustment = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
  return Math.max(0, getMaxRunaways2(considerWeightAdjustment) - getRunaways2());
}
function couldRunaway2() {
  var considerWeightAdjustment = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
  return have4() && getRemainingRunaways2(considerWeightAdjustment) > 0;
}
function canRunaway2() {
  return isCurrentFamiliar(familiar2) && couldRunaway2();
}
function prepareRunaway2() {
  return (0, import_kolmafia13.useFamiliar)(familiar2);
}
var import_kolmafia13, _templateObject61, familiar2;
var init_StompingBoots = __esm({
  "node_modules/libram/dist/resources/2011/StompingBoots.js": function() {
    import_kolmafia13 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    familiar2 = $familiar(_templateObject61 || (_templateObject61 = _taggedTemplateLiteral7(["Pair of Stomping Boots"])));
  }
});

// node_modules/libram/dist/actions/FreeRun.js
function _toConsumableArray9(r) {
  return _arrayWithoutHoles9(r) || _iterableToArray9(r) || _unsupportedIterableToArray12(r) || _nonIterableSpread9();
}
function _nonIterableSpread9() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray12(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray12(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray12(r, a) : void 0;
  }
}
function _iterableToArray9(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles9(r) {
  if (Array.isArray(r)) return _arrayLikeToArray12(r);
}
function _arrayLikeToArray12(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _taggedTemplateLiteral8(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function tryFindFreeRun(constraints) {
  var source = findActionSource(freeRunSources, constraints);
  return source;
}
function ensureFreeRun(constraints) {
  var source = tryFindFreeRun(constraints);
  if (!source) {
    throw new Error("Failed to ensure Free Run source");
  }
  return source;
}
var import_kolmafia14, _templateObject66, _templateObject218, _templateObject318, _templateObject417, _templateObject511, _templateObject67, _templateObject76, _templateObject86, _templateObject96, _templateObject06, _templateObject118, _templateObject106, _templateObject119, _templateObject126, _templateObject136, _templateObject146, _templateObject156, _templateObject166, _templateObject175, _templateObject185, _templateObject195, _templateObject205, _templateObject219, _templateObject225, everythingLooksGreen, freeRunSources;
var init_FreeRun = __esm({
  "node_modules/libram/dist/actions/FreeRun.js": function() {
    import_kolmafia14 = require("kolmafia");
    init_combat();
    init_lib();
    init_maximize();
    init_property();
    init_Bandersnatch();
    init_StompingBoots();
    init_template_string();
    init_ActionSource();
    everythingLooksGreen = function everythingLooksGreen2() {
      var otherClause = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : function() {
        return true;
      };
      return function() {
        return otherClause() && !have($effect(_templateObject66 || (_templateObject66 = _taggedTemplateLiteral8(["Everything Looks Green"])))) ? 1 : 0;
      };
    };
    freeRunSources = [
      // Free unlimited source
      new ActionSource($item(_templateObject218 || (_templateObject218 = _taggedTemplateLiteral8(["spring shoes"]))), everythingLooksGreen(function() {
        return have($item(_templateObject318 || (_templateObject318 = _taggedTemplateLiteral8(["spring shoes"]))));
      }), Macro.skill($skill(_templateObject417 || (_templateObject417 = _taggedTemplateLiteral8(["Spring Away"])))), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject511 || (_templateObject511 = _taggedTemplateLiteral8(["spring shoes"])))
          });
        }
      }),
      // Free limited sources
      new ActionSource($familiar(_templateObject67 || (_templateObject67 = _taggedTemplateLiteral8(["Frumious Bandersnatch"]))), function() {
        return (have($effect(_templateObject76 || (_templateObject76 = _taggedTemplateLiteral8(["Ode to Booze"])))) || getSongCount() < getSongLimit()) && couldRunaway() ? getRemainingRunaways() : 0;
      }, Macro.step("runaway"), {
        equipmentRequirements: function() {
          return new Requirement(["Familiar Weight"], {});
        },
        preparation: function() {
          ensureEffect($effect(_templateObject86 || (_templateObject86 = _taggedTemplateLiteral8(["Ode to Booze"]))));
          return have($effect(_templateObject96 || (_templateObject96 = _taggedTemplateLiteral8(["Ode to Booze"]))));
        },
        familiar: function() {
          return $familiar(_templateObject06 || (_templateObject06 = _taggedTemplateLiteral8(["Frumious Bandersnatch"])));
        }
      }),
      new ActionSource($familiar(_templateObject118 || (_templateObject118 = _taggedTemplateLiteral8(["Pair of Stomping Boots"]))), function() {
        return couldRunaway2() ? getRemainingRunaways2() : 0;
      }, Macro.step("runaway"), {
        equipmentRequirements: function() {
          return new Requirement(["Familiar Weight"], {});
        },
        familiar: function() {
          return $familiar(_templateObject106 || (_templateObject106 = _taggedTemplateLiteral8(["Pair of Stomping Boots"])));
        }
      }),
      new ActionSource($item(_templateObject119 || (_templateObject119 = _taggedTemplateLiteral8(["navel ring of navel gazing"]))), function() {
        return have($item(_templateObject126 || (_templateObject126 = _taggedTemplateLiteral8(["navel ring of navel gazing"])))) ? Math.max(0, 3 - get("_navelRunaways")) : 0;
      }, Macro.step("runaway"), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject136 || (_templateObject136 = _taggedTemplateLiteral8(["navel ring of navel gazing"])))
          });
        }
      }),
      new ActionSource($item(_templateObject146 || (_templateObject146 = _taggedTemplateLiteral8(["Greatest American Pants"]))), function() {
        return have($item(_templateObject156 || (_templateObject156 = _taggedTemplateLiteral8(["Greatest American Pants"])))) ? Math.max(0, 3 - get("_navelRunaways")) : 0;
      }, Macro.step("runaway"), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject166 || (_templateObject166 = _taggedTemplateLiteral8(["Greatest American Pants"])))
          });
        }
      }),
      new ActionSource($item(_templateObject175 || (_templateObject175 = _taggedTemplateLiteral8(["peppermint parasol"]))), function() {
        return Math.max(0, 3 - get("_navelRunaways"));
      }, Macro.item($item(_templateObject185 || (_templateObject185 = _taggedTemplateLiteral8(["peppermint parasol"])))), {
        preparation: function() {
          return (0, import_kolmafia14.retrieveItem)($item(_templateObject195 || (_templateObject195 = _taggedTemplateLiteral8(["peppermint parasol"]))));
        },
        cost: function() {
          return ActionSource.defaultPriceFunction($item(_templateObject205 || (_templateObject205 = _taggedTemplateLiteral8(["peppermint parasol"])))) / 10;
        }
        // Breaks after 10 successful runaways.
      })
    ].concat(_toConsumableArray9($items(_templateObject219 || (_templateObject219 = _taggedTemplateLiteral8(["green smoke bomb, tattered scrap of paper, GOTO, T.U.R.D.S. Key"]))).map(function(item15) {
      return new ActionSource(item15, everythingLooksGreen(), Macro.item(item15), {
        preparation: function() {
          return (0, import_kolmafia14.retrieveItem)(item15);
        },
        cost: function() {
          return ActionSource.defaultPriceFunction(item15);
        }
      });
    })), _toConsumableArray9($items(_templateObject225 || (_templateObject225 = _taggedTemplateLiteral8(["fish-oil smoke bomb, giant eraser"]))).map(function(item15) {
      return new ActionSource(item15, function() {
        return !have(item15) ? 0 : 1;
      }, Macro.item(item15), {
        preparation: function() {
          return have(item15);
        },
        cost: function() {
          return 0;
        }
      });
    })));
  }
});

// node_modules/libram/dist/actions/index.js
var init_actions = __esm({
  "node_modules/libram/dist/actions/index.js": function() {
    init_ActionSource();
    init_Banish();
    init_FreeKill();
    init_FreeRun();
  }
});

// node_modules/libram/dist/moonSign.js
function signNameToId(moon) {
  return MoonSigns.indexOf(moon) + 1;
}
function signIdToName(id) {
  return MoonSigns[id - 1] || "None";
}
var MoonSigns;
var init_moonSign = __esm({
  "node_modules/libram/dist/moonSign.js": function() {
    MoonSigns = ["Mongoose", "Wallaby", "Vole", "Platypus", "Opossum", "Marmot", "Wombat", "Blender", "Packrat"];
  }
});

// node_modules/libram/dist/resources/2006/CommaChameleon.js
var CommaChameleon_exports = {};
__export(CommaChameleon_exports, {
  currentFamiliar: function() {
    return currentFamiliar;
  },
  have: function() {
    return have5;
  },
  transform: function() {
    return transform;
  }
});
function _taggedTemplateLiteral9(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have5() {
  return have(familiar3);
}
function transform(fam) {
  if (currentFamiliar() === fam) {
    return true;
  }
  var equipment = (0, import_kolmafia15.familiarEquipment)(fam);
  if (equipment === $item.none) return false;
  if (!have(equipment)) return false;
  (0, import_kolmafia15.visitUrl)("inv_equip.php?which=2&action=equip&whichitem=".concat((0, import_kolmafia15.toInt)(equipment), "&pwd"));
  (0, import_kolmafia15.visitUrl)("charpane.php");
  if (currentFamiliar() !== fam) {
    return false;
  }
  return true;
}
function currentFamiliar() {
  return get("commaFamiliar");
}
var import_kolmafia15, _templateObject68, familiar3;
var init_CommaChameleon = __esm({
  "node_modules/libram/dist/resources/2006/CommaChameleon.js": function() {
    init_template_string();
    init_lib();
    import_kolmafia15 = require("kolmafia");
    init_property();
    familiar3 = $familiar(_templateObject68 || (_templateObject68 = _taggedTemplateLiteral9(["Comma Chameleon"])));
  }
});

// node_modules/libram/dist/resources/2008/Stickers.js
var Stickers_exports = {};
__export(Stickers_exports, {
  currentStickers: function() {
    return currentStickers;
  },
  foldWeapon: function() {
    return foldWeapon;
  },
  have: function() {
    return have6;
  },
  makeSword: function() {
    return makeSword;
  },
  setStickers: function() {
    return setStickers;
  },
  stickers: function() {
    return stickers;
  },
  weapon: function() {
    return weapon;
  }
});
function _taggedTemplateLiteral10(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have6() {
  return (0, import_kolmafia16.haveSkill)($skill(_templateObject77 || (_templateObject77 = _taggedTemplateLiteral10(["Summon Stickers"]))));
}
function weapon() {
  var _find;
  return (_find = $items(_templateObject87 || (_templateObject87 = _taggedTemplateLiteral10(["scratch 'n' sniff sword, scratch 'n' sniff crossbow"]))).find(function(i) {
    return (0, import_kolmafia16.availableAmount)(i);
  })) !== null && _find !== void 0 ? _find : null;
}
function makeSword(sticker) {
  if (weapon()) return;
  (0, import_kolmafia16.visitUrl)("bedazzle.php?action=juststick&sticker=".concat(stickers[sticker].id, "&pwd"));
}
function foldWeapon(mode) {
  var currentWep = weapon();
  if (!currentWep) return false;
  if (weapons[mode] === currentWep) return true;
  (0, import_kolmafia16.visitUrl)("bedazzle.php?action=fold&pwd");
  return weapons[mode] === currentWep;
}
function currentStickers() {
  return $slots(_templateObject120 || (_templateObject120 = _taggedTemplateLiteral10(["sticker1, sticker2, sticker3"]))).map(function(s) {
    return (0, import_kolmafia16.equippedItem)(s);
  });
}
function setStickers() {
  for (var _len = arguments.length, options = new Array(_len), _key = 0; _key < _len; _key++) {
    options[_key] = arguments[_key];
  }
  var _loop = function _loop2() {
    var s = _options[_i];
    if (s) (0, import_kolmafia16.retrieveItem)(stickers[s], options.filter(function(x) {
      return x === s;
    }).length);
  };
  for (var _i = 0, _options = options; _i < _options.length; _i++) {
    _loop();
  }
  (0, import_kolmafia16.visitUrl)("bedazzle.php");
  var start = currentStickers();
  for (var i = 0; i <= 2; i++) {
    var sticker = options[i];
    if (!sticker) continue;
    var item15 = stickers[sticker];
    if (start[i] === item15) continue;
    (0, import_kolmafia16.visitUrl)("bedazzle.php?action=peel&slot=".concat(i + 1, "&pwd"));
    (0, import_kolmafia16.visitUrl)("bedazzle.php?action=stick&slot=".concat(i + 1, "&sticker=").concat(item15.id, "&pwd"));
  }
  return currentStickers();
}
var import_kolmafia16, _templateObject69, _templateObject220, _templateObject319, _templateObject418, _templateObject512, _templateObject610, _templateObject77, _templateObject87, _templateObject97, _templateObject07, _templateObject120, stickers, weapons;
var init_Stickers = __esm({
  "node_modules/libram/dist/resources/2008/Stickers.js": function() {
    import_kolmafia16 = require("kolmafia");
    init_template_string();
    stickers = {
      unicorn: $item(_templateObject69 || (_templateObject69 = _taggedTemplateLiteral10(["scratch 'n' sniff unicorn sticker"]))),
      apple: $item(_templateObject220 || (_templateObject220 = _taggedTemplateLiteral10(["scratch 'n' sniff apple sticker"]))),
      UPC: $item(_templateObject319 || (_templateObject319 = _taggedTemplateLiteral10(["scratch 'n' sniff UPC sticker"]))),
      wrestler: $item(_templateObject418 || (_templateObject418 = _taggedTemplateLiteral10(["scratch 'n' sniff wrestler sticker"]))),
      dragon: $item(_templateObject512 || (_templateObject512 = _taggedTemplateLiteral10(["scratch 'n' sniff dragon sticker"]))),
      rockband: $item(_templateObject610 || (_templateObject610 = _taggedTemplateLiteral10(["scratch 'n' sniff rock band sticker"])))
    };
    weapons = {
      sword: $item(_templateObject97 || (_templateObject97 = _taggedTemplateLiteral10(["scratch 'n' sniff sword"]))),
      crossbow: $item(_templateObject07 || (_templateObject07 = _taggedTemplateLiteral10(["scratch 'n' sniff crossbow"])))
    };
  }
});

// node_modules/libram/dist/resources/2009/SpookyPutty.js
var SpookyPutty_exports = {};
__export(SpookyPutty_exports, {
  getSpookyPuttySheetCopiesMade: function() {
    return getSpookyPuttySheetCopiesMade;
  },
  getSpookyPuttySheetMonster: function() {
    return getSpookyPuttySheetMonster;
  },
  have: function() {
    return have7;
  },
  prepareSpookyPuttySheet: function() {
    return prepareSpookyPuttySheet;
  },
  useSpookyPuttySheet: function() {
    return useSpookyPuttySheet;
  }
});
function _taggedTemplateLiteral11(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have7() {
  return getFoldGroup(sheet).some(function(item15) {
    return have(item15);
  });
}
function getSpookyPuttySheetCopiesMade() {
  return Math.max(0, get("spookyPuttyCopiesMade"));
}
function prepareSpookyPuttySheet() {
  if (!have7()) return false;
  if (have(sheet)) return true;
  return (0, import_kolmafia17.cliExecute)("fold Spooky putty sheet");
}
function getSpookyPuttySheetMonster() {
  return get("spookyPuttyMonster");
}
function useSpookyPuttySheet() {
  return (0, import_kolmafia17.use)(sheet);
}
var import_kolmafia17, _templateObject70, sheet;
var init_SpookyPutty = __esm({
  "node_modules/libram/dist/resources/2009/SpookyPutty.js": function() {
    import_kolmafia17 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    sheet = $item(_templateObject70 || (_templateObject70 = _taggedTemplateLiteral11(["Spooky Putty sheet"])));
  }
});

// node_modules/libram/dist/resources/2010/CrownOfThrones.js
var CrownOfThrones_exports = {};
__export(CrownOfThrones_exports, {
  createModifierValueFunction: function() {
    return createModifierValueFunction;
  },
  createRiderMode: function() {
    return createRiderMode;
  },
  getModifier: function() {
    return getModifier;
  },
  hasRiderMode: function() {
    return hasRiderMode;
  },
  pickRider: function() {
    return pickRider;
  },
  ridingFamiliars: function() {
    return ridingFamiliars;
  },
  valueRider: function() {
    return valueRider;
  }
});
function _typeof8(o) {
  "@babel/helpers - typeof";
  return _typeof8 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof8(o);
}
function ownKeys5(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread5(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys5(Object(t), true).forEach(function(r2) {
      _defineProperty7(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys5(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty7(e, r, t) {
  return (r = _toPropertyKey8(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
}
function _toPropertyKey8(t) {
  var i = _toPrimitive8(t, "string");
  return "symbol" == _typeof8(i) ? i : i + "";
}
function _toPrimitive8(t, r) {
  if ("object" != _typeof8(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof8(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _toConsumableArray10(r) {
  return _arrayWithoutHoles10(r) || _iterableToArray10(r) || _unsupportedIterableToArray13(r) || _nonIterableSpread10();
}
function _nonIterableSpread10() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray13(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray13(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray13(r, a) : void 0;
  }
}
function _iterableToArray10(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles10(r) {
  if (Array.isArray(r)) return _arrayLikeToArray13(r);
}
function _arrayLikeToArray13(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _taggedTemplateLiteral12(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function valueRider(rider, modifierValueFunction, dropsValueFunction2) {
  var ignoreLimitedDrops = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : false;
  var dropValue = !rider.dropPredicate || rider.dropPredicate() && !ignoreLimitedDrops ? rider.probability * (typeof rider.drops === "number" ? rider.drops : dropsValueFunction2(rider.drops)) : 0;
  var modifierValue = modifierValueFunction(rider.familiar);
  return dropValue + modifierValue;
}
function createRiderMode(name, details) {
  return riderModes.set(name, _objectSpread5(_objectSpread5({}, DEFAULTS), details));
}
function hasRiderMode(name) {
  return riderModes.has(name);
}
function pickRider(mode) {
  var modeData = riderModes.get(mode);
  if (!modeData) return null;
  var modifierValueFunction = modeData.modifierValueFunction, dropsValueFunction2 = modeData.dropsValueFunction, ignoreLimitedDrops = modeData.ignoreLimitedDrops, excludeCurrentFamiliar = modeData.excludeCurrentFamiliar;
  if (!riderLists.has(mode)) {
    riderLists.set(mode, FULL_RIDING_LIST.filter(function(_ref2) {
      var familiar10 = _ref2.familiar;
      return have(familiar10);
    }).map(function(rider) {
      return _objectSpread5(_objectSpread5({}, rider), {}, {
        value: valueRider(rider, modifierValueFunction, dropsValueFunction2, ignoreLimitedDrops)
      });
    }).sort(function(_ref3, _ref4) {
      var a = _ref3.value;
      var b = _ref4.value;
      return b - a;
    }));
  }
  var list = riderLists.get(mode);
  if (list) {
    var riderToReturn = list.find(function(_ref5) {
      var _dropPredicate;
      var dropPredicate = _ref5.dropPredicate, familiar10 = _ref5.familiar;
      return ((_dropPredicate = dropPredicate === null || dropPredicate === void 0 ? void 0 : dropPredicate()) !== null && _dropPredicate !== void 0 ? _dropPredicate : true) && (!excludeCurrentFamiliar || (0, import_kolmafia18.myFamiliar)() !== familiar10);
    });
    return riderToReturn !== null && riderToReturn !== void 0 ? riderToReturn : null;
  }
  return null;
}
function getModifier(modifier, familiar10) {
  return (0, import_kolmafia18.numericModifier)("Throne:".concat(familiar10), modifier);
}
function createModifierValueFunction(modifiers, functions) {
  return function(familiar10) {
    return sum(modifiers, function(modifier) {
      return functions[modifier](getModifier(modifier, familiar10));
    });
  };
}
var import_kolmafia18, _templateObject71, _templateObject221, _templateObject320, _templateObject419, _templateObject513, _templateObject611, _templateObject78, _templateObject88, _templateObject98, _templateObject08, _templateObject121, _templateObject107, _templateObject1110, _templateObject127, _templateObject137, _templateObject147, _templateObject157, _templateObject167, _templateObject176, _templateObject186, _templateObject196, _templateObject206, _templateObject2110, _templateObject226, _templateObject235, _templateObject245, _templateObject255, _templateObject265, _templateObject275, _templateObject285, _templateObject295, _templateObject305, _templateObject3110, _templateObject325, _templateObject335, _templateObject345, _templateObject355, _templateObject365, _templateObject375, _templateObject385, _templateObject395, _templateObject405, _templateObject4110, _templateObject425, _templateObject434, _templateObject443, _templateObject453, _templateObject463, _templateObject473, _templateObject483, _templateObject492, _templateObject502, _templateObject514, _templateObject522, _templateObject532, _templateObject542, _templateObject552, _templateObject562, _templateObject572, _templateObject582, _templateObject592, _templateObject602, _templateObject612, _templateObject622, _templateObject632, _templateObject642, _templateObject652, _templateObject662, _templateObject672, _templateObject682, _templateObject692, _templateObject702, _templateObject712, _templateObject722, _templateObject732, _templateObject742, _templateObject752, _templateObject762, _templateObject772, _templateObject782, _templateObject79, _templateObject80, _templateObject81, _templateObject822, _templateObject832, _templateObject842, _templateObject852, _templateObject862, _templateObject872, _templateObject882, _templateObject89, _templateObject90, _templateObject91, _templateObject922, _templateObject932, _templateObject942, _templateObject952, _templateObject962, _templateObject972, _templateObject982, _templateObject99, ridingFamiliars, FULL_RIDING_LIST, riderModes, DEFAULTS, riderLists;
var init_CrownOfThrones = __esm({
  "node_modules/libram/dist/resources/2010/CrownOfThrones.js": function() {
    import_kolmafia18 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    ridingFamiliars = [{
      familiar: $familiar(_templateObject71 || (_templateObject71 = _taggedTemplateLiteral12(["Puck Man"]))),
      drops: $items(_templateObject221 || (_templateObject221 = _taggedTemplateLiteral12(["yellow pixel"]))),
      probability: 0.25,
      dropPredicate: function() {
        return get("_yellowPixelDropsCrown") < 25;
      }
    }, {
      familiar: $familiar(_templateObject320 || (_templateObject320 = _taggedTemplateLiteral12(["Ms. Puck Man"]))),
      drops: $items(_templateObject419 || (_templateObject419 = _taggedTemplateLiteral12(["yellow pixel"]))),
      probability: 0.25,
      dropPredicate: function() {
        return get("_yellowPixelDropsCrown") < 25;
      }
    }, {
      familiar: $familiar(_templateObject513 || (_templateObject513 = _taggedTemplateLiteral12(["Grimstone Golem"]))),
      drops: $items(_templateObject611 || (_templateObject611 = _taggedTemplateLiteral12(["grimstone mask"]))),
      probability: 0.5,
      dropPredicate: function() {
        return get("_grimstoneMaskDropsCrown") < 1;
      }
    }, {
      familiar: $familiar(_templateObject78 || (_templateObject78 = _taggedTemplateLiteral12(["Knob Goblin Organ Grinder"]))),
      drops: 30,
      probability: 1
    }, {
      familiar: $familiar(_templateObject88 || (_templateObject88 = _taggedTemplateLiteral12(["Happy Medium"]))),
      drops: 30,
      probability: 1
    }, {
      familiar: $familiar(_templateObject98 || (_templateObject98 = _taggedTemplateLiteral12(["Garbage Fire"]))),
      drops: $items(_templateObject08 || (_templateObject08 = _taggedTemplateLiteral12(["burning newspaper"]))),
      probability: 0.5,
      dropPredicate: function() {
        return get("_garbageFireDropsCrown") < 3;
      }
    }, {
      familiar: $familiar(_templateObject121 || (_templateObject121 = _taggedTemplateLiteral12(["Machine Elf"]))),
      drops: $items(_templateObject107 || (_templateObject107 = _taggedTemplateLiteral12(["abstraction: sensation, abstraction: thought, abstraction: action, abstraction: category, abstraction: perception, abstraction: purpose"]))),
      probability: 0.2,
      dropPredicate: function() {
        return get("_abstractionDropsCrown") < 25;
      }
    }, {
      familiar: $familiar(_templateObject1110 || (_templateObject1110 = _taggedTemplateLiteral12(["Trick-or-Treating Tot"]))),
      drops: $items(_templateObject127 || (_templateObject127 = _taggedTemplateLiteral12(["hoarded candy wad"]))),
      probability: 0.5,
      dropPredicate: function() {
        return get("_hoardedCandyDropsCrown") < 3;
      }
    }, {
      familiar: $familiar(_templateObject137 || (_templateObject137 = _taggedTemplateLiteral12(["Warbear Drone"]))),
      drops: $items(_templateObject147 || (_templateObject147 = _taggedTemplateLiteral12(["warbear whosit"]))),
      probability: 1 / 4.5
    }, {
      familiar: $familiar(_templateObject157 || (_templateObject157 = _taggedTemplateLiteral12(["Li'l Xenomorph"]))),
      drops: $items(_templateObject167 || (_templateObject167 = _taggedTemplateLiteral12(["lunar isotope"]))),
      probability: 0.05
    }, {
      familiar: $familiar(_templateObject176 || (_templateObject176 = _taggedTemplateLiteral12(["Pottery Barn Owl"]))),
      drops: $items(_templateObject186 || (_templateObject186 = _taggedTemplateLiteral12(["volcanic ash"]))),
      probability: 0.1
    }, {
      familiar: $familiar(_templateObject196 || (_templateObject196 = _taggedTemplateLiteral12(["Grim Brother"]))),
      drops: $items(_templateObject206 || (_templateObject206 = _taggedTemplateLiteral12(["grim fairy tale"]))),
      probability: 1,
      dropPredicate: function() {
        return get("_grimFairyTaleDropsCrown") < 2;
      }
    }, {
      familiar: $familiar(_templateObject2110 || (_templateObject2110 = _taggedTemplateLiteral12(["Optimistic Candle"]))),
      drops: $items(_templateObject226 || (_templateObject226 = _taggedTemplateLiteral12(["glob of melted wax"]))),
      probability: 1,
      dropPredicate: function() {
        return get("_optimisticCandleDropsCrown") < 3;
      }
    }, {
      familiar: $familiar(_templateObject235 || (_templateObject235 = _taggedTemplateLiteral12(["Adventurous Spelunker"]))),
      drops: $items(_templateObject245 || (_templateObject245 = _taggedTemplateLiteral12(["teflon ore, velcro ore, vinyl ore, cardboard ore, styrofoam ore, bubblewrap ore"]))),
      probability: 1,
      dropPredicate: function() {
        return get("_oreDropsCrown") < 6;
      }
    }, {
      familiar: $familiar(_templateObject255 || (_templateObject255 = _taggedTemplateLiteral12(["Twitching Space Critter"]))),
      drops: $items(_templateObject265 || (_templateObject265 = _taggedTemplateLiteral12(["space beast fur"]))),
      probability: 1,
      dropPredicate: function() {
        return get("_spaceFurDropsCrown") < 1;
      }
    }, {
      familiar: $familiar(_templateObject275 || (_templateObject275 = _taggedTemplateLiteral12(["Party Mouse"]))),
      drops: 50,
      probability: 0.05
    }, {
      familiar: $familiar(_templateObject285 || (_templateObject285 = _taggedTemplateLiteral12(["Yule Hound"]))),
      drops: $items(_templateObject295 || (_templateObject295 = _taggedTemplateLiteral12(["candy cane"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject305 || (_templateObject305 = _taggedTemplateLiteral12(["Gluttonous Green Ghost"]))),
      drops: $items(_templateObject3110 || (_templateObject3110 = _taggedTemplateLiteral12(["bean burrito, enchanted bean burrito, jumping bean burrito"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject325 || (_templateObject325 = _taggedTemplateLiteral12(["Reassembled Blackbird"]))),
      drops: $items(_templateObject335 || (_templateObject335 = _taggedTemplateLiteral12(["blackberry"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject345 || (_templateObject345 = _taggedTemplateLiteral12(["Reconstituted Crow"]))),
      drops: $items(_templateObject355 || (_templateObject355 = _taggedTemplateLiteral12(["blackberry"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject365 || (_templateObject365 = _taggedTemplateLiteral12(["Hunchbacked Minion"]))),
      drops: /* @__PURE__ */ new Map([[$item(_templateObject375 || (_templateObject375 = _taggedTemplateLiteral12(["disembodied brain"]))), 0.02], [$item(_templateObject385 || (_templateObject385 = _taggedTemplateLiteral12(["skeleton bone"]))), 0.98]]),
      probability: 1
    }, {
      familiar: $familiar(_templateObject395 || (_templateObject395 = _taggedTemplateLiteral12(["Reanimated Reanimator"]))),
      drops: $items(_templateObject405 || (_templateObject405 = _taggedTemplateLiteral12(["hot wing, broken skull"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject4110 || (_templateObject4110 = _taggedTemplateLiteral12(["Attention-Deficit Demon"]))),
      drops: $items(_templateObject425 || (_templateObject425 = _taggedTemplateLiteral12(["chorizo brownies, white chocolate and tomato pizza, carob chunk noodles"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject434 || (_templateObject434 = _taggedTemplateLiteral12(["Piano Cat"]))),
      drops: $items(_templateObject443 || (_templateObject443 = _taggedTemplateLiteral12(["beertini, papaya slung, salty slug, tomato daiquiri"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject453 || (_templateObject453 = _taggedTemplateLiteral12(["Golden Monkey"]))),
      drops: $items(_templateObject463 || (_templateObject463 = _taggedTemplateLiteral12(["gold nuggets"]))),
      probability: 0.5
    }, {
      familiar: $familiar(_templateObject473 || (_templateObject473 = _taggedTemplateLiteral12(["Robot Reindeer"]))),
      drops: $items(_templateObject483 || (_templateObject483 = _taggedTemplateLiteral12(["candy cane, eggnog, fruitcake, gingerbread bugbear"]))),
      probability: 0.3
    }, {
      familiar: $familiar(_templateObject492 || (_templateObject492 = _taggedTemplateLiteral12(["Stocking Mimic"]))),
      drops: $items(_templateObject502 || (_templateObject502 = _taggedTemplateLiteral12(["Angry Farmer candy, Cold Hots candy, Rock Pops, Tasty Fun Good rice candy, Wint-O-Fresh mint"]))),
      probability: 0.3
    }, {
      familiar: $familiar(_templateObject514 || (_templateObject514 = _taggedTemplateLiteral12(["BRICKO chick"]))),
      drops: $items(_templateObject522 || (_templateObject522 = _taggedTemplateLiteral12(["BRICKO brick"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject532 || (_templateObject532 = _taggedTemplateLiteral12(["Cotton Candy Carnie"]))),
      drops: $items(_templateObject542 || (_templateObject542 = _taggedTemplateLiteral12(["cotton candy pinch"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject552 || (_templateObject552 = _taggedTemplateLiteral12(["Untamed Turtle"]))),
      drops: $items(_templateObject562 || (_templateObject562 = _taggedTemplateLiteral12(["snailmail bits, turtlemail bits, turtle wax"]))),
      probability: 0.35
    }, {
      familiar: $familiar(_templateObject572 || (_templateObject572 = _taggedTemplateLiteral12(["Astral Badger"]))),
      drops: $items(_templateObject582 || (_templateObject582 = _taggedTemplateLiteral12(["spooky mushroom, Knob mushroom, Knoll mushroom"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject592 || (_templateObject592 = _taggedTemplateLiteral12(["Green Pixie"]))),
      drops: $items(_templateObject602 || (_templateObject602 = _taggedTemplateLiteral12(["bottle of tequila"]))),
      probability: 0.2
    }, {
      familiar: $familiar(_templateObject612 || (_templateObject612 = _taggedTemplateLiteral12(["Angry Goat"]))),
      drops: $items(_templateObject622 || (_templateObject622 = _taggedTemplateLiteral12(["goat cheese pizza"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject632 || (_templateObject632 = _taggedTemplateLiteral12(["Adorable Seal Larva"]))),
      drops: $items(_templateObject642 || (_templateObject642 = _taggedTemplateLiteral12(["stench nuggets, spooky nuggets, hot nuggets, cold nuggets, sleaze nuggets"]))),
      probability: 0.35
    }, {
      familiar: $familiar(_templateObject652 || (_templateObject652 = _taggedTemplateLiteral12(["Ancient Yuletide Troll"]))),
      drops: $items(_templateObject662 || (_templateObject662 = _taggedTemplateLiteral12(["candy cane, eggnog, fruitcake, gingerbread bugbear"]))),
      probability: 0.3
    }, {
      familiar: $familiar(_templateObject672 || (_templateObject672 = _taggedTemplateLiteral12(["Sweet Nutcracker"]))),
      drops: $items(_templateObject682 || (_templateObject682 = _taggedTemplateLiteral12(["candy cane, eggnog, fruitcake, gingerbread bugbear"]))),
      probability: 0.3
    }, {
      familiar: $familiar(_templateObject692 || (_templateObject692 = _taggedTemplateLiteral12(["Casagnova Gnome"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject702 || (_templateObject702 = _taggedTemplateLiteral12(["Coffee Pixie"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject712 || (_templateObject712 = _taggedTemplateLiteral12(["Dancing Frog"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject722 || (_templateObject722 = _taggedTemplateLiteral12(["Grouper Groupie"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject732 || (_templateObject732 = _taggedTemplateLiteral12(["Hand Turkey"]))),
      drops: 30,
      probability: 1
    }, {
      familiar: $familiar(_templateObject742 || (_templateObject742 = _taggedTemplateLiteral12(["Hippo Ballerina"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject752 || (_templateObject752 = _taggedTemplateLiteral12(["Jitterbug"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject762 || (_templateObject762 = _taggedTemplateLiteral12(["Leprechaun"]))),
      drops: 30,
      probability: 1
    }, {
      familiar: $familiar(_templateObject772 || (_templateObject772 = _taggedTemplateLiteral12(["Obtuse Angel"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject782 || (_templateObject782 = _taggedTemplateLiteral12(["Psychedelic Bear"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject79 || (_templateObject79 = _taggedTemplateLiteral12(["Robortender"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject80 || (_templateObject80 = _taggedTemplateLiteral12(["Ghost of Crimbo Commerce"]))),
      drops: 30,
      probability: 1
    }, {
      familiar: $familiar(_templateObject81 || (_templateObject81 = _taggedTemplateLiteral12(["Hobo Monkey"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject822 || (_templateObject822 = _taggedTemplateLiteral12(["Rockin' Robin"]))),
      drops: 60,
      probability: 1
    }, {
      familiar: $familiar(_templateObject832 || (_templateObject832 = _taggedTemplateLiteral12(["Feral Kobold"]))),
      drops: 30,
      probability: 1
    }, {
      familiar: $familiar(_templateObject842 || (_templateObject842 = _taggedTemplateLiteral12(["Oily Woim"]))),
      drops: 30,
      probability: 1
    }, {
      familiar: $familiar(_templateObject852 || (_templateObject852 = _taggedTemplateLiteral12(["Cat Burglar"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject862 || (_templateObject862 = _taggedTemplateLiteral12(["Misshapen Animal Skeleton"]))),
      drops: 30,
      probability: 1
    }, {
      familiar: $familiar(_templateObject872 || (_templateObject872 = _taggedTemplateLiteral12(["Gelatinous Cubeling"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject882 || (_templateObject882 = _taggedTemplateLiteral12(["Frozen Gravy Fairy"]))),
      drops: $items(_templateObject89 || (_templateObject89 = _taggedTemplateLiteral12(["cold nuggets"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject90 || (_templateObject90 = _taggedTemplateLiteral12(["Stinky Gravy Fairy"]))),
      drops: $items(_templateObject91 || (_templateObject91 = _taggedTemplateLiteral12(["stench nuggets"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject922 || (_templateObject922 = _taggedTemplateLiteral12(["Sleazy Gravy Fairy"]))),
      drops: $items(_templateObject932 || (_templateObject932 = _taggedTemplateLiteral12(["sleaze nuggets"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject942 || (_templateObject942 = _taggedTemplateLiteral12(["Spooky Gravy Fairy"]))),
      drops: $items(_templateObject952 || (_templateObject952 = _taggedTemplateLiteral12(["spooky nuggets"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject962 || (_templateObject962 = _taggedTemplateLiteral12(["Mini Kiwi"]))),
      drops: $items(_templateObject972 || (_templateObject972 = _taggedTemplateLiteral12(["mini kiwi"]))),
      probability: 0.08
    }, {
      familiar: $familiar(_templateObject982 || (_templateObject982 = _taggedTemplateLiteral12(["Flaming Gravy Fairy"]))),
      // drops a hot nugget every combat, 5 of which can be used to make a hot wad
      drops: $items(_templateObject99 || (_templateObject99 = _taggedTemplateLiteral12(["hot nuggets"]))),
      probability: 1
    }];
    FULL_RIDING_LIST = [].concat(ridingFamiliars, _toConsumableArray10(import_kolmafia18.Familiar.all().filter(function(f) {
      return !ridingFamiliars.some(function(_ref) {
        var familiar10 = _ref.familiar;
        return familiar10 === f;
      });
    }).map(function(familiar10) {
      return {
        familiar: familiar10,
        drops: 0,
        probability: 1
      };
    })));
    riderModes = /* @__PURE__ */ new Map();
    DEFAULTS = {
      modifierValueFunction: function() {
        return 0;
      },
      dropsValueFunction: function() {
        return 0;
      },
      ignoreLimitedDrops: false,
      excludeCurrentFamiliar: true
    };
    riderLists = /* @__PURE__ */ new Map();
  }
});

// node_modules/libram/dist/resources/2010/LookingGlass.js
var LookingGlass_exports = {};
__export(LookingGlass_exports, {
  findTeaPartyHatLength: function() {
    return findTeaPartyHatLength;
  },
  findTeaPartyHats: function() {
    return findTeaPartyHats;
  },
  haveTeaPartyHat: function() {
    return haveTeaPartyHat;
  },
  tryTeaPartyBuff: function() {
    return tryTeaPartyBuff;
  }
});
function _taggedTemplateLiteral13(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function validTeaPartyHat(item15, characters) {
  if ((0, import_kolmafia19.toSlot)(item15) !== $slot(_templateObject321 || (_templateObject321 = _taggedTemplateLiteral13(["hat"]))) || !(0, import_kolmafia19.canEquip)(item15)) {
    return false;
  } else if (characters <= 5) {
    return item15.nameLength <= 5;
  } else if (characters >= 30) {
    return item15.nameLength >= 30;
  }
  return characters === item15.nameLength;
}
function findTeaPartyHatLength(effect2) {
  var effectId = effect2.id;
  if (effectId < firstTeaPartyEffect.id || effectId > lastTeaPartyEffect.id) {
    throw new Error("Invalid Mad Tea Party effect ".concat(effect2));
  }
  return Math.floor(effectId - firstTeaPartyEffect.id + 5);
}
function findTeaPartyHats(effect2) {
  var characters = findTeaPartyHatLength(effect2);
  if (!characters) {
    throw new Error("Invalid Mad Tea Party effect ".concat(effect2));
  }
  return import_kolmafia19.Item.all().filter(function(item15) {
    return validTeaPartyHat(item15, characters);
  });
}
function haveTeaPartyHat(effect2) {
  var characters = findTeaPartyHatLength(effect2);
  if (!characters) {
    throw new Error("Invalid Mad Tea Party effect ".concat(effect2));
  }
  return import_kolmafia19.Item.all().find(function(item15) {
    return validTeaPartyHat(item15, characters) && have(item15);
  }) !== void 0;
}
function tryTeaPartyBuff(effect2) {
  if (get("_madTeaParty")) {
    return false;
  }
  var characters = findTeaPartyHatLength(effect2);
  if (!characters) {
    throw new Error("Invalid Mad Tea Party effect ".concat(effect2));
  }
  if (!haveTeaPartyHat(effect2)) {
    return false;
  }
  ensureEffect($effect(_templateObject420 || (_templateObject420 = _taggedTemplateLiteral13(["Down the Rabbit Hole"]))));
  if (!have($effect(_templateObject515 || (_templateObject515 = _taggedTemplateLiteral13(["Down the Rabbit Hole"]))))) {
    return false;
  }
  var turns2 = (0, import_kolmafia19.haveEffect)(effect2);
  (0, import_kolmafia19.cliExecute)("hatter ".concat(characters));
  return have(effect2) && (0, import_kolmafia19.haveEffect)(effect2) > turns2;
}
var import_kolmafia19, _templateObject100, _templateObject227, _templateObject321, _templateObject420, _templateObject515, firstTeaPartyEffect, lastTeaPartyEffect;
var init_LookingGlass = __esm({
  "node_modules/libram/dist/resources/2010/LookingGlass.js": function() {
    import_kolmafia19 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    firstTeaPartyEffect = $effect(_templateObject100 || (_templateObject100 = _taggedTemplateLiteral13(["Assaulted with Pepper"])));
    lastTeaPartyEffect = $effect(_templateObject227 || (_templateObject227 = _taggedTemplateLiteral13(["Oleaginous Soles"])));
  }
});

// node_modules/libram/dist/Copier.js
function _typeof9(o) {
  "@babel/helpers - typeof";
  return _typeof9 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof9(o);
}
function _defineProperties8(e, r) {
  for (var t = 0; t < r.length; t++) {
    var o = r[t];
    o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e, _toPropertyKey9(o.key), o);
  }
}
function _createClass8(e, r, t) {
  return r && _defineProperties8(e.prototype, r), t && _defineProperties8(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
}
function _classCallCheck8(a, n) {
  if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperty8(e, r, t) {
  return (r = _toPropertyKey9(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
}
function _toPropertyKey9(t) {
  var i = _toPrimitive9(t, "string");
  return "symbol" == _typeof9(i) ? i : i + "";
}
function _toPrimitive9(t, r) {
  if ("object" != _typeof9(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof9(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
var Copier;
var init_Copier = __esm({
  "node_modules/libram/dist/Copier.js": function() {
    Copier = /* @__PURE__ */ _createClass8(function Copier2(couldCopy, prepare, canCopy, copiedMonster, fightCopy) {
      _classCallCheck8(this, Copier2);
      _defineProperty8(this, "couldCopy", void 0);
      _defineProperty8(this, "prepare", void 0);
      _defineProperty8(this, "canCopy", void 0);
      _defineProperty8(this, "copiedMonster", void 0);
      _defineProperty8(this, "fightCopy", null);
      this.couldCopy = couldCopy;
      this.prepare = prepare;
      this.canCopy = canCopy;
      this.copiedMonster = copiedMonster;
      if (fightCopy) this.fightCopy = fightCopy;
    });
  }
});

// node_modules/libram/dist/resources/2011/ObtuseAngel.js
var ObtuseAngel_exports = {};
__export(ObtuseAngel_exports, {
  BadlyRomanticArrow: function() {
    return BadlyRomanticArrow;
  },
  canUseBadlyRomanticArrow: function() {
    return canUseBadlyRomanticArrow;
  },
  couldUseBadlyRomanticArrow: function() {
    return couldUseBadlyRomanticArrow;
  },
  getBadlyRomanticArrowMonster: function() {
    return getBadlyRomanticArrowMonster;
  },
  getBadlyRomanticArrowUses: function() {
    return getBadlyRomanticArrowUses;
  },
  have: function() {
    return have8;
  },
  haveBadlyRomanticArrowUsesRemaining: function() {
    return haveBadlyRomanticArrowUsesRemaining;
  },
  prepareBadlyRomanticArrow: function() {
    return prepareBadlyRomanticArrow;
  }
});
function _taggedTemplateLiteral14(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have8() {
  return have(familiar4);
}
function getBadlyRomanticArrowUses() {
  return Math.max(0, get("_badlyRomanticArrows"));
}
function haveBadlyRomanticArrowUsesRemaining() {
  return getBadlyRomanticArrowUses() === 0;
}
function couldUseBadlyRomanticArrow() {
  return have8() && haveBadlyRomanticArrowUsesRemaining();
}
function prepareBadlyRomanticArrow() {
  return (0, import_kolmafia20.useFamiliar)(familiar4);
}
function canUseBadlyRomanticArrow() {
  return isCurrentFamiliar(familiar4) && haveBadlyRomanticArrowUsesRemaining();
}
function getBadlyRomanticArrowMonster() {
  return get("romanticTarget");
}
var import_kolmafia20, _templateObject101, familiar4, BadlyRomanticArrow;
var init_ObtuseAngel = __esm({
  "node_modules/libram/dist/resources/2011/ObtuseAngel.js": function() {
    import_kolmafia20 = require("kolmafia");
    init_Copier();
    init_lib();
    init_property();
    init_template_string();
    familiar4 = $familiar(_templateObject101 || (_templateObject101 = _taggedTemplateLiteral14(["Obtuse Angel"])));
    BadlyRomanticArrow = new Copier(function() {
      return couldUseBadlyRomanticArrow();
    }, function() {
      return prepareBadlyRomanticArrow();
    }, function() {
      return canUseBadlyRomanticArrow();
    }, function() {
      return getBadlyRomanticArrowMonster();
    });
  }
});

// node_modules/libram/dist/resources/2012/RainDoh.js
var RainDoh_exports = {};
__export(RainDoh_exports, {
  getRainDohBlackBoxCopiesMade: function() {
    return getRainDohBlackBoxCopiesMade;
  },
  getRainDohBlackBoxMonster: function() {
    return getRainDohBlackBoxMonster;
  },
  have: function() {
    return have9;
  },
  useRainDohBlackBox: function() {
    return useRainDohBlackBox;
  }
});
function _taggedTemplateLiteral15(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have9() {
  return getFoldGroup(box).some(function(item15) {
    return have(item15);
  });
}
function getRainDohBlackBoxCopiesMade() {
  return Math.max(0, get("_raindohCopiesMade"));
}
function getRainDohBlackBoxMonster() {
  return get("rainDohMonster");
}
function useRainDohBlackBox() {
  return (0, import_kolmafia21.use)(box);
}
var import_kolmafia21, _templateObject108, box;
var init_RainDoh = __esm({
  "node_modules/libram/dist/resources/2012/RainDoh.js": function() {
    import_kolmafia21 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    box = $item(_templateObject108 || (_templateObject108 = _taggedTemplateLiteral15(["Rain-Doh black box"])));
  }
});

// node_modules/libram/dist/resources/2012/ReagnimatedGnome.js
var ReagnimatedGnome_exports = {};
__export(ReagnimatedGnome_exports, {
  bodyParts: function() {
    return bodyParts;
  },
  choosePart: function() {
    return choosePart;
  },
  chosenParts: function() {
    return chosenParts;
  },
  expectedAdvsPerCombat: function() {
    return expectedAdvsPerCombat;
  },
  have: function() {
    return have10;
  }
});
function _taggedTemplateLiteral16(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have10() {
  return have($familiar(_templateObject109 || (_templateObject109 = _taggedTemplateLiteral16(["Reagnimated Gnome"]))));
}
function chosenParts() {
  return Object.values(bodyParts).filter(function(part) {
    return have(part);
  });
}
function choosePart(part) {
  if (!have10()) return false;
  if (have(bodyParts[part])) return true;
  (0, import_kolmafia22.visitUrl)("arena.php");
  (0, import_kolmafia22.runChoice)(4);
  return chosenParts().includes(bodyParts[part]);
}
function expectedAdvsPerCombat(weight) {
  return Math.min(0.01 + weight / 1e3 * 0.99, 1);
}
var import_kolmafia22, _templateObject109, _templateObject228, _templateObject326, _templateObject421, _templateObject516, _templateObject613, bodyParts;
var init_ReagnimatedGnome = __esm({
  "node_modules/libram/dist/resources/2012/ReagnimatedGnome.js": function() {
    import_kolmafia22 = require("kolmafia");
    init_lib();
    init_template_string();
    bodyParts = {
      ears: $item(_templateObject228 || (_templateObject228 = _taggedTemplateLiteral16(["gnomish swimmer's ears"]))),
      lung: $item(_templateObject326 || (_templateObject326 = _taggedTemplateLiteral16(["gnomish coal miner's lung"]))),
      elbow: $item(_templateObject421 || (_templateObject421 = _taggedTemplateLiteral16(["gnomish tennis elbow"]))),
      kgnee: $item(_templateObject516 || (_templateObject516 = _taggedTemplateLiteral16(["gnomish housemaid's kgnee"]))),
      foot: $item(_templateObject613 || (_templateObject613 = _taggedTemplateLiteral16(["gnomish athlete's foot"])))
    };
  }
});

// node_modules/libram/dist/modifierTypes.js
var stringModifiers, stringModifiersSet, booleanModifiers, booleanModifiersSet, numericModifiers, numericModifiersSet, multiStringModifiers, multiStringModifiersSet;
var init_modifierTypes = __esm({
  "node_modules/libram/dist/modifierTypes.js": function() {
    stringModifiers = ["Class", "Intrinsic Effect", "Equalize", "Wiki Name", "Modifiers", "Outfit", "Stat Tuning", "Equips On", "Familiar Effect", "Jiggle", "Equalize Muscle", "Equalize Mysticality", "Equalize Moxie", "Avatar", "Skill", "Floor Buffed Muscle", "Floor Buffed Mysticality", "Floor Buffed Moxie", "Plumber Stat", "Recipe", "Evaluated Modifiers", "Last Available"];
    stringModifiersSet = new Set(stringModifiers);
    booleanModifiers = ["Softcore Only", "Single Equip", "Always Fumble", "Never Fumble", "Weakens Monster", "Free Pull", "Variable", "Nonstackable Watch", "Cold Immunity", "Hot Immunity", "Sleaze Immunity", "Spooky Immunity", "Stench Immunity", "Cold Vulnerability", "Hot Vulnerability", "Sleaze Vulnerability", "Spooky Vulnerability", "Stench Vulnerability", "Moxie Controls MP", "Moxie May Control MP", "Four Songs", "Adventure Randomly", "Adventure Underwater", "Underwater Familiar", "Generic", "Unarmed", "No Pull", "Lasts Until Rollover", "Alters Page Text", "Attacks Can't Miss", "Pirate", "Blind", "Breakable", "Drops Items", "Drops Meat", "Volleyball or Sombrero", "Extra Pickpocket", "Negative Status Resist"];
    booleanModifiersSet = new Set(booleanModifiers);
    numericModifiers = ["Familiar Weight", "Monster Level", "Combat Rate", "Initiative", "Experience", "Item Drop", "Meat Drop", "Damage Absorption", "Damage Reduction", "Cold Resistance", "Hot Resistance", "Sleaze Resistance", "Spooky Resistance", "Stench Resistance", "Mana Cost", "Moxie", "Moxie Percent", "Muscle", "Muscle Percent", "Mysticality", "Mysticality Percent", "Maximum HP", "Maximum HP Percent", "Maximum MP", "Maximum MP Percent", "Weapon Damage", "Ranged Damage", "Spell Damage", "Spell Damage Percent", "Cold Damage", "Hot Damage", "Sleaze Damage", "Spooky Damage", "Stench Damage", "Cold Spell Damage", "Hot Spell Damage", "Sleaze Spell Damage", "Spooky Spell Damage", "Stench Spell Damage", "Underwater Combat Rate", "Fumble", "HP Regen Min", "HP Regen Max", "MP Regen Min", "MP Regen Max", "Adventures", "Familiar Weight Percent", "Weapon Damage Percent", "Ranged Damage Percent", "Stackable Mana Cost", "Hobo Power", "Base Resting HP", "Resting HP Percent", "Bonus Resting HP", "Base Resting MP", "Resting MP Percent", "Bonus Resting MP", "Critical Hit Percent", "PvP Fights", "Volleyball", "Sombrero", "Leprechaun", "Fairy", "Meat Drop Penalty", "Hidden Familiar Weight", "Item Drop Penalty", "Initiative Penalty", "Food Drop", "Booze Drop", "Hat Drop", "Weapon Drop", "Offhand Drop", "Shirt Drop", "Pants Drop", "Accessory Drop", "Volleyball Effectiveness", "Sombrero Effectiveness", "Leprechaun Effectiveness", "Fairy Effectiveness", "Familiar Weight Cap", "Slime Resistance", "Slime Hates It", "Spell Critical Percent", "Muscle Experience", "Mysticality Experience", "Moxie Experience", "Effect Duration", "Candy Drop", "DB Combat Damage", "Sombrero Bonus", "Familiar Experience", "Sporadic Meat Drop", "Sporadic Item Drop", "Meat Bonus", "Pickpocket Chance", "Combat Mana Cost", "Muscle Experience Percent", "Mysticality Experience Percent", "Moxie Experience Percent", "Minstrel Level", "Muscle Limit", "Mysticality Limit", "Moxie Limit", "Song Duration", "Prismatic Damage", "Smithsness", "Supercold Resistance", "Reduce Enemy Defense", "Pool Skill", "Familiar Damage", "Gear Drop", "Maximum Hooch", "Water Level", "Crimbot Outfit Power", "Familiar Tuning Muscle", "Familiar Tuning Mysticality", "Familiar Tuning Moxie", "Random Monster Modifiers", "Luck", "Othello Skill", "Disco Style", "Rollover Effect Duration", "Sixgun Damage", "Fishing Skill", "Additional Song", "Sprinkle Drop", "Absorb Adventures", "Absorb Stats", "Rubee Drop", "Kruegerand Drop", "WarBear Armor Penetration", "Maximum PP", "Plumber Power", "Drippy Damage", "Drippy Resistance", "Energy", "Scrap", "Familiar Action Bonus", "Water", "Spleen Drop", "Potion Drop", "Sauce Spell Damage", "Monster Level Percent", "Food Fairy", "Booze Fairy", "Candy Fairy", "Food Fairy Effectiveness", "Booze Fairy Effectiveness", "Candy Fairy Effectiveness", "Damage Aura", "Sporadic Damage Aura", "Thorns", "Sporadic Thorns", "Stomach Capacity", "Liver Capacity", "Spleen Capacity", "Free Rests", "Leaves", "Elf Warfare Effectiveness", "Pirate Warfare Effectiveness", "MPC Drop", "Piece of Twelve Drop", "Combat Item Damage Percent", "Avoid Attack", "Damage vs. Bugbears", "Damage vs. Werewolves", "Damage vs. Zombies", "Damage vs. Ghosts", "Damage vs. Vampires", "Damage vs. Skeletons", "Damage vs. Undead", "RAM", "Lantern", "Raw Combat Rate"];
    numericModifiersSet = new Set(numericModifiers);
    multiStringModifiers = ["Effect", "Rollover Effect", "Conditional Skill (Equipped)", "Conditional Skill (Inventory)", "Lantern Element"];
    multiStringModifiersSet = new Set(multiStringModifiers);
  }
});

// node_modules/libram/dist/modifier.js
function _typeof10(o) {
  "@babel/helpers - typeof";
  return _typeof10 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof10(o);
}
function _slicedToArray6(r, e) {
  return _arrayWithHoles6(r) || _iterableToArrayLimit6(r, e) || _unsupportedIterableToArray14(r, e) || _nonIterableRest6();
}
function _nonIterableRest6() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit6(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles6(r) {
  if (Array.isArray(r)) return r;
}
function _toConsumableArray11(r) {
  return _arrayWithoutHoles11(r) || _iterableToArray11(r) || _unsupportedIterableToArray14(r) || _nonIterableSpread11();
}
function _nonIterableSpread11() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray14(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray14(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray14(r, a) : void 0;
  }
}
function _iterableToArray11(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles11(r) {
  if (Array.isArray(r)) return _arrayLikeToArray14(r);
}
function _arrayLikeToArray14(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function ownKeys6(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread6(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys6(Object(t), true).forEach(function(r2) {
      _defineProperty9(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys6(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty9(e, r, t) {
  return (r = _toPropertyKey10(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
}
function _toPropertyKey10(t) {
  var i = _toPrimitive10(t, "string");
  return "symbol" == _typeof10(i) ? i : i + "";
}
function _toPrimitive10(t, r) {
  if ("object" != _typeof10(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof10(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function isBooleanModifier(modifier) {
  return booleanModifiersSet.has(modifier);
}
function isNumericModifier(modifier) {
  return numericModifiersSet.has(modifier);
}
function isStringModifier(modifier) {
  return stringModifiersSet.has(modifier);
}
function isMultiStringModifier(modifier) {
  return multiStringModifiersSet.has(modifier);
}
function get2(name, subject) {
  if (isBooleanModifier(name)) {
    return subject === void 0 ? (0, import_kolmafia23.booleanModifier)(name) : (0, import_kolmafia23.booleanModifier)(subject, name);
  }
  if (isNumericModifier(name)) {
    return subject === void 0 ? (0, import_kolmafia23.numericModifier)(name) : (0, import_kolmafia23.numericModifier)(subject, name);
  }
  if (isStringModifier(name)) {
    return subject === void 0 ? (0, import_kolmafia23.stringModifier)(name) : (0, import_kolmafia23.stringModifier)(subject, name);
  }
  if (isMultiStringModifier(name)) {
    return subject === void 0 ? (0, import_kolmafia23.stringsModifier)(name) : (0, import_kolmafia23.stringsModifier)(subject, name);
  }
}
function pairwiseMerge(modifiers1, modifiers2) {
  var returnValue = _objectSpread6(_objectSpread6({}, modifiers1), modifiers2);
  for (var modifier in modifiers1) {
    if (Array.from(Object.values(modifiers2)).includes(modifier)) {
      if (isNumericModifier(modifier)) {
        var _modifiers1$modifier, _modifiers2$modifier;
        returnValue[modifier] = ((_modifiers1$modifier = modifiers1[modifier]) !== null && _modifiers1$modifier !== void 0 ? _modifiers1$modifier : 0) + ((_modifiers2$modifier = modifiers2[modifier]) !== null && _modifiers2$modifier !== void 0 ? _modifiers2$modifier : 0);
      }
      if (isBooleanModifier(modifier)) {
        var _modifiers1$modifier2, _modifiers2$modifier2;
        returnValue[modifier] = ((_modifiers1$modifier2 = modifiers1[modifier]) !== null && _modifiers1$modifier2 !== void 0 ? _modifiers1$modifier2 : false) || ((_modifiers2$modifier2 = modifiers2[modifier]) !== null && _modifiers2$modifier2 !== void 0 ? _modifiers2$modifier2 : false);
      }
      if (isMultiStringModifier(modifier)) {
        var _modifiers1$modifier3, _modifiers2$modifier3;
        returnValue[modifier] = [].concat(_toConsumableArray11((_modifiers1$modifier3 = modifiers1[modifier]) !== null && _modifiers1$modifier3 !== void 0 ? _modifiers1$modifier3 : []), _toConsumableArray11((_modifiers2$modifier3 = modifiers2[modifier]) !== null && _modifiers2$modifier3 !== void 0 ? _modifiers2$modifier3 : []));
      }
    }
  }
  return returnValue;
}
function mergeModifiers() {
  for (var _len = arguments.length, modifiers = new Array(_len), _key = 0; _key < _len; _key++) {
    modifiers[_key] = arguments[_key];
  }
  return modifiers.reduce(function(a, b) {
    return pairwiseMerge(a, b);
  }, {});
}
function getTotalModifier(modifier) {
  for (var _len2 = arguments.length, subjects = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
    subjects[_key2 - 1] = arguments[_key2];
  }
  return sum(subjects, function(subject) {
    return get2(modifier, subject);
  });
}
function parseModifierString(modifiers) {
  var _ref = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, _ref$numeric = _ref.numeric, numeric = _ref$numeric === void 0 ? Number : _ref$numeric, _ref$str = _ref.str, str = _ref$str === void 0 ? String : _ref$str, _ref$bool = _ref.bool, bool = _ref$bool === void 0 ? function(val) {
    return val === "true";
  } : _ref$bool, _ref$multiString = _ref.multiString, multiString = _ref$multiString === void 0 ? function(val) {
    return val.split(",");
  } : _ref$multiString;
  return Object.entries((0, import_kolmafia23.splitModifiers)(modifiers)).reduce(function(acc, _ref2) {
    var _ref3 = _slicedToArray6(_ref2, 2), key = _ref3[0], value = _ref3[1];
    return _objectSpread6(_objectSpread6({}, acc), {}, _defineProperty9({}, key, isBooleanModifier(key) ? bool(value) : isNumericModifier(key) ? numeric(value) : isMultiStringModifier(key) ? multiString(value) : str(value)));
  }, {});
}
function parseModifiers(pref) {
  var parsers = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  return parseModifierString((0, import_kolmafia23.getProperty)(pref), parsers);
}
var import_kolmafia23;
var init_modifier = __esm({
  "node_modules/libram/dist/modifier.js": function() {
    import_kolmafia23 = require("kolmafia");
    init_modifierTypes();
    init_utils();
  }
});

// node_modules/libram/dist/resources/2013/Florist.js
var Florist_exports = {};
__export(Florist_exports, {
  AloeGuvnor: function() {
    return AloeGuvnor;
  },
  ArcticMoss: function() {
    return ArcticMoss;
  },
  Artichoker: function() {
    return Artichoker;
  },
  BamBoo: function() {
    return BamBoo;
  },
  BlusteryPuffball: function() {
    return BlusteryPuffball;
  },
  CannedSpinach: function() {
    return CannedSpinach;
  },
  CeleryStalker: function() {
    return CeleryStalker;
  },
  Chillterelle: function() {
    return Chillterelle;
  },
  Crookweed: function() {
    return Crookweed;
  },
  DeadlyCinnamon: function() {
    return DeadlyCinnamon;
  },
  DisLichen: function() {
    return DisLichen;
  },
  Duckweed: function() {
    return Duckweed;
  },
  ElectricEelgrass: function() {
    return ElectricEelgrass;
  },
  FoulToadstool: function() {
    return FoulToadstool;
  },
  HornOfPlenty: function() {
    return HornOfPlenty;
  },
  Impatiens: function() {
    return Impatiens;
  },
  Kelptomaniac: function() {
    return Kelptomaniac;
  },
  LettuceSpray: function() {
    return LettuceSpray;
  },
  LooseMorels: function() {
    return LooseMorels;
  },
  MaxHeadshroom: function() {
    return MaxHeadshroom;
  },
  OrcaOrchid: function() {
    return OrcaOrchid;
  },
  PitcherPlant: function() {
    return PitcherPlant;
  },
  Portlybella: function() {
    return Portlybella;
  },
  RabidDogwood: function() {
    return RabidDogwood;
  },
  RadishRadish: function() {
    return RadishRadish;
  },
  RedFern: function() {
    return RedFern;
  },
  Rutabeggar: function() {
    return Rutabeggar;
  },
  Sargassum: function() {
    return Sargassum;
  },
  SeltzerWatercress: function() {
    return SeltzerWatercress;
  },
  ShuffleTruffle: function() {
    return ShuffleTruffle;
  },
  SkunkCabbage: function() {
    return SkunkCabbage;
  },
  SmokeRa: function() {
    return SmokeRa;
  },
  Snori: function() {
    return Snori;
  },
  Spankton: function() {
    return Spankton;
  },
  SpiderPlant: function() {
    return SpiderPlant;
  },
  StealingMagnolia: function() {
    return StealingMagnolia;
  },
  SubSeaRose: function() {
    return SubSeaRose;
  },
  UpSeaDaisy: function() {
    return UpSeaDaisy;
  },
  WarLily: function() {
    return WarLily;
  },
  WizardsWig: function() {
    return WizardsWig;
  },
  all: function() {
    return all;
  },
  flowersAvailableFor: function() {
    return flowersAvailableFor;
  },
  flowersIn: function() {
    return flowersIn;
  },
  have: function() {
    return have11;
  },
  isFull: function() {
    return isFull;
  }
});
function _typeof11(o) {
  "@babel/helpers - typeof";
  return _typeof11 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof11(o);
}
function _toConsumableArray12(r) {
  return _arrayWithoutHoles12(r) || _iterableToArray12(r) || _unsupportedIterableToArray15(r) || _nonIterableSpread12();
}
function _nonIterableSpread12() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray15(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray15(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray15(r, a) : void 0;
  }
}
function _iterableToArray12(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles12(r) {
  if (Array.isArray(r)) return _arrayLikeToArray15(r);
}
function _arrayLikeToArray15(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _classCallCheck9(a, n) {
  if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties9(e, r) {
  for (var t = 0; t < r.length; t++) {
    var o = r[t];
    o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e, _toPropertyKey11(o.key), o);
  }
}
function _createClass9(e, r, t) {
  return r && _defineProperties9(e.prototype, r), t && _defineProperties9(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
}
function _defineProperty10(e, r, t) {
  return (r = _toPropertyKey11(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
}
function _toPropertyKey11(t) {
  var i = _toPrimitive11(t, "string");
  return "symbol" == _typeof11(i) ? i : i + "";
}
function _toPrimitive11(t, r) {
  if ("object" != _typeof11(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof11(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function have11() {
  return (0, import_kolmafia24.floristAvailable)();
}
function toFlower(name) {
  var _all$find;
  return (_all$find = all.find(function(flower) {
    return name === flower.name;
  })) !== null && _all$find !== void 0 ? _all$find : null;
}
function flowersIn(location7) {
  var returnValue = [];
  Flower.plantNamesInZone(location7).map(toFlower).forEach(function(flower) {
    if (flower) returnValue.push(flower);
  });
  return returnValue;
}
function flowersAvailableFor() {
  var _get6;
  var location7 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (_get6 = get("lastAdventure")) !== null && _get6 !== void 0 ? _get6 : $location.none;
  return all.filter(function(flower) {
    return flower.available(location7);
  });
}
function isFull() {
  var _get7;
  var location7 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (_get7 = get("lastAdventure")) !== null && _get7 !== void 0 ? _get7 : $location.none;
  return flowersIn(location7).length === 3;
}
var import_kolmafia24, Flower, RabidDogwood, Rutabeggar, RadishRadish, Artichoker, SmokeRa, SkunkCabbage, DeadlyCinnamon, CeleryStalker, LettuceSpray, SeltzerWatercress, WarLily, StealingMagnolia, CannedSpinach, Impatiens, SpiderPlant, RedFern, BamBoo, ArcticMoss, AloeGuvnor, PitcherPlant, BlusteryPuffball, HornOfPlenty, WizardsWig, ShuffleTruffle, DisLichen, LooseMorels, FoulToadstool, Chillterelle, Portlybella, MaxHeadshroom, Spankton, Kelptomaniac, Crookweed, ElectricEelgrass, Duckweed, OrcaOrchid, Sargassum, SubSeaRose, Snori, UpSeaDaisy, all;
var init_Florist = __esm({
  "node_modules/libram/dist/resources/2013/Florist.js": function() {
    import_kolmafia24 = require("kolmafia");
    init_modifier();
    init_property();
    init_template_string();
    init_utils();
    Flower = /* @__PURE__ */ function() {
      function Flower2(name, id, environment, modifier) {
        var territorial = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : false;
        _classCallCheck9(this, Flower2);
        _defineProperty10(this, "name", void 0);
        _defineProperty10(this, "id", void 0);
        _defineProperty10(this, "environment", void 0);
        _defineProperty10(this, "modifier", void 0);
        _defineProperty10(this, "territorial", void 0);
        this.name = name;
        this.id = id;
        this.environment = environment;
        this.modifier = modifier;
        this.territorial = territorial;
      }
      return _createClass9(Flower2, [{
        key: "isPlantedHere",
        value: function isPlantedHere() {
          var _get3, _Flower$plantNamesInZ;
          var location7 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (_get3 = get("lastAdventure")) !== null && _get3 !== void 0 ? _get3 : $location.none;
          var plantedHere = (_Flower$plantNamesInZ = Flower2.plantNamesInZone(location7)) === null || _Flower$plantNamesInZ === void 0 ? void 0 : _Flower$plantNamesInZ.includes(this.name);
          return plantedHere !== void 0 && plantedHere;
        }
      }, {
        key: "available",
        value: function available7() {
          var _get22;
          var location7 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (_get22 = get("lastAdventure")) !== null && _get22 !== void 0 ? _get22 : $location.none;
          return this.environment === location7.environment && !get("_floristPlantsUsed").includes(this.name) && !this.isPlantedHere(location7);
        }
      }, {
        key: "dig",
        value: function dig() {
          if (!this.isPlantedHere()) return false;
          var flowers = Flower2.plantNamesInZone();
          if (!flowers[2]) return false;
          var plantNumber = flowers.indexOf(this.name);
          Flower2.visit();
          (0, import_kolmafia24.runChoice)(2, "plnti=".concat(plantNumber));
          return !this.isPlantedHere();
        }
      }, {
        key: "plant",
        value: function plant() {
          if (this.isPlantedHere()) return true;
          if (isFull()) return false;
          Flower2.visit();
          (0, import_kolmafia24.runChoice)(1, "plant=".concat(this.id));
          return this.isPlantedHere();
        }
      }], [{
        key: "visit",
        value: function visit3() {
          (0, import_kolmafia24.visitUrl)("place.php?whichplace=forestvillage&action=fv_friar");
        }
      }, {
        key: "plantNamesInZone",
        value: function plantNamesInZone() {
          var _get3, _getFloristPlants$loc;
          var location7 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (_get3 = get("lastAdventure")) !== null && _get3 !== void 0 ? _get3 : $location.none;
          return (_getFloristPlants$loc = (0, import_kolmafia24.getFloristPlants)()[location7.toString()]) !== null && _getFloristPlants$loc !== void 0 ? _getFloristPlants$loc : [];
        }
      }, {
        key: "plantsInZone",
        value: function plantsInZone() {
          var _get4;
          var location7 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (_get4 = get("lastAdventure")) !== null && _get4 !== void 0 ? _get4 : $location.none;
          return this.plantNamesInZone(location7).map(function(flowerName) {
            return toFlower(flowerName);
          }).filter(notNull);
        }
      }, {
        key: "modifiersInZone",
        value: function modifiersInZone() {
          var _get5;
          var location7 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (_get5 = get("lastAdventure")) !== null && _get5 !== void 0 ? _get5 : $location.none;
          var plants = this.plantsInZone(location7);
          if (!plants) return {};
          var modifiers = plants.map(function(plant) {
            return plant.modifier;
          }).map(function(modifier) {
            return typeof modifier === "string" ? {} : modifier;
          });
          return mergeModifiers.apply(void 0, _toConsumableArray12(modifiers));
        }
      }]);
    }();
    RabidDogwood = new Flower("Rabid Dogwood", 1, "outdoor", {
      "Monster Level": 30
    }, true);
    Rutabeggar = new Flower("Rutabeggar", 2, "outdoor", {
      "Item Drop": 25
    }, true);
    RadishRadish = new Flower("Rad-ish Radish", 3, "outdoor", {
      "Moxie Experience": 5
    }, true);
    Artichoker = new Flower("Artichoker", 4, "outdoor", "Delevels Enemy");
    SmokeRa = new Flower("Smoke-ra", 5, "outdoor", "Blocks Attacks");
    SkunkCabbage = new Flower("Skunk Cabbage", 6, "outdoor", {
      "Stench Damage": 12.5
    });
    DeadlyCinnamon = new Flower("Deadly Cinnamon", 7, "outdoor", {
      "Hot Damage": 12.5
    });
    CeleryStalker = new Flower("Celery Stalker", 8, "outdoor", {
      "Spooky Damage": 12.5
    });
    LettuceSpray = new Flower("Lettus Spray", 9, "outdoor", {
      "HP Regen Min": 10,
      "HP Regen Max": 29
    });
    SeltzerWatercress = new Flower("Seltzer Watercress", 10, "outdoor", {
      "MP Regen Min": 5,
      "MP Regen Max": 15
    });
    WarLily = new Flower("War Lily", 11, "indoor", {
      "Monster Level": 30
    }, true);
    StealingMagnolia = new Flower("Stealing Magnolia", 12, "indoor", {
      "Item Drop": 25
    }, true);
    CannedSpinach = new Flower("Canned Spinach", 13, "indoor", {
      "Muscle Experience": 5
    }, true);
    Impatiens = new Flower("Impatiens", 14, "indoor", {
      Initiative: 25
    });
    SpiderPlant = new Flower("Spider Plant", 15, "indoor", "Poison");
    RedFern = new Flower("Red Fern", 16, "indoor", "Delevels Enemy");
    BamBoo = new Flower("BamBOO!", 17, "indoor", {
      "Spooky Damage": 12.5
    });
    ArcticMoss = new Flower("Arctic Moss", 18, "indoor", {
      "Cold Damage": 12.5
    });
    AloeGuvnor = new Flower("Aloe Guv'nor", 19, "indoor", {
      "HP Regen Min": 10,
      "HP Regen Max": 30
    });
    PitcherPlant = new Flower("Pitcher Plant", 20, "indoor", {
      "MP Regen Min": 5,
      "MP Regen Max": 15
    });
    BlusteryPuffball = new Flower("Blustery Puffball", 21, "underground", {
      "Monster Level": 30
    }, true);
    HornOfPlenty = new Flower("Horn of Plenty", 22, "underground", {
      "Item Drop": 25
    }, true);
    WizardsWig = new Flower("Wizard's Wig", 23, "underground", {
      "Mysticality Experience": 5
    }, true);
    ShuffleTruffle = new Flower("Shuffle Truffle", 24, "underground", {
      Initiative: 25
    });
    DisLichen = new Flower("Dis Lichen", 25, "underground", "Delevels Enemy");
    LooseMorels = new Flower("Loose Morels", 26, "underground", {
      "Sleaze Damage": 12.5
    });
    FoulToadstool = new Flower("Foul Toadstool", 27, "underground", {
      "Stench Damage": 12.5
    });
    Chillterelle = new Flower("Chillterelle", 28, "underground", {
      "Cold Damage": 12.5
    });
    Portlybella = new Flower("Portlybella", 29, "underground", {
      "HP Regen Min": 10,
      "HP Regen Max": 30
    });
    MaxHeadshroom = new Flower("Max Headshroom", 30, "underground", {
      "MP Regen Min": 5,
      "MP Regen Max": 15
    });
    Spankton = new Flower("Spankton", 31, "underwater", "Delevels Enemy", true);
    Kelptomaniac = new Flower("Kelptomaniac", 32, "underwater", {
      "Item Drop": 40
    }, true);
    Crookweed = new Flower("Crookweed", 33, "underwater", {
      "Meat Drop": 60
    }, true);
    ElectricEelgrass = new Flower("Electric Eelgrass", 34, "underwater", "Blocks Attacks");
    Duckweed = new Flower("Duckweed", 35, "underwater", "Blocks Attacks");
    OrcaOrchid = new Flower("Orca Orchid", 36, "underwater", {
      "Weapon Damage": 12.5
    });
    Sargassum = new Flower("Sargassum", 37, "underwater", {
      "Stench Damage": 12.5
    });
    SubSeaRose = new Flower("Sub-Sea Rose", 38, "underwater", {
      "Cold Damage": 12.5
    });
    Snori = new Flower("Snori", 39, "underwater", {
      "HP Regen Min": 20,
      "HP Regen Max": 30,
      "MP Regen Min": 10,
      "MP Regen Max": 20
    });
    UpSeaDaisy = new Flower("Up Sea Daisy", 40, "underwater", {
      Experience: 30
    });
    all = Object.freeze([RabidDogwood, Rutabeggar, RadishRadish, Artichoker, SmokeRa, SkunkCabbage, DeadlyCinnamon, CeleryStalker, LettuceSpray, SeltzerWatercress, WarLily, StealingMagnolia, CannedSpinach, Impatiens, SpiderPlant, RedFern, BamBoo, ArcticMoss, AloeGuvnor, PitcherPlant, BlusteryPuffball, HornOfPlenty, WizardsWig, ShuffleTruffle, DisLichen, LooseMorels, FoulToadstool, Chillterelle, Portlybella, MaxHeadshroom, Spankton, Kelptomaniac, Crookweed, ElectricEelgrass, Duckweed, OrcaOrchid, Sargassum, SubSeaRose, Snori, UpSeaDaisy]);
  }
});

// node_modules/libram/dist/resources/2013/JungMan.js
var JungMan_exports = {};
__export(JungMan_exports, {
  JAR_ITEMS: function() {
    return JAR_ITEMS;
  },
  Jar: function() {
    return Jar;
  },
  canJickJar: function() {
    return canJickJar;
  },
  have: function() {
    return have12;
  },
  makeJar: function() {
    return makeJar;
  }
});
function _typeof12(o) {
  "@babel/helpers - typeof";
  return _typeof12 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof12(o);
}
function _slicedToArray7(r, e) {
  return _arrayWithHoles7(r) || _iterableToArrayLimit7(r, e) || _unsupportedIterableToArray16(r, e) || _nonIterableRest7();
}
function _nonIterableRest7() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray16(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray16(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray16(r, a) : void 0;
  }
}
function _arrayLikeToArray16(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _iterableToArrayLimit7(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles7(r) {
  if (Array.isArray(r)) return r;
}
function _defineProperty11(e, r, t) {
  return (r = _toPropertyKey12(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
}
function _toPropertyKey12(t) {
  var i = _toPrimitive12(t, "string");
  return "symbol" == _typeof12(i) ? i : i + "";
}
function _toPrimitive12(t, r) {
  if ("object" != _typeof12(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof12(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _taggedTemplateLiteral17(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have12() {
  return (0, import_kolmafia25.haveFamiliar)(familiar5);
}
function getJungUrl(jar) {
  var _PLACES$jar = _slicedToArray7(PLACES[jar], 2), page = _PLACES$jar[0], answer = _PLACES$jar[1];
  var question = page === "showplayer" ? "who" : "which".concat(page);
  var params = [["action", "jung"], ["whichperson", jar]];
  if (answer) params.push([question, answer]);
  return "".concat(page, ".php?").concat(params.map(function(pair) {
    return pair.join("=");
  }).join("&"));
}
function canJickJar() {
  if (get("_jickJarAvailable") === "unknown") (0, import_kolmafia25.visitUrl)("showplayer.php?who=1");
  return get("_jickJarAvailable") === "true" && !get("_psychoJarFilled");
}
function makeJar(jar) {
  if (jar === Jar.JICK && !canJickJar()) return false;
  var result = (0, import_kolmafia25.visitUrl)(getJungUrl(jar));
  return result.includes("You open up the jar and look into the patient's eyes.");
}
var import_kolmafia25, _templateObject128, _templateObject229, _templateObject327, _templateObject426, _templateObject517, _templateObject614, _templateObject710, _templateObject810, familiar5, Jar, PLACES, JAR_ITEMS;
var init_JungMan = __esm({
  "node_modules/libram/dist/resources/2013/JungMan.js": function() {
    import_kolmafia25 = require("kolmafia");
    init_property();
    init_template_string();
    familiar5 = $familiar(_templateObject128 || (_templateObject128 = _taggedTemplateLiteral17(["Angry Jung Man"])));
    (function(Jar2) {
      Jar2["SUSPICIOUS_GUY"] = "susguy";
      Jar2["GOURD_CAPTAIN"] = "gourdcaptain";
      Jar2["CRACKPOT_MYSTIC"] = "mystic";
      Jar2["OLD_MAN"] = "oldman";
      Jar2["PRETENTIOUS_ARTIST"] = "artist";
      Jar2["MEATSMITH"] = "meatsmith";
      Jar2["JICK"] = "jick";
    })(Jar || (Jar = {}));
    PLACES = _defineProperty11(_defineProperty11(_defineProperty11(_defineProperty11(_defineProperty11(_defineProperty11(_defineProperty11({}, Jar.PRETENTIOUS_ARTIST, ["place", "town_wrong"]), Jar.GOURD_CAPTAIN, ["place", "town_right"]), Jar.CRACKPOT_MYSTIC, ["shop", "mystic"]), Jar.OLD_MAN, ["place", "sea_oldman"]), Jar.MEATSMITH, ["shop", "meatsmith"]), Jar.JICK, ["showplayer", "1"]), Jar.SUSPICIOUS_GUY, ["tavern"]);
    JAR_ITEMS = _defineProperty11(_defineProperty11(_defineProperty11(_defineProperty11(_defineProperty11(_defineProperty11(_defineProperty11({}, Jar.SUSPICIOUS_GUY, $item(_templateObject229 || (_templateObject229 = _taggedTemplateLiteral17(["jar of psychoses (The Suspicious-Looking Guy)"])))), Jar.GOURD_CAPTAIN, $item(_templateObject327 || (_templateObject327 = _taggedTemplateLiteral17(["jar of psychoses (The Captain of the Gourd)"])))), Jar.CRACKPOT_MYSTIC, $item(_templateObject426 || (_templateObject426 = _taggedTemplateLiteral17(["jar of psychoses (The Crackpot Mystic)"])))), Jar.OLD_MAN, $item(_templateObject517 || (_templateObject517 = _taggedTemplateLiteral17(["jar of psychoses (The Old Man)"])))), Jar.PRETENTIOUS_ARTIST, $item(_templateObject614 || (_templateObject614 = _taggedTemplateLiteral17(["jar of psychoses (The Pretentious Artist)"])))), Jar.MEATSMITH, $item(_templateObject710 || (_templateObject710 = _taggedTemplateLiteral17(["jar of psychoses (The Meatsmith)"])))), Jar.JICK, $item(_templateObject810 || (_templateObject810 = _taggedTemplateLiteral17(["jar of psychoses (Jick)"]))));
  }
});

// node_modules/libram/dist/resources/2014/ConspiracyIsland.js
var ConspiracyIsland_exports = {};
__export(ConspiracyIsland_exports, {
  QUESTS: function() {
    return QUESTS;
  },
  activateOmega: function() {
    return activateOmega;
  },
  activateProtocol: function() {
    return activateProtocol;
  },
  completedOneTimeQuests: function() {
    return completedOneTimeQuests;
  },
  getOmega: function() {
    return getOmega;
  },
  getQuest: function() {
    return getQuest;
  },
  turnInQuest: function() {
    return turnInQuest;
  }
});
function _typeof13(o) {
  "@babel/helpers - typeof";
  return _typeof13 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof13(o);
}
function _taggedTemplateLiteral18(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function _classCallCheck10(a, n) {
  if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties10(e, r) {
  for (var t = 0; t < r.length; t++) {
    var o = r[t];
    o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e, _toPropertyKey13(o.key), o);
  }
}
function _createClass10(e, r, t) {
  return r && _defineProperties10(e.prototype, r), t && _defineProperties10(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
}
function _defineProperty12(e, r, t) {
  return (r = _toPropertyKey13(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
}
function _toPropertyKey13(t) {
  var i = _toPrimitive13(t, "string");
  return "symbol" == _typeof13(i) ? i : i + "";
}
function _toPrimitive13(t, r) {
  if ("object" != _typeof13(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof13(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function completedOneTimeQuests() {
  return QUESTS.filter(function(q) {
    return q.isOneTime();
  }).every(function(q) {
    return q.isFinished();
  });
}
function activateProtocol(protocol) {
  (0, import_kolmafia26.visitUrl)("place.php?whichplace=airport_spooky_bunker&action=si_controlpanel");
  (0, import_kolmafia26.runChoice)(protocol);
}
function getOmega() {
  return get("controlPanelOmega");
}
function activateOmega() {
  var completeAllQuests = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
  if (get("_controlPanelUsed")) {
    return;
  }
  for (var i = 1; i <= 9; i++) {
    var active = get("controlPanel".concat(i), false);
    if (!active) {
      activateProtocol(i);
      break;
    }
  }
  if (getOmega() < 99 || !completedOneTimeQuests() && completeAllQuests) return;
  activateProtocol(1);
  activateProtocol(10);
}
function visitRadio() {
  return (0, import_kolmafia26.visitUrl)("place.php?whichplace=airport_spooky&action=airport2_radio");
}
function getQuest() {
  var accept = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
  var active = QUESTS.find(function(q) {
    return q.isActive();
  });
  if (active) return active;
  if (!accept) return null;
  var _loop = function _loop2() {
    var _QUESTS$find;
    var page = visitRadio();
    if (!(0, import_kolmafia26.handlingChoice)()) return {
      v: null
    };
    if (page.includes("try again tomorrow")) return {
      v: null
    };
    var quest7 = get("_questESp");
    if (quest7 !== "") return {
      v: (_QUESTS$find = QUESTS.find(function(q) {
        return q.prop === quest7;
      })) !== null && _QUESTS$find !== void 0 ? _QUESTS$find : null
    };
  }, _ret;
  for (var i = 0; i < 11; i++) {
    _ret = _loop();
    if (_ret) return _ret.v;
  }
  return null;
}
function turnInQuest() {
  var quest7 = getQuest();
  if (!(quest7 !== null && quest7 !== void 0 && quest7.isReadyToTurnIn())) return false;
  visitRadio();
  (0, import_kolmafia26.runChoice)(1);
  return quest7.isFinished();
}
var import_kolmafia26, _templateObject129, _templateObject230, _templateObject328, _templateObject427, _templateObject518, _templateObject615, _templateObject711, _templateObject811, _templateObject910, _templateObject09, _templateObject130, ConspiracyQuest, QUESTS;
var init_ConspiracyIsland = __esm({
  "node_modules/libram/dist/resources/2014/ConspiracyIsland.js": function() {
    import_kolmafia26 = require("kolmafia");
    init_lib();
    init_maximize();
    init_property();
    init_template_string();
    ConspiracyQuest = /* @__PURE__ */ function() {
      function ConspiracyQuest2(prop, reward, complete, location7, requirements) {
        _classCallCheck10(this, ConspiracyQuest2);
        _defineProperty12(this, "prop", void 0);
        _defineProperty12(this, "reward", void 0);
        _defineProperty12(this, "complete", void 0);
        _defineProperty12(this, "location", void 0);
        _defineProperty12(this, "requirements", void 0);
        this.prop = prop;
        this.reward = reward;
        this.complete = complete;
        this.location = location7;
        this.requirements = requirements !== null && requirements !== void 0 ? requirements : new Requirement([], {});
      }
      return _createClass10(ConspiracyQuest2, [{
        key: "isOneTime",
        value: function isOneTime() {
          return this.reward !== 30;
        }
      }, {
        key: "isStarted",
        value: function isStarted() {
          return questStep(this.prop) >= 0;
        }
      }, {
        key: "isFinished",
        value: function isFinished() {
          return questStep(this.prop) === 999;
        }
      }, {
        key: "isActive",
        value: function isActive() {
          return this.isStarted() && !this.isFinished();
        }
      }, {
        key: "isReadyToTurnIn",
        value: function isReadyToTurnIn() {
          return questStep(this.prop) === this.complete;
        }
      }]);
    }();
    QUESTS = [new ConspiracyQuest("questESpClipper", 20, 1, $location(_templateObject129 || (_templateObject129 = _taggedTemplateLiteral18(["The Mansion of Dr. Weirdeaux"])))), new ConspiracyQuest("questESpEVE", 30, 1, $location(_templateObject230 || (_templateObject230 = _taggedTemplateLiteral18(["The Secret Government Laboratory"])))), new ConspiracyQuest("questESpFakeMedium", 30, 1, $location(_templateObject328 || (_templateObject328 = _taggedTemplateLiteral18(["The Secret Government Laboratory"])))), new ConspiracyQuest("questESpGore", 20, 2, $location(_templateObject427 || (_templateObject427 = _taggedTemplateLiteral18(["The Secret Government Laboratory"]))), new Requirement(["Meat Drop"], {
      forceEquip: [$item(_templateObject518 || (_templateObject518 = _taggedTemplateLiteral18(["gore bucket"])))]
    })), new ConspiracyQuest("questESpJunglePun", 20, 2, $location(_templateObject615 || (_templateObject615 = _taggedTemplateLiteral18(["The Deep Dark Jungle"]))), new Requirement(["Mysticality"], {
      forceEquip: [$item(_templateObject711 || (_templateObject711 = _taggedTemplateLiteral18(["encrypted micro-cassette recorder"])))]
    })), new ConspiracyQuest("questESpOutOfOrder", 30, 2, $location(_templateObject811 || (_templateObject811 = _taggedTemplateLiteral18(["The Deep Dark Jungle"]))), new Requirement(["Initiative"], {
      forceEquip: [$item(_templateObject910 || (_templateObject910 = _taggedTemplateLiteral18(["GPS-tracking wristwatch"])))]
    })), new ConspiracyQuest("questESpSerum", 30, 1, $location(_templateObject09 || (_templateObject09 = _taggedTemplateLiteral18(["The Mansion of Dr. Weirdeaux"])))), new ConspiracyQuest("questESpSmokes", 30, 1, $location(_templateObject130 || (_templateObject130 = _taggedTemplateLiteral18(["The Deep Dark Jungle"]))))];
  }
});

// node_modules/libram/dist/resources/2014/CrimboShrub.js
var CrimboShrub_exports = {};
__export(CrimboShrub_exports, {
  decorate: function() {
    return decorate;
  },
  have: function() {
    return have13;
  }
});
function _taggedTemplateLiteral19(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have13() {
  return have($familiar(_templateObject131 || (_templateObject131 = _taggedTemplateLiteral19(["Crimbo Shrub"]))));
}
function isDecoratedWith(topper, lights, garland, gifts) {
  var decorations = [get("shrubTopper"), get("shrubLights"), get("shrubGarland"), get("shrubGifts")].map(function(x) {
    return Prefs[x];
  });
  return [topper, lights, garland, gifts].every(function(x, i) {
    return x === decorations[i];
  });
}
function decorate(topper, lights, garland, gifts) {
  if (!have13()) return false;
  if (get("_shrubDecorated")) return isDecoratedWith(topper, lights, garland, gifts);
  if (!have($item(_templateObject231 || (_templateObject231 = _taggedTemplateLiteral19(["box of old Crimbo decorations"]))))) {
    (0, import_kolmafia27.useFamiliar)($familiar(_templateObject329 || (_templateObject329 = _taggedTemplateLiteral19(["Crimbo Shrub"]))));
  }
  directlyUse($item(_templateObject428 || (_templateObject428 = _taggedTemplateLiteral19(["box of old Crimbo decorations"]))));
  (0, import_kolmafia27.visitUrl)("choice.php?whichchoice=999&pwd=&option=1&topper=".concat(Toppers[topper], "&lights=").concat(Lights[lights], "&garland=").concat(Garland[garland], "&gift=").concat(Gifts[gifts]));
  return isDecoratedWith(topper, lights, garland, gifts);
}
var import_kolmafia27, _templateObject131, _templateObject231, _templateObject329, _templateObject428, Toppers, Lights, Garland, Gifts, Prefs;
var init_CrimboShrub = __esm({
  "node_modules/libram/dist/resources/2014/CrimboShrub.js": function() {
    import_kolmafia27 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    Toppers = {
      Muscle: 1,
      Mysticality: 2,
      Moxie: 3
    };
    Lights = {
      "Prismatic Damage": 1,
      "Hot Damage": 2,
      "Cold Damage": 3,
      "Stench Damage": 4,
      "Spooky Damage": 5,
      "Sleaze Damage": 6
    };
    Garland = {
      "HP Regen": 1,
      "PvP Fights": 2,
      Blocking: 3
    };
    Gifts = {
      "Yellow Ray": 1,
      "Red Ray": 2,
      Gifts: 3
    };
    Prefs = {
      Muscle: "Muscle",
      Mysticality: "Mysticality",
      Moxie: "Moxie",
      Prismatic: "Prismatic Damage",
      Hot: "Hot Damage",
      Cold: "Cold Damage",
      Stench: "Stench Damage",
      Spooky: "Spooky Damage",
      Sleaze: "Sleaze Damage",
      HP: "HP Regen",
      PvP: "PvP Fights",
      blocking: "Blocking",
      yellow: "Yellow Ray",
      meat: "Red Ray",
      gifts: "Gifts"
    };
  }
});

// node_modules/libram/dist/resources/2014/DNALab.js
var DNALab_exports = {};
__export(DNALab_exports, {
  getEffect: function() {
    return getEffect2;
  },
  getTonic: function() {
    return getTonic;
  },
  have: function() {
    return have14;
  },
  hybridize: function() {
    return hybridize;
  },
  installed: function() {
    return installed2;
  },
  isHybridized: function() {
    return isHybridized;
  },
  makeTonic: function() {
    return makeTonic;
  },
  phylumFor: function() {
    return phylumFor;
  },
  tonicsLeft: function() {
    return tonicsLeft;
  }
});
function _slicedToArray8(r, e) {
  return _arrayWithHoles8(r) || _iterableToArrayLimit8(r, e) || _unsupportedIterableToArray17(r, e) || _nonIterableRest8();
}
function _nonIterableRest8() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray17(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray17(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray17(r, a) : void 0;
  }
}
function _arrayLikeToArray17(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _iterableToArrayLimit8(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles8(r) {
  if (Array.isArray(r)) return r;
}
function _taggedTemplateLiteral20(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have14() {
  return have(lab) || (0, import_kolmafia28.getWorkshed)() === lab;
}
function installed2() {
  return (0, import_kolmafia28.getWorkshed)() === lab;
}
function isHybridized(tonic) {
  if (!tonic) return installed2() && get("_dnaHybrid");
  var tonicEffect = tonic instanceof import_kolmafia28.Effect ? tonic : tonic instanceof import_kolmafia28.Phylum ? getEffect2(tonic) : (0, import_kolmafia28.toEffect)((0, import_kolmafia28.stringModifier)(tonic, "Effect"));
  return tonicEffects.includes(tonicEffect) && (0, import_kolmafia28.haveEffect)(tonicEffect) === 2147483647;
}
function getTonic(phylum) {
  var _phylaTonics$get;
  return (_phylaTonics$get = phylaTonics.get(phylum)) !== null && _phylaTonics$get !== void 0 ? _phylaTonics$get : $item.none;
}
function getEffect2(phylum) {
  var _phylaEffects$get;
  return (_phylaEffects$get = phylaEffects.get(phylum)) !== null && _phylaEffects$get !== void 0 ? _phylaEffects$get : $effect.none;
}
function phylumFor(dnatype) {
  if (dnatype instanceof import_kolmafia28.Effect) {
    var phylumPair = Array.from(phylaEffects.entries()).find(function(_ref) {
      var _ref2 = _slicedToArray8(_ref, 2), effect2 = _ref2[1];
      return effect2 === dnatype;
    });
    return phylumPair ? phylumPair[0] : null;
  } else {
    var _phylumPair = Array.from(phylaTonics.entries()).find(function(_ref3) {
      var _ref4 = _slicedToArray8(_ref3, 2), tonic = _ref4[1];
      return tonic === dnatype;
    });
    return _phylumPair ? _phylumPair[0] : null;
  }
}
function hybridize() {
  if (get("_dnaHybrid")) return false;
  if (!installed2()) return false;
  var currentSyringe = get("dnaSyringe");
  if (!currentSyringe) return false;
  var tonicPotion = getTonic(currentSyringe);
  var expectedEffect = (0, import_kolmafia28.toEffect)((0, import_kolmafia28.stringModifier)(tonicPotion, "Effect"));
  (0, import_kolmafia28.cliExecute)("camp dnainject");
  return isHybridized(expectedEffect);
}
function makeTonic() {
  var amount2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1;
  if (!installed2()) return false;
  var currentSyringe = get("dnaSyringe");
  if (!currentSyringe) return false;
  var tonicPotion = getTonic(currentSyringe);
  var amountToMake = clamp(amount2, 0, tonicsLeft());
  var startingAmount = (0, import_kolmafia28.itemAmount)(tonicPotion);
  (0, import_kolmafia28.cliExecute)("camp dnapotion ".concat(amountToMake));
  return (0, import_kolmafia28.itemAmount)(tonicPotion) - startingAmount === amountToMake;
}
function tonicsLeft() {
  return clamp(3 - get("_dnaPotionsMade"), 0, 3);
}
var import_kolmafia28, _templateObject138, _templateObject236, _templateObject330, _templateObject429, _templateObject519, _templateObject616, _templateObject713, _templateObject812, _templateObject911, _templateObject010, _templateObject139, _templateObject1010, _templateObject1111, _templateObject1210, _templateObject1310, _templateObject148, _templateObject158, _templateObject168, _templateObject177, _templateObject187, _templateObject197, _templateObject207, _templateObject2111, _templateObject2210, _templateObject237, _templateObject246, _templateObject256, _templateObject266, _templateObject276, _templateObject286, _templateObject296, _templateObject306, _templateObject3111, _templateObject3210, _templateObject336, _templateObject346, _templateObject356, _templateObject366, _templateObject376, _templateObject386, _templateObject396, _templateObject406, _templateObject4111, _templateObject4210, _templateObject435, _templateObject444, _templateObject454, _templateObject464, _templateObject474, _templateObject484, _templateObject493, _templateObject503, _templateObject5110, _templateObject523, _templateObject533, _templateObject543, _templateObject553, _templateObject563, _templateObject573, _templateObject583, _templateObject593, _templateObject603, _templateObject617, _templateObject623, _templateObject633, _templateObject643, _templateObject653, _templateObject663, _templateObject673, _templateObject683, _templateObject693, _templateObject703, _templateObject714, _templateObject723, _templateObject733, _templateObject743, _templateObject753, _templateObject763, _templateObject773, _templateObject783, _templateObject792, _templateObject802, _templateObject813, _templateObject823, _templateObject833, lab, phylaEffects, phylaTonics, tonicEffects;
var init_DNALab = __esm({
  "node_modules/libram/dist/resources/2014/DNALab.js": function() {
    import_kolmafia28 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    lab = $item(_templateObject138 || (_templateObject138 = _taggedTemplateLiteral20(["Little Geneticist DNA-Splicing Lab"])));
    phylaEffects = /* @__PURE__ */ new Map([[$phylum(_templateObject236 || (_templateObject236 = _taggedTemplateLiteral20(["beast"]))), $effect(_templateObject330 || (_templateObject330 = _taggedTemplateLiteral20(["Human-Beast Hybrid"])))], [$phylum(_templateObject429 || (_templateObject429 = _taggedTemplateLiteral20(["bug"]))), $effect(_templateObject519 || (_templateObject519 = _taggedTemplateLiteral20(["Human-Insect Hybrid"])))], [$phylum(_templateObject616 || (_templateObject616 = _taggedTemplateLiteral20(["constellation"]))), $effect(_templateObject713 || (_templateObject713 = _taggedTemplateLiteral20(["Human-Constellation Hybrid"])))], [$phylum(_templateObject812 || (_templateObject812 = _taggedTemplateLiteral20(["construct"]))), $effect(_templateObject911 || (_templateObject911 = _taggedTemplateLiteral20(["Human-Machine Hybrid"])))], [$phylum(_templateObject010 || (_templateObject010 = _taggedTemplateLiteral20(["demon"]))), $effect(_templateObject139 || (_templateObject139 = _taggedTemplateLiteral20(["Human-Demon Hybrid"])))], [$phylum(_templateObject1010 || (_templateObject1010 = _taggedTemplateLiteral20(["dude"]))), $effect(_templateObject1111 || (_templateObject1111 = _taggedTemplateLiteral20(["Human-Human Hybrid"])))], [$phylum(_templateObject1210 || (_templateObject1210 = _taggedTemplateLiteral20(["elemental"]))), $effect(_templateObject1310 || (_templateObject1310 = _taggedTemplateLiteral20(["Human-Elemental Hybrid"])))], [$phylum(_templateObject148 || (_templateObject148 = _taggedTemplateLiteral20(["elf"]))), $effect(_templateObject158 || (_templateObject158 = _taggedTemplateLiteral20(["Human-Elf Hybrid"])))], [$phylum(_templateObject168 || (_templateObject168 = _taggedTemplateLiteral20(["fish"]))), $effect(_templateObject177 || (_templateObject177 = _taggedTemplateLiteral20(["Human-Fish Hybrid"])))], [$phylum(_templateObject187 || (_templateObject187 = _taggedTemplateLiteral20(["goblin"]))), $effect(_templateObject197 || (_templateObject197 = _taggedTemplateLiteral20(["Human-Goblin Hybrid"])))], [$phylum(_templateObject207 || (_templateObject207 = _taggedTemplateLiteral20(["hippy"]))), $effect(_templateObject2111 || (_templateObject2111 = _taggedTemplateLiteral20(["Human-Hobo Hybrid"])))], [$phylum(_templateObject2210 || (_templateObject2210 = _taggedTemplateLiteral20(["horror"]))), $effect(_templateObject237 || (_templateObject237 = _taggedTemplateLiteral20(["Human-Horror Hybrid"])))], [$phylum(_templateObject246 || (_templateObject246 = _taggedTemplateLiteral20(["humanoid"]))), $effect(_templateObject256 || (_templateObject256 = _taggedTemplateLiteral20(["Human-Humanoid Hybrid"])))], [$phylum(_templateObject266 || (_templateObject266 = _taggedTemplateLiteral20(["mer-kin"]))), $effect(_templateObject276 || (_templateObject276 = _taggedTemplateLiteral20(["Human-Mer-kin Hybrid"])))], [$phylum(_templateObject286 || (_templateObject286 = _taggedTemplateLiteral20(["orc"]))), $effect(_templateObject296 || (_templateObject296 = _taggedTemplateLiteral20(["Human-Orc Hybrid"])))], [$phylum(_templateObject306 || (_templateObject306 = _taggedTemplateLiteral20(["penguin"]))), $effect(_templateObject3111 || (_templateObject3111 = _taggedTemplateLiteral20(["Human-Penguin Hybrid"])))], [$phylum(_templateObject3210 || (_templateObject3210 = _taggedTemplateLiteral20(["pirate"]))), $effect(_templateObject336 || (_templateObject336 = _taggedTemplateLiteral20(["Human-Pirate Hybrid"])))], [$phylum(_templateObject346 || (_templateObject346 = _taggedTemplateLiteral20(["plant"]))), $effect(_templateObject356 || (_templateObject356 = _taggedTemplateLiteral20(["Human-Plant Hybrid"])))], [$phylum(_templateObject366 || (_templateObject366 = _taggedTemplateLiteral20(["slime"]))), $effect(_templateObject376 || (_templateObject376 = _taggedTemplateLiteral20(["Human-Slime Hybrid"])))], [$phylum(_templateObject386 || (_templateObject386 = _taggedTemplateLiteral20(["undead"]))), $effect(_templateObject396 || (_templateObject396 = _taggedTemplateLiteral20(["Human-Undead Hybrid"])))], [$phylum(_templateObject406 || (_templateObject406 = _taggedTemplateLiteral20(["weird"]))), $effect(_templateObject4111 || (_templateObject4111 = _taggedTemplateLiteral20(["Human-Weird Thing Hybrid"])))]]);
    phylaTonics = /* @__PURE__ */ new Map([[$phylum(_templateObject4210 || (_templateObject4210 = _taggedTemplateLiteral20(["beast"]))), $item(_templateObject435 || (_templateObject435 = _taggedTemplateLiteral20(["Gene Tonic: Beast"])))], [$phylum(_templateObject444 || (_templateObject444 = _taggedTemplateLiteral20(["bug"]))), $item(_templateObject454 || (_templateObject454 = _taggedTemplateLiteral20(["Gene Tonic: Insect"])))], [$phylum(_templateObject464 || (_templateObject464 = _taggedTemplateLiteral20(["constellation"]))), $item(_templateObject474 || (_templateObject474 = _taggedTemplateLiteral20(["Gene Tonic: Constellation"])))], [$phylum(_templateObject484 || (_templateObject484 = _taggedTemplateLiteral20(["construct"]))), $item(_templateObject493 || (_templateObject493 = _taggedTemplateLiteral20(["Gene Tonic: Construct"])))], [$phylum(_templateObject503 || (_templateObject503 = _taggedTemplateLiteral20(["demon"]))), $item(_templateObject5110 || (_templateObject5110 = _taggedTemplateLiteral20(["Gene Tonic: Demon"])))], [$phylum(_templateObject523 || (_templateObject523 = _taggedTemplateLiteral20(["dude"]))), $item(_templateObject533 || (_templateObject533 = _taggedTemplateLiteral20(["Gene Tonic: Humanoid"])))], [$phylum(_templateObject543 || (_templateObject543 = _taggedTemplateLiteral20(["elemental"]))), $item(_templateObject553 || (_templateObject553 = _taggedTemplateLiteral20(["Gene Tonic: Elemental"])))], [$phylum(_templateObject563 || (_templateObject563 = _taggedTemplateLiteral20(["elf"]))), $item(_templateObject573 || (_templateObject573 = _taggedTemplateLiteral20(["Gene Tonic: Elf"])))], [$phylum(_templateObject583 || (_templateObject583 = _taggedTemplateLiteral20(["fish"]))), $item(_templateObject593 || (_templateObject593 = _taggedTemplateLiteral20(["Gene Tonic: Fish"])))], [$phylum(_templateObject603 || (_templateObject603 = _taggedTemplateLiteral20(["goblin"]))), $item(_templateObject617 || (_templateObject617 = _taggedTemplateLiteral20(["Gene Tonic: Goblin"])))], [$phylum(_templateObject623 || (_templateObject623 = _taggedTemplateLiteral20(["hippy"]))), $item(_templateObject633 || (_templateObject633 = _taggedTemplateLiteral20(["Gene Tonic: Hobo"])))], [$phylum(_templateObject643 || (_templateObject643 = _taggedTemplateLiteral20(["horror"]))), $item(_templateObject653 || (_templateObject653 = _taggedTemplateLiteral20(["Gene Tonic: Horror"])))], [$phylum(_templateObject663 || (_templateObject663 = _taggedTemplateLiteral20(["humanoid"]))), $item(_templateObject673 || (_templateObject673 = _taggedTemplateLiteral20(["Gene Tonic: Humanoid"])))], [$phylum(_templateObject683 || (_templateObject683 = _taggedTemplateLiteral20(["mer-kin"]))), $item(_templateObject693 || (_templateObject693 = _taggedTemplateLiteral20(["Gene Tonic: Mer-kin"])))], [$phylum(_templateObject703 || (_templateObject703 = _taggedTemplateLiteral20(["orc"]))), $item(_templateObject714 || (_templateObject714 = _taggedTemplateLiteral20(["Gene Tonic: Orc"])))], [$phylum(_templateObject723 || (_templateObject723 = _taggedTemplateLiteral20(["penguin"]))), $item(_templateObject733 || (_templateObject733 = _taggedTemplateLiteral20(["Gene Tonic: Penguin"])))], [$phylum(_templateObject743 || (_templateObject743 = _taggedTemplateLiteral20(["pirate"]))), $item(_templateObject753 || (_templateObject753 = _taggedTemplateLiteral20(["Gene Tonic: Pirate"])))], [$phylum(_templateObject763 || (_templateObject763 = _taggedTemplateLiteral20(["plant"]))), $item(_templateObject773 || (_templateObject773 = _taggedTemplateLiteral20(["Gene Tonic: Plant"])))], [$phylum(_templateObject783 || (_templateObject783 = _taggedTemplateLiteral20(["slime"]))), $item(_templateObject792 || (_templateObject792 = _taggedTemplateLiteral20(["Gene Tonic: Slime"])))], [$phylum(_templateObject802 || (_templateObject802 = _taggedTemplateLiteral20(["undead"]))), $item(_templateObject813 || (_templateObject813 = _taggedTemplateLiteral20(["Gene Tonic: Undead"])))], [$phylum(_templateObject823 || (_templateObject823 = _taggedTemplateLiteral20(["weird"]))), $item(_templateObject833 || (_templateObject833 = _taggedTemplateLiteral20(["Gene Tonic: Weird"])))]]);
    tonicEffects = Array.from(phylaEffects.values());
  }
});

// node_modules/libram/dist/resources/2014/WinterGarden.js
var WinterGarden_exports = {};
__export(WinterGarden_exports, {
  UnfinishedIceSculpture: function() {
    return UnfinishedIceSculpture;
  },
  couldUseUnfinishedIceSculpture: function() {
    return couldUseUnfinishedIceSculpture;
  },
  getUnfinishedIceSculptureMonster: function() {
    return getUnfinishedIceSculptureMonster;
  },
  have: function() {
    return have15;
  },
  haveUnfinishedIceSculpture: function() {
    return haveUnfinishedIceSculpture;
  },
  isUnfinishedIceSculptureUsed: function() {
    return isUnfinishedIceSculptureUsed;
  }
});
function _taggedTemplateLiteral21(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have15() {
  return haveInCampground($item(_templateObject140 || (_templateObject140 = _taggedTemplateLiteral21(["packet of winter seeds"]))));
}
function haveUnfinishedIceSculpture() {
  return have($item(_templateObject238 || (_templateObject238 = _taggedTemplateLiteral21(["unfinished ice sculpture"]))));
}
function isUnfinishedIceSculptureUsed() {
  return get("_iceSculptureUsed");
}
function couldUseUnfinishedIceSculpture() {
  return have($item(_templateObject331 || (_templateObject331 = _taggedTemplateLiteral21(["unfinished ice sculpture"])))) && !have($item(_templateObject430 || (_templateObject430 = _taggedTemplateLiteral21(["ice sculpture"]))));
}
function getUnfinishedIceSculptureMonster() {
  return get("iceSculptureMonster");
}
var _templateObject140, _templateObject238, _templateObject331, _templateObject430, UnfinishedIceSculpture;
var init_WinterGarden = __esm({
  "node_modules/libram/dist/resources/2014/WinterGarden.js": function() {
    init_Copier();
    init_lib();
    init_property();
    init_template_string();
    UnfinishedIceSculpture = new Copier(function() {
      return couldUseUnfinishedIceSculpture();
    }, null, function() {
      return couldUseUnfinishedIceSculpture();
    }, function() {
      return getUnfinishedIceSculptureMonster();
    });
  }
});

// node_modules/libram/dist/resources/2015/BarrelShrine.js
var BarrelShrine_exports = {};
__export(BarrelShrine_exports, {
  have: function() {
    return have16;
  },
  smashParty: function() {
    return smashParty;
  }
});
function _taggedTemplateLiteral22(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have16() {
  return get("barrelShrineUnlocked");
}
function smashParty() {
  if (!have16()) return;
  var total = sum(BARRELS, import_kolmafia29.availableAmount);
  var owned = BARRELS.find(function(b) {
    return (0, import_kolmafia29.itemAmount)(b);
  });
  if (total <= 0 || !owned) return;
  (0, import_kolmafia29.visitUrl)("inv_use.php?pwd&whichitem=".concat(owned.id, "&choice=1"));
  for (var i = 0; i < total / 100; i++) {
    (0, import_kolmafia29.runChoice)(2);
  }
}
var import_kolmafia29, _templateObject141, BARRELS;
var init_BarrelShrine = __esm({
  "node_modules/libram/dist/resources/2015/BarrelShrine.js": function() {
    import_kolmafia29 = require("kolmafia");
    init_property();
    init_template_string();
    init_utils();
    BARRELS = $items(_templateObject141 || (_templateObject141 = _taggedTemplateLiteral22(["little firkin, normal barrel, big tun, weathered barrel, dusty barrel, disintegrating barrel, moist barrel, rotting barrel, mouldering barrel, barnacled barrel"])));
  }
});

// node_modules/libram/dist/resources/2015/ChateauMantegna.js
var ChateauMantegna_exports = {};
__export(ChateauMantegna_exports, {
  ceilings: function() {
    return ceilings;
  },
  changeCeiling: function() {
    return changeCeiling;
  },
  changeDesk: function() {
    return changeDesk;
  },
  changeNightstand: function() {
    return changeNightstand;
  },
  desks: function() {
    return desks;
  },
  fightPainting: function() {
    return fightPainting;
  },
  getCeiling: function() {
    return getCeiling;
  },
  getDesk: function() {
    return getDesk;
  },
  getNightstand: function() {
    return getNightstand;
  },
  have: function() {
    return have17;
  },
  nightstands: function() {
    return nightstands;
  },
  paintingFought: function() {
    return paintingFought;
  },
  paintingMonster: function() {
    return paintingMonster;
  }
});
function have17() {
  return get("chateauAvailable");
}
function paintingMonster() {
  return get("chateauMonster");
}
function paintingFought() {
  return get("_chateauMonsterFought");
}
function fightPainting() {
  (0, import_kolmafia30.visitUrl)("place.php?whichplace=chateau&action=chateau_painting", false);
  return import_kolmafia30.runCombat.apply(void 0, arguments);
}
function getDesk() {
  var _desks$find;
  return (_desks$find = desks.find(function(desk) {
    return Object.keys((0, import_kolmafia30.getChateau)()).includes(desk);
  })) !== null && _desks$find !== void 0 ? _desks$find : null;
}
function getCeiling() {
  var _ceilings$find;
  return (_ceilings$find = ceilings.find(function(ceiling) {
    return Object.keys((0, import_kolmafia30.getChateau)()).includes(ceiling);
  })) !== null && _ceilings$find !== void 0 ? _ceilings$find : null;
}
function getNightstand() {
  var _nightstands$find;
  return (_nightstands$find = nightstands.find(function(nightstand) {
    return Object.keys((0, import_kolmafia30.getChateau)()).includes(nightstand);
  })) !== null && _nightstands$find !== void 0 ? _nightstands$find : null;
}
function changeDesk(desk) {
  if (getDesk() === desk) return true;
  if (!desks.includes(desk)) return false;
  (0, import_kolmafia30.buy)(import_kolmafia30.Item.get(desk));
  return getDesk() === desk;
}
function changeCeiling(ceiling) {
  if (getCeiling() === ceiling) return true;
  if (!ceilings.includes(ceiling)) return false;
  (0, import_kolmafia30.buy)(import_kolmafia30.Item.get(ceiling));
  return getCeiling() === ceiling;
}
function changeNightstand(nightstand) {
  if (getNightstand() === nightstand) return true;
  if (!nightstands.includes(nightstand)) return false;
  (0, import_kolmafia30.buy)(import_kolmafia30.Item.get(nightstand));
  return getNightstand() === nightstand;
}
var import_kolmafia30, desks, ceilings, nightstands;
var init_ChateauMantegna = __esm({
  "node_modules/libram/dist/resources/2015/ChateauMantegna.js": function() {
    import_kolmafia30 = require("kolmafia");
    init_property();
    desks = ["fancy stationery set", "Swiss piggy bank", "continental juice bar"];
    ceilings = ["antler chandelier", "ceiling fan", "artificial skylight"];
    nightstands = ["foreign language tapes", "bowl of potpourri", "electric muscle stimulator"];
  }
});

// node_modules/libram/dist/resources/2015/DeckOfEveryCard.js
var DeckOfEveryCard_exports = {};
__export(DeckOfEveryCard_exports, {
  cards: function() {
    return cards;
  },
  cheatCard: function() {
    return cheatCard;
  },
  getCardsDrawn: function() {
    return getCardsDrawn;
  },
  getCardsSeen: function() {
    return getCardsSeen;
  },
  getRemainingCheats: function() {
    return getRemainingCheats;
  },
  getRemainingDraws: function() {
    return getRemainingDraws;
  },
  have: function() {
    return have18;
  }
});
function _taggedTemplateLiteral23(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have18() {
  return have($item(_templateObject149 || (_templateObject149 = _taggedTemplateLiteral23(["Deck of Every Card"]))));
}
function getCardsDrawn() {
  return clamp(get("_deckCardsDrawn"), 0, 15);
}
function getRemainingDraws() {
  return 15 - getCardsDrawn();
}
function getRemainingCheats() {
  return Math.floor(getRemainingDraws() / 5);
}
function getCardsSeen() {
  return get("_deckCardsSeen") ? get("_deckCardsSeen").split("|") : [];
}
function cheatCard(card) {
  if (getCardsSeen().includes(card)) return true;
  if (getRemainingDraws() < 5) return false;
  return (0, import_kolmafia31.cliExecute)("cheat ".concat(card));
}
var import_kolmafia31, _templateObject149, cards;
var init_DeckOfEveryCard = __esm({
  "node_modules/libram/dist/resources/2015/DeckOfEveryCard.js": function() {
    import_kolmafia31 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    cards = Object.freeze(["X of Clubs", "X of Diamonds", "X of Hearts", "X of Spades", "X of Papayas", "X of Kumquats", "X of Salads", "X of Cups", "X of Coins", "X of Swords", "X of Wands", "XVI - The Tower", "Professor Plum", "Spare Tire", "Extra Tank", "Sheep", "Year of Plenty", "Mine", "Laboratory", "Plains", "Swamp", "Mountain", "Forest", "Island", "Lead Pipe", "Rope", "Wrench", "Candlestick", "Knife", "Revolver", "Gift Card", "1952 Mickey Mantle", "XXI - The World", "III - The Empress", "VI - The Lovers", "Healing Salve", "Dark Ritual", "Lightning Bolt", "Giant Growth", "Ancestral Recall", "XI - Strength", "I - The Magician", "0 - The Fool", "X - The Wheel of Fortune", "The Race Card", "Green Card", "IV - The Emperor", "IX - The Hermit", "Werewolf", "The Hive", "XVII - The Star", "VII - The Chariot", "XV - The Devil", "V - The Hierophant", "Fire Elemental", "Christmas Card", "Go Fish", "Goblin Sapper", "II - The High Priestess", "XIV - Temperance", "XVIII - The Moon", "Hunky Fireman Card", "Aquarius Horoscope", "XII - The Hanged Man", "Suit Warehouse Discount Card", "Pirate Birthday Card", "Plantable Greeting Card", "Slimer Trading Card", "XIII - Death", "Unstable Portal"]);
  }
});

// node_modules/libram/dist/resources/2015/Dinseylandfill.js
var Dinseylandfill_exports = {};
__export(Dinseylandfill_exports, {
  acceptQuest: function() {
    return acceptQuest;
  },
  activeQuest: function() {
    return activeQuest;
  },
  available: function() {
    return available;
  },
  canFightWartDinsey: function() {
    return canFightWartDinsey;
  },
  coasterNextTurn: function() {
    return coasterNextTurn;
  },
  disposeGarbage: function() {
    return disposeGarbage;
  },
  foughtWartDinseyThisLife: function() {
    return foughtWartDinseyThisLife;
  },
  hasActiveQuest: function() {
    return hasActiveQuest;
  },
  hasDisposedGarbage: function() {
    return hasDisposedGarbage;
  },
  hasQuest: function() {
    return hasQuest;
  },
  have: function() {
    return have19;
  },
  keyCardsLocations: function() {
    return keyCardsLocations;
  },
  questComplete: function() {
    return questComplete;
  },
  quests: function() {
    return quests;
  },
  turnInQuest: function() {
    return turnInQuest2;
  }
});
function _typeof14(o) {
  "@babel/helpers - typeof";
  return _typeof14 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof14(o);
}
function _createForOfIteratorHelper7(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t) {
    if (Array.isArray(r) || (t = _unsupportedIterableToArray18(r)) || e && r && "number" == typeof r.length) {
      t && (r = t);
      var _n = 0, F = function F2() {
      };
      return { s: F, n: function n() {
        return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
      }, e: function e2(r2) {
        throw r2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o, a = true, u = false;
  return { s: function s() {
    t = t.call(r);
  }, n: function n() {
    var r2 = t.next();
    return a = r2.done, r2;
  }, e: function e2(r2) {
    u = true, o = r2;
  }, f: function f() {
    try {
      a || null == t.return || t.return();
    } finally {
      if (u) throw o;
    }
  } };
}
function _unsupportedIterableToArray18(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray18(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray18(r, a) : void 0;
  }
}
function _arrayLikeToArray18(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _taggedTemplateLiteral24(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function _classCallCheck11(a, n) {
  if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties11(e, r) {
  for (var t = 0; t < r.length; t++) {
    var o = r[t];
    o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e, _toPropertyKey14(o.key), o);
  }
}
function _createClass11(e, r, t) {
  return r && _defineProperties11(e.prototype, r), t && _defineProperties11(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
}
function _defineProperty13(e, r, t) {
  return (r = _toPropertyKey14(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
}
function _toPropertyKey14(t) {
  var i = _toPrimitive14(t, "string");
  return "symbol" == _typeof14(i) ? i : i + "";
}
function _toPrimitive14(t, r) {
  if ("object" != _typeof14(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof14(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function have19() {
  return get("stenchAirportAlways");
}
function available() {
  return have19() || get("_stenchAirportToday");
}
function disposeGarbage() {
  if (hasDisposedGarbage()) {
    return false;
  }
  if (!hasDisposedGarbage() && have($item(_templateObject159 || (_templateObject159 = _taggedTemplateLiteral24(["bag of park garbage"]))))) {
    (0, import_kolmafia32.visitUrl)(maintUrl);
    (0, import_kolmafia32.runChoice)(6);
  }
  return hasDisposedGarbage();
}
function hasQuest() {
  return quests.some(function(q) {
    return q.currentQuest();
  });
}
function activeQuest() {
  return quests.find(function(q) {
    return q.currentQuest();
  }) || BLANK_QUEST;
}
function questComplete() {
  var quest7 = activeQuest();
  return quest7 !== BLANK_QUEST && get(quest7.questStateProperty) === "finished";
}
function hasActiveQuest() {
  return hasQuest() && !questComplete();
}
function acceptQuest(priority) {
  var _quests$find$priority, _quests$find;
  if (hasQuest()) {
    return false;
  }
  var page = (0, import_kolmafia32.visitUrl)(kioskUrl);
  var choice = 6;
  var at = (0, import_kolmafia32.indexOf)(page, "Available Assignments");
  if (at == -1) {
    return false;
  }
  var jobs = [];
  quests.forEach(function(quest8) {
    jobs.push(quest8.name);
  });
  var priorityNum = typeof priority === "string" ? (_quests$find$priority = (_quests$find = quests.find(function(q) {
    return q.name === priority;
  })) === null || _quests$find === void 0 ? void 0 : _quests$find.priority) !== null && _quests$find$priority !== void 0 ? _quests$find$priority : 7 : priority;
  var availableJobs = [];
  var jobChoices = [["none", 999]];
  var _iterator = _createForOfIteratorHelper7(quests), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var quest7 = _step.value;
      var job = quest7.name;
      var jobAt = (0, import_kolmafia32.indexOf)(page, job, at);
      if (jobAt != -1) {
        availableJobs.push(quest7);
        jobChoices.push([job, jobAt]);
        break;
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  var bestJob = availableJobs.sort(function(a, b) {
    return a.priority - b.priority;
  })[0];
  var sortedChoices = jobChoices.sort(function(a, b) {
    return a[1] - b[1];
  });
  if (bestJob.priority <= priorityNum) {
    for (var index in sortedChoices) {
      var jobName = sortedChoices[index][0];
      if (jobName === bestJob.name) {
        choice = parseInt(index) + 1;
        break;
      }
    }
  }
  (0, import_kolmafia32.runChoice)(choice);
  return hasQuest();
}
function turnInQuest2() {
  if (questComplete()) {
    if (activeQuest().name === "racism") _set("questEStSocialJusticeI", "unstarted");
    (0, import_kolmafia32.visitUrl)(kioskUrl);
    (0, import_kolmafia32.runChoice)(3);
  }
}
function canFightWartDinsey() {
  return Array.from(keyCardsLocations.keys()).every(function(keycard) {
    return have(keycard);
  }) && !foughtWartDinseyThisLife() && getRemainingLiver() >= 0 && (0, import_kolmafia32.myAdventures)() > 0;
}
function coasterNextTurn() {
  return get("dinseyRollercoasterNext");
}
function foughtWartDinseyThisLife() {
  return get("lastWartDinseyDefeated") === (0, import_kolmafia32.myAscensions)();
}
function hasDisposedGarbage() {
  return get("_dinseyGarbageDisposed");
}
var import_kolmafia32, _templateObject150, _templateObject239, _templateObject337, _templateObject431, _templateObject520, _templateObject618, _templateObject715, _templateObject814, _templateObject912, _templateObject011, _templateObject151, _templateObject1011, _templateObject1112, _templateObject1211, _templateObject1311, _templateObject1410, _templateObject159, _templateObject169, _templateObject178, _templateObject188, _templateObject198, _templateObject208, _templateObject2112, _templateObject2211, _templateObject2310, _templateObject247, _templateObject257, QuestData, kioskUrl, maintUrl, quests, BLANK_QUEST, keyCardsLocations;
var init_Dinseylandfill = __esm({
  "node_modules/libram/dist/resources/2015/Dinseylandfill.js": function() {
    import_kolmafia32 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    QuestData = /* @__PURE__ */ function() {
      function QuestData2(name, priority, questNameKiosk, questNameQuestLog, questStateProperty, questProgressProperty, questProgressLimit, canUseWanderers, requiredItem, questLocation) {
        _classCallCheck11(this, QuestData2);
        _defineProperty13(this, "name", void 0);
        _defineProperty13(this, "priority", void 0);
        _defineProperty13(this, "questNameKiosk", void 0);
        _defineProperty13(this, "questNameQuestLog", void 0);
        _defineProperty13(this, "questStateProperty", void 0);
        _defineProperty13(this, "questProgressProperty", void 0);
        _defineProperty13(this, "questProgressLimit", void 0);
        _defineProperty13(this, "canUseWanderers", void 0);
        _defineProperty13(this, "requiredItem", void 0);
        _defineProperty13(this, "questLocation", void 0);
        this.name = name;
        this.priority = priority;
        this.questNameKiosk = questNameKiosk;
        this.questNameQuestLog = questNameQuestLog;
        this.questStateProperty = questStateProperty;
        this.questProgressProperty = questProgressProperty;
        this.questProgressLimit = questProgressLimit;
        this.canUseWanderers = canUseWanderers;
        this.requiredItem = requiredItem;
        this.questLocation = questLocation;
      }
      return _createClass11(QuestData2, [{
        key: "currentQuest",
        value: function currentQuest() {
          return get(this.questStateProperty) !== "unstarted";
        }
      }]);
    }();
    kioskUrl = "place.php?whichplace=airport_stench&action=airport3_kiosk";
    maintUrl = "place.php?whichplace=airport_stench&action=airport3_tunnels";
    quests = [new QuestData("lube", 1, "Track Maintenance", "Super Luber", "questEStSuperLuber", "", 0, false, $item(_templateObject150 || (_templateObject150 = _taggedTemplateLiteral24(["lube-shoes"]))), $location(_templateObject239 || (_templateObject239 = _taggedTemplateLiteral24(["Barf Mountain"])))), new QuestData("fuel", 0, "Electrical Maintenance", "Give Me Fuel", "questEStGiveMeFuel", "", 0, false, $item(_templateObject337 || (_templateObject337 = _taggedTemplateLiteral24(["none"]))), $location(_templateObject431 || (_templateObject431 = _taggedTemplateLiteral24(["The Toxic Teacups"])))), new QuestData("sexism", 2, "Sexism Reduction", "Social Justice Adventurer I", "questEStSocialJusticeI", "dinseySocialJusticeIProgress", 15, true, $item(_templateObject520 || (_templateObject520 = _taggedTemplateLiteral24(["none"]))), $location(_templateObject618 || (_templateObject618 = _taggedTemplateLiteral24(["Pirates of the Garbage Barges"])))), new QuestData("racism", 3, "Racism Reduction", "Social Justice Adventurer II", "questEStSocialJusticeII", "dinseySocialJusticeIIProgress", 15, true, $item(_templateObject715 || (_templateObject715 = _taggedTemplateLiteral24(["none"]))), $location(_templateObject814 || (_templateObject814 = _taggedTemplateLiteral24(["Uncle Gator's Country Fun-Time Liquid Waste Sluice"])))), new QuestData("fun", 4, "Compulsory Fun", "Whistling Zippity-Doo-Dah", "questEStZippityDooDah", "dinseyFunProgress", 15, true, $item(_templateObject912 || (_templateObject912 = _taggedTemplateLiteral24(["Dinsey mascot mask"]))), $location(_templateObject011 || (_templateObject011 = _taggedTemplateLiteral24(["The Toxic Teacups"])))), new QuestData("trash", 6, "Waterway Debris Removal", "Teach a Man to Fish Trash", "questEStFishTrash", "dinseyFilthLevel", 0, true, $item(_templateObject151 || (_templateObject151 = _taggedTemplateLiteral24(["trash net"]))), $location(_templateObject1011 || (_templateObject1011 = _taggedTemplateLiteral24(["Pirates of the Garbage Barges"])))), new QuestData("bear", 5, "Bear Removal", "Nasty, Nasty Bears", "questEStNastyBears", "dinseyNastyBearsDefeated", 8, false, $item(_templateObject1112 || (_templateObject1112 = _taggedTemplateLiteral24(["none"]))), $location(_templateObject1211 || (_templateObject1211 = _taggedTemplateLiteral24(["Uncle Gator's Country Fun-Time Liquid Waste Sluice"])))), new QuestData("food", 7, "Guest Sustenance Assurance", "Will Work With Food", "questEStWorkWithFood", "dinseyTouristsFed", 30, false, $item(_templateObject1311 || (_templateObject1311 = _taggedTemplateLiteral24(["none"]))), $location(_templateObject1410 || (_templateObject1410 = _taggedTemplateLiteral24(["Barf Mountain"]))))];
    BLANK_QUEST = new QuestData("", -1, "", "", "", "", -1, false, $item(_templateObject169 || (_templateObject169 = _taggedTemplateLiteral24(["none"]))), $location(_templateObject178 || (_templateObject178 = _taggedTemplateLiteral24(["none"]))));
    keyCardsLocations = /* @__PURE__ */ new Map([[$item(_templateObject188 || (_templateObject188 = _taggedTemplateLiteral24(["keycard \u03B1"]))), $location(_templateObject198 || (_templateObject198 = _taggedTemplateLiteral24(["Barf Mountain"])))], [$item(_templateObject208 || (_templateObject208 = _taggedTemplateLiteral24(["keycard \u03B2"]))), $location(_templateObject2112 || (_templateObject2112 = _taggedTemplateLiteral24(["Pirates of the Garbage Barges"])))], [$item(_templateObject2211 || (_templateObject2211 = _taggedTemplateLiteral24(["keycard \u03B3"]))), $location(_templateObject2310 || (_templateObject2310 = _taggedTemplateLiteral24(["The Toxic Teacups"])))], [$item(_templateObject247 || (_templateObject247 = _taggedTemplateLiteral24(["keycard \u03B4"]))), $location(_templateObject257 || (_templateObject257 = _taggedTemplateLiteral24(["Uncle Gator's Country Fun-Time Liquid Waste Sluice"])))]]);
  }
});

// node_modules/libram/dist/resources/2015/MayoClinic.js
var MayoClinic_exports = {};
__export(MayoClinic_exports, {
  Mayo: function() {
    return Mayo;
  },
  have: function() {
    return have20;
  },
  installed: function() {
    return installed3;
  },
  setMayoMinder: function() {
    return setMayoMinder;
  }
});
function _taggedTemplateLiteral25(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function installed3() {
  return (0, import_kolmafia33.getWorkshed)() === $item(_templateObject521 || (_templateObject521 = _taggedTemplateLiteral25(["portable Mayo Clinic"])));
}
function have20() {
  return have($item(_templateObject619 || (_templateObject619 = _taggedTemplateLiteral25(["portable Mayo Clinic"])))) || installed3();
}
function setMayoMinder(mayo) {
  var quantity = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  if ((0, import_kolmafia33.getWorkshed)() !== $item(_templateObject716 || (_templateObject716 = _taggedTemplateLiteral25(["portable Mayo Clinic"])))) return false;
  if (!Object.values(Mayo).includes(mayo)) {
    logger_default.error("Invalid mayo selected");
    return false;
  }
  if (get("mayoInMouth") && get("mayoInMouth") !== mayo.name) {
    logger_default.error("Currently have incorrect mayo in mouth");
    return false;
  }
  (0, import_kolmafia33.retrieveItem)(quantity, mayo);
  if (!have($item(_templateObject815 || (_templateObject815 = _taggedTemplateLiteral25(["Mayo Minder\u2122"]))))) (0, import_kolmafia33.buy)($item(_templateObject913 || (_templateObject913 = _taggedTemplateLiteral25(["Mayo Minder\u2122"]))));
  if (get("mayoMinderSetting") !== mayo.name) {
    withChoice(1076, mayo.id - 8260, function() {
      return (0, import_kolmafia33.use)($item(_templateObject012 || (_templateObject012 = _taggedTemplateLiteral25(["Mayo Minder\u2122"]))));
    });
  }
  return get("mayoMinderSetting") === mayo.name;
}
var import_kolmafia33, _templateObject160, _templateObject240, _templateObject338, _templateObject436, _templateObject521, _templateObject619, _templateObject716, _templateObject815, _templateObject913, _templateObject012, Mayo;
var init_MayoClinic = __esm({
  "node_modules/libram/dist/resources/2015/MayoClinic.js": function() {
    import_kolmafia33 = require("kolmafia");
    init_lib();
    init_logger();
    init_property();
    init_template_string();
    Mayo = {
      nex: $item(_templateObject160 || (_templateObject160 = _taggedTemplateLiteral25(["Mayonex"]))),
      diol: $item(_templateObject240 || (_templateObject240 = _taggedTemplateLiteral25(["Mayodiol"]))),
      zapine: $item(_templateObject338 || (_templateObject338 = _taggedTemplateLiteral25(["Mayozapine"]))),
      flex: $item(_templateObject436 || (_templateObject436 = _taggedTemplateLiteral25(["Mayoflex"])))
    };
  }
});

// node_modules/libram/dist/resources/2016/GingerBread.js
var GingerBread_exports = {};
__export(GingerBread_exports, {
  LOCATIONS: function() {
    return LOCATIONS;
  },
  available: function() {
    return available2;
  },
  availableLocations: function() {
    return availableLocations;
  },
  canJudgeFudge: function() {
    return canJudgeFudge;
  },
  getMidnightChoiceId: function() {
    return getMidnightChoiceId;
  },
  getNoonChoiceId: function() {
    return getNoonChoiceId;
  },
  minutesToMidnight: function() {
    return minutesToMidnight;
  },
  minutesToNoon: function() {
    return minutesToNoon;
  }
});
function _taggedTemplateLiteral26(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function available2() {
  return (get("gingerbreadCityAvailable") || get("_gingerbreadCityToday")) && turns() < availableTurns();
}
function turns() {
  return get("_gingerbreadCityTurns") + (get("_gingerbreadClockAdvanced") ? 5 : 0);
}
function availableTurns() {
  return 20 + (get("gingerExtraAdventures") ? 10 : 0);
}
function minutesToMidnight() {
  return 19 - turns();
}
function minutesToNoon() {
  return 9 - turns();
}
function availableLocations() {
  return LOCATIONS.filter(function(l) {
    return (0, import_kolmafia34.canAdventure)(l);
  });
}
function getNoonChoiceId(location7) {
  var _NOONS$get;
  return (_NOONS$get = NOONS.get(location7)) !== null && _NOONS$get !== void 0 ? _NOONS$get : 0;
}
function getMidnightChoiceId(location7) {
  var _MIDNIGHTS$get;
  return (_MIDNIGHTS$get = MIDNIGHTS.get(location7)) !== null && _MIDNIGHTS$get !== void 0 ? _MIDNIGHTS$get : 0;
}
function canJudgeFudge() {
  if (minutesToNoon() >= 0) {
    return true;
  }
  if (minutesToMidnight() >= 0 && get("_gingerbreadColumnDestroyed")) {
    return true;
  }
  return false;
}
var import_kolmafia34, _templateObject161, _templateObject241, _templateObject339, _templateObject437, _templateObject524, _templateObject620, _templateObject717, _templateObject816, _templateObject914, LOCATIONS, NOONS, MIDNIGHTS;
var init_GingerBread = __esm({
  "node_modules/libram/dist/resources/2016/GingerBread.js": function() {
    import_kolmafia34 = require("kolmafia");
    init_property();
    init_template_string();
    LOCATIONS = Object.freeze($locations(_templateObject161 || (_templateObject161 = _taggedTemplateLiteral26(["Gingerbread Civic Center, Gingerbread Train Station, Gingerbread Industrial Zone, Gingerbread Upscale Retail District, Gingerbread Sewers"]))));
    NOONS = /* @__PURE__ */ new Map([[$location(_templateObject241 || (_templateObject241 = _taggedTemplateLiteral26(["Gingerbread Train Station"]))), 1204], [$location(_templateObject339 || (_templateObject339 = _taggedTemplateLiteral26(["Gingerbread Civic Center"]))), 1202], [$location(_templateObject437 || (_templateObject437 = _taggedTemplateLiteral26(["Gingerbread Industrial Zone"]))), 1206], [$location(_templateObject524 || (_templateObject524 = _taggedTemplateLiteral26(["Gingerbread Upscale Retail District"]))), 1208]]);
    MIDNIGHTS = /* @__PURE__ */ new Map([[$location(_templateObject620 || (_templateObject620 = _taggedTemplateLiteral26(["Gingerbread Train Station"]))), 1205], [$location(_templateObject717 || (_templateObject717 = _taggedTemplateLiteral26(["Gingerbread Civic Center"]))), 1203], [$location(_templateObject816 || (_templateObject816 = _taggedTemplateLiteral26(["Gingerbread Industrial Zone"]))), 1207], [$location(_templateObject914 || (_templateObject914 = _taggedTemplateLiteral26(["Gingerbread Upscale Retail District"]))), 1209]]);
  }
});

// node_modules/libram/dist/resources/2016/SourceTerminal.js
var SourceTerminal_exports = {};
__export(SourceTerminal_exports, {
  Buffs: function() {
    return Buffs;
  },
  Digitize: function() {
    return Digitize;
  },
  Items: function() {
    return Items;
  },
  RolloverBuffs: function() {
    return RolloverBuffs;
  },
  Skills: function() {
    return Skills;
  },
  canDigitize: function() {
    return canDigitize;
  },
  couldDigitize: function() {
    return couldDigitize;
  },
  duplicateUsesRemaining: function() {
    return duplicateUsesRemaining;
  },
  educate: function() {
    return educate;
  },
  enhance: function() {
    return enhance;
  },
  enhanceBuffDuration: function() {
    return enhanceBuffDuration;
  },
  enhanceUsesRemaining: function() {
    return enhanceUsesRemaining;
  },
  enquiry: function() {
    return enquiry;
  },
  enquiryBuffDuration: function() {
    return enquiryBuffDuration;
  },
  extrude: function() {
    return extrude;
  },
  getChips: function() {
    return getChips;
  },
  getDigitizeMonster: function() {
    return getDigitizeMonster;
  },
  getDigitizeMonsterCount: function() {
    return getDigitizeMonsterCount;
  },
  getDigitizeUses: function() {
    return getDigitizeUses;
  },
  getDigitizeUsesRemaining: function() {
    return getDigitizeUsesRemaining;
  },
  getDuplicateUses: function() {
    return getDuplicateUses;
  },
  getEnhanceUses: function() {
    return getEnhanceUses;
  },
  getMaximumDigitizeUses: function() {
    return getMaximumDigitizeUses;
  },
  getPortscanUses: function() {
    return getPortscanUses;
  },
  getSkills: function() {
    return getSkills;
  },
  have: function() {
    return have21;
  },
  isCurrentSkill: function() {
    return isCurrentSkill;
  },
  maximumDuplicateUses: function() {
    return maximumDuplicateUses;
  },
  maximumEnhanceUses: function() {
    return maximumEnhanceUses;
  },
  prepareDigitize: function() {
    return prepareDigitize;
  }
});
function _createForOfIteratorHelper8(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t) {
    if (Array.isArray(r) || (t = _unsupportedIterableToArray19(r)) || e && r && "number" == typeof r.length) {
      t && (r = t);
      var _n = 0, F = function F2() {
      };
      return { s: F, n: function n() {
        return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
      }, e: function e2(r2) {
        throw r2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o, a = true, u = false;
  return { s: function s() {
    t = t.call(r);
  }, n: function n() {
    var r2 = t.next();
    return a = r2.done, r2;
  }, e: function e2(r2) {
    u = true, o = r2;
  }, f: function f() {
    try {
      a || null == t.return || t.return();
    } finally {
      if (u) throw o;
    }
  } };
}
function _unsupportedIterableToArray19(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray19(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray19(r, a) : void 0;
  }
}
function _arrayLikeToArray19(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _taggedTemplateLiteral27(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have21() {
  return haveInCampground(item);
}
function enhance(buff) {
  if (!Object.values(Buffs).includes(buff)) {
    return false;
  }
  return (0, import_kolmafia35.cliExecute)("terminal enhance ".concat(buff.name));
}
function enquiry(rolloverBuff) {
  if (!Object.values(RolloverBuffs).includes(rolloverBuff)) {
    return false;
  }
  return (0, import_kolmafia35.cliExecute)("terminal enquiry ".concat(rolloverBuff.name));
}
function educate(skills4) {
  var skillsArray = Array.isArray(skills4) ? skills4.slice(0, 2) : [skills4];
  if (arrayEquals(skillsArray, getSkills())) return true;
  var _iterator = _createForOfIteratorHelper8(skillsArray), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var skill = _step.value;
      if (!Object.values(Skills).includes(skill)) return false;
      (0, import_kolmafia35.cliExecute)("terminal educate ".concat(skill.name.toLowerCase(), ".edu"));
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return true;
}
function getSkills() {
  return ["sourceTerminalEducate1", "sourceTerminalEducate2"].map(function(p) {
    return get(p);
  }).filter(Boolean).map(function(s) {
    return import_kolmafia35.Skill.get(s.slice(0, -4));
  });
}
function isCurrentSkill(skills4) {
  var currentSkills = getSkills();
  var skillsArray = Array.isArray(skills4) ? skills4.slice(0, 2) : [skills4];
  return skillsArray.every(function(skill) {
    return currentSkills.includes(skill);
  });
}
function extrude(item15) {
  var fileName = Items.get(item15);
  if (!fileName) return false;
  return (0, import_kolmafia35.cliExecute)("terminal extrude ".concat(fileName));
}
function getChips() {
  return get("sourceTerminalChips").split(",");
}
function getDigitizeUses() {
  return get("_sourceTerminalDigitizeUses");
}
function getDigitizeMonster() {
  return get("_sourceTerminalDigitizeMonster");
}
function getDigitizeMonsterCount() {
  return get("_sourceTerminalDigitizeMonsterCount");
}
function getMaximumDigitizeUses() {
  var chips = getChips();
  return 1 + (chips.includes("TRAM") ? 1 : 0) + (chips.includes("TRIGRAM") ? 1 : 0);
}
function getDigitizeUsesRemaining() {
  return getMaximumDigitizeUses() - getDigitizeUses();
}
function couldDigitize() {
  return getDigitizeUses() < getMaximumDigitizeUses();
}
function prepareDigitize() {
  if (!isCurrentSkill(Skills.Digitize)) {
    return educate(Skills.Digitize);
  }
  return true;
}
function canDigitize() {
  return couldDigitize() && getSkills().includes(Skills.Digitize);
}
function getDuplicateUses() {
  return get("_sourceTerminalDuplicateUses");
}
function getEnhanceUses() {
  return get("_sourceTerminalEnhanceUses");
}
function getPortscanUses() {
  return get("_sourceTerminalPortscanUses");
}
function maximumDuplicateUses() {
  return (0, import_kolmafia35.myPath)() === import_kolmafia35.Path.get("The Source") ? 5 : 1;
}
function duplicateUsesRemaining() {
  return maximumDuplicateUses() - getDuplicateUses();
}
function maximumEnhanceUses() {
  return 1 + getChips().filter(function(chip) {
    return ["CRAM", "SCRAM"].includes(chip);
  }).length;
}
function enhanceUsesRemaining() {
  return maximumEnhanceUses() - getEnhanceUses();
}
function enhanceBuffDuration() {
  return 25 + get("sourceTerminalPram") * 5 + (getChips().includes("INGRAM") ? 25 : 0);
}
function enquiryBuffDuration() {
  return 50 + 10 * get("sourceTerminalGram") + (getChips().includes("DIAGRAM") ? 50 : 0);
}
var import_kolmafia35, _templateObject170, _templateObject248, _templateObject340, _templateObject438, _templateObject525, _templateObject621, _templateObject718, _templateObject817, _templateObject915, _templateObject013, _templateObject171, _templateObject1012, _templateObject1113, _templateObject1212, _templateObject1312, _templateObject1411, _templateObject1510, _templateObject1610, _templateObject179, _templateObject189, _templateObject199, _templateObject209, _templateObject2113, _templateObject2212, _templateObject2311, _templateObject249, _templateObject258, item, Buffs, RolloverBuffs, Skills, Items, Digitize;
var init_SourceTerminal = __esm({
  "node_modules/libram/dist/resources/2016/SourceTerminal.js": function() {
    import_kolmafia35 = require("kolmafia");
    init_Copier();
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    item = $item(_templateObject170 || (_templateObject170 = _taggedTemplateLiteral27(["Source terminal"])));
    Buffs = {
      Items: $effect(_templateObject248 || (_templateObject248 = _taggedTemplateLiteral27(["items.enh"]))),
      Meat: $effect(_templateObject340 || (_templateObject340 = _taggedTemplateLiteral27(["meat.enh"]))),
      Init: $effect(_templateObject438 || (_templateObject438 = _taggedTemplateLiteral27(["init.enh"]))),
      Critical: $effect(_templateObject525 || (_templateObject525 = _taggedTemplateLiteral27(["critical.enh"]))),
      Damage: $effect(_templateObject621 || (_templateObject621 = _taggedTemplateLiteral27(["damage.enh"]))),
      Substats: $effect(_templateObject718 || (_templateObject718 = _taggedTemplateLiteral27(["substats.enh"])))
    };
    RolloverBuffs = {
      /** +5 Familiar Weight */
      Familiar: $effect(_templateObject817 || (_templateObject817 = _taggedTemplateLiteral27(["familiar.enq"]))),
      /** +25 ML */
      Monsters: $effect(_templateObject915 || (_templateObject915 = _taggedTemplateLiteral27(["monsters.enq"]))),
      /** +5 Prismatic Resistance */
      Protect: $effect(_templateObject013 || (_templateObject013 = _taggedTemplateLiteral27(["protect.enq"]))),
      /** +100% Muscle, +100% Mysticality, +100% Moxie */
      Stats: $effect(_templateObject171 || (_templateObject171 = _taggedTemplateLiteral27(["stats.enq"])))
    };
    Skills = {
      /** Collect Source essence from enemies once per combat */
      Extract: $skill(_templateObject1012 || (_templateObject1012 = _taggedTemplateLiteral27(["Extract"]))),
      /** Stagger and create a wandering monster 1-3 times per day */
      Digitize: $skill(_templateObject1113 || (_templateObject1113 = _taggedTemplateLiteral27(["Digitize"]))),
      /** Stagger and deal 25% of enemy HP in damage once per combat */
      Compress: $skill(_templateObject1212 || (_templateObject1212 = _taggedTemplateLiteral27(["Compress"]))),
      /** Double monster's HP, attack, defence, attacks per round and item drops once per fight and once per day (five in The Source) */
      Duplicate: $skill(_templateObject1312 || (_templateObject1312 = _taggedTemplateLiteral27(["Duplicate"]))),
      /** Causes government agent/Source Agent wanderer next turn once per combat and three times per day */
      Portscan: $skill(_templateObject1411 || (_templateObject1411 = _taggedTemplateLiteral27(["Portscan"]))),
      /** Increase Max MP by 100% and recover 1000 MP once per combat with a 30 turn cooldown */
      Turbo: $skill(_templateObject1510 || (_templateObject1510 = _taggedTemplateLiteral27(["Turbo"])))
    };
    Items = /* @__PURE__ */ new Map([[$item(_templateObject1610 || (_templateObject1610 = _taggedTemplateLiteral27(["browser cookie"]))), "food.ext"], [$item(_templateObject179 || (_templateObject179 = _taggedTemplateLiteral27(["hacked gibson"]))), "booze.ext"], [$item(_templateObject189 || (_templateObject189 = _taggedTemplateLiteral27(["Source shades"]))), "goggles.ext"], [$item(_templateObject199 || (_templateObject199 = _taggedTemplateLiteral27(["Source terminal GRAM chip"]))), "gram.ext"], [$item(_templateObject209 || (_templateObject209 = _taggedTemplateLiteral27(["Source terminal PRAM chip"]))), "pram.ext"], [$item(_templateObject2113 || (_templateObject2113 = _taggedTemplateLiteral27(["Source terminal SPAM chip"]))), "spam.ext"], [$item(_templateObject2212 || (_templateObject2212 = _taggedTemplateLiteral27(["Source terminal CRAM chip"]))), "cram.ext"], [$item(_templateObject2311 || (_templateObject2311 = _taggedTemplateLiteral27(["Source terminal DRAM chip"]))), "dram.ext"], [$item(_templateObject249 || (_templateObject249 = _taggedTemplateLiteral27(["Source terminal TRAM chip"]))), "tram.ext"], [$item(_templateObject258 || (_templateObject258 = _taggedTemplateLiteral27(["software bug"]))), "familiar.ext"]]);
    Digitize = new Copier(function() {
      return couldDigitize();
    }, function() {
      return prepareDigitize();
    }, function() {
      return canDigitize();
    }, function() {
      return getDigitizeMonster();
    });
  }
});

// node_modules/libram/dist/resources/2016/Witchess.js
var Witchess_exports = {};
__export(Witchess_exports, {
  fightPiece: function() {
    return fightPiece;
  },
  fightsDone: function() {
    return fightsDone;
  },
  have: function() {
    return have22;
  },
  pieces: function() {
    return pieces;
  }
});
function _taggedTemplateLiteral28(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have22() {
  return haveInCampground(item2);
}
function fightsDone() {
  return get("_witchessFights");
}
function fightPiece(piece) {
  if (!pieces.includes(piece)) throw new Error("That is not a valid piece.");
  if (!(0, import_kolmafia36.visitUrl)("campground.php?action=witchess").includes("whichchoice value=1181")) {
    throw new Error("Failed to open Witchess.");
  }
  if (!(0, import_kolmafia36.runChoice)(1).includes("whichchoice=1182")) {
    throw new Error("Failed to visit shrink ray.");
  }
  if (!(0, import_kolmafia36.visitUrl)("choice.php?option=1&pwd=".concat((0, import_kolmafia36.myHash)(), "&whichchoice=1182&piece=").concat(piece.id), false).includes(piece.name)) {
    throw new Error("Failed to start fight.");
  }
  for (var _len = arguments.length, combatParams = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    combatParams[_key - 1] = arguments[_key];
  }
  return import_kolmafia36.runCombat.apply(void 0, combatParams);
}
var import_kolmafia36, _templateObject180, item2, pieces;
var init_Witchess = __esm({
  "node_modules/libram/dist/resources/2016/Witchess.js": function() {
    import_kolmafia36 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    item2 = $item(_templateObject180 || (_templateObject180 = _taggedTemplateLiteral28(["Witchess Set"])));
    pieces = import_kolmafia36.Monster.get(["Witchess Pawn", "Witchess Knight", "Witchess Bishop", "Witchess Rook", "Witchess Queen", "Witchess King", "Witchess Witch", "Witchess Ox"]);
  }
});

// node_modules/libram/dist/resources/2017/Horsery.js
var Horsery_exports = {};
__export(Horsery_exports, {
  changeHorse: function() {
    return changeHorse;
  },
  crazyHorseStats: function() {
    return crazyHorseStats;
  },
  current: function() {
    return current;
  },
  have: function() {
    return have23;
  }
});
function have23() {
  return get("horseryAvailable");
}
function current() {
  var horse = get("_horsery");
  return horse ? horse.split(" ")[0] : null;
}
function changeHorse(horse) {
  if (horse === current()) return true;
  if (!have23()) return false;
  (0, import_kolmafia37.cliExecute)("horsery ".concat(horse));
  return current() === horse;
}
function crazyHorseStats() {
  if (!have23()) return {};
  if (!get("_horseryCrazyName")) {
    (0, import_kolmafia37.visitUrl)("place.php?whichplace=town_right&action=town_horsery");
  }
  return {
    "Mysticality Percent": Number(get("_horseryCrazyMys")),
    "Muscle Percent": Number(get("_horseryCrazyMus")),
    "Moxie Percent": Number(get("_horseryCrazyMox"))
  };
}
var import_kolmafia37;
var init_Horsery = __esm({
  "node_modules/libram/dist/resources/2017/Horsery.js": function() {
    import_kolmafia37 = require("kolmafia");
    init_property();
  }
});

// node_modules/libram/dist/resources/2017/MummingTrunk.js
var MummingTrunk_exports = {};
__export(MummingTrunk_exports, {
  currentCostumes: function() {
    return currentCostumes;
  }
});
function _slicedToArray9(r, e) {
  return _arrayWithHoles9(r) || _iterableToArrayLimit9(r, e) || _unsupportedIterableToArray20(r, e) || _nonIterableRest9();
}
function _nonIterableRest9() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray20(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray20(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray20(r, a) : void 0;
  }
}
function _arrayLikeToArray20(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _iterableToArrayLimit9(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles9(r) {
  if (Array.isArray(r)) return r;
}
function currentCostumes() {
  return new Map(Object.entries((0, import_kolmafia38.splitModifiers)(get("_mummeryMods"))).map(function(_ref) {
    var _ref2 = _slicedToArray9(_ref, 2), modifier = _ref2[0], value = _ref2[1];
    if (!isNumericModifier(modifier)) return null;
    var matcher = value.match(MUMMERY_MODS_PATTERN);
    if (!matcher) return null;
    return [import_kolmafia38.Familiar.get(matcher[2]), [modifier, Number(matcher[1])]];
  }).filter(notNull));
}
var import_kolmafia38, MUMMERY_MODS_PATTERN;
var init_MummingTrunk = __esm({
  "node_modules/libram/dist/resources/2017/MummingTrunk.js": function() {
    import_kolmafia38 = require("kolmafia");
    init_property();
    init_utils();
    init_modifier();
    MUMMERY_MODS_PATTERN = /\[(\d*)\*fam\(([^)]*)\)/;
  }
});

// node_modules/libram/dist/resources/2017/Pantogram.js
var Pantogram_exports = {};
__export(Pantogram_exports, {
  findRequirements: function() {
    return findRequirements;
  },
  have: function() {
    return have24;
  },
  havePants: function() {
    return havePants;
  },
  makePants: function() {
    return makePants;
  },
  makePantsFromObject: function() {
    return makePantsFromObject;
  }
});
function _typeof15(o) {
  "@babel/helpers - typeof";
  return _typeof15 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof15(o);
}
function _slicedToArray10(r, e) {
  return _arrayWithHoles10(r) || _iterableToArrayLimit10(r, e) || _unsupportedIterableToArray21(r, e) || _nonIterableRest10();
}
function _nonIterableRest10() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray21(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray21(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray21(r, a) : void 0;
  }
}
function _arrayLikeToArray21(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _iterableToArrayLimit10(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles10(r) {
  if (Array.isArray(r)) return r;
}
function _defineProperty14(e, r, t) {
  return (r = _toPropertyKey15(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
}
function _toPropertyKey15(t) {
  var i = _toPrimitive15(t, "string");
  return "symbol" == _typeof15(i) ? i : i + "";
}
function _toPrimitive15(t, r) {
  if ("object" != _typeof15(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof15(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _taggedTemplateLiteral29(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have24() {
  return have(pantogram);
}
function havePants() {
  return have(pants);
}
function getLeftSacPair(mod) {
  return LeftSacrifice[mod];
}
function getMiddleSacPair(mod) {
  return MiddleSacrifice[mod];
}
function getRightSacPair(mod) {
  return RightSacrifice[mod];
}
function findRequirements(modifiers) {
  var leftSac = modifiers.leftSac, rightSac = modifiers.rightSac, middleSac = modifiers.middleSac;
  var returnValue = /* @__PURE__ */ new Map();
  if (leftSac) {
    var _getLeftSacPair = getLeftSacPair(leftSac), _getLeftSacPair2 = _slicedToArray10(_getLeftSacPair, 2), sacrifice = _getLeftSacPair2[0], quantity = _getLeftSacPair2[1];
    if (sacrifice instanceof import_kolmafia39.Item) {
      returnValue.set(sacrifice, quantity);
    }
  }
  if (rightSac) {
    var _getRightSacPair = getRightSacPair(rightSac), _getRightSacPair2 = _slicedToArray10(_getRightSacPair, 2), _sacrifice = _getRightSacPair2[0], _quantity = _getRightSacPair2[1];
    if (_sacrifice instanceof import_kolmafia39.Item) {
      returnValue.set(_sacrifice, _quantity);
    }
  }
  if (middleSac) {
    var _getMiddleSacPair = getMiddleSacPair(middleSac), _getMiddleSacPair2 = _slicedToArray10(_getMiddleSacPair, 2), _sacrifice2 = _getMiddleSacPair2[0], _quantity2 = _getMiddleSacPair2[1];
    if (_sacrifice2 instanceof import_kolmafia39.Item) {
      returnValue.set(_sacrifice2, _quantity2);
    }
  }
  return returnValue;
}
function sacrificePairToURL(pair) {
  var _pair = _slicedToArray10(pair, 2), rawSacrifice = _pair[0], quantity = _pair[1];
  var sacrifice = rawSacrifice instanceof import_kolmafia39.Item ? rawSacrifice.id : rawSacrifice;
  return "".concat(sacrifice, ",").concat(quantity);
}
function makePants(alignment, element, leftSac, middleSac, rightSac) {
  if (have(pants) || !have(pantogram)) return false;
  var requirements = findRequirements({
    alignment: alignment,
    element: element,
    leftSac: leftSac,
    rightSac: rightSac,
    middleSac: middleSac
  });
  if (Array.from(requirements.entries()).some(function(_ref) {
    var _ref2 = _slicedToArray10(_ref, 2), item15 = _ref2[0], quantity = _ref2[1];
    return !have(item15, quantity);
  })) {
    return false;
  }
  var s1 = sacrificePairToURL(getLeftSacPair(leftSac));
  var s2 = sacrificePairToURL(getRightSacPair(rightSac));
  var s3 = sacrificePairToURL(getMiddleSacPair(middleSac));
  var url = "choice.php?whichchoice=1270&pwd&option=1&m=".concat(Alignment[alignment], "&e=").concat(Element4[element], "&s1=").concat(s1, "&s2=").concat(s2, "&s3=").concat(s3);
  directlyUse(pantogram);
  (0, import_kolmafia39.visitUrl)(url);
  return have(pants);
}
function makePantsFromObject(pants2) {
  return makePants(pants2.alignment, pants2.element, pants2.leftSac, pants2.middleSac, pants2.rightSac);
}
var import_kolmafia39, _templateObject181, _templateObject250, _templateObject341, _templateObject439, _templateObject526, _templateObject624, _templateObject719, _templateObject818, _templateObject916, _templateObject014, _templateObject190, _templateObject1013, _templateObject1114, _templateObject1213, _templateObject1313, _templateObject1412, _templateObject1511, _templateObject1611, _MiddleSacrifice, _templateObject1710, _templateObject1810, _templateObject1910, _templateObject2010, _templateObject2114, _templateObject2213, _templateObject2312, _templateObject2410, _templateObject259, _templateObject267, _RightSacrifice, pantogram, pants, Alignment, Element4, LeftSacrifice, MiddleSacrifice, RightSacrifice;
var init_Pantogram = __esm({
  "node_modules/libram/dist/resources/2017/Pantogram.js": function() {
    import_kolmafia39 = require("kolmafia");
    init_lib();
    init_template_string();
    pantogram = $item(_templateObject181 || (_templateObject181 = _taggedTemplateLiteral29(["portable pantogram"])));
    pants = $item(_templateObject250 || (_templateObject250 = _taggedTemplateLiteral29(["pantogram pants"])));
    Alignment = _defineProperty14(_defineProperty14(_defineProperty14({}, "Muscle", 1), "Mysticality", 2), "Moxie", 3);
    Element4 = _defineProperty14(_defineProperty14(_defineProperty14(_defineProperty14(_defineProperty14({}, "Hot Resistance: 2", 1), "Cold Resistance: 2", 2), "Spooky Resistance: 2", 3), "Sleaze Resistance: 2", 4), "Stench Resistance: 2", 5);
    LeftSacrifice = _defineProperty14(_defineProperty14(_defineProperty14(_defineProperty14(_defineProperty14(_defineProperty14(_defineProperty14(_defineProperty14(_defineProperty14({}, "Maximum HP: 40", [-1, 0]), "Maximum MP: 20", [-2, 0]), "HP Regen Max: 10", [$item(_templateObject341 || (_templateObject341 = _taggedTemplateLiteral29(["red pixel potion"]))), 1]), "HP Regen Max: 15", [$item(_templateObject439 || (_templateObject439 = _taggedTemplateLiteral29(["royal jelly"]))), 1]), "HP Regen Max: 20", [$item(_templateObject526 || (_templateObject526 = _taggedTemplateLiteral29(["scented massage oil"]))), 1]), "MP Regen Max: 10", [$item(_templateObject624 || (_templateObject624 = _taggedTemplateLiteral29(["Cherry Cloaca Cola"]))), 1]), "MP Regen Max: 15", [$item(_templateObject719 || (_templateObject719 = _taggedTemplateLiteral29(["bubblin' crude"]))), 1]), "MP Regen Max: 20", [$item(_templateObject818 || (_templateObject818 = _taggedTemplateLiteral29(["glowing New Age crystal"]))), 1]), "Mana Cost: -3", [$item(_templateObject916 || (_templateObject916 = _taggedTemplateLiteral29(["baconstone"]))), 1]);
    MiddleSacrifice = (_MiddleSacrifice = {}, _defineProperty14(_defineProperty14(_defineProperty14(_defineProperty14(_defineProperty14(_defineProperty14(_defineProperty14(_defineProperty14(_defineProperty14(_defineProperty14(_MiddleSacrifice, "Combat Rate: -5", [-1, 0]), "Combat Rate: 5", [-2, 0]), "Critical Hit Percent: 10", [$item(_templateObject014 || (_templateObject014 = _taggedTemplateLiteral29(["hamethyst"]))), 1]), "Initiative: 50", [$item(_templateObject190 || (_templateObject190 = _taggedTemplateLiteral29(["bar skin"]))), 1]), "Familiar Weight: 10", [$item(_templateObject1013 || (_templateObject1013 = _taggedTemplateLiteral29(["lead necklace"]))), 11]), "Candy Drop: 100", [$item(_templateObject1114 || (_templateObject1114 = _taggedTemplateLiteral29(["huge bowl of candy"]))), 1]), "Item Drop Penalty: -10", [$item(_templateObject1213 || (_templateObject1213 = _taggedTemplateLiteral29(["sea salt crystal"]))), 11]), "Fishing Skill: 5", [$item(_templateObject1313 || (_templateObject1313 = _taggedTemplateLiteral29(["wriggling worm"]))), 1]), "Pool Skill: 5", [$item(_templateObject1412 || (_templateObject1412 = _taggedTemplateLiteral29(["8-ball"]))), 15]), "Avatar: Purple", [$item(_templateObject1511 || (_templateObject1511 = _taggedTemplateLiteral29(["moxie weed"]))), 99]), _defineProperty14(_MiddleSacrifice, "Drops Items: true", [$item(_templateObject1611 || (_templateObject1611 = _taggedTemplateLiteral29(["ten-leaf clover"]))), 1]));
    RightSacrifice = (_RightSacrifice = {}, _defineProperty14(_defineProperty14(_defineProperty14(_defineProperty14(_defineProperty14(_defineProperty14(_defineProperty14(_defineProperty14(_defineProperty14(_defineProperty14(_RightSacrifice, "Weapon Damage: 20", [-1, 0]), "Spell Damage Percent: 20", [-2, 0]), "Meat Drop: 30", [$item(_templateObject1710 || (_templateObject1710 = _taggedTemplateLiteral29(["taco shell"]))), 1]), "Meat Drop: 60", [$item(_templateObject1810 || (_templateObject1810 = _taggedTemplateLiteral29(["porquoise"]))), 1]), "Item Drop: 15", [$item(_templateObject1910 || (_templateObject1910 = _taggedTemplateLiteral29(["fairy gravy boat"]))), 1]), "Item Drop: 30", [$item(_templateObject2010 || (_templateObject2010 = _taggedTemplateLiteral29(["tiny dancer"]))), 1]), "Muscle Experience: 3", [$item(_templateObject2114 || (_templateObject2114 = _taggedTemplateLiteral29(["Knob Goblin firecracker"]))), 3]), "Mysticality Experience: 3", [$item(_templateObject2213 || (_templateObject2213 = _taggedTemplateLiteral29(["razor-sharp can lid"]))), 3]), "Moxie Experience: 3", [$item(_templateObject2312 || (_templateObject2312 = _taggedTemplateLiteral29(["spider web"]))), 3]), "Muscle Experience Percent: 25", [$item(_templateObject2410 || (_templateObject2410 = _taggedTemplateLiteral29(["synthetic marrow"]))), 5]), _defineProperty14(_defineProperty14(_RightSacrifice, "Mysticality Experience Percent: 25", [$item(_templateObject259 || (_templateObject259 = _taggedTemplateLiteral29(["haunted battery"]))), 5]), "Moxie Experience Percent: 25", [$item(_templateObject267 || (_templateObject267 = _taggedTemplateLiteral29(["the funk"]))), 5]));
  }
});

// node_modules/libram/dist/resources/2017/Robortender.js
var Robortender_exports = {};
__export(Robortender_exports, {
  currentDrinks: function() {
    return currentDrinks;
  },
  drinks: function() {
    return drinks;
  },
  dropChance: function() {
    return dropChance;
  },
  dropFrom: function() {
    return dropFrom;
  },
  feed: function() {
    return feed;
  },
  have: function() {
    return have25;
  },
  majorDrinks: function() {
    return majorDrinks;
  },
  minorDrinks: function() {
    return minorDrinks;
  }
});
function _toConsumableArray13(r) {
  return _arrayWithoutHoles13(r) || _iterableToArray13(r) || _unsupportedIterableToArray22(r) || _nonIterableSpread13();
}
function _nonIterableSpread13() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray22(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray22(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray22(r, a) : void 0;
  }
}
function _iterableToArray13(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles13(r) {
  if (Array.isArray(r)) return _arrayLikeToArray22(r);
}
function _arrayLikeToArray22(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _taggedTemplateLiteral30(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have25() {
  return (0, import_kolmafia40.haveFamiliar)(familiar6);
}
function dropFrom(target) {
  var _phylumDrops$get;
  var phylum = target instanceof import_kolmafia40.Monster ? target.phylum : target;
  return (_phylumDrops$get = phylumDrops.get(phylum)) !== null && _phylumDrops$get !== void 0 ? _phylumDrops$get : $item.none;
}
function dropChance() {
  var _dropNumber;
  var dropNumber = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : get("_roboDrops");
  return (_dropNumber = [1, 0.5, 0.4, 0.4, 0.4, 0.3, 0.3, 0.3][dropNumber]) !== null && _dropNumber !== void 0 ? _dropNumber : 0.2;
}
function currentDrinks() {
  var pref = get("_roboDrinks");
  if (!pref) return [];
  return pref.split(",").filter(function(x) {
    return x.trim();
  }).map(function(name) {
    return (0, import_kolmafia40.toItem)(name);
  }).filter(function(drink) {
    return drinks.includes(drink);
  });
}
function feed(beverage) {
  if (currentDrinks().includes(beverage)) return true;
  if (currentDrinks().length >= 5) return false;
  if (!drinks.includes(beverage)) return false;
  if (!(0, import_kolmafia40.itemAmount)(beverage)) return false;
  if (!have25()) return false;
  var priorFamiliar = (0, import_kolmafia40.myFamiliar)();
  (0, import_kolmafia40.useFamiliar)(familiar6);
  (0, import_kolmafia40.visitUrl)("inventory.php?action=robooze&which=1&whichitem=".concat(beverage.id));
  (0, import_kolmafia40.useFamiliar)(priorFamiliar);
  return currentDrinks().includes(beverage);
}
var import_kolmafia40, _templateObject191, _templateObject251, _templateObject347, _templateObject440, _templateObject527, _templateObject625, _templateObject720, _templateObject819, _templateObject917, _templateObject015, _templateObject1100, _templateObject1014, _templateObject1115, _templateObject1214, _templateObject1314, _templateObject1413, _templateObject1512, _templateObject1612, _templateObject1711, _templateObject1811, _templateObject1911, _templateObject2011, _templateObject2115, _templateObject2214, _templateObject2313, _templateObject2411, _templateObject2510, _templateObject268, _templateObject277, _templateObject287, _templateObject297, _templateObject307, _templateObject3112, _templateObject3211, _templateObject3310, _templateObject348, _templateObject357, familiar6, phylumDrops, minorDrinks, majorDrinks, drinks;
var init_Robortender = __esm({
  "node_modules/libram/dist/resources/2017/Robortender.js": function() {
    import_kolmafia40 = require("kolmafia");
    init_property();
    init_template_string();
    familiar6 = $familiar(_templateObject191 || (_templateObject191 = _taggedTemplateLiteral30(["Robortender"])));
    phylumDrops = /* @__PURE__ */ new Map([
      [$phylum(_templateObject251 || (_templateObject251 = _taggedTemplateLiteral30(["Bug"]))), $item(_templateObject347 || (_templateObject347 = _taggedTemplateLiteral30(["pickled grasshopper"])))],
      // bottle of anís
      [$phylum(_templateObject440 || (_templateObject440 = _taggedTemplateLiteral30(["Constellation"]))), import_kolmafia40.Item.get(9348)],
      [$phylum(_templateObject527 || (_templateObject527 = _taggedTemplateLiteral30(["Demon"]))), $item(_templateObject625 || (_templateObject625 = _taggedTemplateLiteral30(["bottle of novelty hot sauce"])))],
      [$phylum(_templateObject720 || (_templateObject720 = _taggedTemplateLiteral30(["Elemental"]))), $item(_templateObject819 || (_templateObject819 = _taggedTemplateLiteral30(["elemental sugarcube"])))],
      [$phylum(_templateObject917 || (_templateObject917 = _taggedTemplateLiteral30(["Elf"]))), $item(_templateObject015 || (_templateObject015 = _taggedTemplateLiteral30(["peppermint sprig"])))],
      [$phylum(_templateObject1100 || (_templateObject1100 = _taggedTemplateLiteral30(["Fish"]))), $item(_templateObject1014 || (_templateObject1014 = _taggedTemplateLiteral30(["bottle of clam juice"])))],
      [$phylum(_templateObject1115 || (_templateObject1115 = _taggedTemplateLiteral30(["Goblin"]))), $item(_templateObject1214 || (_templateObject1214 = _taggedTemplateLiteral30(["cocktail mushroom"])))],
      [$phylum(_templateObject1314 || (_templateObject1314 = _taggedTemplateLiteral30(["Hippy"]))), $item(_templateObject1413 || (_templateObject1413 = _taggedTemplateLiteral30(["shot of granola liqueur"])))],
      [$phylum(_templateObject1512 || (_templateObject1512 = _taggedTemplateLiteral30(["Hobo"]))), $item(_templateObject1612 || (_templateObject1612 = _taggedTemplateLiteral30(["can of cherry-flavored sterno"])))],
      [$phylum(_templateObject1711 || (_templateObject1711 = _taggedTemplateLiteral30(["Horror"]))), $item(_templateObject1811 || (_templateObject1811 = _taggedTemplateLiteral30(["lump of black ichor"])))],
      [$phylum(_templateObject1911 || (_templateObject1911 = _taggedTemplateLiteral30(["Humanoid"]))), $item(_templateObject2011 || (_templateObject2011 = _taggedTemplateLiteral30(["bottle of gregnadigne"])))],
      // bottle of Crème de Fugu
      [$phylum(_templateObject2115 || (_templateObject2115 = _taggedTemplateLiteral30(["Mer-kin"]))), import_kolmafia40.Item.get(9358)],
      [$phylum(_templateObject2214 || (_templateObject2214 = _taggedTemplateLiteral30(["Orc"]))), $item(_templateObject2313 || (_templateObject2313 = _taggedTemplateLiteral30(["baby oil shooter"])))],
      [$phylum(_templateObject2411 || (_templateObject2411 = _taggedTemplateLiteral30(["Penguin"]))), $item(_templateObject2510 || (_templateObject2510 = _taggedTemplateLiteral30(["fish head"])))],
      [$phylum(_templateObject268 || (_templateObject268 = _taggedTemplateLiteral30(["Pirate"]))), $item(_templateObject277 || (_templateObject277 = _taggedTemplateLiteral30(["limepatch"])))],
      [$phylum(_templateObject287 || (_templateObject287 = _taggedTemplateLiteral30(["Plant"]))), $item(_templateObject297 || (_templateObject297 = _taggedTemplateLiteral30(["pile of dirt"])))],
      [$phylum(_templateObject307 || (_templateObject307 = _taggedTemplateLiteral30(["Slime"]))), $item(_templateObject3112 || (_templateObject3112 = _taggedTemplateLiteral30(["slime shooter"])))],
      [$phylum(_templateObject3211 || (_templateObject3211 = _taggedTemplateLiteral30(["Weird"]))), $item(_templateObject3310 || (_templateObject3310 = _taggedTemplateLiteral30(["imaginary lemon"])))]
    ]);
    minorDrinks = $items(_templateObject348 || (_templateObject348 = _taggedTemplateLiteral30(["literal grasshopper, double entendre, Phlegethon, Siberian sunrise, mentholated wine, low tide martini, shroomtini, morning dew, whiskey squeeze, great old fashioned, Gnomish sagngria, vodka stinger, extremely slippery nipple, piscatini, Churchill, soilzerac, London frog, nothingtini"])));
    majorDrinks = $items(_templateObject357 || (_templateObject357 = _taggedTemplateLiteral30(["eighth plague, single entendre, reverse Tantalus, elemental caipiroska, Feliz Navidad, Bloody Nora, moreltini, hell in a bucket, Newark, R'lyeh, Gnollish sangria, vodka barracuda, Mysterious Island iced tea, drive-by shooting, gunner's daughter, dirt julep, Simepore slime, Phil Collins"])));
    drinks = [].concat(_toConsumableArray13(minorDrinks), _toConsumableArray13(majorDrinks));
  }
});

// node_modules/libram/dist/resources/2017/Spacegate.js
var Spacegate_exports = {};
__export(Spacegate_exports, {
  animalLife: function() {
    return animalLife;
  },
  dial: function() {
    return dial;
  },
  dialRandom: function() {
    return dialRandom;
  },
  dialled: function() {
    return dialled;
  },
  getHazardEquipment: function() {
    return getHazardEquipment;
  },
  getVaccine: function() {
    return getVaccine;
  },
  have: function() {
    return have26;
  },
  hazardEquipment: function() {
    return hazardEquipment;
  },
  hazards: function() {
    return hazards;
  },
  hostileLife: function() {
    return hostileLife;
  },
  intelligentLife: function() {
    return intelligentLife;
  },
  murderBots: function() {
    return murderBots;
  },
  planetCoords: function() {
    return planetCoords;
  },
  planetName: function() {
    return planetName;
  },
  plantLife: function() {
    return plantLife;
  },
  ruins: function() {
    return ruins;
  },
  spants: function() {
    return spants;
  },
  updateStatus: function() {
    return updateStatus;
  }
});
function _slicedToArray11(r, e) {
  return _arrayWithHoles11(r) || _iterableToArrayLimit11(r, e) || _unsupportedIterableToArray23(r, e) || _nonIterableRest11();
}
function _nonIterableRest11() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray23(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray23(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray23(r, a) : void 0;
  }
}
function _arrayLikeToArray23(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _iterableToArrayLimit11(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles11(r) {
  if (Array.isArray(r)) return r;
}
function _taggedTemplateLiteral31(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have26() {
  return get("spacegateAlways");
}
function updateStatus() {
  (0, import_kolmafia41.visitUrl)("place.php?whichplace=spacegate&action=sg_Terminal");
}
function dialled() {
  updateStatus();
  return get("_spacegateCoordinates") !== "" || get("_spacegateToday");
}
function hazards() {
  return get("_spacegateHazards");
}
function planetName() {
  return get("_spacegatePlanetName");
}
function planetCoords() {
  return get("_spacegateCoordinates");
}
function plantLife() {
  return get("_spacegatePlantLife");
}
function animalLife() {
  return get("_spacegateAnimalLife");
}
function intelligentLife() {
  return get("_spacegateIntelligentLife").includes("detected");
}
function hostileLife() {
  return get("_spacegateIntelligentLife").includes("hostile");
}
function ruins() {
  return get("_spacegateRuins");
}
function spants() {
  return get("_spacegateSpant");
}
function murderBots() {
  return get("_spacegateMurderbot");
}
function hazardEquipment(hazards2) {
  var hazardEquipment2 = {
    "toxic atmosphere": $item(_templateObject200 || (_templateObject200 = _taggedTemplateLiteral31(["filter helmet"]))),
    "high gravity": $item(_templateObject260 || (_templateObject260 = _taggedTemplateLiteral31(["exo-servo leg braces"]))),
    irradiated: $item(_templateObject349 || (_templateObject349 = _taggedTemplateLiteral31(["rad cloak"]))),
    "magnetic storms": $item(_templateObject441 || (_templateObject441 = _taggedTemplateLiteral31(["gate transceiver"]))),
    "high winds": $item(_templateObject528 || (_templateObject528 = _taggedTemplateLiteral31(["high-friction boots"])))
  };
  return Object.entries(hazardEquipment2).filter(function(_ref) {
    var _ref2 = _slicedToArray11(_ref, 1), clue = _ref2[0];
    return hazards2.includes(clue);
  }).map(function(_ref3) {
    var _ref4 = _slicedToArray11(_ref3, 2), item15 = _ref4[1];
    return item15;
  });
}
function getHazardEquipment() {
  if (!have26()) {
    return false;
  }
  var equipment = hazardEquipment(hazards());
  equipment.forEach(function(equip8) {
    var num = equip8.id - 9404;
    (0, import_kolmafia41.visitUrl)("place.php?whichplace=spacegate&action=sg_requisition");
    (0, import_kolmafia41.visitUrl)("choice.php?whichchoice=1233&option=".concat(num));
  });
  equipment.forEach(function(equip8) {
    if ((0, import_kolmafia41.availableAmount)(equip8) !== 1) {
      return false;
    }
  });
  return true;
}
function getVaccine(choice) {
  if (get("_spacegateVaccine")) {
    return false;
  }
  var nums = {
    Rainbow: 1,
    "Elemental Resistance": 1,
    "Broad-Spectrum": 2,
    Stats: 2,
    Emotional: 3,
    "Monster Level": 3
  };
  var num = nums[choice];
  if (!get("spacegateVaccine".concat(num))) {
    throw "You don't appear to have that Vaccine Unlocked!";
  }
  (0, import_kolmafia41.cliExecute)("spacegate vaccine ".concat(num));
  return get("_spacegateVaccine");
}
function dial(address) {
  if (!have26() || dialled()) {
    return false;
  }
  if (!address.match(/^[A-Za-z]+$/) || address.length !== 7) {
    throw "Invalid Spacegate Address - must be exactly 7 alphabetic characters";
  } else {
    (0, import_kolmafia41.cliExecute)("spacegate destination ".concat(address));
  }
  return dialled() && planetCoords() === address;
}
function dialRandom() {
  if (!have26() || dialled()) {
    return false;
  }
  (0, import_kolmafia41.cliExecute)("spacegate destination random");
  return dialled();
}
var import_kolmafia41, _templateObject200, _templateObject260, _templateObject349, _templateObject441, _templateObject528;
var init_Spacegate = __esm({
  "node_modules/libram/dist/resources/2017/Spacegate.js": function() {
    import_kolmafia41 = require("kolmafia");
    init_property();
    init_template_string();
  }
});

// node_modules/libram/dist/resources/2017/TunnelOfLove.js
var TunnelOfLove_exports = {};
__export(TunnelOfLove_exports, {
  LovEnamorang: function() {
    return LovEnamorang;
  },
  couldUseLoveEnamorang: function() {
    return couldUseLoveEnamorang;
  },
  fightAll: function() {
    return fightAll;
  },
  getLovEnamorangMonster: function() {
    return getLovEnamorangMonster;
  },
  getLovEnamorangUses: function() {
    return getLovEnamorangUses;
  },
  have: function() {
    return have27;
  },
  haveLovEnamorang: function() {
    return haveLovEnamorang;
  },
  isUsed: function() {
    return isUsed;
  }
});
function _taggedTemplateLiteral32(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have27() {
  return get("loveTunnelAvailable");
}
function isUsed() {
  return get("_loveTunnelUsed");
}
function haveLovEnamorang() {
  return have($item(_templateObject201 || (_templateObject201 = _taggedTemplateLiteral32(["LOV Enamorang"]))));
}
function getLovEnamorangUses() {
  return get("_enamorangs");
}
function couldUseLoveEnamorang() {
  return !haveWandererCounter(Wanderer.Enamorang) && getLovEnamorangUses() < 3 && haveLovEnamorang();
}
function getLovEnamorangMonster() {
  return get("enamorangMonster");
}
function equipmentChoice(equipment) {
  switch (equipment) {
    case "LOV Eardigan":
      return 1;
    case "LOV Epaulettes":
      return 2;
    case "LOV Earring":
      return 3;
  }
}
function effectChoice(effect2) {
  switch (effect2) {
    case "Lovebotamy":
      return 1;
    case "Open Heart Surgery":
      return 2;
    case "Wandering Eye Surgery":
      return 3;
  }
}
function extraChoice(extra) {
  switch (extra) {
    case "LOV Enamorang":
      return 1;
    case "LOV Emotionizer":
      return 2;
    case "LOV Extraterrestrial Chocolate":
      return 3;
    case "LOV Echinacea Bouquet":
      return 4;
    case "LOV Elephant":
      return 5;
    case "toast":
      return 6;
    case null:
      return 7;
  }
}
function fightAll(equipment, effect2, extra) {
  withChoices({
    1222: 1,
    1223: 1,
    1224: equipmentChoice(equipment),
    1225: 1,
    1226: effectChoice(effect2),
    1227: 1,
    1228: extraChoice(extra)
  }, function() {
    (0, import_kolmafia42.adv1)($location(_templateObject261 || (_templateObject261 = _taggedTemplateLiteral32(["The Tunnel of L.O.V.E."]))), 0, "");
  });
}
var import_kolmafia42, _templateObject201, _templateObject261, LovEnamorang;
var init_TunnelOfLove = __esm({
  "node_modules/libram/dist/resources/2017/TunnelOfLove.js": function() {
    import_kolmafia42 = require("kolmafia");
    init_Copier();
    init_lib();
    init_property();
    init_template_string();
    LovEnamorang = new Copier(function() {
      return couldUseLoveEnamorang();
    }, null, function() {
      return couldUseLoveEnamorang();
    }, function() {
      return getLovEnamorangMonster();
    });
  }
});

// node_modules/libram/dist/resources/2018/BoxingDaycare.js
var BoxingDaycare_exports = {};
__export(BoxingDaycare_exports, {
  canDaydream: function() {
    return canDaydream;
  },
  canVisitSpa: function() {
    return canVisitSpa;
  },
  daydream: function() {
    return daydream;
  },
  expectedRecruits: function() {
    return expectedRecruits;
  },
  have: function() {
    return have28;
  },
  hireInstructor: function() {
    return hireInstructor;
  },
  recruit: function() {
    return recruit;
  },
  recruitCost: function() {
    return recruitCost;
  },
  rerollInstructor: function() {
    return rerollInstructor;
  },
  scavenge: function() {
    return scavenge;
  },
  visitSpa: function() {
    return visitSpa;
  }
});
function have28() {
  return get("daycareOpen");
}
function canDaydream() {
  return have28() && !get("_daycareNap");
}
function daydream() {
  if (!canDaydream()) return false;
  return (0, import_kolmafia43.cliExecute)("daycare item");
}
function canVisitSpa() {
  return have28() && !get("_daycareSpa");
}
function visitSpa(target) {
  if (!canVisitSpa()) return false;
  if (target instanceof import_kolmafia43.Stat) {
    var _command = target === import_kolmafia43.Stat.none ? "regen" : target.toString().toLowerCase().slice(0, 3);
    return (0, import_kolmafia43.cliExecute)("daycare ".concat(_command));
  }
  var targetString = target instanceof import_kolmafia43.Effect ? target.name : target;
  var command = SPA_PACKAGE_COMMANDS[Object.entries(SPA_PACKAGES).findIndex(function(entry) {
    return entry.includes(targetString);
  })];
  if (!command) return false;
  return (0, import_kolmafia43.cliExecute)("daycare ".concat(command));
}
function hireInstructor() {
  var shouldHire = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : function() {
    return true;
  };
  if (!have28()) return false;
  try {
    visitDaycare();
    var item15 = get("daycareInstructorItem");
    var quantity = get("daycareInstructorItemQuantity");
    if (!item15 || !quantity) return false;
    var initial = get("daycareInstructors");
    if (shouldHire(item15, quantity)) {
      (0, import_kolmafia43.retrieveItem)(item15, quantity);
      if (!(0, import_kolmafia43.handlingChoice)() || (0, import_kolmafia43.lastChoice)() !== 1336) visitDaycare();
      (0, import_kolmafia43.runChoice)(3);
      return initial === get("daycareInstructors");
    }
    return false;
  } finally {
    (0, import_kolmafia43.visitUrl)("main.php");
  }
}
function rerollInstructor() {
  if (!have28()) return false;
  try {
    visitDaycare();
    var initial = get("daycareInstructorItem");
    if (!get("daycareInstructorItem")) return false;
    (0, import_kolmafia43.runChoice)(7);
    return initial === get("daycareInstructorItem");
  } finally {
    (0, import_kolmafia43.visitUrl)("main.php");
  }
}
function recruitCost() {
  var number = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : get("_daycareRecruits");
  return Math.pow(10, 2 + number);
}
function expectedRecruits() {
  var _ref = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, _ref$equipment = _ref.equipment, equipment = _ref$equipment === void 0 ? get("daycareEquipment") : _ref$equipment, _ref$instructors = _ref.instructors, instructors = _ref$instructors === void 0 ? get("daycareInstructors") : _ref$instructors;
  return [equipment * Math.pow(instructors, 2) / 2, equipment * Math.pow(instructors, 2)];
}
function recruit() {
  if (!have28()) return false;
  if ((0, import_kolmafia43.myMeat)() < recruitCost()) return false;
  var initial = get("daycareToddlers");
  visitDaycare();
  (0, import_kolmafia43.runChoice)(1);
  (0, import_kolmafia43.visitUrl)("main.php");
  return initial === get("daycareToddlers");
}
function scavenge() {
  if (!have28()) return false;
  return (0, import_kolmafia43.cliExecute)("daycare scavenge");
}
var import_kolmafia43, SPA_PACKAGES, SPA_PACKAGE_COMMANDS, visit, visitDaycare;
var init_BoxingDaycare = __esm({
  "node_modules/libram/dist/resources/2018/BoxingDaycare.js": function() {
    import_kolmafia43 = require("kolmafia");
    init_property();
    SPA_PACKAGES = {
      "Mud Bath": "Muddled",
      "Mani-pedi": "Ten out of Ten",
      "Cucumber Eye Treatment": "Uncucumbered",
      "Thermal Spring Aromatherapy": "Flagrantly Fragrant"
    };
    SPA_PACKAGE_COMMANDS = ["mus", "mys", "mox", "regen"];
    visit = function() {
      return (0, import_kolmafia43.visitUrl)("place.php?whichplace=town_wrong&action=townwrong_boxingdaycare");
    };
    visitDaycare = function() {
      visit();
      (0, import_kolmafia43.runChoice)(3);
    };
  }
});

// node_modules/libram/dist/counter.js
var counter_exports = {};
__export(counter_exports, {
  exists: function() {
    return exists;
  },
  get: function() {
    return get3;
  },
  set: function() {
    return set;
  }
});
function get3(counter) {
  var value = (0, import_kolmafia44.getCounter)(counter);
  if (value === -1) {
    return (0, import_kolmafia44.getCounters)(counter, -1, -1).trim() === "" ? Infinity : -1;
  }
  return value;
}
function exists(counter) {
  return (0, import_kolmafia44.getCounter)(counter) !== -1 || (0, import_kolmafia44.getCounters)(counter, -1, -1).trim() !== "";
}
function set(counter, duration) {
  (0, import_kolmafia44.cliExecute)("counters add ".concat(duration, " ").concat(counter));
  return get3(counter) !== null;
}
var import_kolmafia44;
var init_counter = __esm({
  "node_modules/libram/dist/counter.js": function() {
    import_kolmafia44 = require("kolmafia");
  }
});

// node_modules/libram/dist/resources/2018/LatteLoversMembersMug.js
var LatteLoversMembersMug_exports = {};
__export(LatteLoversMembersMug_exports, {
  currentIngredients: function() {
    return currentIngredients;
  },
  fill: function() {
    return fill;
  },
  have: function() {
    return have29;
  },
  ingredientsUnlocked: function() {
    return ingredientsUnlocked;
  },
  locationOf: function() {
    return locationOf;
  },
  modifierOf: function() {
    return modifierOf;
  },
  refillsRemaining: function() {
    return refillsRemaining;
  },
  sniffedMonster: function() {
    return sniffedMonster;
  }
});
function _taggedTemplateLiteral33(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have29() {
  return have($item(_templateObject269 || (_templateObject269 = _taggedTemplateLiteral33(["latte lovers member's mug"]))));
}
function sniffedMonster() {
  return exists("Latte Monster") ? get("_latteMonster") : null;
}
function refillsRemaining() {
  return clamp(3 - get("_latteRefillsUsed"), 0, 3);
}
function ingredientsUnlocked() {
  return get("latteUnlocks").split(",");
}
function fill() {
  if (refillsRemaining() <= 0) return false;
  for (var _len = arguments.length, ingredients = new Array(_len), _key = 0; _key < _len; _key++) {
    ingredients[_key] = arguments[_key];
  }
  if (new Set(ingredients).size < 3) return false;
  if (ingredients.some(function(i) {
    return !ingredientsUnlocked().includes(i);
  })) return false;
  return (0, import_kolmafia45.cliExecute)("latte refill ".concat(ingredients.join(" ")));
}
function modifierOf(ingredient) {
  return INGREDIENTS[ingredient].modifier;
}
function locationOf(ingredient) {
  return INGREDIENTS[ingredient].location;
}
function currentIngredients() {
  return (0, import_kolmafia45.getProperty)("latteIngredients").split(",");
}
var import_kolmafia45, _templateObject269, _templateObject270, _templateObject350, _templateObject445, _templateObject529, _templateObject626, _templateObject721, _templateObject820, _templateObject918, _templateObject016, _templateObject1101, _templateObject1015, _templateObject1116, _templateObject1215, _templateObject1315, _templateObject1414, _templateObject1513, _templateObject1613, _templateObject1712, _templateObject1812, _templateObject1912, _templateObject2012, _templateObject2116, _templateObject2215, _templateObject2314, _templateObject2412, _templateObject2511, _templateObject2610, _templateObject278, _templateObject288, _templateObject298, _templateObject308, _templateObject3113, _templateObject3212, _templateObject3311, _templateObject3410, _templateObject358, _templateObject367, _templateObject377, _templateObject387, _templateObject397, _templateObject407, _templateObject4112, _templateObject4211, _templateObject4310, _templateObject446, _templateObject455, _templateObject465, _templateObject475, _templateObject485, _templateObject494, _templateObject504, _templateObject5111, INGREDIENTS;
var init_LatteLoversMembersMug = __esm({
  "node_modules/libram/dist/resources/2018/LatteLoversMembersMug.js": function() {
    import_kolmafia45 = require("kolmafia");
    init_counter();
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    INGREDIENTS = {
      ancient: {
        modifier: {
          "Spooky Damage": 50
        },
        location: $location(_templateObject270 || (_templateObject270 = _taggedTemplateLiteral33(["The Mouldering Mansion"])))
      },
      asp: {
        modifier: {
          "Weapon Damage": 25
        },
        location: $location(_templateObject350 || (_templateObject350 = _taggedTemplateLiteral33(["The Middle Chamber"])))
      },
      basil: {
        modifier: {
          "HP Regen Min": 5,
          "HP Regen Max": 5
        },
        location: $location(_templateObject445 || (_templateObject445 = _taggedTemplateLiteral33(["The Overgrown Lot"])))
      },
      belgian: {
        modifier: {
          "Moxie Percent": 20,
          "Mysticality Percent": 20,
          "Muscle Percent": 20
        },
        location: $location(_templateObject529 || (_templateObject529 = _taggedTemplateLiteral33(["Whitey's Grove"])))
      },
      chalk: {
        modifier: {
          "Cold Damage": 25
        },
        location: $location(_templateObject626 || (_templateObject626 = _taggedTemplateLiteral33(["The Haunted Billiards Room"])))
      },
      "bug-thistle": {
        modifier: {
          Mysticality: 20
        },
        location: $location(_templateObject721 || (_templateObject721 = _taggedTemplateLiteral33(["The Bugbear Pen"])))
      },
      butternut: {
        modifier: {
          "Spell Damage": 10
        },
        location: $location(_templateObject820 || (_templateObject820 = _taggedTemplateLiteral33(["Madness Bakery"])))
      },
      cajun: {
        modifier: {
          "Meat Drop": 40
        },
        location: $location(_templateObject918 || (_templateObject918 = _taggedTemplateLiteral33(["The Black Forest"])))
      },
      carrot: {
        modifier: {
          "Item Drop": 20
        },
        location: $location(_templateObject016 || (_templateObject016 = _taggedTemplateLiteral33(["The Dire Warren"])))
      },
      carrrdamom: {
        modifier: {
          "MP Regen Min": 4,
          "MP Regen Max": 6
        },
        location: $location(_templateObject1101 || (_templateObject1101 = _taggedTemplateLiteral33(["Barrrney's Barrr"])))
      },
      chili: {
        modifier: {
          "Hot Resistance": 3
        },
        location: $location(_templateObject1015 || (_templateObject1015 = _taggedTemplateLiteral33(["The Haunted Kitchen"])))
      },
      clove: {
        modifier: {
          "Stench Resistance": 3
        },
        location: $location(_templateObject1116 || (_templateObject1116 = _taggedTemplateLiteral33(["The Sleazy Back Alley"])))
      },
      coal: {
        modifier: {
          "Hot Damage": 25
        },
        location: $location(_templateObject1215 || (_templateObject1215 = _taggedTemplateLiteral33(["The Haunted Boiler Room"])))
      },
      cocoa: {
        modifier: {
          "Cold Resistance": 3
        },
        location: $location(_templateObject1315 || (_templateObject1315 = _taggedTemplateLiteral33(["The Icy Peak"])))
      },
      diet: {
        modifier: {
          Initiative: 50
        },
        location: $location(_templateObject1414 || (_templateObject1414 = _taggedTemplateLiteral33(["The Cola Wars Battlefield"])))
      },
      dwarf: {
        modifier: {
          Muscle: 30
        },
        location: $location(_templateObject1513 || (_templateObject1513 = _taggedTemplateLiteral33(["Itznotyerzitz Mine"])))
      },
      dyspepsi: {
        modifier: {
          Initiative: 25
        },
        location: $location(_templateObject1613 || (_templateObject1613 = _taggedTemplateLiteral33(["Cola Wars Battlefield (Dyspepsi Uniform)"])))
      },
      filth: {
        modifier: {
          "Damage Reduction": 20
        },
        location: $location(_templateObject1712 || (_templateObject1712 = _taggedTemplateLiteral33(["The Feeding Chamber"])))
      },
      grass: {
        modifier: {
          Experience: 3
        },
        location: $location(_templateObject1812 || (_templateObject1812 = _taggedTemplateLiteral33(["The Hidden Park"])))
      },
      fungus: {
        modifier: {
          "Maximum MP": 30
        },
        location: $location(_templateObject1912 || (_templateObject1912 = _taggedTemplateLiteral33(["The Fungal Nethers"])))
      },
      mold: {
        modifier: {
          "Spooky Damage": 20
        },
        location: $location(_templateObject2012 || (_templateObject2012 = _taggedTemplateLiteral33(["The Unquiet Garves"])))
      },
      greek: {
        modifier: {
          "Sleaze Damage": 25
        },
        location: $location(_templateObject2116 || (_templateObject2116 = _taggedTemplateLiteral33(["Wartime Frat House"])))
      },
      grobold: {
        modifier: {
          "Sleaze Damage": 25
        },
        location: $location(_templateObject2215 || (_templateObject2215 = _taggedTemplateLiteral33(["The Old Rubee Mine"])))
      },
      guarna: {
        modifier: {
          Adventures: 4
        },
        location: $location(_templateObject2314 || (_templateObject2314 = _taggedTemplateLiteral33(["The Bat Hole Entrance"])))
      },
      gunpowder: {
        modifier: {
          "Weapon Damage": 50
        },
        location: $location(_templateObject2412 || (_templateObject2412 = _taggedTemplateLiteral33(["1st Floor, Shiawase-Mitsuhama Building"])))
      },
      healing: {
        modifier: {
          "HP Regen Min": 10,
          "HP Regen Max": 20
        },
        location: $location(_templateObject2511 || (_templateObject2511 = _taggedTemplateLiteral33(["The Daily Dungeon"])))
      },
      hellion: {
        modifier: {
          "PvP Fights": 6
        },
        location: $location(_templateObject2610 || (_templateObject2610 = _taggedTemplateLiteral33(["The Dark Neck of the Woods"])))
      },
      hobo: {
        modifier: {
          "Damage Absorption": 50
        },
        location: $location(_templateObject278 || (_templateObject278 = _taggedTemplateLiteral33(["Hobopolis Town Square"])))
      },
      greasy: {
        modifier: {
          "Muscle Percent": 50
        },
        location: $location(_templateObject288 || (_templateObject288 = _taggedTemplateLiteral33(["Cobb's Knob Barracks"])))
      },
      wing: {
        modifier: {
          "Combat Rate": 10
        },
        location: $location(_templateObject298 || (_templateObject298 = _taggedTemplateLiteral33(["The Dark Heart of the Woods"])))
      },
      ink: {
        modifier: {
          "Combat Rate": -10
        },
        location: $location(_templateObject308 || (_templateObject308 = _taggedTemplateLiteral33(["The Haunted Library"])))
      },
      kombucha: {
        modifier: {
          "Stench Damage": 25
        },
        location: $location(_templateObject3113 || (_templateObject3113 = _taggedTemplateLiteral33(["Wartime Hippy Camp"])))
      },
      lihc: {
        modifier: {
          "Spooky Damage": 25
        },
        location: $location(_templateObject3212 || (_templateObject3212 = _taggedTemplateLiteral33(["The Defiled Niche"])))
      },
      lizard: {
        modifier: {
          "MP Regen Min": 5,
          "MP Regen Max": 15
        },
        location: $location(_templateObject3311 || (_templateObject3311 = _taggedTemplateLiteral33(["The Arid, Extra-Dry Desert"])))
      },
      macaroni: {
        modifier: {
          "Maximum HP": 20
        },
        location: $location(_templateObject3410 || (_templateObject3410 = _taggedTemplateLiteral33(["The Haunted Pantry"])))
      },
      mega: {
        modifier: {
          "Moxie Percent": 50
        },
        location: $location(_templateObject358 || (_templateObject358 = _taggedTemplateLiteral33(["Cobb's Knob Laboratory"])))
      },
      oil: {
        modifier: {
          "Sleaze Damage": 20
        },
        location: $location(_templateObject367 || (_templateObject367 = _taggedTemplateLiteral33(["The Old Landfill"])))
      },
      msg: {
        modifier: {
          "Critical Hit Percent": 15
        },
        location: $location(_templateObject377 || (_templateObject377 = _taggedTemplateLiteral33(["The Briniest Deepests"])))
      },
      norwhal: {
        modifier: {
          "Maximum HP Percent": 200
        },
        location: $location(_templateObject387 || (_templateObject387 = _taggedTemplateLiteral33(["The Ice Hole"])))
      },
      paint: {
        modifier: {
          "Prismatic Damage": 5
        },
        location: $location(_templateObject397 || (_templateObject397 = _taggedTemplateLiteral33(["The Haunted Gallery"])))
      },
      paradise: {
        modifier: {
          Moxie: 20,
          Muscle: 20,
          Mysticality: 20
        },
        location: $location(_templateObject407 || (_templateObject407 = _taggedTemplateLiteral33(["The Stately Pleasure Dome"])))
      },
      rawhide: {
        modifier: {
          "Familiar Weight": 5
        },
        location: $location(_templateObject4112 || (_templateObject4112 = _taggedTemplateLiteral33(["The Spooky Forest"])))
      },
      rock: {
        modifier: {
          "Critical Hit Percent": 10
        },
        location: $location(_templateObject4211 || (_templateObject4211 = _taggedTemplateLiteral33(["The Brinier Deepers"])))
      },
      salt: {
        modifier: {
          "Critical Hit Percent": 5
        },
        location: $location(_templateObject4310 || (_templateObject4310 = _taggedTemplateLiteral33(["The Briny Deeps"])))
      },
      sandalwood: {
        modifier: {
          Moxie: 5,
          Muscle: 5,
          Mysticality: 5
        },
        location: $location(_templateObject446 || (_templateObject446 = _taggedTemplateLiteral33(["Noob Cave"])))
      },
      sausage: {
        modifier: {
          "Mysticality Percent": 50
        },
        location: $location(_templateObject455 || (_templateObject455 = _taggedTemplateLiteral33(["Cobb's Knob Kitchens"])))
      },
      space: {
        modifier: {
          Moxie: 10,
          Muscle: 10,
          Mysticality: 10
        },
        location: $location(_templateObject465 || (_templateObject465 = _taggedTemplateLiteral33(["The Hole in the Sky"])))
      },
      squash: {
        modifier: {
          "Spell Damage": 10
        },
        location: $location(_templateObject475 || (_templateObject475 = _taggedTemplateLiteral33(["The Copperhead Club"])))
      },
      teeth: {
        modifier: {
          "Spooky Damage": 25,
          "Weapon Damage": 25
        },
        location: $location(_templateObject485 || (_templateObject485 = _taggedTemplateLiteral33(["The VERY Unquiet Garves"])))
      },
      vitamin: {
        modifier: {
          "Familiar Experience": 3
        },
        location: $location(_templateObject494 || (_templateObject494 = _taggedTemplateLiteral33(["The Dark Elbow of the Woods"])))
      },
      flour: {
        modifier: {
          "Sleaze Resistance": 3
        },
        location: $location(_templateObject504 || (_templateObject504 = _taggedTemplateLiteral33(["The Road to the White Citadel"])))
      },
      squamous: {
        modifier: {
          "Spooky Resistance": 3
        },
        location: $location(_templateObject5111 || (_templateObject5111 = _taggedTemplateLiteral33(["The Caliginous Abyss"])))
      },
      pumpkin: {
        modifier: {
          "Mysticality Experience": 1,
          "Spell Damage": 5,
          "Mysticality Percent": 5
        },
        location: null
      },
      cinnamon: {
        modifier: {
          "Moxie Experience": 1,
          "Pickpocket Rate": 5,
          "Moxie Percent": 5
        },
        location: null
      },
      vanilla: {
        modifier: {
          "Muscle Experience": 1,
          "Weapon Damage Percent": 5,
          "Muscle Percent": 5
        },
        location: null
      }
    };
  }
});

// node_modules/libram/dist/resources/2018/SongBoom.js
var SongBoom_exports = {};
__export(SongBoom_exports, {
  dropProgress: function() {
    return dropProgress;
  },
  have: function() {
    return have30;
  },
  setSong: function() {
    return setSong;
  },
  song: function() {
    return song;
  },
  songBoomSongs: function() {
    return songBoomSongs;
  },
  songChangesLeft: function() {
    return songChangesLeft;
  }
});
function _taggedTemplateLiteral34(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have30() {
  return have(item3);
}
function song() {
  var stored = get("boomBoxSong");
  return songBoomSongs.has(stored) ? stored : null;
}
function songChangesLeft() {
  return get("_boomBoxSongsLeft");
}
function setSong(newSong) {
  if (song() !== newSong) {
    if (songChangesLeft() === 0) throw new Error("Out of song changes!");
    (0, import_kolmafia46.cliExecute)("boombox ".concat(newSong ? keywords[newSong] : "none"));
    return true;
  } else {
    return false;
  }
}
function dropProgress() {
  return get("_boomBoxFights");
}
var import_kolmafia46, _templateObject271, item3, keywords, songBoomSongs;
var init_SongBoom = __esm({
  "node_modules/libram/dist/resources/2018/SongBoom.js": function() {
    import_kolmafia46 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    item3 = $item(_templateObject271 || (_templateObject271 = _taggedTemplateLiteral34(["SongBoom\u2122 BoomBox"])));
    keywords = {
      "Eye of the Giger": "spooky",
      "Food Vibrations": "food",
      "Remainin' Alive": "dr",
      "These Fists Were Made for Punchin'": "damage",
      "Total Eclipse of Your Meat": "meat"
    };
    songBoomSongs = new Set(Object.keys(keywords));
  }
});

// node_modules/libram/dist/resources/2019/BeachComb.js
var BeachComb_exports = {};
__export(BeachComb_exports, {
  available: function() {
    return available3;
  },
  canComb: function() {
    return canComb;
  },
  comb: function() {
    return comb;
  },
  freeCombs: function() {
    return freeCombs;
  },
  have: function() {
    return have31;
  },
  head: function() {
    return head;
  },
  headAvailable: function() {
    return headAvailable;
  },
  headBuffs: function() {
    return headBuffs;
  },
  tideLevel: function() {
    return tideLevel;
  },
  tryHead: function() {
    return tryHead;
  }
});
function _taggedTemplateLiteral35(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have31() {
  return have(import_kolmafia47.Item.get("Beach Comb"));
}
function available3() {
  return have31() || have(import_kolmafia47.Item.get("driftwood beach comb"));
}
function tideLevel() {
  var day = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (0, import_kolmafia47.gamedayToInt)();
  var dayOfMonth = 1 + day % 8;
  return 4 - Math.abs(4 - dayOfMonth);
}
function canComb(tile) {
  return tile.row > tideLevel();
}
function freeCombs() {
  return available3() ? clamp(11 - get("_freeBeachWalksUsed"), 0, 11) : 0;
}
function comb() {
  for (var _len = arguments.length, tiles = new Array(_len), _key = 0; _key < _len; _key++) {
    tiles[_key] = arguments[_key];
  }
  if (!available3() || !tiles.length) return;
  for (var _i = 0, _tiles = tiles; _i < _tiles.length; _i++) {
    var tile = _tiles[_i];
    if (canComb(tile)) {
      var minute = tile.minute, row = tile.row, column = tile.column;
      (0, import_kolmafia47.cliExecute)("beach wander ".concat(minute));
      (0, import_kolmafia47.cliExecute)("beach comb ".concat(row, " ").concat(column));
    }
  }
  if ((0, import_kolmafia47.handlingChoice)()) (0, import_kolmafia47.runChoice)(5);
}
function headAvailable(target) {
  var effect2 = target instanceof import_kolmafia47.Effect ? target : head[target];
  var headNumber = 1 + headBuffs.indexOf(effect2);
  return (0, import_kolmafia47.getProperty)("beachHeadsUnlocked").split(",").includes(headNumber.toString()) && !(0, import_kolmafia47.getProperty)("_beachHeadsUsed").split(",").includes(headNumber.toString());
}
function tryHead(target) {
  var effect2 = target instanceof import_kolmafia47.Effect ? target : head[target];
  if (!headBuffs.includes(effect2)) return false;
  if (!headAvailable(target)) return false;
  (0, import_kolmafia47.cliExecute)(effect2.default);
  return have(effect2);
}
var import_kolmafia47, _templateObject279, _templateObject280, _templateObject351, _templateObject447, _templateObject530, _templateObject627, _templateObject724, _templateObject821, _templateObject919, _templateObject017, _templateObject1102, _templateObject1016, _templateObject1117, _templateObject1216, _templateObject1316, _templateObject1415, _templateObject1514, _templateObject1614, _templateObject1713, _templateObject1813, _templateObject1913, headBuffs, head;
var init_BeachComb = __esm({
  "node_modules/libram/dist/resources/2019/BeachComb.js": function() {
    import_kolmafia47 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    headBuffs = [$effect(_templateObject279 || (_templateObject279 = _taggedTemplateLiteral35(["Hot-Headed"]))), $effect(_templateObject280 || (_templateObject280 = _taggedTemplateLiteral35(["Cold as Nice"]))), $effect(_templateObject351 || (_templateObject351 = _taggedTemplateLiteral35(["A Brush with Grossness"]))), $effect(_templateObject447 || (_templateObject447 = _taggedTemplateLiteral35(["Does It Have a Skull In There??"]))), $effect(_templateObject530 || (_templateObject530 = _taggedTemplateLiteral35(["Oiled, Slick"]))), $effect(_templateObject627 || (_templateObject627 = _taggedTemplateLiteral35(["Lack of Body-Building"]))), $effect(_templateObject724 || (_templateObject724 = _taggedTemplateLiteral35(["We're All Made of Starfish"]))), $effect(_templateObject821 || (_templateObject821 = _taggedTemplateLiteral35(["Pomp & Circumsands"]))), $effect(_templateObject919 || (_templateObject919 = _taggedTemplateLiteral35(["Resting Beach Face"]))), $effect(_templateObject017 || (_templateObject017 = _taggedTemplateLiteral35(["Do I Know You From Somewhere?"]))), $effect(_templateObject1102 || (_templateObject1102 = _taggedTemplateLiteral35(["You Learned Something Maybe!"])))];
    head = {
      HOT: $effect(_templateObject1016 || (_templateObject1016 = _taggedTemplateLiteral35(["Hot-Headed"]))),
      COLD: $effect(_templateObject1117 || (_templateObject1117 = _taggedTemplateLiteral35(["Cold as Nice"]))),
      STENCH: $effect(_templateObject1216 || (_templateObject1216 = _taggedTemplateLiteral35(["A Brush with Grossness"]))),
      SPOOKY: $effect(_templateObject1316 || (_templateObject1316 = _taggedTemplateLiteral35(["Does It Have a Skull In There??"]))),
      SLEAZE: $effect(_templateObject1415 || (_templateObject1415 = _taggedTemplateLiteral35(["Oiled, Slick"]))),
      MUSCLE: $effect(_templateObject1514 || (_templateObject1514 = _taggedTemplateLiteral35(["Lack of Body-Building"]))),
      MYSTICALITY: $effect(_templateObject1614 || (_templateObject1614 = _taggedTemplateLiteral35(["We're All Made of Starfish"]))),
      INITIATIVE: $effect(_templateObject1713 || (_templateObject1713 = _taggedTemplateLiteral35(["Resting Beach Face"]))),
      FAMILIAR: $effect(_templateObject1813 || (_templateObject1813 = _taggedTemplateLiteral35(["Do I Know You From Somewhere?"]))),
      EXPERIENCE: $effect(_templateObject1913 || (_templateObject1913 = _taggedTemplateLiteral35(["You Learned Something Maybe!"])))
    };
  }
});

// node_modules/libram/dist/resources/2019/CampAway.js
var CampAway_exports = {};
__export(CampAway_exports, {
  blowSmoke: function() {
    return blowSmoke;
  },
  canGaze: function() {
    return canGaze;
  },
  gaze: function() {
    return gaze;
  },
  getBuffsToday: function() {
    return getBuffsToday;
  },
  getCloudBuffsToday: function() {
    return getCloudBuffsToday;
  },
  getGazeBuff: function() {
    return getGazeBuff;
  },
  getSmileBuffsToday: function() {
    return getSmileBuffsToday;
  },
  have: function() {
    return have32;
  }
});
function _taggedTemplateLiteral36(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have32() {
  return get("getawayCampsiteUnlocked");
}
function getCloudBuffsToday() {
  return get("_campAwayCloudBuffs");
}
function getSmileBuffsToday() {
  return get("_campAwaySmileBuffs");
}
function getBuffsToday() {
  return getCloudBuffsToday() + getSmileBuffsToday();
}
function canGaze() {
  return getBuffsToday() < 4;
}
function gaze() {
  if (!canGaze()) return;
  (0, import_kolmafia48.visitUrl)("place.php?whichplace=campaway&action=campaway_sky");
}
function getGazeBuff() {
  var daycountToCheck = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (0, import_kolmafia48.daycount)();
  var buffSign = signIdToName((daycountToCheck + (0, import_kolmafia48.myPath)().id) % 9 + 1);
  var effectName = [];
  if (buffSign === (0, import_kolmafia48.mySign)()) effectName.push("Big");
  effectName.push("Smile of the", buffSign);
  return import_kolmafia48.Effect.get(effectName.join(" "));
}
function blowSmoke(messages) {
  var times = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  var smoke = $item(_templateObject281 || (_templateObject281 = _taggedTemplateLiteral36(["campfire smoke"])));
  (0, import_kolmafia48.retrieveItem)(smoke, times);
  for (var i = 0; i < times; i++) {
    withChoice(1394, "1&message=".concat(random(messages)), function() {
      (0, import_kolmafia48.use)(smoke);
    });
  }
}
var import_kolmafia48, _templateObject281;
var init_CampAway = __esm({
  "node_modules/libram/dist/resources/2019/CampAway.js": function() {
    import_kolmafia48 = require("kolmafia");
    init_moonSign();
    init_property();
    init_template_string();
    init_utils();
  }
});

// node_modules/libram/dist/resources/2019/PocketProfessor.js
var PocketProfessor_exports = {};
__export(PocketProfessor_exports, {
  canThesis: function() {
    return canThesis;
  },
  currentlyAvailableLectures: function() {
    return currentlyAvailableLectures;
  },
  have: function() {
    return have33;
  },
  lecturesDelivered: function() {
    return lecturesDelivered;
  },
  totalAvailableLectures: function() {
    return totalAvailableLectures;
  }
});
function _taggedTemplateLiteral37(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have33() {
  return have(familiar7);
}
function canThesis() {
  return have33() && familiar7.experience >= 400 && !get("_thesisDelivered");
}
function totalAvailableLectures() {
  var weight = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : totalFamiliarWeight(familiar7);
  var includeChip = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : (0, import_kolmafia49.haveEquipped)($item(_templateObject290 || (_templateObject290 = _taggedTemplateLiteral37(["Pocket Professor memory chip"]))));
  return (includeChip ? 2 : 0) + Math.floor(Math.sqrt(weight - 1));
}
function lecturesDelivered() {
  return get("_pocketProfessorLectures");
}
function currentlyAvailableLectures() {
  var weight = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : totalFamiliarWeight(familiar7);
  var includeChip = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : (0, import_kolmafia49.haveEquipped)($item(_templateObject359 || (_templateObject359 = _taggedTemplateLiteral37(["Pocket Professor memory chip"]))));
  return totalAvailableLectures(weight, includeChip) - lecturesDelivered();
}
var import_kolmafia49, _templateObject289, _templateObject290, _templateObject359, familiar7;
var init_PocketProfessor = __esm({
  "node_modules/libram/dist/resources/2019/PocketProfessor.js": function() {
    import_kolmafia49 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    familiar7 = $familiar(_templateObject289 || (_templateObject289 = _taggedTemplateLiteral37(["Pocket Professor"])));
  }
});

// node_modules/libram/dist/resources/2019/Snapper.js
var Snapper_exports = {};
__export(Snapper_exports, {
  getProgress: function() {
    return getProgress;
  },
  getTrackedPhylum: function() {
    return getTrackedPhylum;
  },
  have: function() {
    return have34;
  },
  itemPhylum: function() {
    return itemPhylum;
  },
  phylumItem: function() {
    return phylumItem;
  },
  trackPhylum: function() {
    return trackPhylum;
  }
});
function _slicedToArray12(r, e) {
  return _arrayWithHoles12(r) || _iterableToArrayLimit12(r, e) || _unsupportedIterableToArray24(r, e) || _nonIterableRest12();
}
function _nonIterableRest12() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit12(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles12(r) {
  if (Array.isArray(r)) return r;
}
function _toConsumableArray14(r) {
  return _arrayWithoutHoles14(r) || _iterableToArray14(r) || _unsupportedIterableToArray24(r) || _nonIterableSpread14();
}
function _nonIterableSpread14() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray24(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray24(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray24(r, a) : void 0;
  }
}
function _iterableToArray14(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles14(r) {
  if (Array.isArray(r)) return _arrayLikeToArray24(r);
}
function _arrayLikeToArray24(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function have34() {
  return (0, import_kolmafia50.haveFamiliar)(familiar8);
}
function getTrackedPhylum() {
  return get("redSnapperPhylum");
}
function trackPhylum(phylum) {
  var currentFamiliar3 = (0, import_kolmafia50.myFamiliar)();
  try {
    (0, import_kolmafia50.useFamiliar)(familiar8);
    (0, import_kolmafia50.cliExecute)("snapper ".concat(phylum));
  } finally {
    (0, import_kolmafia50.useFamiliar)(currentFamiliar3);
  }
}
function getProgress() {
  return get("redSnapperProgress");
}
var import_kolmafia50, familiar8, phylumItem, itemPhylum;
var init_Snapper = __esm({
  "node_modules/libram/dist/resources/2019/Snapper.js": function() {
    import_kolmafia50 = require("kolmafia");
    init_property();
    familiar8 = import_kolmafia50.Familiar.get("Red-Nosed Snapper");
    phylumItem = /* @__PURE__ */ new Map([[import_kolmafia50.Phylum.get("beast"), import_kolmafia50.Item.get("patch of extra-warm fur")], [import_kolmafia50.Phylum.get("bug"), import_kolmafia50.Item.get("a bug's lymph")], [import_kolmafia50.Phylum.get("constellation"), import_kolmafia50.Item.get("micronova")], [import_kolmafia50.Phylum.get("construct"), import_kolmafia50.Item.get("industrial lubricant")], [import_kolmafia50.Phylum.get("demon"), import_kolmafia50.Item.get("infernal snowball")], [import_kolmafia50.Phylum.get("dude"), import_kolmafia50.Item.get("human musk")], [import_kolmafia50.Phylum.get("elemental"), import_kolmafia50.Item.get("livid energy")], [import_kolmafia50.Phylum.get("elf"), import_kolmafia50.Item.get("peppermint syrup")], [import_kolmafia50.Phylum.get("fish"), import_kolmafia50.Item.get("fish sauce")], [import_kolmafia50.Phylum.get("goblin"), import_kolmafia50.Item.get("guffin")], [import_kolmafia50.Phylum.get("hippy"), import_kolmafia50.Item.get("organic potpourri")], [import_kolmafia50.Phylum.get("hobo"), import_kolmafia50.Item.get("beggin' cologne")], [import_kolmafia50.Phylum.get("horror"), import_kolmafia50.Item.get("powdered madness")], [import_kolmafia50.Phylum.get("humanoid"), import_kolmafia50.Item.get("vial of humanoid growth hormone")], [import_kolmafia50.Phylum.get("mer-kin"), import_kolmafia50.Item.get("Mer-kin eyedrops")], [import_kolmafia50.Phylum.get("orc"), import_kolmafia50.Item.get("boot flask")], [import_kolmafia50.Phylum.get("penguin"), import_kolmafia50.Item.get("envelope full of Meat")], [import_kolmafia50.Phylum.get("pirate"), import_kolmafia50.Item.get("Shantix\u2122")], [import_kolmafia50.Phylum.get("plant"), import_kolmafia50.Item.get("goodberry")], [import_kolmafia50.Phylum.get("slime"), import_kolmafia50.Item.get("extra-strength goo")], [import_kolmafia50.Phylum.get("undead"), import_kolmafia50.Item.get("unfinished pleasure")], [import_kolmafia50.Phylum.get("weird"), import_kolmafia50.Item.get("non-Euclidean angle")]]);
    itemPhylum = new Map(_toConsumableArray14(phylumItem).map(function(_ref) {
      var _ref2 = _slicedToArray12(_ref, 2), phylum = _ref2[0], item15 = _ref2[1];
      return [item15, phylum];
    }));
  }
});

// node_modules/libram/dist/resources/2020/Cartography.js
var Cartography_exports = {};
__export(Cartography_exports, {
  availableMaps: function() {
    return availableMaps;
  },
  currentlyMapping: function() {
    return currentlyMapping;
  },
  have: function() {
    return have35;
  },
  mapMonster: function() {
    return mapMonster;
  }
});
function _taggedTemplateLiteral38(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have35() {
  return have(passive);
}
function mapMonster(location7, monster2) {
  if (!have35()) return false;
  if (get("_monstersMapped") >= 3) return false;
  if (!(0, import_kolmafia51.canAdventure)(location7)) return false;
  (0, import_kolmafia51.useSkill)($skill(_templateObject299 || (_templateObject299 = _taggedTemplateLiteral38(["Map the Monsters"]))));
  if (!get("mappingMonsters")) return false;
  var turns2 = (0, import_kolmafia51.myTurncount)();
  while ((0, import_kolmafia51.currentRound)() < 1) {
    if ((0, import_kolmafia51.myTurncount)() > turns2) {
      throw new Error("Map the Monsters unsuccessful?");
    }
    (0, import_kolmafia51.visitUrl)((0, import_kolmafia51.toUrl)(location7));
    if ((0, import_kolmafia51.handlingChoice)() && (0, import_kolmafia51.lastChoice)() === 1435) {
      (0, import_kolmafia51.runChoice)(1, "heyscriptswhatsupwinkwink=".concat(monster2.id));
      return true;
    } else {
      (0, import_kolmafia51.runChoice)(-1, false);
    }
  }
  return false;
}
function availableMaps() {
  return have35() ? $skill(_templateObject360 || (_templateObject360 = _taggedTemplateLiteral38(["Map the Monsters"]))).dailylimit : 0;
}
function currentlyMapping() {
  return get("mappingMonsters");
}
var import_kolmafia51, _templateObject291, _templateObject299, _templateObject360, passive;
var init_Cartography = __esm({
  "node_modules/libram/dist/resources/2020/Cartography.js": function() {
    import_kolmafia51 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    passive = $skill(_templateObject291 || (_templateObject291 = _taggedTemplateLiteral38(["Comprehensive Cartography"])));
  }
});

// node_modules/libram/dist/resources/2020/Guzzlr.js
var Guzzlr_exports = {};
__export(Guzzlr_exports, {
  Cocktails: function() {
    return Cocktails;
  },
  abandon: function() {
    return abandon;
  },
  acceptBronze: function() {
    return acceptBronze;
  },
  acceptGold: function() {
    return acceptGold;
  },
  acceptPlatinum: function() {
    return acceptPlatinum;
  },
  canAbandon: function() {
    return canAbandon;
  },
  canGold: function() {
    return canGold;
  },
  canPlatinum: function() {
    return canPlatinum;
  },
  expectedReward: function() {
    return expectedReward;
  },
  getBooze: function() {
    return getBooze;
  },
  getBronze: function() {
    return getBronze;
  },
  getCheapestPlatinumCocktail: function() {
    return getCheapestPlatinumCocktail;
  },
  getGold: function() {
    return getGold;
  },
  getGoldToday: function() {
    return getGoldToday;
  },
  getLocation: function() {
    return getLocation2;
  },
  getPlatinum: function() {
    return getPlatinum;
  },
  getPlatinumToday: function() {
    return getPlatinumToday;
  },
  getTier: function() {
    return getTier;
  },
  have: function() {
    return have36;
  },
  haveBooze: function() {
    return haveBooze;
  },
  haveFullBronzeBonus: function() {
    return haveFullBronzeBonus;
  },
  haveFullGoldBonus: function() {
    return haveFullGoldBonus;
  },
  haveFullPlatinumBonus: function() {
    return haveFullPlatinumBonus;
  },
  havePlatinumBooze: function() {
    return havePlatinumBooze;
  },
  ingredientToPlatinumCocktail: function() {
    return ingredientToPlatinumCocktail;
  },
  isQuestActive: function() {
    return isQuestActive;
  },
  platinumCocktailToIngredient: function() {
    return platinumCocktailToIngredient;
  },
  turnsLeftOnQuest: function() {
    return turnsLeftOnQuest;
  }
});
function _slicedToArray13(r, e) {
  return _arrayWithHoles13(r) || _iterableToArrayLimit13(r, e) || _unsupportedIterableToArray25(r, e) || _nonIterableRest13();
}
function _nonIterableRest13() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit13(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles13(r) {
  if (Array.isArray(r)) return r;
}
function _toConsumableArray15(r) {
  return _arrayWithoutHoles15(r) || _iterableToArray15(r) || _unsupportedIterableToArray25(r) || _nonIterableSpread15();
}
function _nonIterableSpread15() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray25(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray25(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray25(r, a) : void 0;
  }
}
function _iterableToArray15(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles15(r) {
  if (Array.isArray(r)) return _arrayLikeToArray25(r);
}
function _arrayLikeToArray25(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _taggedTemplateLiteral39(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have36() {
  return have(item4);
}
function useTabletWithChoice(option) {
  withChoice(1412, option, function() {
    return (0, import_kolmafia52.use)(1, item4);
  });
}
function isQuestActive() {
  return get("questGuzzlr") !== "unstarted";
}
function getPlatinum() {
  return get("guzzlrPlatinumDeliveries");
}
function getPlatinumToday() {
  return get("_guzzlrPlatinumDeliveries");
}
function canPlatinum() {
  return !isQuestActive() && getGold() >= 5 && getPlatinumToday() < 1;
}
function haveFullPlatinumBonus() {
  return getPlatinum() >= 30;
}
function acceptPlatinum() {
  if (!canPlatinum()) return false;
  useTabletWithChoice(4);
  return true;
}
function getGold() {
  return get("guzzlrGoldDeliveries");
}
function getGoldToday() {
  return get("_guzzlrGoldDeliveries");
}
function canGold() {
  return !isQuestActive() && getBronze() >= 5 && getGoldToday() < 3;
}
function haveFullGoldBonus() {
  return getGold() >= 150;
}
function acceptGold() {
  if (!canGold()) return false;
  useTabletWithChoice(3);
  return true;
}
function getBronze() {
  return get("guzzlrBronzeDeliveries");
}
function haveFullBronzeBonus() {
  return getBronze() >= 196;
}
function acceptBronze() {
  if (isQuestActive()) return false;
  useTabletWithChoice(2);
  return true;
}
function canAbandon() {
  return isQuestActive() && !get("_guzzlrQuestAbandoned");
}
function abandon() {
  if (!canAbandon()) return false;
  (0, import_kolmafia52.visitUrl)("inventory.php?tap=guzzlr", false);
  (0, import_kolmafia52.runChoice)(1);
  (0, import_kolmafia52.runChoice)(5);
  return true;
}
function getLocation2() {
  return get("guzzlrQuestLocation");
}
function getTier() {
  var tier = get("guzzlrQuestTier");
  return tier === "" ? null : tier;
}
function getBooze() {
  return get("guzzlrQuestBooze");
}
function havePlatinumBooze() {
  return Cocktails.some(function(cock) {
    return (0, import_kolmafia52.itemAmount)(cock) > 0;
  });
}
function haveBooze() {
  var booze = getBooze();
  switch (booze) {
    case null:
      return false;
    case $item(_templateObject361 || (_templateObject361 = _taggedTemplateLiteral39(["Guzzlr cocktail set"]))):
      return havePlatinumBooze();
    default:
      return (0, import_kolmafia52.itemAmount)(booze) > 0;
  }
}
function getCheapestPlatinumCocktail() {
  var freeCraft = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
  if (freeCraft) {
    return maxBy(Array.from(ingredientToPlatinumCocktail), function(ingredientAndCocktail) {
      return Math.min.apply(Math, _toConsumableArray15(ingredientAndCocktail.map(function(item15) {
        return (0, import_kolmafia52.mallPrice)(item15);
      })));
    }, true)[1];
  } else {
    return maxBy(Array.from(ingredientToPlatinumCocktail), function(_ref) {
      var _ref2 = _slicedToArray13(_ref, 2), cocktail = _ref2[1];
      return (0, import_kolmafia52.mallPrice)(cocktail);
    })[1];
  }
}
function turnsLeftOnQuest() {
  var useShoes = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
  var progressPerTurn = useShoes ? Math.floor((10 - get("_guzzlrDeliveries")) * 1.5) : 10 - get("_guzzlrDeliveries");
  return Math.ceil((100 - get("guzzlrDeliveryProgress")) / progressPerTurn);
}
function expectedReward() {
  var usePants = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
  switch (getTier()) {
    case "platinum":
      return 22.5 + (usePants ? 5 : 0);
    case "gold":
      return 6 + (usePants ? 3 : 0);
    case "bronze":
      return 3 + (usePants ? 3 : 0);
    default:
      return 0;
  }
}
var import_kolmafia52, _templateObject300, _templateObject2100, _templateObject361, _templateObject448, _templateObject531, _templateObject628, _templateObject725, _templateObject824, _templateObject920, _templateObject018, _templateObject1103, _templateObject1017, _templateObject1118, item4, Cocktails, ingredientToPlatinumCocktail, platinumCocktailToIngredient;
var init_Guzzlr = __esm({
  "node_modules/libram/dist/resources/2020/Guzzlr.js": function() {
    import_kolmafia52 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    item4 = $item(_templateObject300 || (_templateObject300 = _taggedTemplateLiteral39(["Guzzlr tablet"])));
    Cocktails = $items(_templateObject2100 || (_templateObject2100 = _taggedTemplateLiteral39(["Buttery Boy, Steamboat, Ghiaccio Colada, Nog-on-the-Cob, Sourfinger"])));
    ingredientToPlatinumCocktail = /* @__PURE__ */ new Map([[$item(_templateObject448 || (_templateObject448 = _taggedTemplateLiteral39(["miniature boiler"]))), $item(_templateObject531 || (_templateObject531 = _taggedTemplateLiteral39(["Steamboat"])))], [$item(_templateObject628 || (_templateObject628 = _taggedTemplateLiteral39(["cold wad"]))), $item(_templateObject725 || (_templateObject725 = _taggedTemplateLiteral39(["Ghiaccio Colada"])))], [$item(_templateObject824 || (_templateObject824 = _taggedTemplateLiteral39(["robin's egg"]))), $item(_templateObject920 || (_templateObject920 = _taggedTemplateLiteral39(["Nog-on-the-Cob"])))], [$item(_templateObject018 || (_templateObject018 = _taggedTemplateLiteral39(["mangled finger"]))), $item(_templateObject1103 || (_templateObject1103 = _taggedTemplateLiteral39(["Sourfinger"])))], [$item(_templateObject1017 || (_templateObject1017 = _taggedTemplateLiteral39(["Dish of Clarified Butter"]))), $item(_templateObject1118 || (_templateObject1118 = _taggedTemplateLiteral39(["Buttery Boy"])))]]);
    platinumCocktailToIngredient = invertMap(ingredientToPlatinumCocktail);
  }
});

// node_modules/libram/dist/resources/2020/RetroCape.js
var RetroCape_exports = {};
__export(RetroCape_exports, {
  currentHero: function() {
    return currentHero;
  },
  currentMode: function() {
    return currentMode;
  },
  getModifier: function() {
    return getModifier2;
  },
  have: function() {
    return have37;
  },
  set: function() {
    return set2;
  },
  tuneToSkill: function() {
    return tuneToSkill;
  }
});
function _typeof16(o) {
  "@babel/helpers - typeof";
  return _typeof16 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof16(o);
}
function _toConsumableArray16(r) {
  return _arrayWithoutHoles16(r) || _iterableToArray16(r) || _unsupportedIterableToArray26(r) || _nonIterableSpread16();
}
function _nonIterableSpread16() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray26(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray26(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray26(r, a) : void 0;
  }
}
function _iterableToArray16(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles16(r) {
  if (Array.isArray(r)) return _arrayLikeToArray26(r);
}
function _arrayLikeToArray26(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function ownKeys7(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread7(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys7(Object(t), true).forEach(function(r2) {
      _defineProperty15(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys7(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty15(e, r, t) {
  return (r = _toPropertyKey16(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
}
function _toPropertyKey16(t) {
  var i = _toPrimitive16(t, "string");
  return "symbol" == _typeof16(i) ? i : i + "";
}
function _toPrimitive16(t, r) {
  if ("object" != _typeof16(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof16(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _taggedTemplateLiteral40(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have37() {
  return have(item5);
}
function set2(hero, mode) {
  if (!have37()) return false;
  if (currentHero() === hero && currentMode() === mode) return true;
  (0, import_kolmafia53.cliExecute)("retrocape ".concat(hero, " ").concat(mode));
  return currentHero() === hero && currentMode() === mode;
}
function getModifier2() {
  var _modeMap$get;
  var hero = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : currentHero();
  var mode = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : currentMode();
  return _objectSpread7(_objectSpread7({}, Heroes[hero]), (_modeMap$get = modeMap.get([hero, mode])) !== null && _modeMap$get !== void 0 ? _modeMap$get : {});
}
function tuneToSkill(skill) {
  var setting = skills.get(skill);
  if (!setting || !have37()) return false;
  set2.apply(void 0, _toConsumableArray16(setting));
  return [currentHero(), currentMode()].every(function(element, index) {
    return element === setting[index];
  });
}
var import_kolmafia53, _templateObject301, _templateObject2101, _templateObject368, _templateObject449, _templateObject534, _templateObject629, _templateObject726, item5, Heroes, currentHero, currentMode, modeMap, skills;
var init_RetroCape = __esm({
  "node_modules/libram/dist/resources/2020/RetroCape.js": function() {
    import_kolmafia53 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    item5 = $item(_templateObject301 || (_templateObject301 = _taggedTemplateLiteral40(["unwrapped knock-off retro superhero cape"])));
    Heroes = {
      vampire: {
        "Muscle Percent": 30,
        "Maximum HP": 50
      },
      heck: {
        "Mysticality Percent": 30,
        "Maximum MP": 50
      },
      robot: {
        "Moxie Percent": 30,
        "Maximum HP": 25,
        "Maximum MP": 25
      }
    };
    currentHero = function() {
      return get("retroCapeSuperhero");
    };
    currentMode = function() {
      return get("retroCapeWashingInstructions");
    };
    modeMap = /* @__PURE__ */ new Map([[["vampire", "hold"], {
      "Hot Resistance": 3,
      "Cold Resistance": 3,
      "Stench Resistance": 3,
      "Spooky Resistance": 3,
      "Sleaze Resistance": 3
    }], [["vampire", "thrill"], {
      "Muscle Experience": 3
    }], [["vampire", "kiss"], {
      Skill: "Smooch of the Daywalker"
    }], [["vampire", "kill"], {
      Skill: "Slay the Dead"
    }], [["heck", "thrill"], {
      "Mysticality Experience": 3
    }], [["heck", "kiss"], {
      Skill: "Unleash the Devil's Kiss"
    }], [["robot", "hold"], {
      Skill: "Deploy Robo-Handcuffs"
    }], [["robot", "thrill"], {
      "Moxie Experience": 3
    }], [["robot", "kiss"], {
      Skill: "Blow a Robo-Kiss"
    }], [["robot", "kill"], {
      Skill: "Precision Shot"
    }]]);
    skills = /* @__PURE__ */ new Map([[$skill(_templateObject2101 || (_templateObject2101 = _taggedTemplateLiteral40(["Smooch of the Daywalker"]))), ["vampire", "kiss"]], [$skill(_templateObject368 || (_templateObject368 = _taggedTemplateLiteral40(["Slay the Dead"]))), ["vampire", "kill"]], [$skill(_templateObject449 || (_templateObject449 = _taggedTemplateLiteral40(["Unleash the Devil's Kiss"]))), ["heck", "kiss"]], [$skill(_templateObject534 || (_templateObject534 = _taggedTemplateLiteral40(["Deploy Robo-Handcuffs"]))), ["robot", "hold"]], [$skill(_templateObject629 || (_templateObject629 = _taggedTemplateLiteral40(["Blow a Robo-Kiss"]))), ["robot", "kiss"]], [$skill(_templateObject726 || (_templateObject726 = _taggedTemplateLiteral40(["Precision Shot"]))), ["robot", "kill"]]]);
  }
});

// node_modules/libram/dist/resources/2021/CrystalBall.js
var CrystalBall_exports = {};
__export(CrystalBall_exports, {
  getPrediction: function() {
    return getPrediction;
  },
  have: function() {
    return have38;
  },
  orb: function() {
    return orb;
  },
  ponder: function() {
    return ponder;
  }
});
function _slicedToArray14(r, e) {
  return _arrayWithHoles14(r) || _iterableToArrayLimit14(r, e) || _unsupportedIterableToArray27(r, e) || _nonIterableRest14();
}
function _nonIterableRest14() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray27(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray27(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray27(r, a) : void 0;
  }
}
function _arrayLikeToArray27(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _iterableToArrayLimit14(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles14(r) {
  if (Array.isArray(r)) return r;
}
function have38() {
  return (0, import_kolmafia54.availableAmount)(orb) > 0;
}
function getPrediction() {
  return new Map(multiSplit("crystalBallPredictions", "|", ":", [Number, import_kolmafia54.toLocation, import_kolmafia54.toMonster]).map(function(_ref) {
    var _ref2 = _slicedToArray14(_ref, 3), location7 = _ref2[1], monster2 = _ref2[2];
    return [location7, monster2];
  }));
}
function ponder() {
  if (!have38()) return /* @__PURE__ */ new Map();
  if (lastPondered !== getLastPondered()) {
    if (canVisitUrl()) {
      logger_default.debug("Now pondering Crystal Ball.");
      (0, import_kolmafia54.visitUrl)("inventory.php?ponder=1", false);
      lastPondered = getLastPondered();
    } else {
      logger_default.debug("Failed to ponder Crystall Ball.");
    }
  }
  return getPrediction();
}
var import_kolmafia54, orb, getLastPondered, lastPondered;
var init_CrystalBall = __esm({
  "node_modules/libram/dist/resources/2021/CrystalBall.js": function() {
    import_kolmafia54 = require("kolmafia");
    init_lib();
    init_logger();
    init_property();
    orb = import_kolmafia54.Item.get("miniature crystal ball");
    getLastPondered = function() {
      return "".concat((0, import_kolmafia54.myTotalTurnsSpent)(), ";").concat((0, import_kolmafia54.totalTurnsPlayed)(), ";").concat(get("lastAdventure"));
    };
    lastPondered = "";
  }
});

// node_modules/libram/dist/resources/2021/DaylightShavings.js
var DaylightShavings_exports = {};
__export(DaylightShavings_exports, {
  buffAvailable: function() {
    return buffAvailable;
  },
  buffCycle: function() {
    return buffCycle;
  },
  buffs: function() {
    return buffs;
  },
  buffsUntil: function() {
    return buffsUntil;
  },
  hasBuff: function() {
    return hasBuff;
  },
  have: function() {
    return have39;
  },
  nextBuff: function() {
    return nextBuff;
  }
});
function _taggedTemplateLiteral41(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have39() {
  return have(helmet);
}
function hasBuff() {
  return buffs.some(function(buff) {
    return have(buff);
  });
}
function buffAvailable() {
  return !buffs.some(function(buff) {
    return have(buff, 2);
  });
}
function buffCycle() {
  var playerclass = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (0, import_kolmafia55.myClass)();
  var cycle2 = tuple(import_kolmafia55.Effect.none, import_kolmafia55.Effect.none, import_kolmafia55.Effect.none, import_kolmafia55.Effect.none, import_kolmafia55.Effect.none, import_kolmafia55.Effect.none, import_kolmafia55.Effect.none, import_kolmafia55.Effect.none, import_kolmafia55.Effect.none, import_kolmafia55.Effect.none, import_kolmafia55.Effect.none);
  if (playerclass.id <= 0) return cycle2;
  var id = playerclass.id;
  var seed = id > 6 ? id % 6 + 1 : id;
  for (var i = 1; i < 12; i++) {
    var index = i * seed % 11;
    cycle2[i - 1] = buffs[index];
  }
  return cycle2;
}
function nextBuff() {
  var currentBuff = (0, import_kolmafia55.toEffect)(get("lastBeardBuff").toFixed(0));
  var cycle2 = buffCycle();
  var index = cycle2.indexOf(currentBuff);
  var newIndex = (1 + index) % 11;
  return cycle2[newIndex];
}
function buffsUntil(buff) {
  if (!buffs.includes(buff)) return null;
  var currentIndex = buffs.indexOf(nextBuff()) - 1;
  var newIndex = buffs.indexOf(buff);
  var diff = (newIndex - currentIndex) % 11;
  return diff === 0 ? 11 : diff;
}
var import_kolmafia55, _templateObject309, _templateObject2102, helmet, buffs;
var init_DaylightShavings = __esm({
  "node_modules/libram/dist/resources/2021/DaylightShavings.js": function() {
    import_kolmafia55 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    helmet = $item(_templateObject309 || (_templateObject309 = _taggedTemplateLiteral41(["Daylight Shavings Helmet"])));
    buffs = $effects(_templateObject2102 || (_templateObject2102 = _taggedTemplateLiteral41(["Spectacle Moustache, Toiletbrush Moustache, Barbell Moustache, Grizzly Beard, Surrealist's Moustache, Musician's Musician's Moustache, Gull-Wing Moustache, Space Warlord's Beard, Pointy Wizard Beard, Cowboy Stache, Friendly Chops"])));
  }
});

// node_modules/libram/dist/resources/2022/AutumnAton.js
var AutumnAton_exports = {};
__export(AutumnAton_exports, {
  available: function() {
    return available4;
  },
  availableLocations: function() {
    return availableLocations2;
  },
  currentUpgrades: function() {
    return currentUpgrades;
  },
  currentlyIn: function() {
    return currentlyIn;
  },
  getUniques: function() {
    return getUniques;
  },
  have: function() {
    return have40;
  },
  legs: function() {
    return legs;
  },
  possibleUpgrades: function() {
    return possibleUpgrades;
  },
  seasonalItems: function() {
    return seasonalItems;
  },
  sendTo: function() {
    return sendTo;
  },
  turnsForQuest: function() {
    return turnsForQuest;
  },
  turnsLeft: function() {
    return turnsLeft;
  },
  upgrade: function() {
    return upgrade;
  },
  visualAcuity: function() {
    return visualAcuity;
  },
  zoneItems: function() {
    return zoneItems;
  }
});
function _taggedTemplateLiteral42(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function available4() {
  return (0, import_kolmafia56.availableAmount)(item6) > 0;
}
function have40() {
  return get("hasAutumnaton") || available4();
}
function checkLocations(html) {
  return (0, import_kolmafia56.xpath)(html, '//select[@name="heythereprogrammer"]//option[position()>1]/@value').map(function(id) {
    return (0, import_kolmafia56.toLocation)(Number(id));
  });
}
function currentlyIn() {
  return get("autumnatonQuestLocation");
}
function validateLocation(list, location7) {
  return list.some(function(loc) {
    return loc.id === location7.id;
  });
}
function sendTo(target) {
  var upgrade2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
  if (!available4()) return null;
  var pageHtml = directlyUse(item6);
  if (upgrade2 && (0, import_kolmafia56.availableChoiceOptions)()[1]) (0, import_kolmafia56.runChoice)(1);
  var locationsAvailable = checkLocations(pageHtml);
  var location7 = target instanceof import_kolmafia56.Location ? target : Array.isArray(target) ? target.find(function(l) {
    return validateLocation(locationsAvailable, l);
  }) : target(locationsAvailable);
  if (!location7) return null;
  if (!validateLocation(locationsAvailable, location7)) return null;
  if (!(0, import_kolmafia56.handlingChoice)()) directlyUse(item6);
  (0, import_kolmafia56.runChoice)(2, "heythereprogrammer=".concat(location7.id));
  if ((0, import_kolmafia56.handlingChoice)()) (0, import_kolmafia56.visitUrl)("main.php");
  return location7;
}
function upgrade() {
  directlyUse(item6);
  var canUpgrade = (0, import_kolmafia56.availableChoiceOptions)()[1] !== void 0;
  if (canUpgrade) (0, import_kolmafia56.runChoice)(1);
  (0, import_kolmafia56.visitUrl)("main.php");
  return canUpgrade;
}
function availableLocations2() {
  if (!available4()) return [];
  var pageHtml = directlyUse(item6);
  (0, import_kolmafia56.visitUrl)("main.php");
  return checkLocations(pageHtml);
}
function currentUpgrades() {
  return get("autumnatonUpgrades").split(",");
}
function turnsLeft() {
  return get("autumnatonQuestTurn") - (0, import_kolmafia56.totalTurnsPlayed)();
}
function legs() {
  return currentUpgrades().filter(function(u) {
    return u.includes("leg");
  }).length;
}
function turnsForQuest() {
  return 11 * Math.max(1, get("_autumnatonQuests") - legs());
}
function visualAcuity() {
  var visualUpgrades = ["periscope", "radardish"];
  return 1 + currentUpgrades().filter(function(u) {
    return visualUpgrades.includes(u);
  }).length;
}
function zoneItems() {
  return 3 + currentUpgrades().filter(function(u) {
    return u.includes("arm");
  }).length;
}
function seasonalItems() {
  return currentUpgrades().includes("cowcatcher") ? 2 : 1;
}
function getUniques(location7) {
  var env = location7.environment;
  var difficulty = location7.difficultyLevel;
  if (arrayContains(env, ["outdoor", "indoor", "underground"]) && arrayContains(difficulty, difficulties)) {
    var _UNIQUES$env$difficul = UNIQUES[env][difficulty], index = _UNIQUES$env$difficul.index, _item = _UNIQUES$env$difficul.item;
    return {
      upgrade: possibleUpgrades[index],
      item: _item
    };
  }
  return null;
}
var import_kolmafia56, _templateObject369, _templateObject2103, _templateObject370, _templateObject450, _templateObject535, _templateObject630, _templateObject727, _templateObject825, _templateObject921, item6, possibleUpgrades, difficulties, UNIQUES;
var init_AutumnAton = __esm({
  "node_modules/libram/dist/resources/2022/AutumnAton.js": function() {
    import_kolmafia56 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    item6 = import_kolmafia56.Item.get("autumn-aton");
    possibleUpgrades = ["leftarm1", "leftleg1", "rightarm1", "rightleg1", "base_blackhat", "cowcatcher", "periscope", "radardish", "dualexhaust"];
    difficulties = ["low", "mid", "high"];
    UNIQUES = {
      outdoor: {
        low: {
          index: 4,
          item: $item(_templateObject369 || (_templateObject369 = _taggedTemplateLiteral42(["autumn leaf"])))
        },
        mid: {
          index: 2,
          item: $item(_templateObject2103 || (_templateObject2103 = _taggedTemplateLiteral42(["autumn debris shield"])))
        },
        high: {
          index: 6,
          item: $item(_templateObject370 || (_templateObject370 = _taggedTemplateLiteral42(["autumn leaf pendant"])))
        }
      },
      indoor: {
        low: {
          index: 0,
          item: $item(_templateObject450 || (_templateObject450 = _taggedTemplateLiteral42(["AutumnFest ale"])))
        },
        mid: {
          index: 3,
          item: $item(_templateObject535 || (_templateObject535 = _taggedTemplateLiteral42(["autumn-spice donut"])))
        },
        high: {
          index: 7,
          item: $item(_templateObject630 || (_templateObject630 = _taggedTemplateLiteral42(["autumn breeze"])))
        }
      },
      underground: {
        low: {
          index: 1,
          item: $item(_templateObject727 || (_templateObject727 = _taggedTemplateLiteral42(["autumn sweater-weather sweater"])))
        },
        mid: {
          index: 5,
          item: $item(_templateObject825 || (_templateObject825 = _taggedTemplateLiteral42(["autumn dollar"])))
        },
        high: {
          index: 8,
          item: $item(_templateObject921 || (_templateObject921 = _taggedTemplateLiteral42(["autumn years wisdom"])))
        }
      }
    };
  }
});

// node_modules/libram/dist/resources/2022/CombatLoversLocket.js
var CombatLoversLocket_exports = {};
__export(CombatLoversLocket_exports, {
  availableLocketMonsters: function() {
    return availableLocketMonsters;
  },
  canReminisce: function() {
    return canReminisce;
  },
  findMonster: function() {
    return findMonster;
  },
  have: function() {
    return have41;
  },
  monstersReminisced: function() {
    return monstersReminisced;
  },
  reminisce: function() {
    return reminisce;
  },
  reminiscesLeft: function() {
    return reminiscesLeft;
  },
  unlockedLocketMonsters: function() {
    return unlockedLocketMonsters;
  }
});
function _slicedToArray15(r, e) {
  return _arrayWithHoles15(r) || _iterableToArrayLimit15(r, e) || _unsupportedIterableToArray28(r, e) || _nonIterableRest15();
}
function _nonIterableRest15() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray28(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray28(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray28(r, a) : void 0;
  }
}
function _arrayLikeToArray28(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _iterableToArrayLimit15(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles15(r) {
  if (Array.isArray(r)) return r;
}
function _taggedTemplateLiteral43(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have41() {
  return have(locket);
}
function availableLocketMonsters() {
  if (reminiscesLeft() === 0) return [];
  return Object.entries((0, import_kolmafia57.getLocketMonsters)()).filter(function(_ref) {
    var _ref2 = _slicedToArray15(_ref, 2), unused = _ref2[1];
    return unused;
  }).map(function(_ref3) {
    var _ref4 = _slicedToArray15(_ref3, 1), name = _ref4[0];
    return (0, import_kolmafia57.toMonster)(name);
  });
}
function unlockedLocketMonsters() {
  return Object.entries((0, import_kolmafia57.getLocketMonsters)()).map(function(_ref5) {
    var _ref6 = _slicedToArray15(_ref5, 1), name = _ref6[0];
    return (0, import_kolmafia57.toMonster)(name);
  });
}
function parseLocketProperty() {
  return get("_locketMonstersFought").split(",").filter(function(id) {
    return id.trim().length > 0;
  });
}
function reminiscesLeft() {
  return have41() ? clamp(3 - parseLocketProperty().length, 0, 3) : 0;
}
function monstersReminisced() {
  return parseLocketProperty().map(function(id) {
    return (0, import_kolmafia57.toMonster)(id);
  });
}
function reminisce(monster2) {
  if (!have41() || reminiscesLeft() === 0 || !(0, import_kolmafia57.getLocketMonsters)()[monster2.name]) {
    return false;
  }
  (0, import_kolmafia57.cliExecute)("reminisce ".concat(monster2));
  for (var _len = arguments.length, combatParams = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    combatParams[_key - 1] = arguments[_key];
  }
  import_kolmafia57.runCombat.apply(void 0, combatParams);
  return monstersReminisced().includes(monster2);
}
function findMonster(criteria) {
  var value = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : function() {
    return 1;
  };
  if (!have41() || reminiscesLeft() === 0) return null;
  var options = availableLocketMonsters().filter(criteria);
  if (!options.length) return null;
  return maxBy(options, value);
}
function canReminisce(monster2) {
  return have41() && reminiscesLeft() > 0 && Boolean((0, import_kolmafia57.getLocketMonsters)()["".concat(monster2)]);
}
var import_kolmafia57, _templateObject371, locket;
var init_CombatLoversLocket = __esm({
  "node_modules/libram/dist/resources/2022/CombatLoversLocket.js": function() {
    import_kolmafia57 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    locket = $item(_templateObject371 || (_templateObject371 = _taggedTemplateLiteral43(["combat lover's locket"])));
  }
});

// node_modules/libram/dist/resources/2022/DesignerSweatpants.js
var DesignerSweatpants_exports = {};
__export(DesignerSweatpants_exports, {
  availableCasts: function() {
    return availableCasts;
  },
  canUseSkill: function() {
    return canUseSkill;
  },
  have: function() {
    return have42;
  },
  potentialCasts: function() {
    return potentialCasts;
  },
  refresh: function() {
    return refresh;
  },
  skills: function() {
    return skills2;
  },
  sweat: function() {
    return sweat;
  },
  sweatCost: function() {
    return sweatCost;
  },
  useSkill: function() {
    return useSkill3;
  }
});
function _taggedTemplateLiteral44(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have42() {
  return (0, import_kolmafia58.availableAmount)(item7) > 0;
}
function sweat() {
  return get("sweat");
}
function refresh() {
  examine(item7);
}
function sweatCost(skill) {
  var _sweatSkillCost$get;
  return (_sweatSkillCost$get = sweatSkillCost.get(skill)) !== null && _sweatSkillCost$get !== void 0 ? _sweatSkillCost$get : Infinity;
}
function canUseSkill(skill) {
  return have42() && skill.dailylimit !== 0 && sweatCost(skill) <= sweat();
}
function availableCasts(skill) {
  if (!canUseSkill(skill)) return 0;
  return clamp(Math.floor(sweat() / sweatCost(skill)), 0, skill.dailylimit > -1 ? skill.dailylimit : Infinity);
}
function potentialCasts(skill) {
  if (!have42() || sweatCost(skill) === 0) return 0;
  return clamp(Math.floor(100 / sweatCost(skill)), 0, skill.dailylimit > -1 ? skill.dailylimit : Infinity);
}
function useSkill3(skill) {
  if (!canUseSkill(skill)) return false;
  var sweatAmt = sweat();
  var result = (0, import_kolmafia58.useSkill)(1, skill) && sweatAmt !== sweat();
  if (!result) {
    refresh();
  }
  return result;
}
var import_kolmafia58, _templateObject378, _templateObject2104, _templateObject379, _templateObject451, _templateObject536, _templateObject631, _templateObject728, _templateObject826, _templateObject923, item7, skills2, sweatSkillCost;
var init_DesignerSweatpants = __esm({
  "node_modules/libram/dist/resources/2022/DesignerSweatpants.js": function() {
    import_kolmafia58 = require("kolmafia");
    init_property();
    init_template_string();
    init_lib();
    init_utils();
    item7 = $item(_templateObject378 || (_templateObject378 = _taggedTemplateLiteral44(["designer sweatpants"])));
    skills2 = {
      SweatFlick: $skill(_templateObject2104 || (_templateObject2104 = _taggedTemplateLiteral44(["Sweat Flick"]))),
      SweatSpray: $skill(_templateObject379 || (_templateObject379 = _taggedTemplateLiteral44(["Sweat Spray"]))),
      SweatFlood: $skill(_templateObject451 || (_templateObject451 = _taggedTemplateLiteral44(["Sweat Flood"]))),
      SipSomeSweat: $skill(_templateObject536 || (_templateObject536 = _taggedTemplateLiteral44(["Sip Some Sweat"]))),
      SweatSip: $skill(_templateObject631 || (_templateObject631 = _taggedTemplateLiteral44(["Sweat Sip"]))),
      DrenchYourselfInSweat: $skill(_templateObject728 || (_templateObject728 = _taggedTemplateLiteral44(["Drench Yourself in Sweat"]))),
      SweatOutSomeBooze: $skill(_templateObject826 || (_templateObject826 = _taggedTemplateLiteral44(["Sweat Out Some Booze"]))),
      MakeSweatAde: $skill(_templateObject923 || (_templateObject923 = _taggedTemplateLiteral44(["Make Sweat-Ade"])))
    };
    sweatSkillCost = /* @__PURE__ */ new Map([[skills2.SweatFlick, 1], [skills2.SweatSpray, 3], [skills2.SweatFlood, 5], [skills2.SipSomeSweat, 5], [skills2.SweatSip, 5], [skills2.DrenchYourselfInSweat, 15], [skills2.SweatOutSomeBooze, 25], [skills2.MakeSweatAde, 50]]);
  }
});

// node_modules/libram/dist/resources/2022/GreyGoose.js
var GreyGoose_exports = {};
__export(GreyGoose_exports, {
  currentDrones: function() {
    return currentDrones;
  },
  currentExperience: function() {
    return currentExperience;
  },
  currentWeight: function() {
    return currentWeight;
  },
  expectedDrones: function() {
    return expectedDrones;
  },
  expectedExperience: function() {
    return expectedExperience;
  },
  expectedMeat: function() {
    return expectedMeat;
  },
  fightsUntil: function() {
    return fightsUntil;
  },
  hasMeatified: function() {
    return hasMeatified;
  },
  have: function() {
    return have43;
  }
});
function _taggedTemplateLiteral45(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have43() {
  return have(goose);
}
function currentExperience() {
  var postAscensionBaseExperience = have($familiar(_templateObject2105 || (_templateObject2105 = _taggedTemplateLiteral45(["Shorter-Order Cook"])))) && !get("gooseReprocessed") ? 81 + (have($item(_templateObject381 || (_templateObject381 = _taggedTemplateLiteral45(["blue plate"])))) ? 19 : 0) : 0;
  return goose.experience || postAscensionBaseExperience;
}
function currentWeight() {
  return Math.min(Math.floor(Math.sqrt(currentExperience())), 20);
}
function expectedDrones() {
  var weight = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : currentWeight();
  return Math.max(0, weight - 5);
}
function expectedExperience() {
  var weight = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : currentWeight();
  return Math.pow(Math.max(weight - 5, 0), (0, import_kolmafia59.myClass)().id === 27 ? 2 : 3);
}
function expectedMeat() {
  var weight = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : currentWeight();
  return Math.pow(Math.max(weight - 5, 0), 4);
}
function hasMeatified() {
  return get("_meatifyMatterUsed");
}
function fightsUntil(target) {
  var bonusExperience = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : get2("Familiar Experience");
  var diff = Math.pow(target, 2) - currentExperience();
  if (diff <= 0) return 0;
  return Math.ceil(diff / (1 + bonusExperience + (have($skill(_templateObject456 || (_templateObject456 = _taggedTemplateLiteral45(["Testudinal Teachings"])))) ? 1 / 6 : 0)));
}
function currentDrones() {
  return get("gooseDronesRemaining");
}
var import_kolmafia59, _templateObject380, _templateObject2105, _templateObject381, _templateObject456, goose;
var init_GreyGoose = __esm({
  "node_modules/libram/dist/resources/2022/GreyGoose.js": function() {
    import_kolmafia59 = require("kolmafia");
    init_lib();
    init_modifier();
    init_property();
    init_template_string();
    goose = $familiar(_templateObject380 || (_templateObject380 = _taggedTemplateLiteral45(["Grey Goose"])));
  }
});

// node_modules/libram/dist/resources/2022/JuneCleaver.js
var JuneCleaver_exports = {};
__export(JuneCleaver_exports, {
  choices: function() {
    return choices;
  },
  choicesAvailable: function() {
    return choicesAvailable;
  },
  cleaver: function() {
    return cleaver;
  },
  damage: function() {
    return damage;
  },
  getInterval: function() {
    return getInterval;
  },
  getSkippedInterval: function() {
    return getSkippedInterval;
  },
  have: function() {
    return have44;
  },
  queue: function() {
    return queue;
  },
  skipsRemaining: function() {
    return skipsRemaining;
  }
});
function have44() {
  return (0, import_kolmafia60.availableAmount)(cleaver) > 0;
}
function getInterval() {
  var _encounters;
  var encounters = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : get("_juneCleaverEncounters");
  return (_encounters = [1, 6, 10, 12, 15, 20][encounters]) !== null && _encounters !== void 0 ? _encounters : 30;
}
function getSkippedInterval() {
  var _encounters2;
  var encounters = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : get("_juneCleaverEncounters");
  return (_encounters2 = [1, 2, 3, 3, 4, 5][encounters]) !== null && _encounters2 !== void 0 ? _encounters2 : 8;
}
function damage(element) {
  return get("_juneCleaver".concat(element));
}
function skipsRemaining() {
  return 5 - get("_juneCleaverSkips");
}
function queue() {
  return get("juneCleaverQueue").split(",").filter(function(x) {
    return x.trim().length > 0;
  }).map(function(x) {
    return parseInt(x);
  });
}
function choicesAvailable() {
  var currentQueue = queue();
  return choices.filter(function(choice) {
    return !currentQueue.includes(choice);
  });
}
var import_kolmafia60, cleaver, choices;
var init_JuneCleaver = __esm({
  "node_modules/libram/dist/resources/2022/JuneCleaver.js": function() {
    import_kolmafia60 = require("kolmafia");
    init_property();
    cleaver = (0, import_kolmafia60.toItem)("June cleaver");
    choices = [1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475];
  }
});

// node_modules/libram/dist/resources/2022/TrainSet.js
var TrainSet_exports = {};
__export(TrainSet_exports, {
  Station: function() {
    return Station;
  },
  canConfigure: function() {
    return canConfigure;
  },
  cycle: function() {
    return cycle;
  },
  doubledEffect: function() {
    return doubledEffect;
  },
  effect: function() {
    return effect;
  },
  have: function() {
    return have45;
  },
  installed: function() {
    return installed4;
  },
  next: function() {
    return next;
  },
  nextConfigurable: function() {
    return nextConfigurable;
  },
  setConfiguration: function() {
    return setConfiguration;
  }
});
function _taggedTemplateLiteral46(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function installed4() {
  return (0, import_kolmafia61.getWorkshed)() === item8;
}
function have45() {
  return installed4() || have(item8);
}
function effect(station) {
  var _trainsetEffects$get;
  return (_trainsetEffects$get = trainsetEffects.get(station)) !== null && _trainsetEffects$get !== void 0 ? _trainsetEffects$get : null;
}
function doubledEffect(station) {
  var _trainsetEffectsDoubl;
  return (_trainsetEffectsDoubl = trainsetEffectsDoubled.get(station)) !== null && _trainsetEffectsDoubl !== void 0 ? _trainsetEffectsDoubl : null;
}
function cycle() {
  return get("trainsetConfiguration").split(",");
}
function nextConfigurable() {
  return clamp(get("lastTrainsetConfiguration") + 40 - get("trainsetPosition"), 0, 40);
}
function canConfigure() {
  return installed4() && !nextConfigurable();
}
function stationToInt(station) {
  return pieces2.indexOf(station);
}
function setConfiguration(configuration) {
  if (!canConfigure()) return false;
  (0, import_kolmafia61.visitUrl)("campground.php?action=workshed");
  (0, import_kolmafia61.runChoice)(1, "forceoption=0".concat(configuration.map(function(station, index) {
    return "&slot[".concat(index, "]=").concat(stationToInt(station));
  }).join("")));
  (0, import_kolmafia61.visitUrl)("main.php");
  var currentConfiguration = cycle();
  return configuration.every(function(station, index) {
    return station === currentConfiguration[index];
  });
}
function next() {
  return cycle()[get("trainsetPosition") % 8];
}
var import_kolmafia61, _templateObject388, item8, Station, trainsetEffects, trainsetEffectsDoubled, pieces2;
var init_TrainSet = __esm({
  "node_modules/libram/dist/resources/2022/TrainSet.js": function() {
    import_kolmafia61 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    item8 = $item(_templateObject388 || (_templateObject388 = _taggedTemplateLiteral46(["model train set"])));
    (function(Station2) {
      Station2["UNKNOWN"] = "";
      Station2["EMPTY"] = "empty";
      Station2["GAIN_MEAT"] = "meat_mine";
      Station2["TOWER_FIZZY"] = "tower_fizzy";
      Station2["VIEWING_PLATFORM"] = "viewing_platform";
      Station2["TOWER_FROZEN"] = "tower_frozen";
      Station2["SPOOKY_GRAVEYARD"] = "spooky_graveyard";
      Station2["LOGGING_MILL"] = "logging_mill";
      Station2["CANDY_FACTORY"] = "candy_factory";
      Station2["COAL_HOPPER"] = "coal_hopper";
      Station2["TOWER_SEWAGE"] = "tower_sewage";
      Station2["OIL_REFINERY"] = "oil_refinery";
      Station2["OIL_BRIDGE"] = "oil_bridge";
      Station2["WATER_BRIDGE"] = "water_bridge";
      Station2["GROIN_SILO"] = "groin_silo";
      Station2["GRAIN_SILO"] = "grain_silo";
      Station2["BRAIN_SILO"] = "brain_silo";
      Station2["BRAWN_SILO"] = "brawn_silo";
      Station2["PRAWN_SILO"] = "prawn_silo";
      Station2["TRACKSIDE_DINER"] = "trackside_diner";
      Station2["ORE_HOPPER"] = "ore_hopper";
    })(Station || (Station = {}));
    trainsetEffects = /* @__PURE__ */ new Map([[Station.TOWER_FIZZY, import_kolmafia61.Effect.get("Carbonated")], [Station.TOWER_FROZEN, import_kolmafia61.Effect.get("Frozen")], [Station.SPOOKY_GRAVEYARD, import_kolmafia61.Effect.get("Shivering Spine")], [Station.TOWER_SEWAGE, import_kolmafia61.Effect.get("Hot Soupy Garbage")], [Station.OIL_BRIDGE, import_kolmafia61.Effect.get("Burningly Oiled")], [Station.OIL_REFINERY, import_kolmafia61.Effect.get("Spookily Greasy")], [Station.WATER_BRIDGE, import_kolmafia61.Effect.get("Troubled Waters")], [Station.PRAWN_SILO, import_kolmafia61.Effect.get("Craving Prawns")]]);
    trainsetEffectsDoubled = /* @__PURE__ */ new Map([[Station.TOWER_FIZZY, import_kolmafia61.Effect.get("Double Carbonated")], [Station.TOWER_FROZEN, import_kolmafia61.Effect.get("Double Frozen")], [Station.SPOOKY_GRAVEYARD, import_kolmafia61.Effect.get("Doubly Shivering Spine")], [Station.TOWER_SEWAGE, import_kolmafia61.Effect.get("Double Hot Soupy Garbage")], [Station.OIL_BRIDGE, import_kolmafia61.Effect.get("Doubly Burningly Oiled")], [Station.OIL_REFINERY, import_kolmafia61.Effect.get("Doubly Spookily Greasy")], [Station.WATER_BRIDGE, import_kolmafia61.Effect.get("Doubly Troubled Waters")], [Station.PRAWN_SILO, import_kolmafia61.Effect.get("Doubly Craving Prawns")]]);
    pieces2 = [Station.EMPTY, Station.GAIN_MEAT, Station.TOWER_FIZZY, Station.VIEWING_PLATFORM, Station.TOWER_FROZEN, Station.SPOOKY_GRAVEYARD, Station.LOGGING_MILL, Station.CANDY_FACTORY, Station.COAL_HOPPER, Station.TOWER_SEWAGE, Station.UNKNOWN, Station.OIL_REFINERY, Station.OIL_BRIDGE, Station.WATER_BRIDGE, Station.GROIN_SILO, Station.GRAIN_SILO, Station.BRAIN_SILO, Station.BRAWN_SILO, Station.PRAWN_SILO, Station.TRACKSIDE_DINER, Station.ORE_HOPPER];
  }
});

// node_modules/libram/dist/resources/2022/Stillsuit.js
var Stillsuit_exports = {};
__export(Stillsuit_exports, {
  MODIFIER_TAGS: function() {
    return MODIFIER_TAGS;
  },
  bestFamiliar: function() {
    return bestFamiliar;
  },
  currentDistillateModifiers: function() {
    return currentDistillateModifiers;
  },
  distillateAdventures: function() {
    return distillateAdventures;
  },
  distillateModifier: function() {
    return distillateModifier;
  },
  drinkDistillate: function() {
    return drinkDistillate;
  },
  have: function() {
    return have46;
  },
  modifierRatio: function() {
    return modifierRatio;
  },
  nextDistillateModifiers: function() {
    return nextDistillateModifiers;
  }
});
function _typeof17(o) {
  "@babel/helpers - typeof";
  return _typeof17 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof17(o);
}
function ownKeys8(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread8(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys8(Object(t), true).forEach(function(r2) {
      _defineProperty16(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys8(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty16(e, r, t) {
  return (r = _toPropertyKey17(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
}
function _toPropertyKey17(t) {
  var i = _toPrimitive17(t, "string");
  return "symbol" == _typeof17(i) ? i : i + "";
}
function _toPrimitive17(t, r) {
  if ("object" != _typeof17(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof17(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _taggedTemplateLiteral47(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have46() {
  return have($item(_templateObject389 || (_templateObject389 = _taggedTemplateLiteral47(["tiny stillsuit"]))));
}
function distillateAdventures() {
  if (!have46()) return 0;
  var sweat2 = get("familiarSweat");
  return Math.round(Math.pow(sweat2, 0.4));
}
function drinkDistillate() {
  if (!have46() || get("familiarSweat") <= 0) return false;
  return (0, import_kolmafia62.cliExecute)("drink stillsuit distillate");
}
function nextDistillateModifiers() {
  (0, import_kolmafia62.visitUrl)("inventory.php?action=distill&pwd");
  return distillateModifiers("nextDistillateMods");
}
function currentDistillateModifiers() {
  return distillateModifiers("currentDistillateMods");
}
function distillateModifier(modifier) {
  (0, import_kolmafia62.visitUrl)("inventory.php?action=distill&pwd");
  var value = (0, import_kolmafia62.splitModifiers)(get("currentDistillateMods"))[modifier];
  return value ? Number(value) : 0;
}
function modifierRatio(familiar10) {
  var tags = getAllFamiliarTags(familiar10);
  return tags.filter(isRegularFamiliarTag).reduce(function(acc, tag) {
    var _acc$MODIFIER_TAGS$ta;
    return _objectSpread8(_objectSpread8({}, acc), {}, _defineProperty16({}, MODIFIER_TAGS[tag], ((_acc$MODIFIER_TAGS$ta = acc[MODIFIER_TAGS[tag]]) !== null && _acc$MODIFIER_TAGS$ta !== void 0 ? _acc$MODIFIER_TAGS$ta : 0) + 1 / tags.length));
  }, {});
}
function bestFamiliar(modifier) {
  return maxBy(import_kolmafia62.Familiar.all().filter(have), function(familiar10) {
    var _modifierRatio$modifi;
    return (_modifierRatio$modifi = modifierRatio(familiar10)[modifier]) !== null && _modifierRatio$modifi !== void 0 ? _modifierRatio$modifi : 0;
  });
}
var import_kolmafia62, _templateObject389, distillateModifiers, MODIFIER_TAGS;
var init_Stillsuit = __esm({
  "node_modules/libram/dist/resources/2022/Stillsuit.js": function() {
    import_kolmafia62 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_modifier();
    init_utils();
    distillateModifiers = function(pref) {
      return parseModifiers(pref);
    };
    MODIFIER_TAGS = Object.freeze({
      mineral: "Muscle",
      robot: "Muscle",
      organic: "Muscle",
      hasbones: "Muscle",
      technological: "Mysticality",
      orb: "Mysticality",
      sentient: "Mysticality",
      polygonal: "Mysticality",
      software: "Mysticality",
      cantalk: "Mysticality",
      humanoid: "Moxie",
      hashands: "Moxie",
      cute: "Moxie",
      good: "Moxie",
      phallic: "Moxie",
      animatedart: "Moxie",
      person: "Moxie",
      haseyes: "Item Drop",
      object: "Item Drop",
      haslegs: "Item Drop",
      food: "Food Drop",
      vegetable: "Food Drop",
      edible: "Food Drop",
      animal: "Damage Reduction",
      insect: "Damage Reduction",
      wearsclothes: "Damage Reduction",
      isclothes: "Damage Reduction",
      hasshell: "Damage Reduction",
      haswings: "Initiative",
      fast: "Initiative",
      flies: "Initiative",
      hovers: "Initiative",
      swims: "Initiative",
      aquatic: "Initiative",
      spooky: "Spooky Damage",
      undead: "Spooky Damage",
      evil: "Spooky Damage",
      reallyevil: "Spooky Damage",
      hot: "Hot Damage",
      cold: "Cold Damage",
      sleaze: "Sleaze Damage",
      stench: "Stench Damage",
      bite: "Weapon Damage",
      hasclaws: "Weapon Damage",
      hasbeak: "Weapon Damage",
      hasstinger: "Weapon Damage",
      hard: "Weapon Damage"
    });
  }
});

// node_modules/libram/dist/resources/2023/AugustScepter.js
var AugustScepter_exports = {};
__export(AugustScepter_exports, {
  SKILLS: function() {
    return SKILLS;
  },
  canCast: function() {
    return canCast;
  },
  getAugustCast: function() {
    return getAugustCast;
  },
  getTodayCast: function() {
    return getTodayCast;
  },
  have: function() {
    return have47;
  },
  todaysSkill: function() {
    return todaysSkill;
  }
});
function _taggedTemplateLiteral48(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have47() {
  return have($item(_templateObject390 || (_templateObject390 = _taggedTemplateLiteral48(["august scepter"]))));
}
function todaysSkill() {
  return (0, import_kolmafia63.toSkill)((gameDay().getDate() + 7451).toFixed(0));
}
function getAugustCast(skillNum) {
  return get("_aug".concat(skillNum, "Cast"));
}
function getTodayCast() {
  return get("_augTodayCast");
}
function canCast(skillNum) {
  return have47() && !get("_aug".concat(skillNum, "Cast")) && (gameDay().getDate() === skillNum && !getTodayCast() || get("_augSkillsCast") < 5);
}
var import_kolmafia63, _templateObject390, _templateObject2106, SKILLS;
var init_AugustScepter = __esm({
  "node_modules/libram/dist/resources/2023/AugustScepter.js": function() {
    import_kolmafia63 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    SKILLS = Object.freeze($skills(_templateObject2106 || (_templateObject2106 = _taggedTemplateLiteral48(["Aug. 1st: Mountain Climbing Day!, Aug. 2nd: Find an Eleven-Leaf Clover Day, Aug. 3rd: Watermelon Day!, Aug. 4th: Water Balloon Day!, Aug. 5th: Oyster Day!, Aug. 6th: Fresh Breath Day!, Aug. 7th: Lighthouse Day!, Aug. 8th: Cat Day!, Aug. 9th: Hand Holding Day!, Aug. 10th: World Lion Day!, Aug. 11th: Presidential Joke Day!, Aug. 12th: Elephant Day!, Aug. 13th: Left/Off Hander's Day!, Aug. 14th: Financial Awareness  Day!, Aug. 15th: Relaxation Day!, Aug. 16th: Roller Coaster Day!, Aug. 17th: Thriftshop Day!, Aug. 18th: Serendipity Day!, Aug. 19th: Honey Bee Awareness Day!, Aug. 20th: Mosquito Day!, Aug. 21st: Spumoni Day!, Aug. 22nd: Tooth Fairy Day!, Aug. 23rd: Ride the Wind Day!, Aug. 24th: Waffle Day!, Aug. 25th: Banana Split Day!, Aug. 26th: Toilet Paper Day!, Aug. 27th: Just Because Day!, Aug. 28th: Race Your Mouse Day!, Aug. 29th: More Herbs, Less Salt  Day!, Aug. 30th: Beach Day!, Aug. 31st: Cabernet Sauvignon  Day!"], ["Aug. 1st: Mountain Climbing Day!, Aug. 2nd: Find an Eleven-Leaf Clover Day, Aug. 3rd: Watermelon Day!, Aug. 4th: Water Balloon Day!, Aug. 5th: Oyster Day!, Aug. 6th: Fresh Breath Day!, Aug. 7th: Lighthouse Day!, Aug. 8th: Cat Day!, Aug. 9th: Hand Holding Day!, Aug. 10th: World Lion Day!, Aug. 11th: Presidential Joke Day!, Aug. 12th: Elephant Day!, Aug. 13th: Left/Off Hander's Day!, Aug. 14th: Financial Awareness  Day!, Aug. 15th: Relaxation Day!, Aug. 16th: Roller Coaster Day!, Aug. 17th: Thriftshop Day!, Aug. 18th: Serendipity Day!, Aug. 19th: Honey Bee Awareness Day!, Aug. 20th: Mosquito Day!, Aug. 21st: Spumoni Day!, Aug. 22nd: Tooth Fairy Day!, Aug. 23rd: Ride the Wind Day!, Aug. 24th: Waffle Day!, Aug. 25th: Banana Split Day!, Aug. 26th: Toilet Paper Day!, Aug. 27th: Just Because Day!, Aug. 28th: Race Your Mouse Day!, Aug. 29th: More Herbs\\, Less Salt  Day!, Aug. 30th: Beach Day!, Aug. 31st: Cabernet Sauvignon  Day!"]))));
  }
});

// node_modules/libram/dist/resources/2023/BurningLeaves.js
var BurningLeaves_exports = {};
__export(BurningLeaves_exports, {
  burnFor: function() {
    return burnFor;
  },
  burnLeaves: function() {
    return burnLeaves;
  },
  burnSpecialLeaves: function() {
    return burnSpecialLeaves;
  },
  have: function() {
    return have48;
  },
  jumpInFire: function() {
    return jumpInFire;
  },
  numberOfLeaves: function() {
    return numberOfLeaves;
  }
});
function _taggedTemplateLiteral49(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have48() {
  return haveInCampground(item9);
}
function numberOfLeaves() {
  return (0, import_kolmafia64.itemAmount)($item(_templateObject1615 || (_templateObject1615 = _taggedTemplateLiteral49(["inflammable leaf"]))));
}
function burnSpecialLeaves(leaves) {
  var lea = burnFor.get(leaves);
  if (lea === void 0 || lea > numberOfLeaves()) {
    return false;
  }
  return (0, import_kolmafia64.cliExecute)("leaves ".concat(leaves));
}
function burnLeaves(leaves) {
  if (leaves > numberOfLeaves()) {
    return false;
  }
  return (0, import_kolmafia64.cliExecute)("leaves ".concat(leaves));
}
function visitLeaves() {
  (0, import_kolmafia64.cliExecute)("leaves");
}
function jumpInFire() {
  if (get("_leavesJumped")) {
    return false;
  }
  if (get("_leavesBurned") === 0) {
    return false;
  }
  visitLeaves();
  (0, import_kolmafia64.runChoice)(2);
  return get("_leavesJumped");
}
var import_kolmafia64, _templateObject391, _templateObject2107, _templateObject398, _templateObject457, _templateObject537, _templateObject634, _templateObject729, _templateObject827, _templateObject924, _templateObject019, _templateObject1104, _templateObject1018, _templateObject1119, _templateObject1217, _templateObject1317, _templateObject1416, _templateObject1515, _templateObject1615, item9, burnFor;
var init_BurningLeaves = __esm({
  "node_modules/libram/dist/resources/2023/BurningLeaves.js": function() {
    import_kolmafia64 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    item9 = $item(_templateObject391 || (_templateObject391 = _taggedTemplateLiteral49(["A Guide to Burning Leaves"])));
    burnFor = /* @__PURE__ */ new Map([[$monster(_templateObject2107 || (_templateObject2107 = _taggedTemplateLiteral49(["flaming leaflet"]))), 11], [$item(_templateObject398 || (_templateObject398 = _taggedTemplateLiteral49(["autumnic bomb"]))), 37], [$item(_templateObject457 || (_templateObject457 = _taggedTemplateLiteral49(["impromptu torch"]))), 42], [$item(_templateObject537 || (_templateObject537 = _taggedTemplateLiteral49(["flaming fig leaf"]))), 43], [$item(_templateObject634 || (_templateObject634 = _taggedTemplateLiteral49(["smoldering drape"]))), 44], [$item(_templateObject729 || (_templateObject729 = _taggedTemplateLiteral49(["distilled resin"]))), 50], [$item(_templateObject827 || (_templateObject827 = _taggedTemplateLiteral49(["autumnal aegis"]))), 66], [$item(_templateObject924 || (_templateObject924 = _taggedTemplateLiteral49(["lit leaf lasso"]))), 69], [$item(_templateObject019 || (_templateObject019 = _taggedTemplateLiteral49(["forest canopy bed"]))), 74], [$item(_templateObject1104 || (_templateObject1104 = _taggedTemplateLiteral49(["autumnic balm"]))), 99], [$monster(_templateObject1018 || (_templateObject1018 = _taggedTemplateLiteral49(["flaming monstera"]))), 111], [$item(_templateObject1119 || (_templateObject1119 = _taggedTemplateLiteral49(["day shortener"]))), 222], [$monster(_templateObject1217 || (_templateObject1217 = _taggedTemplateLiteral49(["leaviathan"]))), 666], [$item(_templateObject1317 || (_templateObject1317 = _taggedTemplateLiteral49(["coping juice"]))), 1111], [$item(_templateObject1416 || (_templateObject1416 = _taggedTemplateLiteral49(["smoldering leafcutter ant egg"]))), 6666], [$item(_templateObject1515 || (_templateObject1515 = _taggedTemplateLiteral49(["super-heated leaf"]))), 11111]]);
  }
});

// node_modules/libram/dist/resources/2023/CinchoDeMayo.js
var CinchoDeMayo_exports = {};
__export(CinchoDeMayo_exports, {
  cinchRestoredBy: function() {
    return cinchRestoredBy;
  },
  currentCinch: function() {
    return currentCinch;
  },
  have: function() {
    return have49;
  },
  skills: function() {
    return skills3;
  },
  totalAvailableCinch: function() {
    return totalAvailableCinch;
  }
});
function _taggedTemplateLiteral50(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have49() {
  return have(cincho);
}
function currentCinch() {
  return have49() ? clamp(100 - get("_cinchUsed"), 0, 100) : 0;
}
function cinchRestoredBy() {
  var currentRests = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : get("_cinchoRests");
  return have49() ? clamp(50 - currentRests * 5, 5, 30) : 0;
}
function totalAvailableCinch() {
  var remainingRests = Math.max(0, (0, import_kolmafia65.totalFreeRests)() - get("timesRested"));
  return have49() ? currentCinch() + sum(new Array(remainingRests).fill(null).map(function(_, i) {
    return i + get("_cinchoRests");
  }), function(restNumber) {
    return cinchRestoredBy(restNumber);
  }) : 0;
}
var import_kolmafia65, _templateObject399, _templateObject2108, _templateObject3100, _templateObject458, _templateObject538, _templateObject635, _templateObject730, cincho, skills3;
var init_CinchoDeMayo = __esm({
  "node_modules/libram/dist/resources/2023/CinchoDeMayo.js": function() {
    import_kolmafia65 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    cincho = $item(_templateObject399 || (_templateObject399 = _taggedTemplateLiteral50(["Cincho de Mayo"])));
    skills3 = {
      SaltAndLime: $skill(_templateObject2108 || (_templateObject2108 = _taggedTemplateLiteral50(["Cincho: Dispense Salt and Lime"]))),
      PartySoundtrack: $skill(_templateObject3100 || (_templateObject3100 = _taggedTemplateLiteral50(["Cincho: Party Soundtrack"]))),
      FiestaExit: $skill(_templateObject458 || (_templateObject458 = _taggedTemplateLiteral50(["Cincho: Fiesta Exit"]))),
      ProjectilePi\u00F1ata: $skill(_templateObject538 || (_templateObject538 = _taggedTemplateLiteral50(["Cincho: Projectile Pi\xF1ata"]))),
      PartyFoul: $skill(_templateObject635 || (_templateObject635 = _taggedTemplateLiteral50(["Cincho: Party Foul"]))),
      ConfettiExtrava: $skill(_templateObject730 || (_templateObject730 = _taggedTemplateLiteral50(["Cincho: Confetti Extravaganza"])))
    };
  }
});

// node_modules/libram/dist/resources/2023/ClosedCircuitPayphone.js
var ClosedCircuitPayphone_exports = {};
__export(ClosedCircuitPayphone_exports, {
  byIngress: function() {
    return byIngress;
  },
  chooseQuest: function() {
    return chooseQuest;
  },
  chooseRift: function() {
    return chooseRift;
  },
  currentIngress: function() {
    return currentIngress;
  },
  currentRift: function() {
    return currentRift;
  },
  have: function() {
    return have50;
  },
  rifts: function() {
    return rifts;
  },
  rufusTarget: function() {
    return rufusTarget;
  },
  submitQuest: function() {
    return submitQuest;
  }
});
function _taggedTemplateLiteral51(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have50() {
  return have(item10);
}
function rufusTarget() {
  var target = get("rufusQuestTarget");
  switch (get("rufusQuestType")) {
    case "entity":
      return import_kolmafia66.Monster.get(target);
    case "artifact":
    case "items":
      return import_kolmafia66.Item.get(target);
    default:
      return null;
  }
}
function currentIngress() {
  return get("shadowRiftIngress");
}
function currentRift() {
  var ingress = currentIngress();
  return ingress ? INGRESS_RIFTS[ingress] : null;
}
function chooseRift(options) {
  var filterFunction = function(l) {
    var _options$monsters, _options$drops, _options$otherFilter, _options$otherFilter2;
    var monsters = (0, import_kolmafia66.getMonsters)(l);
    if (options.canAdventure && !(0, import_kolmafia66.canAdventure)(l)) return false;
    if ((_options$monsters = options.monsters) !== null && _options$monsters !== void 0 && _options$monsters.some(function(m) {
      return !monsters.includes(m);
    })) return false;
    if ((_options$drops = options.drops) !== null && _options$drops !== void 0 && _options$drops.every(function(i) {
      return !monsters.some(function(m) {
        return i.name in (0, import_kolmafia66.itemDrops)(m);
      });
    })) return false;
    return (_options$otherFilter = (_options$otherFilter2 = options.otherFilter) === null || _options$otherFilter2 === void 0 ? void 0 : _options$otherFilter2.call(options, l)) !== null && _options$otherFilter !== void 0 ? _options$otherFilter : true;
  };
  var validRifts = [].concat(RIFTS).filter(filterFunction);
  if (!validRifts.length) return null;
  return options.sortBy ? maxBy(validRifts, options.sortBy) : validRifts[0];
}
function chooseQuest(chooser) {
  if (get("questRufus") !== "unstarted") return false;
  if (!have50()) return false;
  withChoice(1497, "", function() {
    var _get3, _get22, _get32;
    directlyUse(item10);
    (0, import_kolmafia66.runChoice)(chooser({
      artifact: (_get3 = get("rufusDesiredArtifact")) !== null && _get3 !== void 0 ? _get3 : $item.none,
      entity: (_get22 = get("rufusDesiredEntity")) !== null && _get22 !== void 0 ? _get22 : $monster.none,
      items: (_get32 = get("rufusDesiredItems")) !== null && _get32 !== void 0 ? _get32 : $item.none
    }));
  });
  return get("questRufus") !== "unstarted";
}
function rifts() {
  return [].concat(RIFTS);
}
function submitQuest() {
  if (questStep("questRufus") === 1) {
    withChoice(1498, 1, function() {
      return (0, import_kolmafia66.use)(item10);
    });
    return questStep("questRufus") === -1;
  }
  return false;
}
var import_kolmafia66, _templateObject400, _templateObject2109, _templateObject3101, _templateObject459, _templateObject539, _templateObject636, _templateObject731, _templateObject828, _templateObject925, _templateObject020, _templateObject1105, _templateObject1019, _templateObject1120, _templateObject1218, item10, INGRESS_RIFTS, RIFTS, byIngress;
var init_ClosedCircuitPayphone = __esm({
  "node_modules/libram/dist/resources/2023/ClosedCircuitPayphone.js": function() {
    import_kolmafia66 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    item10 = $item(_templateObject400 || (_templateObject400 = _taggedTemplateLiteral51(["closed-circuit pay phone"])));
    INGRESS_RIFTS = {
      desertbeach: $location(_templateObject2109 || (_templateObject2109 = _taggedTemplateLiteral51(["Shadow Rift (Desert Beach)"]))),
      forestvillage: $location(_templateObject3101 || (_templateObject3101 = _taggedTemplateLiteral51(["Shadow Rift (Forest Village)"]))),
      mclargehuge: $location(_templateObject459 || (_templateObject459 = _taggedTemplateLiteral51(["Shadow Rift (Mt. McLargeHuge)"]))),
      beanstalk: $location(_templateObject539 || (_templateObject539 = _taggedTemplateLiteral51(["Shadow Rift (Somewhere Over the Beanstalk)"]))),
      manor3: $location(_templateObject636 || (_templateObject636 = _taggedTemplateLiteral51(["Shadow Rift (Spookyraven Manor Third Floor)"]))),
      "8bit": $location(_templateObject731 || (_templateObject731 = _taggedTemplateLiteral51(["Shadow Rift (The 8-Bit Realm)"]))),
      pyramid: $location(_templateObject828 || (_templateObject828 = _taggedTemplateLiteral51(["Shadow Rift (The Ancient Buried Pyramid)"]))),
      giantcastle: $location(_templateObject925 || (_templateObject925 = _taggedTemplateLiteral51(["Shadow Rift (The Castle in the Clouds in the Sky)"]))),
      woods: $location(_templateObject020 || (_templateObject020 = _taggedTemplateLiteral51(["Shadow Rift (The Distant Woods)"]))),
      hiddencity: $location(_templateObject1105 || (_templateObject1105 = _taggedTemplateLiteral51(["Shadow Rift (The Hidden City)"]))),
      cemetery: $location(_templateObject1019 || (_templateObject1019 = _taggedTemplateLiteral51(["Shadow Rift (The Misspelled Cemetary)"]))),
      plains: $location(_templateObject1120 || (_templateObject1120 = _taggedTemplateLiteral51(["Shadow Rift (The Nearby Plains)"]))),
      town_right: $location(_templateObject1218 || (_templateObject1218 = _taggedTemplateLiteral51(["Shadow Rift (The Right Side of the Tracks)"])))
    };
    RIFTS = Array.from(Object.values(INGRESS_RIFTS));
    byIngress = makeByXFunction(currentIngress);
  }
});

// node_modules/libram/dist/resources/2023/CursedMonkeyPaw.js
var CursedMonkeyPaw_exports = {};
__export(CursedMonkeyPaw_exports, {
  getUnwishableEffects: function() {
    return getUnwishableEffects;
  },
  have: function() {
    return have51;
  },
  isWishable: function() {
    return isWishable;
  },
  wishFor: function() {
    return wishFor;
  },
  wishableItems: function() {
    return wishableItems;
  },
  wishes: function() {
    return wishes;
  }
});
function _taggedTemplateLiteral52(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have51() {
  return have(item11);
}
function wishes() {
  return clamp(5 - get("_monkeyPawWishesUsed"), 0, 5);
}
function wishableItems() {
  var filters = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  return new Set(import_kolmafia67.Location.all().filter(function(l) {
    var _filters$location, _filters$location2;
    return (0, import_kolmafia67.canAdventure)(l) && ((_filters$location = (_filters$location2 = filters.location) === null || _filters$location2 === void 0 ? void 0 : _filters$location2.call(filters, l)) !== null && _filters$location !== void 0 ? _filters$location : true);
  }).flatMap(function(l) {
    return (0, import_kolmafia67.getMonsters)(l).filter(function(m) {
      var _filters$monster, _filters$monster2;
      return m.copyable && ((_filters$monster = (_filters$monster2 = filters.monster) === null || _filters$monster2 === void 0 ? void 0 : _filters$monster2.call(filters, m)) !== null && _filters$monster !== void 0 ? _filters$monster : true);
    }).flatMap(function(m) {
      return (0, import_kolmafia67.itemDropsArray)(m).filter(function(_ref) {
        var _filters$drop, _filters$drop2;
        var type = _ref.type, rate = _ref.rate, drop = _ref.drop;
        return !drop.quest && (type !== "c" || rate >= 1) && // Remove random roll drops
        ((_filters$drop = (_filters$drop2 = filters.drop) === null || _filters$drop2 === void 0 ? void 0 : _filters$drop2.call(filters, {
          type: type,
          rate: rate,
          drop: drop
        })) !== null && _filters$drop !== void 0 ? _filters$drop : true);
      }).map(function(_ref2) {
        var drop = _ref2.drop;
        return drop;
      });
    });
  }));
}
function unwishableEffects() {
  var names = import_kolmafia67.Effect.all().filter(function(e) {
    return !e.attributes.includes("nohookah");
  }).map(function(e) {
    var name = e.name.toLowerCase();
    return {
      name: name,
      splitName: name.split(INVALID_CHARACTERS)
    };
  });
  return names.filter(function(_ref3) {
    var name = _ref3.name, splitName = _ref3.splitName;
    return (
      // Any effect that doesn't contain an INVALID_CHARACTER is fine
      splitName.length > 1 && // To be unwishable, there can't be any substrings that uniquely match a genie-wishable effect
      splitName.every(function(s) {
        return (
          // So we check every maximal substring against every one of our genie-wishable effects, excluding the effect we're currently looking at
          // if one of the substrings matches a substring associated with another effect, we're screwed.
          names.some(function(_ref4) {
            var n = _ref4.name;
            return n !== name && n.includes(s);
          })
        );
      })
    );
  }).map(function(_ref5) {
    var name = _ref5.name;
    return (0, import_kolmafia67.toEffect)(name);
  });
}
function getUnwishableEffects() {
  return _unwishableEffects !== null && _unwishableEffects !== void 0 ? _unwishableEffects : _unwishableEffects = unwishableEffects();
}
function isWishable(wish) {
  if (wish instanceof import_kolmafia67.Item) {
    return wishableItems().has(wish);
  } else {
    if (wish.attributes.includes("nohookah")) return false;
    if (!wish.name.match(/[.,']/)) return true;
    return !getUnwishableEffects().includes(wish);
  }
}
function wishFor(wish) {
  if (wishes() <= 0) return false;
  if (wish instanceof import_kolmafia67.Effect) return (0, import_kolmafia67.monkeyPaw)(wish);
  var locations = import_kolmafia67.Location.all().filter(function(l) {
    return (0, import_kolmafia67.canAdventure)(l) && (0, import_kolmafia67.getMonsters)(l).some(function(m) {
      return m.copyable && (0, import_kolmafia67.itemDropsArray)(m).some(function(_ref6) {
        var drop = _ref6.drop;
        return drop === wish;
      });
    });
  });
  try {
    if (locations.length) {
      (0, import_kolmafia67.cliExecute)("checkpoint");
      (0, import_kolmafia67.prepareForAdventure)(locations[0]);
    }
    var result = (0, import_kolmafia67.monkeyPaw)(wish);
    if (!result) {
      logger_default.debug("Failed to monkeyPaw wish for ".concat(wish, "; assumed it was available in locations ").concat(locations.join(", ")));
    }
    return result;
  } finally {
    if (locations.length) (0, import_kolmafia67.cliExecute)("outfit checkpoint");
  }
}
var import_kolmafia67, _templateObject401, item11, INVALID_CHARACTERS, _unwishableEffects;
var init_CursedMonkeyPaw = __esm({
  "node_modules/libram/dist/resources/2023/CursedMonkeyPaw.js": function() {
    import_kolmafia67 = require("kolmafia");
    init_lib();
    init_logger();
    init_property();
    init_template_string();
    init_utils();
    item11 = $item(_templateObject401 || (_templateObject401 = _taggedTemplateLiteral52(["cursed monkey's paw"])));
    INVALID_CHARACTERS = /[^a-z\d -]/g;
  }
});

// node_modules/libram/dist/resources/2024/AprilingBandHelmet.js
var AprilingBandHelmet_exports = {};
__export(AprilingBandHelmet_exports, {
  INSTRUMENTS: function() {
    return INSTRUMENTS;
  },
  INSTRUMENT_ITEMS: function() {
    return INSTRUMENT_ITEMS;
  },
  MARCHING_SONGS: function() {
    return MARCHING_SONGS;
  },
  MARCHING_SONG_EFFECTS: function() {
    return MARCHING_SONG_EFFECTS;
  },
  canChangeSong: function() {
    return canChangeSong;
  },
  canJoinSection: function() {
    return canJoinSection;
  },
  canPlay: function() {
    return canPlay;
  },
  changeSong: function() {
    return changeSong;
  },
  conduct: function() {
    return conduct;
  },
  have: function() {
    return have52;
  },
  joinSection: function() {
    return joinSection;
  },
  play: function() {
    return play;
  }
});
function _slicedToArray16(r, e) {
  return _arrayWithHoles16(r) || _iterableToArrayLimit16(r, e) || _unsupportedIterableToArray29(r, e) || _nonIterableRest16();
}
function _nonIterableRest16() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray29(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray29(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray29(r, a) : void 0;
  }
}
function _arrayLikeToArray29(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _iterableToArrayLimit16(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles16(r) {
  if (Array.isArray(r)) return r;
}
function _taggedTemplateLiteral53(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have52() {
  return have(helmet2);
}
function canJoinSection() {
  return have52() && get("_aprilBandInstruments") < 2;
}
function makeConductFunction(mafiaClass, canDo, set3, offset) {
  return function(input) {
    if (!canDo()) return false;
    var _ref = typeof input === "string" ? [input, mafiaClass.get(input)] : [input.name, input], _ref2 = _slicedToArray16(_ref, 2), name = _ref2[0], instance = _ref2[1];
    if (have(instance)) return true;
    var key = set3.indexOf(name);
    if (key === -1) return false;
    visitConduct();
    (0, import_kolmafia68.runChoice)(key + offset);
    (0, import_kolmafia68.runChoice)(9);
    return have(instance);
  };
}
function canChangeSong() {
  return have52() && get("nextAprilBandTurn") <= (0, import_kolmafia68.totalTurnsPlayed)();
}
function conduct(result) {
  if (result instanceof import_kolmafia68.Item || arrayContains(result, INSTRUMENTS)) {
    return joinSection(result);
  }
  return changeSong(result);
}
function play(instrument) {
  var acquire = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
  var item15 = instrument instanceof import_kolmafia68.Item ? instrument : import_kolmafia68.Item.get(instrument);
  if (!canPlay(instrument, acquire)) return false;
  if (acquire && !have(item15)) joinSection(item15);
  var currentUsesRemaining = item15.dailyusesleft;
  (0, import_kolmafia68.visitUrl)("inventory.php?pwd=".concat((0, import_kolmafia68.myHash)(), "&iid=").concat(item15.id, "&action=aprilplay"), false);
  return item15.dailyusesleft !== currentUsesRemaining;
}
function canPlay(instrument) {
  var acquire = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
  if (!have52()) return false;
  var item15 = instrument instanceof import_kolmafia68.Item ? instrument : import_kolmafia68.Item.get(instrument);
  if (!have(item15) && (!acquire || !canJoinSection())) return false;
  if (item15.dailyusesleft <= 0) return false;
  return true;
}
var import_kolmafia68, _templateObject408, helmet2, MARCHING_SONGS, MARCHING_SONG_EFFECTS, INSTRUMENTS, INSTRUMENT_ITEMS, visitConduct, joinSection, changeSong;
var init_AprilingBandHelmet = __esm({
  "node_modules/libram/dist/resources/2024/AprilingBandHelmet.js": function() {
    import_kolmafia68 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    helmet2 = $item(_templateObject408 || (_templateObject408 = _taggedTemplateLiteral53(["Apriling band helmet"])));
    MARCHING_SONGS = Object.freeze(["Apriling Band Patrol Beat", "Apriling Band Battle Cadence", "Apriling Band Celebration Bop"]);
    MARCHING_SONG_EFFECTS = Object.freeze(MARCHING_SONGS.map(function(song2) {
      return (0, import_kolmafia68.toEffect)(song2);
    }));
    INSTRUMENTS = Object.freeze(["Apriling band saxophone", "Apriling band quad tom", "Apriling band tuba", "Apriling band staff", "Apriling band piccolo"]);
    INSTRUMENT_ITEMS = Object.freeze(INSTRUMENTS.map(function(instrument) {
      return (0, import_kolmafia68.toItem)(instrument);
    }));
    visitConduct = function() {
      return (0, import_kolmafia68.visitUrl)("inventory.php?pwd&action=apriling");
    };
    joinSection = makeConductFunction(import_kolmafia68.Item, canJoinSection, INSTRUMENTS, 4);
    changeSong = makeConductFunction(import_kolmafia68.Effect, canChangeSong, MARCHING_SONGS, 1);
  }
});

// node_modules/libram/dist/resources/2024/ChestMimic.js
var ChestMimic_exports = {};
__export(ChestMimic_exports, {
  differentiableQuantity: function() {
    return differentiableQuantity;
  },
  differentiate: function() {
    return differentiate;
  },
  donate: function() {
    return donate;
  },
  eggMonsters: function() {
    return eggMonsters;
  },
  getDonableMonsters: function() {
    return getDonableMonsters;
  },
  getReceivableMonsters: function() {
    return getReceivableMonsters;
  },
  have: function() {
    return have53;
  },
  receive: function() {
    return receive;
  }
});
function _taggedTemplateLiteral54(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have53() {
  return have(familiar9);
}
function getMonsters3(selectNumber, page) {
  var total = (0, import_kolmafia69.xpath)(page, makeXpath(selectNumber, false));
  var disabled = new Set((0, import_kolmafia69.xpath)(page, makeXpath(selectNumber, true)));
  return total.filter(function(m) {
    return !disabled.has(m);
  }).map(function(id) {
    return (0, import_kolmafia69.toMonster)(id);
  });
}
function getDonableMonsters() {
  if (!canDonate()) return [];
  var selectNumber = canReceive() ? 2 : 1;
  return withBank(function(page) {
    return getMonsters3(selectNumber, page);
  });
}
function getReceivableMonsters() {
  if (!canReceive()) return [];
  return withBank(function(page) {
    return getMonsters3(1, page);
  });
}
function donate(monster2) {
  if (!canDonate()) return false;
  var selectNumber = canReceive() ? 2 : 1;
  return withBank(function(page) {
    var available7 = getMonsters3(selectNumber, page);
    if (!available7.includes(monster2)) return false;
    return (0, import_kolmafia69.runChoice)(1, "mid=".concat(monster2.id)).includes("You donate your egg to science.");
  });
}
function receive(monster2) {
  if (!canReceive()) return false;
  return withBank(function(page) {
    var available7 = getMonsters3(1, page);
    if (!available7.includes(monster2)) return false;
    return (0, import_kolmafia69.runChoice)(2, "mid=".concat(monster2.id)).includes("Your mimic pops into a backroom and returns a few moments later with a fresh mimic egg!");
  });
}
function differentiate(monster2) {
  var page = directlyUse($item(_templateObject3102 || (_templateObject3102 = _taggedTemplateLiteral54(["mimic egg"]))));
  var monsters = getMonsters3(1, page);
  if (!monsters.includes(monster2)) {
    (0, import_kolmafia69.visitUrl)("main.php");
    return false;
  }
  (0, import_kolmafia69.runChoice)(1, "mid=".concat(monster2.id));
  for (var _len = arguments.length, combatParams = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    combatParams[_key - 1] = arguments[_key];
  }
  import_kolmafia69.runCombat.apply(void 0, combatParams);
  return true;
}
function eggMonsters() {
  return new Map(multiSplit("mimicEggMonsters", ",", ":", [import_kolmafia69.toMonster, Number]));
}
function differentiableQuantity(monster2) {
  var _eggMonsters$get;
  if (!have($item(_templateObject460 || (_templateObject460 = _taggedTemplateLiteral54(["mimic egg"]))))) return 0;
  return (_eggMonsters$get = eggMonsters().get(monster2)) !== null && _eggMonsters$get !== void 0 ? _eggMonsters$get : 0;
}
var import_kolmafia69, _templateObject409, _templateObject2117, _templateObject3102, _templateObject460, familiar9, withBank, canDonate, canReceive, makeXpath;
var init_ChestMimic = __esm({
  "node_modules/libram/dist/resources/2024/ChestMimic.js": function() {
    import_kolmafia69 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    familiar9 = $familiar(_templateObject409 || (_templateObject409 = _taggedTemplateLiteral54(["Chest Mimic"])));
    withBank = function(action) {
      var initial = (0, import_kolmafia69.myFamiliar)();
      (0, import_kolmafia69.useFamiliar)(familiar9);
      try {
        var page = (0, import_kolmafia69.visitUrl)("place.php?whichplace=town_right&action=townright_dna", false);
        return action(page);
      } finally {
        (0, import_kolmafia69.visitUrl)("main.php");
        (0, import_kolmafia69.useFamiliar)(initial);
      }
    };
    canDonate = function() {
      return have($item(_templateObject2117 || (_templateObject2117 = _taggedTemplateLiteral54(["mimic egg"])))) && get("_mimicEggsDonated") < 3;
    };
    canReceive = function() {
      return familiar9.experience >= 100 && get("_mimicEggsObtained") < 11;
    };
    makeXpath = function(selectNumber, disabled) {
      return '//select[@name="mid"]['.concat(selectNumber, "]/option[position()>0]").concat(disabled ? "[@disabled]" : "", "/@value");
    };
  }
});

// node_modules/libram/dist/resources/2024/MayamCalendar.js
var MayamCalendar_exports = {};
__export(MayamCalendar_exports, {
  RESONANCES: function() {
    return RESONANCES;
  },
  RESONANCE_KEYS: function() {
    return RESONANCE_KEYS;
  },
  RINGS: function() {
    return RINGS;
  },
  available: function() {
    return available5;
  },
  getResonanceResult: function() {
    return getResonanceResult;
  },
  have: function() {
    return have54;
  },
  remainingUses: function() {
    return remainingUses;
  },
  resonanceAvailable: function() {
    return resonanceAvailable;
  },
  resonanceFor: function() {
    return resonanceFor;
  },
  submit: function() {
    return submit;
  },
  symbolsUsed: function() {
    return symbolsUsed;
  },
  toCombination: function() {
    return toCombination;
  },
  toCombinationString: function() {
    return toCombinationString;
  }
});
function _slicedToArray17(r, e) {
  return _arrayWithHoles17(r) || _iterableToArrayLimit17(r, e) || _unsupportedIterableToArray30(r, e) || _nonIterableRest17();
}
function _nonIterableRest17() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit17(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles17(r) {
  if (Array.isArray(r)) return r;
}
function _toConsumableArray17(r) {
  return _arrayWithoutHoles17(r) || _iterableToArray17(r) || _unsupportedIterableToArray30(r) || _nonIterableSpread17();
}
function _nonIterableSpread17() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray30(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray30(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray30(r, a) : void 0;
  }
}
function _iterableToArray17(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles17(r) {
  if (Array.isArray(r)) return _arrayLikeToArray30(r);
}
function _arrayLikeToArray30(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _taggedTemplateLiteral55(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have54() {
  return have($item(_templateObject461 || (_templateObject461 = _taggedTemplateLiteral55(["Mayam Calendar"]))));
}
function symbolsUsed() {
  return get("_mayamSymbolsUsed").split(",");
}
function available5() {
  for (var _len = arguments.length, symbols = new Array(_len), _key = 0; _key < _len; _key++) {
    symbols[_key] = arguments[_key];
  }
  return symbols.every(function(symbol) {
    return !symbolsUsed().includes(symbol);
  });
}
function remainingUses() {
  return RINGS[3].filter(function(symbol) {
    return available5(symbol);
  }).length;
}
function toCombination(combination) {
  return combination.length === 1 ? combination[0].split(" ") : combination;
}
function toCombinationString(combination) {
  return combination.length === 1 ? combination[0] : combination.join(" ");
}
function submit() {
  for (var _len2 = arguments.length, combination = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    combination[_key2] = arguments[_key2];
  }
  if (!available5.apply(void 0, _toConsumableArray17(toCombination(combination)))) {
    return false;
  }
  return (0, import_kolmafia70.cliExecute)("mayam rings ".concat(combination.join(" ").replace(/yam\d/g, "yam")));
}
function resonanceFor(target) {
  var _find$0$split, _find;
  return (_find$0$split = (_find = _toConsumableArray17(Object.entries(RESONANCES)).find(function(_ref) {
    var _ref2 = _slicedToArray17(_ref, 2), value = _ref2[1];
    return value === target;
  })) === null || _find === void 0 ? void 0 : _find[0].split(" ")) !== null && _find$0$split !== void 0 ? _find$0$split : null;
}
function resonanceAvailable(target) {
  var resonance = resonanceFor(target);
  return !!resonance && available5.apply(void 0, _toConsumableArray17(resonance));
}
function getResonanceResult() {
  for (var _len3 = arguments.length, combination = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
    combination[_key3] = arguments[_key3];
  }
  var combinationString = combination.length === 1 ? combination[0] : combination.join(" ");
  return combinationString in RESONANCES ? RESONANCES[combinationString] : null;
}
var import_kolmafia70, _templateObject461, _templateObject2118, _templateObject3103, _templateObject466, _templateObject540, _templateObject637, _templateObject734, _templateObject829, _templateObject926, _templateObject021, _templateObject1106, _templateObject1020, RINGS, RESONANCES, RESONANCE_KEYS;
var init_MayamCalendar = __esm({
  "node_modules/libram/dist/resources/2024/MayamCalendar.js": function() {
    import_kolmafia70 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    RINGS = Object.freeze([["yam1", "sword", "eye", "chair", "fur", "vessel"], ["lightning", "bottle", "meat", "wood", "yam2"], ["yam3", "wall", "cheese", "eyepatch"], ["explosion", "clock", "yam4"]]);
    RESONANCES = Object.freeze({
      "eye yam2 eyepatch yam4": $item(_templateObject2118 || (_templateObject2118 = _taggedTemplateLiteral55(["Mayam spinach"]))),
      "vessel yam2 cheese explosion": $item(_templateObject3103 || (_templateObject3103 = _taggedTemplateLiteral55(["stuffed yam stinkbomb"]))),
      "yam1 meat cheese yam4": $item(_templateObject466 || (_templateObject466 = _taggedTemplateLiteral55(["yam and swiss"]))),
      "sword yam2 eyepatch explosion": $item(_templateObject540 || (_templateObject540 = _taggedTemplateLiteral55(["yam cannon"]))),
      "fur lightning eyepatch yam4": $item(_templateObject637 || (_templateObject637 = _taggedTemplateLiteral55(["tiny yam cannon"]))),
      "yam1 lightning yam3 clock": $item(_templateObject734 || (_templateObject734 = _taggedTemplateLiteral55(["yam battery"]))),
      "fur yam2 wall yam4": $item(_templateObject829 || (_templateObject829 = _taggedTemplateLiteral55(["furry yam buckler"]))),
      "yam1 yam2 yam3 explosion": $item(_templateObject926 || (_templateObject926 = _taggedTemplateLiteral55(["thanksgiving bomb"]))),
      "yam1 meat eyepatch yam4": $item(_templateObject021 || (_templateObject021 = _taggedTemplateLiteral55(["yamtility belt"]))),
      "chair yam2 yam3 clock": $effect(_templateObject1106 || (_templateObject1106 = _taggedTemplateLiteral55(["Caught Yam-Handed"]))),
      "yam1 yam2 cheese clock": $effect(_templateObject1020 || (_templateObject1020 = _taggedTemplateLiteral55(["Memories of Cheesier Age"])))
    });
    RESONANCE_KEYS = Object.keys(RESONANCES);
  }
});

// node_modules/libram/dist/resources/2024/TearawayPants.js
var TearawayPants_exports = {};
__export(TearawayPants_exports, {
  expectedTotalAdventures: function() {
    return expectedTotalAdventures;
  },
  have: function() {
    return have55;
  },
  plantsAdventureChance: function() {
    return plantsAdventureChance;
  },
  unlockGuild: function() {
    return unlockGuild;
  }
});
function _taggedTemplateLiteral56(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have55() {
  return have(item12);
}
function plantsAdventureChance() {
  var advs = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : get("_tearawayPantsAdvs");
  return 1 / (2 + advs);
}
function expectedTotalAdventures(turnsToSpend) {
  var startingAdvs = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : get("_tearawayPantsAdvs");
  return (1 - 2 * startingAdvs + Math.sqrt(4 * Math.pow(startingAdvs, 2) - 4 * startingAdvs + 1 + 8 * turnsToSpend)) / 2;
}
function unlockGuild() {
  if (!$classes(_templateObject2119 || (_templateObject2119 = _taggedTemplateLiteral56(["Disco Bandit, Accordion Thief"]))).includes((0, import_kolmafia71.myClass)())) return false;
  if (questStep("questG08Moxie") >= 999) return true;
  if (!have55()) return false;
  try {
    (0, import_kolmafia71.cliExecute)("checkpoint");
    (0, import_kolmafia71.equip)($slot(_templateObject3104 || (_templateObject3104 = _taggedTemplateLiteral56(["pants"]))), item12);
    (0, import_kolmafia71.visitUrl)("guild.php?place=challenge");
  } finally {
    (0, import_kolmafia71.cliExecute)("outfit checkpoint");
  }
  return questStep("questG08Moxie") >= 999;
}
var import_kolmafia71, _templateObject467, _templateObject2119, _templateObject3104, item12;
var init_TearawayPants = __esm({
  "node_modules/libram/dist/resources/2024/TearawayPants.js": function() {
    import_kolmafia71 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    item12 = $item(_templateObject467 || (_templateObject467 = _taggedTemplateLiteral56(["tearaway pants"])));
  }
});

// node_modules/libram/dist/resources/2024/BatWings.js
var BatWings_exports = {};
__export(BatWings_exports, {
  cauldronsRemaining: function() {
    return cauldronsRemaining;
  },
  flapChance: function() {
    return flapChance;
  },
  have: function() {
    return have56;
  },
  jumpBridge: function() {
    return jumpBridge;
  },
  restUpsideDownRemaining: function() {
    return restUpsideDownRemaining;
  },
  swoopsRemaining: function() {
    return swoopsRemaining;
  }
});
function _taggedTemplateLiteral57(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have56() {
  return have($item(_templateObject468 || (_templateObject468 = _taggedTemplateLiteral57(["bat wings"]))));
}
function swoopsRemaining() {
  return have56() ? $skill(_templateObject2120 || (_templateObject2120 = _taggedTemplateLiteral57(["Swoop like a Bat"]))).dailylimit : 0;
}
function restUpsideDownRemaining() {
  return have56() ? $skill(_templateObject3105 || (_templateObject3105 = _taggedTemplateLiteral57(["Rest upside down"]))).dailylimit : 0;
}
function cauldronsRemaining() {
  return have56() ? $skill(_templateObject469 || (_templateObject469 = _taggedTemplateLiteral57(["Summon Cauldron of Bats"]))).dailylimit : 0;
}
function flapChance() {
  var flaps = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : get("_batWingsFreeFights");
  return flaps < 5 ? 1 / (2 + flaps) : 0;
}
function jumpBridge() {
  if (get("chasmBridgeProgress") < 25 || questStep("questL09Topping") === 0 || !have56()) {
    return false;
  }
  if (get("chasmBridgeProgress") === 30 || questStep("questL09Topping") >= 1) {
    return true;
  }
  var back = (0, import_kolmafia72.equippedItem)($slot(_templateObject541 || (_templateObject541 = _taggedTemplateLiteral57(["back"]))));
  (0, import_kolmafia72.equip)($item(_templateObject638 || (_templateObject638 = _taggedTemplateLiteral57(["bat wings"]))));
  (0, import_kolmafia72.visitUrl)("place.php?whichplace=orc_chasm&action=bridge_jump");
  (0, import_kolmafia72.visitUrl)("place.php?whichplace=highlands&action=highlands_dude");
  (0, import_kolmafia72.equip)(back);
  return questStep("questL09Topping") >= 2;
}
var import_kolmafia72, _templateObject468, _templateObject2120, _templateObject3105, _templateObject469, _templateObject541, _templateObject638;
var init_BatWings = __esm({
  "node_modules/libram/dist/resources/2024/BatWings.js": function() {
    import_kolmafia72 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
  }
});

// node_modules/libram/dist/resources/2024/EverfullDarts.js
var EverfullDarts_exports = {};
__export(EverfullDarts_exports, {
  bullseyeChance: function() {
    return bullseyeChance;
  },
  bullseyeCooldown: function() {
    return bullseyeCooldown;
  },
  currentPerks: function() {
    return currentPerks;
  },
  dartCapacity: function() {
    return dartCapacity;
  },
  have: function() {
    return have57;
  },
  perksMaxed: function() {
    return perksMaxed;
  }
});
function _taggedTemplateLiteral58(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have57() {
  return have(item13);
}
function currentPerks() {
  return get("everfullDartPerks").split(",");
}
function perksMaxed() {
  return currentPerks().length === PERKS.length;
}
function makePerkFunction(perkOrPerks, formula) {
  var current2 = currentPerks();
  if (Array.isArray(perkOrPerks)) {
    return function() {
      return formula(perkOrPerks.filter(function(perk) {
        return current2.includes(perk);
      }).length);
    };
  }
  return function() {
    return formula(current2.filter(function(perk) {
      return perk === perkOrPerks;
    }).length);
  };
}
var _templateObject470, item13, PERKS, BULLSEYE_ACCURACY_PERKS, bullseyeChance, BULLSEYE_COOLDOWN_PERKS, bullseyeCooldown, dartCapacity;
var init_EverfullDarts = __esm({
  "node_modules/libram/dist/resources/2024/EverfullDarts.js": function() {
    init_lib();
    init_template_string();
    init_property();
    init_utils();
    item13 = $item(_templateObject470 || (_templateObject470 = _taggedTemplateLiteral58(["Everfull Dart Holster"])));
    PERKS = ["Throw a second dart quickly", "Deal 25-50% more damage", "You are less impressed by bullseyes", "25% Better bullseye targeting", "Extra stats from stats targets", "Butt awareness", "Add Hot Damage", "Add Cold Damage", "Add Sleaze Damage", "Add Spooky Damage", "Add Stench Damage", "Expand your dart capacity by 1", "Bullseyes do not impress you much", "25% More Accurate bullseye targeting", "Deal 25-50% extra damage", "Expand your dart capacity by 1", "Increase Dart Deleveling from deleveling targets", "Deal 25-50% greater damage", "Extra stats from stats targets", "25% better chance to hit bullseyes"];
    BULLSEYE_ACCURACY_PERKS = ["25% Better bullseye targeting", "25% better chance to hit bullseyes", "25% More Accurate bullseye targeting"];
    bullseyeChance = makePerkFunction(BULLSEYE_ACCURACY_PERKS, function(perks) {
      return clamp(0.25 * (1 + perks), 0, 1);
    });
    BULLSEYE_COOLDOWN_PERKS = ["You are less impressed by bullseyes", "Bullseyes do not impress you much"];
    bullseyeCooldown = makePerkFunction(BULLSEYE_COOLDOWN_PERKS, function(perks) {
      return clamp(50 - 10 * perks, 30, 50);
    });
    dartCapacity = makePerkFunction("Expand your dart capacity by 1", function(perks) {
      return 1 + perks;
    });
  }
});

// node_modules/libram/dist/resources/2024/TakerSpace.js
var TakerSpace_exports = {};
__export(TakerSpace_exports, {
  allRecipes: function() {
    return allRecipes;
  },
  amount: function() {
    return amount;
  },
  canMake: function() {
    return canMake;
  },
  collect: function() {
    return collect;
  },
  currentResources: function() {
    return currentResources;
  },
  have: function() {
    return have58;
  },
  haveEnoughFor: function() {
    return haveEnoughFor;
  },
  installed: function() {
    return installed5;
  },
  make: function() {
    return make;
  },
  recipeFor: function() {
    return recipeFor;
  }
});
function _slicedToArray18(r, e) {
  return _arrayWithHoles18(r) || _iterableToArrayLimit18(r, e) || _unsupportedIterableToArray31(r, e) || _nonIterableRest18();
}
function _nonIterableRest18() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit18(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles18(r) {
  if (Array.isArray(r)) return r;
}
function _toConsumableArray18(r) {
  return _arrayWithoutHoles18(r) || _iterableToArray18(r) || _unsupportedIterableToArray31(r) || _nonIterableSpread18();
}
function _nonIterableSpread18() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray31(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray31(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray31(r, a) : void 0;
  }
}
function _iterableToArray18(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles18(r) {
  if (Array.isArray(r)) return _arrayLikeToArray31(r);
}
function _arrayLikeToArray31(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _taggedTemplateLiteral59(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function installed5() {
  return (0, import_kolmafia73.getWorkshed)() === item14;
}
function have58() {
  return installed5() || have(item14);
}
function allRecipes() {
  return new Map(_toConsumableArray18(RECIPES.entries()).map(function(_ref) {
    var _ref2 = _slicedToArray18(_ref, 2), item15 = _ref2[0], recipe = _ref2[1];
    return [item15, _toConsumableArray18(recipe)];
  }));
}
function collect() {
  if (!installed5() || get("_takerSpaceSuppliesDelivered")) return false;
  (0, import_kolmafia73.visitUrl)("campground.php?action=workshed", false);
  return get("_takerSpaceSuppliesDelivered");
}
function amount(resource) {
  collect();
  return get("takerSpace".concat(resource)) + (!installed5() && !get("_workshedItemUsed") ? defaultAmount(resource) : 0);
}
function recipeFor(item15) {
  var result = RECIPES.get(item15);
  return result ? _toConsumableArray18(result) : null;
}
function currentResources() {
  collect();
  return RESOURCES.map(amount);
}
function haveEnoughFor(item15) {
  var amount2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  var recipe = recipeFor(item15);
  if (!recipe) return false;
  return currentResources().every(function(resource, index) {
    return resource >= amount2 * recipe[index];
  });
}
function canMake(item15) {
  var amount2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  return installed5() && haveEnoughFor(item15, amount2);
}
function make(item15) {
  var amount2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  return canMake(item15, amount2) && (0, import_kolmafia73.create)(item15, amount2);
}
var import_kolmafia73, _templateObject471, _templateObject2121, _templateObject3106, _templateObject476, _templateObject544, _templateObject639, _templateObject735, _templateObject830, _templateObject927, _templateObject022, _templateObject1107, _templateObject1021, _templateObject1121, _templateObject1219, _templateObject1318, _templateObject1417, _templateObject1516, _templateObject1616, item14, RESOURCES, RECIPES, defaultAmount;
var init_TakerSpace = __esm({
  "node_modules/libram/dist/resources/2024/TakerSpace.js": function() {
    import_kolmafia73 = require("kolmafia");
    init_lib();
    init_template_string();
    init_property();
    item14 = $item(_templateObject471 || (_templateObject471 = _taggedTemplateLiteral59(["TakerSpace letter of Marque"])));
    RESOURCES = ["Spice", "Rum", "Anchor", "Mast", "Silk", "Gold"];
    RECIPES = /* @__PURE__ */ new Map([[$item(_templateObject2121 || (_templateObject2121 = _taggedTemplateLiteral59(["deft pirate hook"]))), [0, 0, 1, 1, 0, 1]], [$item(_templateObject3106 || (_templateObject3106 = _taggedTemplateLiteral59(["iron tricorn hat"]))), [0, 0, 2, 1, 0, 0]], [$item(_templateObject476 || (_templateObject476 = _taggedTemplateLiteral59(["jolly roger flag"]))), [0, 1, 0, 1, 1, 0]], [$item(_templateObject544 || (_templateObject544 = _taggedTemplateLiteral59(["sleeping profane parrot"]))), [15, 3, 0, 0, 2, 1]], [$item(_templateObject639 || (_templateObject639 = _taggedTemplateLiteral59(["pirrrate's currrse"]))), [2, 2, 0, 0, 0, 0]], [$item(_templateObject735 || (_templateObject735 = _taggedTemplateLiteral59(["tankard of spiced rum"]))), [1, 2, 0, 0, 0, 0]], [$item(_templateObject830 || (_templateObject830 = _taggedTemplateLiteral59(["packaged luxury garment"]))), [0, 0, 0, 0, 3, 2]], [$item(_templateObject927 || (_templateObject927 = _taggedTemplateLiteral59(["harpoon"]))), [0, 0, 0, 2, 0, 0]], [$item(_templateObject022 || (_templateObject022 = _taggedTemplateLiteral59(["chili powder cutlass"]))), [5, 0, 1, 0, 0, 0]], [$item(_templateObject1107 || (_templateObject1107 = _taggedTemplateLiteral59(["cursed Aztec tamale"]))), [2, 0, 0, 0, 0, 0]], [$item(_templateObject1021 || (_templateObject1021 = _taggedTemplateLiteral59(["jolly roger tattoo kit"]))), [0, 6, 1, 1, 0, 6]], [$item(_templateObject1121 || (_templateObject1121 = _taggedTemplateLiteral59(["golden pet rock"]))), [0, 0, 0, 0, 0, 7]], [$item(_templateObject1219 || (_templateObject1219 = _taggedTemplateLiteral59(["groggles"]))), [0, 6, 0, 0, 0, 0]], [$item(_templateObject1318 || (_templateObject1318 = _taggedTemplateLiteral59(["pirate dinghy"]))), [0, 0, 1, 1, 1, 0]], [$item(_templateObject1417 || (_templateObject1417 = _taggedTemplateLiteral59(["anchor bomb"]))), [0, 1, 3, 1, 0, 1]], [$item(_templateObject1516 || (_templateObject1516 = _taggedTemplateLiteral59(["silky pirate drawers"]))), [0, 0, 0, 0, 2, 0]], [$item(_templateObject1616 || (_templateObject1616 = _taggedTemplateLiteral59(["spices"]))), [1, 0, 0, 0, 0, 0]]]);
    defaultAmount = function(resource) {
      return ["Silk", "Gold"].includes(resource) ? 1 : 3;
    };
  }
});

// node_modules/libram/dist/resources/2025/CrepeParachute.js
var CrepeParachute_exports = {};
__export(CrepeParachute_exports, {
  availableMonsters: function() {
    return availableMonsters;
  },
  fight: function() {
    return fight;
  },
  have: function() {
    return have59;
  }
});
function _taggedTemplateLiteral60(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have59() {
  return have($item(_templateObject477 || (_templateObject477 = _taggedTemplateLiteral60(["crepe paper parachute cape"]))));
}
function checkMonsters(html) {
  return (0, import_kolmafia74.xpath)(html, "//select[@name='monid']//option[position()>1]/@value").map(function(id) {
    return (0, import_kolmafia74.toMonster)(Number(id));
  });
}
function availableMonsters() {
  if (!have59() || have($effect(_templateObject2122 || (_templateObject2122 = _taggedTemplateLiteral60(["Everything looks Beige"]))))) return [];
  return checkMonsters(visitParachute());
}
function fight(target) {
  if (!have59()) return false;
  if (have($effect(_templateObject3107 || (_templateObject3107 = _taggedTemplateLiteral60(["Everything looks Beige"]))))) return false;
  var monsters = checkMonsters(visitParachute());
  var monster2 = undelay(target, monsters);
  if (!monsters.includes(monster2)) return false;
  if (!(0, import_kolmafia74.handlingChoice)() || (0, import_kolmafia74.lastChoice)() !== 1543) visitParachute();
  (0, import_kolmafia74.runChoice)(1, "monid=".concat(monster2.id));
  for (var _len = arguments.length, combatParams = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    combatParams[_key - 1] = arguments[_key];
  }
  import_kolmafia74.runCombat.apply(void 0, combatParams);
  return true;
}
var import_kolmafia74, _templateObject477, _templateObject2122, _templateObject3107, visitParachute;
var init_CrepeParachute = __esm({
  "node_modules/libram/dist/resources/2025/CrepeParachute.js": function() {
    import_kolmafia74 = require("kolmafia");
    init_lib();
    init_template_string();
    init_utils();
    visitParachute = function() {
      return (0, import_kolmafia74.visitUrl)("inventory.php?action=parachute&pwd");
    };
  }
});

// node_modules/libram/dist/resources/2025/ToyCupidBow.js
var ToyCupidBow_exports = {};
__export(ToyCupidBow_exports, {
  currentFamiliar: function() {
    return currentFamiliar2;
  },
  doneToday: function() {
    return doneToday;
  },
  familiarsToday: function() {
    return familiarsToday;
  },
  have: function() {
    return have60;
  },
  turnsLeft: function() {
    return turnsLeft2;
  }
});
function _taggedTemplateLiteral61(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have60() {
  return have($item(_templateObject478 || (_templateObject478 = _taggedTemplateLiteral61(["toy Cupid bow"]))));
}
function currentFamiliar2() {
  return get("cupidBowLastFamiliar");
}
function familiarsToday() {
  return get("_cupidBowFamiliars").split(";").map(function(id) {
    return (0, import_kolmafia75.toFamiliar)(Number(id));
  });
}
function doneToday(familiar10) {
  return RegExp("(?:^|;)".concat(familiar10.id, "(?:$|;)")).test(get("_cupidBowFamiliars"));
}
function turnsLeft2() {
  var familiar10 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : currentFamiliar2();
  if (familiarsToday().includes(familiar10)) return Infinity;
  if (currentFamiliar2() !== familiar10) return 5;
  return clamp(5 - get("cupidBowFights"), 1, 5);
}
var import_kolmafia75, _templateObject478;
var init_ToyCupidBow = __esm({
  "node_modules/libram/dist/resources/2025/ToyCupidBow.js": function() {
    import_kolmafia75 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
  }
});

// node_modules/libram/dist/resources/2025/Leprecondo.js
var Leprecondo_exports = {};
__export(Leprecondo_exports, {
  FURNITURE_PIECES: function() {
    return FURNITURE_PIECES;
  },
  Furniture: function() {
    return Furniture;
  },
  NEEDS: function() {
    return NEEDS;
  },
  currentNeed: function() {
    return currentNeed;
  },
  discoveredFurniture: function() {
    return discoveredFurniture;
  },
  furnitureBonuses: function() {
    return furnitureBonuses;
  },
  furnitureDiscoveredToday: function() {
    return furnitureDiscoveredToday;
  },
  getStats: function() {
    return getStats;
  },
  have: function() {
    return have61;
  },
  installedFurniture: function() {
    return installedFurniture;
  },
  lastNeedChange: function() {
    return lastNeedChange;
  },
  needOrder: function() {
    return needOrder;
  },
  rearrangesRemaining: function() {
    return rearrangesRemaining;
  },
  setFurniture: function() {
    return setFurniture;
  }
});
function _typeof18(o) {
  "@babel/helpers - typeof";
  return _typeof18 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof18(o);
}
function ownKeys9(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread9(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys9(Object(t), true).forEach(function(r2) {
      _defineProperty17(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys9(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty17(e, r, t) {
  return (r = _toPropertyKey18(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
}
function _toPropertyKey18(t) {
  var i = _toPrimitive18(t, "string");
  return "symbol" == _typeof18(i) ? i : i + "";
}
function _toPrimitive18(t, r) {
  if ("object" != _typeof18(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof18(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _taggedTemplateLiteral62(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have61() {
  return have($item(_templateObject479 || (_templateObject479 = _taggedTemplateLiteral62(["Leprecondo"]))));
}
function rearrangesRemaining() {
  return clamp(3 - get("_leprecondoRearrangements"), 0, 3);
}
function currentNeed() {
  return get("leprecondoCurrentNeed");
}
function needOrder() {
  return get("leprecondoNeedOrder").split(",");
}
function furnitureDiscoveredToday() {
  return get("_leprecondoFurniture");
}
function lastNeedChange() {
  return (0, import_kolmafia76.turnsPlayed)() - get("leprecondoLastNeedChange");
}
function getStats(furniture) {
  return Furniture[furniture];
}
function discoveredFurniture() {
  return get("leprecondoDiscovered").split(",").map(function(id) {
    return FURNITURE_PIECES[Number(id)];
  });
}
function installedFurniture() {
  return get("leprecondoInstalled").split(",").map(function(id) {
    return FURNITURE_PIECES[Number(id)];
  }).reverse();
}
function setFurniture() {
  if (rearrangesRemaining() < 0) return false;
  for (var _len = arguments.length, furniture = new Array(_len), _key = 0; _key < _len; _key++) {
    furniture[_key] = arguments[_key];
  }
  var nonemptyFurniture = furniture.filter(function(f) {
    return f !== "empty";
  });
  if (nonemptyFurniture.some(function(piece) {
    return !discoveredFurniture().includes(piece);
  })) return false;
  if (new Set(nonemptyFurniture).size !== nonemptyFurniture.length) return false;
  directlyUse($item(_templateObject4212 || (_templateObject4212 = _taggedTemplateLiteral62(["Leprecondo"]))));
  (0, import_kolmafia76.runChoice)(1, furniture.map(function(piece, index) {
    return "r".concat(3 - index, "=").concat(FURNITURE_PIECES.indexOf(piece));
  }).join("&"));
  return arrayEquals(installedFurniture(), furniture);
}
function furnitureBonuses() {
  var furniture = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : installedFurniture();
  return furniture.reduce(function(acc, piece) {
    return _objectSpread9(_objectSpread9({}, Furniture[piece]), acc);
  }, {});
}
var import_kolmafia76, _templateObject479, _templateObject2123, _templateObject3108, _templateObject480, _templateObject545, _templateObject640, _templateObject736, _templateObject831, _templateObject928, _templateObject023, _templateObject1108, _templateObject1022, _templateObject1122, _templateObject1220, _templateObject1319, _templateObject1418, _templateObject1517, _templateObject1617, _templateObject1714, _templateObject1814, _templateObject1914, _templateObject2013, _templateObject2124, _templateObject2216, _templateObject2315, _templateObject2413, _templateObject2512, _templateObject2611, _templateObject2710, _templateObject2810, _templateObject2910, _templateObject3010, _templateObject3114, _templateObject3213, _templateObject3312, _templateObject3411, _templateObject3510, _templateObject3610, _templateObject3710, _templateObject3810, _templateObject3910, _templateObject4010, _templateObject4113, _templateObject4212, NEEDS, FURNITURE_PIECES, Furniture;
var init_Leprecondo = __esm({
  "node_modules/libram/dist/resources/2025/Leprecondo.js": function() {
    import_kolmafia76 = require("kolmafia");
    init_lib();
    init_template_string();
    init_utils();
    init_property();
    NEEDS = Object.freeze(["exercise", "mental stimulation", "dumb entertainment", "food", "booze", "sleep"]);
    FURNITURE_PIECES = Object.freeze(["empty", "buckets of concrete", "thrift store oil painting", "boxes of old comic books", "second-hand hot plate", "beer cooler", "free mattress", "gigantic chess set", "UltraDance karaoke machine", "cupcake treadmill", "beer pong table", "padded weight bench", "internet-connected laptop", "sous vide laboratory", "programmable blender", "sensory deprivation tank", "fruit-smashing robot", "ManCave\u2122 sports bar set", "couch and flatscreen", "kegerator", "fine upholstered dining set", "whiskeybed", "high-end home workout system", "complete classics library", "ultimate retro game console", "Omnipot", "fully-stocked wet bar", "four-poster bed"]);
    Furniture = Object.freeze({
      "beer cooler": {
        booze: $items(_templateObject2123 || (_templateObject2123 = _taggedTemplateLiteral62(['beer bomb, bloody beer, ice-cold fotie, ice-cold Sir Schlitz, ice-cold Willer, overpriced "imported" beer, plain old beer'])))
      },
      "beer pong table": {
        booze: $items(_templateObject3108 || (_templateObject3108 = _taggedTemplateLiteral62(['beer bomb, bloody beer, ice-cold fotie, ice-cold Sir Schlitz, ice-cold Willer, overpriced "imported" beer, plain old beer']))),
        exercise: $item(_templateObject480 || (_templateObject480 = _taggedTemplateLiteral62(["table tennis ball"])))
      },
      "boxes of old comic books": {
        "dumb entertainment": {
          effect: $effect(_templateObject545 || (_templateObject545 = _taggedTemplateLiteral62(["Wasting Time"]))),
          duration: 10
        }
      },
      "buckets of concrete": {
        exercise: {
          effect: $effect(_templateObject640 || (_templateObject640 = _taggedTemplateLiteral62(["Gym Bros"]))),
          duration: 10
        }
      },
      "complete classics library": {
        "mental stimulation": $item(_templateObject736 || (_templateObject736 = _taggedTemplateLiteral62(["leprechaun antidepressant pill"])))
      },
      "couch and flatscreen": {
        "dumb entertainment": {
          effect: $effect(_templateObject831 || (_templateObject831 = _taggedTemplateLiteral62(["Your Days Are Numbed"]))),
          duration: 10
        },
        sleep: {
          effect: $effect(_templateObject928 || (_templateObject928 = _taggedTemplateLiteral62(["Good Night's Sleep"]))),
          duration: 10
        }
      },
      "cupcake treadmill": {
        exercise: {
          effect: $effect(_templateObject023 || (_templateObject023 = _taggedTemplateLiteral62(["Your Days Are Numbed"]))),
          duration: 10
        },
        food: $item(_templateObject1108 || (_templateObject1108 = _taggedTemplateLiteral62(["standard-issue cupcake"])))
      },
      "fine upholstered dining set": {
        food: $items(_templateObject1022 || (_templateObject1022 = _taggedTemplateLiteral62(["boring spaghetti, delicious noodles, goat cheese pizza, sausage pizza, spicy bean burrito, spicy noodles"]))),
        sleep: {
          effect: $effect(_templateObject1122 || (_templateObject1122 = _taggedTemplateLiteral62(["Sur La Table"]))),
          duration: 10
        }
      },
      empty: {},
      "four-poster bed": {
        sleep: {
          effect: $effect(_templateObject1220 || (_templateObject1220 = _taggedTemplateLiteral62(["Spacious Night's Sleep"]))),
          duration: 10
        }
      },
      "free mattress": {
        sleep: {
          effect: $effect(_templateObject1319 || (_templateObject1319 = _taggedTemplateLiteral62(["Good Night's Sleep"]))),
          duration: 10
        }
      },
      "fruit-smashing robot": {
        "dumb entertainment": {
          effect: $effect(_templateObject1418 || (_templateObject1418 = _taggedTemplateLiteral62(["You Might Have Gotten Wet"]))),
          duration: 10
        },
        food: $items(_templateObject1517 || (_templateObject1517 = _taggedTemplateLiteral62(["cherry, cranberries, grapefruit, grapes, kiwi, kumquat, lemon, lime, orange, papaya, raspberry, strawberry, tangerine"])))
      },
      "fully-stocked wet bar": {
        booze: $items(_templateObject1617 || (_templateObject1617 = _taggedTemplateLiteral62(["Divine sidecar, prussian cathouse sidecar, tangarita sidecar"])))
      },
      "gigantic chess set": {
        exercise: {
          effect: $effect(_templateObject1714 || (_templateObject1714 = _taggedTemplateLiteral62(["Work Out Smarter, Not Harder"]))),
          duration: 10
        },
        "mental stimulation": {
          effect: $effect(_templateObject1814 || (_templateObject1814 = _taggedTemplateLiteral62(["Well Stimulated"]))),
          duration: 10
        }
      },
      "high-end home workout system": {
        exercise: $item(_templateObject1914 || (_templateObject1914 = _taggedTemplateLiteral62(["scoop of pre-workout powder"])))
      },
      "internet-connected laptop": {
        "dumb entertainment": {
          effect: $effect(_templateObject2013 || (_templateObject2013 = _taggedTemplateLiteral62(["Wasting Time"]))),
          duration: 10
        },
        "mental stimulation": $item(_templateObject2124 || (_templateObject2124 = _taggedTemplateLiteral62(["crafting plans"])))
      },
      kegerator: {
        booze: $item(_templateObject2216 || (_templateObject2216 = _taggedTemplateLiteral62(["pint of Leprechaun Stout"]))),
        food: $items(_templateObject2315 || (_templateObject2315 = _taggedTemplateLiteral62(["bean burrito, plain pizza, spicy mushroom quesadilla, tofu casserole, Trollhouse cookies"])))
      },
      "ManCave\u2122 sports bar set": {
        booze: $items(_templateObject2413 || (_templateObject2413 = _taggedTemplateLiteral62(["melted Jell-o shot, shot of blackberry schnapps, shot of nepenthe schnapps, shot of peach schnapps, shot of pear schnapps, shot of rotgut"]))),
        "dumb entertainment": $item(_templateObject2512 || (_templateObject2512 = _taggedTemplateLiteral62(["bar dart"])))
      },
      Omnipot: {
        food: $items(_templateObject2611 || (_templateObject2611 = _taggedTemplateLiteral62(["Heck ramen, incredible mini-pizza, small beer brat, tiny burrito, tiny peach pie, savoy truffle, white chocolate chip brownies"])))
      },
      "padded weight bench": {
        exercise: {
          effect: $effect(_templateObject2710 || (_templateObject2710 = _taggedTemplateLiteral62(["Gym Bros"]))),
          duration: 10
        },
        sleep: {
          effect: $effect(_templateObject2810 || (_templateObject2810 = _taggedTemplateLiteral62(["Tired Muscles"]))),
          duration: 10
        }
      },
      "programmable blender": {
        booze: $items(_templateObject2910 || (_templateObject2910 = _taggedTemplateLiteral62(["eggnog, extra-spicy bloody mary, grog, white lightning"]))),
        "mental stimulation": {
          effect: $effect(_templateObject3010 || (_templateObject3010 = _taggedTemplateLiteral62(["Counter Intelligence"]))),
          duration: 10
        }
      },
      "second-hand hot plate": {
        food: $items(_templateObject3114 || (_templateObject3114 = _taggedTemplateLiteral62(["bean burrito, chorizo taco, plain pizza, spicy mushroom quesadilla, tofu casserole, Trollhouse cookies"])))
      },
      "sensory deprivation tank": {
        "mental stimulation": {
          effect: $effect(_templateObject3213 || (_templateObject3213 = _taggedTemplateLiteral62(["Alone with Your Thoughts"]))),
          duration: 10
        },
        sleep: {
          effect: $effect(_templateObject3312 || (_templateObject3312 = _taggedTemplateLiteral62(["Quiet Night's Sleep"]))),
          duration: 10
        }
      },
      "sous vide laboratory": {
        food: $items(_templateObject3411 || (_templateObject3411 = _taggedTemplateLiteral62(["tiny burrito, black forest ham, fishy fish, ham steak, Knoll stir-fry, spooky stir-fry"]))),
        "mental stimulation": {
          effect: $effect(_templateObject3510 || (_templateObject3510 = _taggedTemplateLiteral62(["Counter Intelligence"]))),
          duration: 10
        }
      },
      "thrift store oil painting": {
        "mental stimulation": {
          effect: $effect(_templateObject3610 || (_templateObject3610 = _taggedTemplateLiteral62(["Well Stimulated"]))),
          duration: 10
        }
      },
      "ultimate retro game console": {
        "dumb entertainment": $item(_templateObject3710 || (_templateObject3710 = _taggedTemplateLiteral62(["phosphor traces"])))
      },
      "UltraDance karaoke machine": {
        "dumb entertainment": {
          effect: $effect(_templateObject3810 || (_templateObject3810 = _taggedTemplateLiteral62(["Your Days Are Numbed"]))),
          duration: 10
        },
        exercise: {
          effect: $effect(_templateObject3910 || (_templateObject3910 = _taggedTemplateLiteral62(["Vicarious Sweat"]))),
          duration: 10
        }
      },
      whiskeybed: {
        booze: $items(_templateObject4010 || (_templateObject4010 = _taggedTemplateLiteral62(["Divine sidecar, lumbering jack, old-fashioned, whiskey and cola, whiskey and soda, whiskey bittersweet, whiskey sour"]))),
        sleep: {
          effect: $effect(_templateObject4113 || (_templateObject4113 = _taggedTemplateLiteral62(["Moist Night's Sleep"]))),
          duration: 10
        }
      }
    });
  }
});

// node_modules/libram/dist/resources/evergreen/Raffle.js
var Raffle_exports = {};
__export(Raffle_exports, {
  accessible: function() {
    return accessible;
  },
  buyTicketsUpTo: function() {
    return buyTicketsUpTo;
  },
  currentTickets: function() {
    return currentTickets;
  },
  getRafflePrizes: function() {
    return getRafflePrizes;
  }
});
function accessible() {
  return (0, import_kolmafia77.canAdventure)(import_kolmafia77.Location.get("South of the Border")) && (0, import_kolmafia77.myPath)() !== import_kolmafia77.Path.get("Zombie Slayer");
}
function getRafflePrize(place, page) {
  var _descId$;
  var descId = new RegExp("".concat(place, " Prize:</td><td><img class=hand onclick='descitem\\((\\d+)\\)")).exec(page);
  return (0, import_kolmafia77.descToItem)((_descId$ = descId === null || descId === void 0 ? void 0 : descId[1]) !== null && _descId$ !== void 0 ? _descId$ : "");
}
function getRafflePrizes() {
  var page = (0, import_kolmafia77.visitUrl)("raffle.php");
  return tuple(getRafflePrize("First", page), getRafflePrize("Second", page));
}
function currentTickets() {
  var _exec$1$replace, _exec;
  var page = (0, import_kolmafia77.visitUrl)("raffle.php");
  if (page.includes("You haven't bought any tickets for today's raffle.")) return 0;
  return Number((_exec$1$replace = (_exec = /You have purchased ([\d,]+) tickets for today's raffle/.exec(page)) === null || _exec === void 0 ? void 0 : _exec[1].replace(/,/g, "")) !== null && _exec$1$replace !== void 0 ? _exec$1$replace : 0);
}
function buyTicketsUpTo(quantity) {
  var current2 = currentTickets();
  var needed = Math.max(0, quantity - current2);
  (0, import_kolmafia77.cliExecute)("raffle ".concat(needed, " ").concat((0, import_kolmafia77.canInteract)() ? "inventory" : "storage"));
}
var import_kolmafia77;
var init_Raffle = __esm({
  "node_modules/libram/dist/resources/evergreen/Raffle.js": function() {
    import_kolmafia77 = require("kolmafia");
    init_utils();
  }
});

// node_modules/libram/dist/resources/2025/CyberRealm.js
var CyberRealm_exports = {};
__export(CyberRealm_exports, {
  available: function() {
    return available6;
  },
  have: function() {
    return have62;
  },
  zone3Rewards: function() {
    return zone3Rewards;
  }
});
function _taggedTemplateLiteral63(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have62() {
  return get("crAlways");
}
function available6() {
  return realmAvailable("cyber");
}
function zone3Rewards() {
  return ZONE_3_ITEMS_ARRAY[(0, import_kolmafia78.gamedayToInt)() % 8];
}
var import_kolmafia78, _templateObject481, _templateObject2125, _templateObject3109, _templateObject486, _templateObject546, _templateObject641, _templateObject737, _templateObject834, ZONE_3_ITEMS_ARRAY;
var init_CyberRealm = __esm({
  "node_modules/libram/dist/resources/2025/CyberRealm.js": function() {
    import_kolmafia78 = require("kolmafia");
    init_lib();
    init_dist();
    ZONE_3_ITEMS_ARRAY = [
      $item(_templateObject481 || (_templateObject481 = _taggedTemplateLiteral63(["dedigitizer schematic: virtual cybertattoo"]))),
      // Index 0 → Day 1
      $item(_templateObject2125 || (_templateObject2125 = _taggedTemplateLiteral63(["dedigitizer schematic: SLEEP(5) rom chip"]))),
      $item(_templateObject3109 || (_templateObject3109 = _taggedTemplateLiteral63(["dedigitizer schematic: insignificant bit"]))),
      $item(_templateObject486 || (_templateObject486 = _taggedTemplateLiteral63(["dedigitizer schematic: OVERCLOCK(10) rom chip"]))),
      $item(_templateObject546 || (_templateObject546 = _taggedTemplateLiteral63(["dedigitizer schematic: hashing vise"]))),
      $item(_templateObject641 || (_templateObject641 = _taggedTemplateLiteral63(["dedigitizer schematic: geofencing rapier"]))),
      $item(_templateObject737 || (_templateObject737 = _taggedTemplateLiteral63(["dedigitizer schematic: STATS+++ rom chip"]))),
      $item(_templateObject834 || (_templateObject834 = _taggedTemplateLiteral63(["dedigitizer schematic: geofencing shield"])))
    ];
  }
});

// node_modules/libram/dist/resources/2025/PeridotOfPeril.js
var PeridotOfPeril_exports = {};
__export(PeridotOfPeril_exports, {
  canImperil: function() {
    return canImperil;
  },
  getChoiceObject: function() {
    return getChoiceObject;
  },
  getChoiceProperty: function() {
    return getChoiceProperty;
  },
  have: function() {
    return have63;
  },
  periledToday: function() {
    return periledToday;
  },
  setChoice: function() {
    return setChoice;
  },
  zonesToday: function() {
    return zonesToday;
  }
});
function _taggedTemplateLiteral64(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have63() {
  return have(peridot);
}
function zonesToday() {
  return get("_perilLocations").split(",").filter(Boolean).map(function(id) {
    return (0, import_kolmafia79.toLocation)(Number(id));
  });
}
function periledToday(location7) {
  return RegExp("(?:^|,)".concat(location7.id, "(?:$|,)")).test(get("_perilLocations"));
}
function canImperil(location7) {
  return have63() && location7.wanderers && location7.combatPercent >= 0 && (0, import_kolmafia79.getMonsters)(location7).length > 0 && !periledToday(location7);
}
function getChoiceProperty(monster2) {
  return {
    choiceAdventure1557: toChoiceOption(monster2)
  };
}
function getChoiceObject(monster2) {
  return {
    1557: toChoiceOption(monster2)
  };
}
function setChoice(monster2) {
  (0, import_kolmafia79.setProperty)("choiceAdventure1557", toChoiceOption(monster2));
}
var import_kolmafia79, _templateObject487, peridot, toChoiceOption;
var init_PeridotOfPeril = __esm({
  "node_modules/libram/dist/resources/2025/PeridotOfPeril.js": function() {
    import_kolmafia79 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    peridot = $item(_templateObject487 || (_templateObject487 = _taggedTemplateLiteral64(["Peridot of Peril"])));
    toChoiceOption = function(m) {
      return "1&bandersnatch=".concat(m.id);
    };
  }
});

// node_modules/libram/dist/resources/2025/PrismaticBeret.js
var PrismaticBeret_exports = {};
__export(PrismaticBeret_exports, {
  buskAt: function() {
    return buskAt;
  },
  buskFor: function() {
    return buskFor;
  },
  findOptimalOutfitPower: function() {
    return findOptimalOutfitPower;
  },
  have: function() {
    return have64;
  }
});
function _createForOfIteratorHelper9(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t) {
    if (Array.isArray(r) || (t = _unsupportedIterableToArray32(r)) || e && r && "number" == typeof r.length) {
      t && (r = t);
      var _n = 0, F = function F2() {
      };
      return { s: F, n: function n() {
        return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
      }, e: function e2(r2) {
        throw r2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o, a = true, u = false;
  return { s: function s() {
    t = t.call(r);
  }, n: function n() {
    var r2 = t.next();
    return a = r2.done, r2;
  }, e: function e2(r2) {
    u = true, o = r2;
  }, f: function f() {
    try {
      a || null == t.return || t.return();
    } finally {
      if (u) throw o;
    }
  } };
}
function _toConsumableArray19(r) {
  return _arrayWithoutHoles19(r) || _iterableToArray19(r) || _unsupportedIterableToArray32(r) || _nonIterableSpread19();
}
function _nonIterableSpread19() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray19(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles19(r) {
  if (Array.isArray(r)) return _arrayLikeToArray32(r);
}
function _slicedToArray19(r, e) {
  return _arrayWithHoles19(r) || _iterableToArrayLimit19(r, e) || _unsupportedIterableToArray32(r, e) || _nonIterableRest19();
}
function _nonIterableRest19() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray32(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray32(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray32(r, a) : void 0;
  }
}
function _arrayLikeToArray32(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _iterableToArrayLimit19(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles19(r) {
  if (Array.isArray(r)) return r;
}
function _taggedTemplateLiteral65(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have64() {
  return have(beret);
}
function getUseableClothes() {
  var buyItems = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
  var availableItems = import_kolmafia80.Item.all().filter(function(i) {
    return (0, import_kolmafia80.canEquip)(i) && (have(i) || buyItems && (0, import_kolmafia80.npcPrice)(i) > 0);
  });
  var useableHats = have($familiar(_templateObject2126 || (_templateObject2126 = _taggedTemplateLiteral65(["Mad Hatrack"])))) ? [].concat(_toConsumableArray19(availableItems.filter(function(i) {
    return (0, import_kolmafia80.toSlot)(i) === $slot(_templateObject3115 || (_templateObject3115 = _taggedTemplateLiteral65(["hat"])));
  })), [$item.none]) : [beret];
  var useablePants = [].concat(_toConsumableArray19(availableItems.filter(function(i) {
    return (0, import_kolmafia80.toSlot)(i) === $slot(_templateObject489 || (_templateObject489 = _taggedTemplateLiteral65(["pants"])));
  })), [$item.none]);
  var useableShirts = [].concat(_toConsumableArray19(availableItems.filter(function(i) {
    return (0, import_kolmafia80.toSlot)(i) === $slot(_templateObject547 || (_templateObject547 = _taggedTemplateLiteral65(["shirt"])));
  })), [$item.none]);
  return {
    useableHats: useableHats,
    useablePants: useablePants,
    useableShirts: useableShirts
  };
}
function availablePowersums(_ref3) {
  var _ref3$buyItems = _ref3.buyItems, buyItems = _ref3$buyItems === void 0 ? true : _ref3$buyItems, _ref3$hammerTime = _ref3.hammerTime, hammerTime = _ref3$hammerTime === void 0 ? have($effect(_templateObject644 || (_templateObject644 = _taggedTemplateLiteral65(["Hammertime"])))) : _ref3$hammerTime;
  var tao = have($skill(_templateObject738 || (_templateObject738 = _taggedTemplateLiteral65(["Tao of the Terrapin"])))) ? 1 : 0;
  var hammer = hammerTime ? 3 : 0;
  var _getUseableClothes = getUseableClothes(buyItems), useableHats = _getUseableClothes.useableHats, useablePants = _getUseableClothes.useablePants, useableShirts = _getUseableClothes.useableShirts;
  var hatPowers = _toConsumableArray19(new Set(useableHats.map(function(i) {
    return (1 + tao) * (0, import_kolmafia80.getPower)(i);
  })));
  var pantPowers = _toConsumableArray19(new Set(useablePants.map(function(i) {
    return (1 + tao + hammer) * (0, import_kolmafia80.getPower)(i);
  })));
  var shirtPowers = _toConsumableArray19(new Set(useableShirts.map(function(i) {
    return (0, import_kolmafia80.getPower)(i);
  })));
  return _toConsumableArray19(new Set(hatPowers.flatMap(function(hat) {
    return pantPowers.flatMap(function(pant) {
      return shirtPowers.flatMap(function(shirt) {
        return hat + pant + shirt;
      });
    });
  })));
}
function scoreBusk(effects, effectValuer, uselessEffects) {
  var usefulEffects = effects.filter(function(_ref4) {
    var _ref5 = _slicedToArray19(_ref4, 1), effect2 = _ref5[0];
    return !uselessEffects.has(effect2);
  });
  return sum(usefulEffects, function(_ref6) {
    var _ref7 = _slicedToArray19(_ref6, 2), effect2 = _ref7[0], duration = _ref7[1];
    return valueEffect(effect2, duration, effectValuer);
  });
}
function findOptimalOutfitPower(effectValuer) {
  var _ref8 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, _ref8$buyItems = _ref8.buyItems, buyItems = _ref8$buyItems === void 0 ? true : _ref8$buyItems, _ref8$uselessEffects = _ref8.uselessEffects, uselessEffects = _ref8$uselessEffects === void 0 ? [] : _ref8$uselessEffects, _ref8$hammerTime = _ref8.hammerTime, hammerTime = _ref8$hammerTime === void 0 ? have($effect(_templateObject835 || (_templateObject835 = _taggedTemplateLiteral65(["Hammertime"])))) : _ref8$hammerTime;
  var buskUses = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : get("_beretBuskingUses");
  var uselessEffectSet = new Set(uselessEffects);
  var powersums = availablePowersums({
    buyItems: buyItems,
    hammerTime: hammerTime
  });
  if (!powersums.length) return 0;
  return maxBy(powersums, function(power) {
    return scoreBusk(Object.entries((0, import_kolmafia80.beretBuskingEffects)(power, buskUses)).map(function(_ref9) {
      var _ref0 = _slicedToArray19(_ref9, 2), effect2 = _ref0[0], duration = _ref0[1];
      return [(0, import_kolmafia80.toEffect)(effect2), duration];
    }).filter(function(_ref1) {
      var _ref10 = _slicedToArray19(_ref1, 1), e = _ref10[0];
      return e !== $effect.none;
    }), effectValuer, uselessEffectSet);
  });
}
function findOutfit(power, buyItems, hammerTime) {
  var _getUseableClothes2 = getUseableClothes(buyItems), useableHats = _getUseableClothes2.useableHats, useablePants = _getUseableClothes2.useablePants, useableShirts = _getUseableClothes2.useableShirts;
  var hatPowers = populateMap(useableHats, power, have($skill(_templateObject929 || (_templateObject929 = _taggedTemplateLiteral65(["Tao of the Terrapin"])))) ? 2 : 1);
  var pantsPowers = populateMap(useablePants, power, 1 + (have($skill(_templateObject024 || (_templateObject024 = _taggedTemplateLiteral65(["Tao of the Terrapin"])))) ? 1 : 0) + (hammerTime ? 3 : 0));
  var shirtPowers = populateMap(useableShirts, power, 1);
  var outfits = _toConsumableArray19(hatPowers).flatMap(function(_ref11) {
    var _ref12 = _slicedToArray19(_ref11, 2), hatPower = _ref12[0], hat = _ref12[1];
    return _toConsumableArray19(pantsPowers).flatMap(function(_ref13) {
      var _ref14 = _slicedToArray19(_ref13, 2), pantsPower = _ref14[0], pants2 = _ref14[1];
      return _toConsumableArray19(shirtPowers).flatMap(function(_ref15) {
        var _ref16 = _slicedToArray19(_ref15, 2), shirtPower = _ref16[0], shirt = _ref16[1];
        return hatPower + pantsPower + shirtPower === power ? {
          hat: hat,
          pants: pants2,
          shirt: shirt
        } : [];
      });
    });
  });
  if (!outfits.length) return null;
  var outfit2 = maxBy(outfits, outfitPrice, true);
  logger_default.debug("Chose outfit ".concat(outfit2.hat, " ").concat(outfit2.shirt, " ").concat(outfit2.pants));
  if (outfitPrice(outfit2) > (0, import_kolmafia80.myMeat)()) return null;
  var _iterator2 = _createForOfIteratorHelper9(relevantSlots), _step2;
  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
      var slot = _step2.value;
      var item15 = outfit2[slot];
      if (item15 === import_kolmafia80.Item.none) continue;
      if (have(item15)) continue;
      if (!(0, import_kolmafia80.buy)(item15)) {
        logger_default.debug("Failed to purchase ".concat(item15));
        return null;
      }
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
  return outfit2;
}
function buskAt(power) {
  var _ref17 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, _ref17$buyItems = _ref17.buyItems, buyItems = _ref17$buyItems === void 0 ? true : _ref17$buyItems, _ref17$hammerTime = _ref17.hammerTime, hammerTime = _ref17$hammerTime === void 0 ? have($effect(_templateObject1109 || (_templateObject1109 = _taggedTemplateLiteral65(["Hammertime"])))) : _ref17$hammerTime;
  if (!have64()) return false;
  var initialUses = get("_beretBuskingUses");
  if (initialUses >= 5) return false;
  var outfit2 = findOutfit(power, buyItems, hammerTime);
  if (!outfit2) return false;
  var initialEquips = $slots(_templateObject1023 || (_templateObject1023 = _taggedTemplateLiteral65(["hat, shirt, pants"]))).map(function(slot) {
    return (0, import_kolmafia80.equippedItem)(slot);
  });
  var initialFamiliar = (0, import_kolmafia80.myFamiliar)();
  var initialFamequip = (0, import_kolmafia80.equippedItem)($slot(_templateObject1123 || (_templateObject1123 = _taggedTemplateLiteral65(["familiar"]))));
  var hat = outfit2.hat, pants2 = outfit2.pants, shirt = outfit2.shirt;
  (0, import_kolmafia80.equip)($slot(_templateObject1221 || (_templateObject1221 = _taggedTemplateLiteral65(["hat"]))), hat);
  if (hat !== beret) {
    (0, import_kolmafia80.useFamiliar)($familiar(_templateObject1320 || (_templateObject1320 = _taggedTemplateLiteral65(["Mad Hatrack"]))));
    (0, import_kolmafia80.equip)($slot(_templateObject1419 || (_templateObject1419 = _taggedTemplateLiteral65(["familiar"]))), beret);
  }
  (0, import_kolmafia80.equip)($slot(_templateObject1518 || (_templateObject1518 = _taggedTemplateLiteral65(["shirt"]))), shirt);
  (0, import_kolmafia80.equip)($slot(_templateObject1618 || (_templateObject1618 = _taggedTemplateLiteral65(["pants"]))), pants2);
  var taoMultiplier = have($skill(_templateObject1715 || (_templateObject1715 = _taggedTemplateLiteral65(["Tao of the Terrapin"])))) ? 2 : 1;
  try {
    if (taoMultiplier * ((0, import_kolmafia80.getPower)((0, import_kolmafia80.equippedItem)($slot(_templateObject1815 || (_templateObject1815 = _taggedTemplateLiteral65(["hat"]))))) + (0, import_kolmafia80.getPower)((0, import_kolmafia80.equippedItem)($slot(_templateObject1915 || (_templateObject1915 = _taggedTemplateLiteral65(["pants"])))))) + (0, import_kolmafia80.getPower)((0, import_kolmafia80.equippedItem)($slot(_templateObject2014 || (_templateObject2014 = _taggedTemplateLiteral65(["shirt"]))))) !== power) {
      return false;
    }
    (0, import_kolmafia80.useSkill)($skill(_templateObject2127 || (_templateObject2127 = _taggedTemplateLiteral65(["Beret Busking"]))));
    return initialUses !== get("_beretBuskingUses");
  } finally {
    $slots(_templateObject2217 || (_templateObject2217 = _taggedTemplateLiteral65(["hat, shirt, pants"]))).forEach(function(slot, index) {
      return (0, import_kolmafia80.equip)(slot, initialEquips[index]);
    });
    if (initialFamiliar !== $familiar(_templateObject2316 || (_templateObject2316 = _taggedTemplateLiteral65(["Mad Hatrack"]))) && (0, import_kolmafia80.myFamiliar)() === $familiar(_templateObject2414 || (_templateObject2414 = _taggedTemplateLiteral65(["Mad Hatrack"])))) {
      unequip($slot(_templateObject2513 || (_templateObject2513 = _taggedTemplateLiteral65(["familiar"]))));
    }
    (0, import_kolmafia80.useFamiliar)(initialFamiliar);
    (0, import_kolmafia80.equip)($slot(_templateObject2612 || (_templateObject2612 = _taggedTemplateLiteral65(["familiar"]))), initialFamequip);
  }
}
function buskFor(effectValuer) {
  var _ref18 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, _ref18$buyItems = _ref18.buyItems, buyItems = _ref18$buyItems === void 0 ? true : _ref18$buyItems, _ref18$uselessEffects = _ref18.uselessEffects, uselessEffects = _ref18$uselessEffects === void 0 ? [] : _ref18$uselessEffects;
  var outfitPower = findOptimalOutfitPower(effectValuer, {
    buyItems: buyItems,
    uselessEffects: uselessEffects
  }, get("_beretBuskingUses"));
  return buskAt(outfitPower, {
    buyItems: buyItems
  });
}
var import_kolmafia80, _templateObject488, _templateObject2126, _templateObject3115, _templateObject489, _templateObject547, _templateObject644, _templateObject738, _templateObject835, _templateObject929, _templateObject024, _templateObject1109, _templateObject1023, _templateObject1123, _templateObject1221, _templateObject1320, _templateObject1419, _templateObject1518, _templateObject1618, _templateObject1715, _templateObject1815, _templateObject1915, _templateObject2014, _templateObject2127, _templateObject2217, _templateObject2316, _templateObject2414, _templateObject2513, _templateObject2612, beret, valueEffect, populateMap, relevantSlots, functionalPrice, outfitPrice;
var init_PrismaticBeret = __esm({
  "node_modules/libram/dist/resources/2025/PrismaticBeret.js": function() {
    import_kolmafia80 = require("kolmafia");
    init_lib();
    init_template_string();
    init_utils();
    init_logger();
    init_property();
    beret = $item(_templateObject488 || (_templateObject488 = _taggedTemplateLiteral65(["prismatic beret"])));
    valueEffect = function(effect2, duration, valuer) {
      return typeof valuer === "function" ? valuer(effect2, duration) : Array.isArray(valuer) ? Number(valuer.includes(effect2)) * duration : sum(Object.entries(valuer), function(_ref) {
        var _ref2 = _slicedToArray19(_ref, 2), modifier = _ref2[0], weight = _ref2[1];
        return weight * (0, import_kolmafia80.numericModifier)(effect2, modifier);
      });
    };
    populateMap = function(arr, max, multiplier) {
      var map = /* @__PURE__ */ new Map();
      var _iterator = _createForOfIteratorHelper9(arr), _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var it = _step.value;
          var power = (0, import_kolmafia80.getPower)(it) * multiplier;
          if (power > max) continue;
          var existing = map.get(power);
          if (!existing || !have(existing) && (have(it) || (0, import_kolmafia80.npcPrice)(it) < (0, import_kolmafia80.npcPrice)(existing))) {
            map.set(power, it);
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      return map;
    };
    relevantSlots = ["hat", "pants", "shirt"];
    functionalPrice = function(item15) {
      return have(item15) || item15 === import_kolmafia80.Item.none ? 0 : (0, import_kolmafia80.npcPrice)(item15);
    };
    outfitPrice = function(outfit2) {
      return sum(relevantSlots, function(slot) {
        return functionalPrice(outfit2[slot]);
      });
    };
  }
});

// node_modules/libram/dist/resources/putty-likes.js
function getTotalPuttyLikeCopiesMade() {
  return getSpookyPuttySheetCopiesMade() + getRainDohBlackBoxCopiesMade();
}
function couldUseRainDohBlackBox() {
  return have9() && getRainDohBlackBoxCopiesMade() < 5 && getTotalPuttyLikeCopiesMade() < 6;
}
function couldUseSpookyPuttySheet() {
  return have7() && getSpookyPuttySheetCopiesMade() < 5 && getTotalPuttyLikeCopiesMade() < 6;
}
var RainDohBlackBox, SpookyPuttySheet;
var init_putty_likes = __esm({
  "node_modules/libram/dist/resources/putty-likes.js": function() {
    init_Copier();
    init_SpookyPutty();
    init_RainDoh();
    RainDohBlackBox = new Copier(function() {
      return couldUseRainDohBlackBox();
    }, null, function() {
      return couldUseRainDohBlackBox();
    }, function() {
      return getRainDohBlackBoxMonster();
    }, function() {
      return useRainDohBlackBox();
    });
    SpookyPuttySheet = new Copier(function() {
      return couldUseSpookyPuttySheet();
    }, function() {
      return prepareSpookyPuttySheet();
    }, function() {
      return couldUseSpookyPuttySheet();
    }, function() {
      return getSpookyPuttySheetMonster();
    }, function() {
      return useSpookyPuttySheet();
    });
  }
});

// node_modules/libram/dist/resources/2007/CandyHearts.js
function _taggedTemplateLiteral66(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have65() {
  return have(summonSkill);
}
function expected() {
  return libramExpected;
}
var _templateObject490, _templateObject2128, _templateObject3116, _templateObject491, _templateObject548, _templateObject645, _templateObject739, summonSkill, libramChance, libramExpected;
var init_CandyHearts = __esm({
  "node_modules/libram/dist/resources/2007/CandyHearts.js": function() {
    init_lib();
    init_template_string();
    summonSkill = $skill(_templateObject490 || (_templateObject490 = _taggedTemplateLiteral66(["Summon Candy Heart"])));
    libramChance = 1 / 6;
    libramExpected = /* @__PURE__ */ new Map([[$item(_templateObject2128 || (_templateObject2128 = _taggedTemplateLiteral66(["green candy heart"]))), libramChance], [$item(_templateObject3116 || (_templateObject3116 = _taggedTemplateLiteral66(["lavender candy heart"]))), libramChance], [$item(_templateObject491 || (_templateObject491 = _taggedTemplateLiteral66(["orange candy heart"]))), libramChance], [$item(_templateObject548 || (_templateObject548 = _taggedTemplateLiteral66(["pink candy heart"]))), libramChance], [$item(_templateObject645 || (_templateObject645 = _taggedTemplateLiteral66(["white candy heart"]))), libramChance], [$item(_templateObject739 || (_templateObject739 = _taggedTemplateLiteral66(["yellow candy heart"]))), libramChance]]);
  }
});

// node_modules/libram/dist/resources/2008/DivineFavors.js
function _taggedTemplateLiteral67(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have66() {
  return have(summonSkill2);
}
function expected2() {
  var rareSummons = get("_favorRareSummons");
  var totalRareChance = 1 / Math.pow(2, rareSummons + 1);
  var commonChance2 = (1 - totalRareChance) / 3;
  var rareChance2 = totalRareChance / 3;
  return /* @__PURE__ */ new Map([[$item(_templateObject2129 || (_templateObject2129 = _taggedTemplateLiteral67(["divine blowout"]))), commonChance2], [$item(_templateObject3117 || (_templateObject3117 = _taggedTemplateLiteral67(["divine can of silly string"]))), commonChance2], [$item(_templateObject496 || (_templateObject496 = _taggedTemplateLiteral67(["divine noisemaker"]))), commonChance2], [$item(_templateObject549 || (_templateObject549 = _taggedTemplateLiteral67(["divine champagne flute"]))), rareChance2], [$item(_templateObject646 || (_templateObject646 = _taggedTemplateLiteral67(["divine champagne popper"]))), rareChance2], [$item(_templateObject740 || (_templateObject740 = _taggedTemplateLiteral67(["divine cracker"]))), rareChance2]]);
}
var _templateObject495, _templateObject2129, _templateObject3117, _templateObject496, _templateObject549, _templateObject646, _templateObject740, summonSkill2;
var init_DivineFavors = __esm({
  "node_modules/libram/dist/resources/2008/DivineFavors.js": function() {
    init_lib();
    init_property();
    init_template_string();
    summonSkill2 = $skill(_templateObject495 || (_templateObject495 = _taggedTemplateLiteral67(["Summon Party Favor"])));
  }
});

// node_modules/libram/dist/resources/2009/LoveSongs.js
function _taggedTemplateLiteral68(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have67() {
  return have(summonSkill3);
}
function expected3() {
  return libramExpected2;
}
var _templateObject497, _templateObject2130, _templateObject3118, _templateObject498, _templateObject550, _templateObject647, _templateObject741, summonSkill3, libramChance2, libramExpected2;
var init_LoveSongs = __esm({
  "node_modules/libram/dist/resources/2009/LoveSongs.js": function() {
    init_lib();
    init_template_string();
    summonSkill3 = $skill(_templateObject497 || (_templateObject497 = _taggedTemplateLiteral68(["Summon Love Song"])));
    libramChance2 = 1 / 6;
    libramExpected2 = /* @__PURE__ */ new Map([[$item(_templateObject2130 || (_templateObject2130 = _taggedTemplateLiteral68(["love song of disturbing obsession"]))), libramChance2], [$item(_templateObject3118 || (_templateObject3118 = _taggedTemplateLiteral68(["love song of icy revenge"]))), libramChance2], [$item(_templateObject498 || (_templateObject498 = _taggedTemplateLiteral68(["love song of naughty innuendo"]))), libramChance2], [$item(_templateObject550 || (_templateObject550 = _taggedTemplateLiteral68(["love song of smoldering passion"]))), libramChance2], [$item(_templateObject647 || (_templateObject647 = _taggedTemplateLiteral68(["love song of sugary cuteness"]))), libramChance2], [$item(_templateObject741 || (_templateObject741 = _taggedTemplateLiteral68(["love song of vague ambiguity"]))), libramChance2]]);
  }
});

// node_modules/libram/dist/resources/2010/Brickos.js
function _taggedTemplateLiteral69(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have68() {
  return have(summonSkill4);
}
function expected4() {
  var eyeSummons = get("_brickoEyeSummons");
  var eyeChance = eyeSummons === 3 ? 0 : eyeSummons === 0 ? 0.5 : 1 / 3;
  return /* @__PURE__ */ new Map([[$item(_templateObject2131 || (_templateObject2131 = _taggedTemplateLiteral69(["BRICKO eye brick"]))), eyeChance], [$item(_templateObject3119 || (_templateObject3119 = _taggedTemplateLiteral69(["BRICKO brick"]))), 3 - eyeChance]]);
}
var _templateObject499, _templateObject2131, _templateObject3119, summonSkill4;
var init_Brickos = __esm({
  "node_modules/libram/dist/resources/2010/Brickos.js": function() {
    init_lib();
    init_property();
    init_template_string();
    summonSkill4 = $skill(_templateObject499 || (_templateObject499 = _taggedTemplateLiteral69(["Summon BRICKOs"])));
  }
});

// node_modules/libram/dist/resources/2011/Gygaxian.js
function _taggedTemplateLiteral70(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have69() {
  return have(summonSkill5);
}
function expected5() {
  return libramExpected3;
}
var _templateObject500, _templateObject2132, _templateObject3120, _templateObject4100, _templateObject551, _templateObject648, _templateObject744, summonSkill5, libramChance3, libramExpected3;
var init_Gygaxian = __esm({
  "node_modules/libram/dist/resources/2011/Gygaxian.js": function() {
    init_lib();
    init_template_string();
    summonSkill5 = $skill(_templateObject500 || (_templateObject500 = _taggedTemplateLiteral70(["Summon Dice"])));
    libramChance3 = 1 / 6;
    libramExpected3 = /* @__PURE__ */ new Map([[$item(_templateObject2132 || (_templateObject2132 = _taggedTemplateLiteral70(["d4"]))), libramChance3], [$item(_templateObject3120 || (_templateObject3120 = _taggedTemplateLiteral70(["d6"]))), libramChance3], [$item(_templateObject4100 || (_templateObject4100 = _taggedTemplateLiteral70(["d8"]))), libramChance3], [$item(_templateObject551 || (_templateObject551 = _taggedTemplateLiteral70(["d10"]))), libramChance3], [$item(_templateObject648 || (_templateObject648 = _taggedTemplateLiteral70(["d12"]))), libramChance3], [$item(_templateObject744 || (_templateObject744 = _taggedTemplateLiteral70(["d20"]))), libramChance3]]);
  }
});

// node_modules/libram/dist/resources/2012/Resolutions.js
function _taggedTemplateLiteral71(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have70() {
  return have(summonSkill6);
}
function expected6() {
  return libramExpected4;
}
var _templateObject501, _templateObject2133, _templateObject3121, _templateObject4101, _templateObject554, _templateObject649, _templateObject745, _templateObject836, _templateObject930, _templateObject025, summonSkill6, commonChance, rareChance, libramExpected4;
var init_Resolutions = __esm({
  "node_modules/libram/dist/resources/2012/Resolutions.js": function() {
    init_lib();
    init_template_string();
    summonSkill6 = $skill(_templateObject501 || (_templateObject501 = _taggedTemplateLiteral71(["Summon Resolutions"])));
    commonChance = 0.98 / 6;
    rareChance = 0.02 / 3;
    libramExpected4 = /* @__PURE__ */ new Map([[$item(_templateObject2133 || (_templateObject2133 = _taggedTemplateLiteral71(["resolution: be feistier"]))), commonChance], [$item(_templateObject3121 || (_templateObject3121 = _taggedTemplateLiteral71(["resolution: be happier"]))), commonChance], [$item(_templateObject4101 || (_templateObject4101 = _taggedTemplateLiteral71(["resolution: be sexier"]))), commonChance], [$item(_templateObject554 || (_templateObject554 = _taggedTemplateLiteral71(["resolution: be smarter"]))), commonChance], [$item(_templateObject649 || (_templateObject649 = _taggedTemplateLiteral71(["resolution: be stronger"]))), commonChance], [$item(_templateObject745 || (_templateObject745 = _taggedTemplateLiteral71(["resolution: be wealthier"]))), commonChance], [$item(_templateObject836 || (_templateObject836 = _taggedTemplateLiteral71(["resolution: be kinder"]))), rareChance], [$item(_templateObject930 || (_templateObject930 = _taggedTemplateLiteral71(["resolution: be luckier"]))), rareChance], [$item(_templateObject025 || (_templateObject025 = _taggedTemplateLiteral71(["resolution: be more adventurous"]))), rareChance]]);
  }
});

// node_modules/libram/dist/resources/2013/PulledTaffy.js
function _taggedTemplateLiteral72(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function have71() {
  return have(summonSkill7);
}
function expected7() {
  var rareSummons = get("_taffyRareSummons");
  var yellowSummons = get("_taffyYellowSummons");
  var onlyYellow = yellowSummons === 0 && rareSummons === 3;
  var totalRareChance = rareSummons < 4 ? 1 / Math.pow(2, rareSummons + 1) : 0;
  var commonChance2 = (1 - totalRareChance) / 4;
  var rareChance2 = onlyYellow ? 0 : totalRareChance / (3 - get("_taffyYellowSummons"));
  var yellowChance = yellowSummons === 1 ? 0 : onlyYellow ? totalRareChance : rareChance2;
  return /* @__PURE__ */ new Map([[$item(_templateObject2134 || (_templateObject2134 = _taggedTemplateLiteral72(["pulled blue taffy"]))), commonChance2], [$item(_templateObject3122 || (_templateObject3122 = _taggedTemplateLiteral72(["pulled orange taffy"]))), commonChance2], [$item(_templateObject4102 || (_templateObject4102 = _taggedTemplateLiteral72(["pulled violet taffy"]))), commonChance2], [$item(_templateObject555 || (_templateObject555 = _taggedTemplateLiteral72(["pulled red taffy"]))), commonChance2], [$item(_templateObject650 || (_templateObject650 = _taggedTemplateLiteral72(["pulled indigo taffy"]))), rareChance2], [$item(_templateObject746 || (_templateObject746 = _taggedTemplateLiteral72(["pulled green taffy"]))), rareChance2], [$item(_templateObject837 || (_templateObject837 = _taggedTemplateLiteral72(["pulled yellow taffy"]))), yellowChance]]);
}
var _templateObject505, _templateObject2134, _templateObject3122, _templateObject4102, _templateObject555, _templateObject650, _templateObject746, _templateObject837, summonSkill7;
var init_PulledTaffy = __esm({
  "node_modules/libram/dist/resources/2013/PulledTaffy.js": function() {
    init_lib();
    init_property();
    init_template_string();
    summonSkill7 = $skill(_templateObject505 || (_templateObject505 = _taggedTemplateLiteral72(["Summon Taffy"])));
  }
});

// node_modules/libram/dist/resources/LibramSummon.js
function _slicedToArray20(r, e) {
  return _arrayWithHoles20(r) || _iterableToArrayLimit20(r, e) || _unsupportedIterableToArray33(r, e) || _nonIterableRest20();
}
function _nonIterableRest20() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray33(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray33(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray33(r, a) : void 0;
  }
}
function _arrayLikeToArray33(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _iterableToArrayLimit20(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles20(r) {
  if (Array.isArray(r)) return r;
}
function _taggedTemplateLiteral73(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function expectedLibramSummon(summonSkill8) {
  switch (summonSkill8) {
    case $skill(_templateObject506 || (_templateObject506 = _taggedTemplateLiteral73(["Summon Candy Heart"]))):
      return expected();
    case $skill(_templateObject2135 || (_templateObject2135 = _taggedTemplateLiteral73(["Summon Party Favor"]))):
      return expected2();
    case $skill(_templateObject3123 || (_templateObject3123 = _taggedTemplateLiteral73(["Summon Love Song"]))):
      return expected3();
    case $skill(_templateObject4103 || (_templateObject4103 = _taggedTemplateLiteral73(["Summon BRICKOs"]))):
      return expected4();
    case $skill(_templateObject556 || (_templateObject556 = _taggedTemplateLiteral73(["Summon Dice"]))):
      return expected5();
    case $skill(_templateObject651 || (_templateObject651 = _taggedTemplateLiteral73(["Summon Resolutions"]))):
      return expected6();
    case $skill(_templateObject747 || (_templateObject747 = _taggedTemplateLiteral73(["Summon Taffy"]))):
      return expected7();
  }
  return /* @__PURE__ */ new Map();
}
function possibleLibramSummons() {
  var results = /* @__PURE__ */ new Map();
  if (have65()) {
    results.set($skill(_templateObject838 || (_templateObject838 = _taggedTemplateLiteral73(["Summon Candy Heart"]))), expected());
  }
  if (have66()) {
    results.set($skill(_templateObject931 || (_templateObject931 = _taggedTemplateLiteral73(["Summon Party Favor"]))), expected2());
  }
  if (have67()) {
    results.set($skill(_templateObject026 || (_templateObject026 = _taggedTemplateLiteral73(["Summon Love Song"]))), expected3());
  }
  if (have68()) {
    results.set($skill(_templateObject1124 || (_templateObject1124 = _taggedTemplateLiteral73(["Summon BRICKOs"]))), expected4());
  }
  if (have69()) {
    results.set($skill(_templateObject1024 || (_templateObject1024 = _taggedTemplateLiteral73(["Summon Dice"]))), expected5());
  }
  if (have70()) {
    results.set($skill(_templateObject1125 || (_templateObject1125 = _taggedTemplateLiteral73(["Summon Resolutions"]))), expected6());
  }
  if (have71()) {
    results.set($skill(_templateObject1222 || (_templateObject1222 = _taggedTemplateLiteral73(["Summon Taffy"]))), expected7());
  }
  return results;
}
function bestLibramToCast() {
  var arr = Array.from(possibleLibramSummons().entries());
  if (!arr.length) return null;
  return maxBy(arr, function(_ref) {
    var _ref2 = _slicedToArray20(_ref, 2), itemMap = _ref2[1];
    return sum(Array.from(itemMap.entries()), function(_ref3) {
      var _ref4 = _slicedToArray20(_ref3, 2), item15 = _ref4[0], weight = _ref4[1];
      return weight * getSaleValue(item15);
    });
  })[0];
}
var _templateObject506, _templateObject2135, _templateObject3123, _templateObject4103, _templateObject556, _templateObject651, _templateObject747, _templateObject838, _templateObject931, _templateObject026, _templateObject1124, _templateObject1024, _templateObject1125, _templateObject1222;
var init_LibramSummon = __esm({
  "node_modules/libram/dist/resources/LibramSummon.js": function() {
    init_lib();
    init_template_string();
    init_utils();
    init_CandyHearts();
    init_DivineFavors();
    init_LoveSongs();
    init_Brickos();
    init_Gygaxian();
    init_Resolutions();
    init_PulledTaffy();
  }
});

// node_modules/libram/dist/resources/index.js
var init_resources = __esm({
  "node_modules/libram/dist/resources/index.js": function() {
    init_CommaChameleon();
    init_Stickers();
    init_Bandersnatch();
    init_SpookyPutty();
    init_CrownOfThrones();
    init_LookingGlass();
    init_ObtuseAngel();
    init_StompingBoots();
    init_RainDoh();
    init_ReagnimatedGnome();
    init_Florist();
    init_JungMan();
    init_ConspiracyIsland();
    init_CrimboShrub();
    init_DNALab();
    init_WinterGarden();
    init_BarrelShrine();
    init_ChateauMantegna();
    init_DeckOfEveryCard();
    init_Dinseylandfill();
    init_MayoClinic();
    init_GingerBread();
    init_SourceTerminal();
    init_Witchess();
    init_AsdonMartin();
    init_Horsery();
    init_MummingTrunk();
    init_Pantogram();
    init_Robortender();
    init_Spacegate();
    init_TunnelOfLove();
    init_BoxingDaycare();
    init_LatteLoversMembersMug();
    init_SongBoom();
    init_BeachComb();
    init_CampAway();
    init_PocketProfessor();
    init_Snapper();
    init_Cartography();
    init_Guzzlr();
    init_RetroCape();
    init_CrystalBall();
    init_DaylightShavings();
    init_AutumnAton();
    init_CombatLoversLocket();
    init_DesignerSweatpants();
    init_GreyGoose();
    init_JuneCleaver();
    init_TrainSet();
    init_Stillsuit();
    init_AugustScepter();
    init_BurningLeaves();
    init_CinchoDeMayo();
    init_ClosedCircuitPayphone();
    init_CursedMonkeyPaw();
    init_AprilingBandHelmet();
    init_ChestMimic();
    init_MayamCalendar();
    init_TearawayPants();
    init_BatWings();
    init_EverfullDarts();
    init_TakerSpace();
    init_CrepeParachute();
    init_ToyCupidBow();
    init_Leprecondo();
    init_Raffle();
    init_CyberRealm();
    init_PeridotOfPeril();
    init_PrismaticBeret();
    init_putty_likes();
    init_LibramSummon();
  }
});

// node_modules/libram/dist/ascend.js
function _typeof19(o) {
  "@babel/helpers - typeof";
  return _typeof19 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof19(o);
}
function _createForOfIteratorHelper10(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t) {
    if (Array.isArray(r) || (t = _unsupportedIterableToArray34(r)) || e && r && "number" == typeof r.length) {
      t && (r = t);
      var _n = 0, F = function F2() {
      };
      return { s: F, n: function n() {
        return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
      }, e: function e2(r2) {
        throw r2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o, a = true, u = false;
  return { s: function s() {
    t = t.call(r);
  }, n: function n() {
    var r2 = t.next();
    return a = r2.done, r2;
  }, e: function e2(r2) {
    u = true, o = r2;
  }, f: function f() {
    try {
      a || null == t.return || t.return();
    } finally {
      if (u) throw o;
    }
  } };
}
function _toConsumableArray20(r) {
  return _arrayWithoutHoles20(r) || _iterableToArray20(r) || _unsupportedIterableToArray34(r) || _nonIterableSpread20();
}
function _nonIterableSpread20() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray20(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles20(r) {
  if (Array.isArray(r)) return _arrayLikeToArray34(r);
}
function ownKeys10(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread10(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys10(Object(t), true).forEach(function(r2) {
      _defineProperty18(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys10(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _taggedTemplateLiteral74(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function _defineProperty18(e, r, t) {
  return (r = _toPropertyKey19(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
}
function _defineProperties12(e, r) {
  for (var t = 0; t < r.length; t++) {
    var o = r[t];
    o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e, _toPropertyKey19(o.key), o);
  }
}
function _createClass12(e, r, t) {
  return r && _defineProperties12(e.prototype, r), t && _defineProperties12(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
}
function _toPropertyKey19(t) {
  var i = _toPrimitive19(t, "string");
  return "symbol" == _typeof19(i) ? i : i + "";
}
function _toPrimitive19(t, r) {
  if ("object" != _typeof19(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof19(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _classCallCheck12(a, n) {
  if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _callSuper3(t, o, e) {
  return o = _getPrototypeOf3(o), _possibleConstructorReturn3(t, _isNativeReflectConstruct3() ? Reflect.construct(o, e || [], _getPrototypeOf3(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn3(t, e) {
  if (e && ("object" == _typeof19(e) || "function" == typeof e)) return e;
  if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
  return _assertThisInitialized3(t);
}
function _assertThisInitialized3(e) {
  if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e;
}
function _inherits3(t, e) {
  if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
  t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: true, configurable: true } }), Object.defineProperty(t, "prototype", { writable: false }), e && _setPrototypeOf3(t, e);
}
function _wrapNativeSuper3(t) {
  var r = "function" == typeof Map ? /* @__PURE__ */ new Map() : void 0;
  return _wrapNativeSuper3 = function _wrapNativeSuper5(t2) {
    if (null === t2 || !_isNativeFunction3(t2)) return t2;
    if ("function" != typeof t2) throw new TypeError("Super expression must either be null or a function");
    if (void 0 !== r) {
      if (r.has(t2)) return r.get(t2);
      r.set(t2, Wrapper);
    }
    function Wrapper() {
      return _construct3(t2, arguments, _getPrototypeOf3(this).constructor);
    }
    return Wrapper.prototype = Object.create(t2.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }), _setPrototypeOf3(Wrapper, t2);
  }, _wrapNativeSuper3(t);
}
function _construct3(t, e, r) {
  if (_isNativeReflectConstruct3()) return Reflect.construct.apply(null, arguments);
  var o = [null];
  o.push.apply(o, e);
  var p = new (t.bind.apply(t, o))();
  return r && _setPrototypeOf3(p, r.prototype), p;
}
function _isNativeReflectConstruct3() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct3 = function _isNativeReflectConstruct10() {
    return !!t;
  })();
}
function _isNativeFunction3(t) {
  try {
    return -1 !== Function.toString.call(t).indexOf("[native code]");
  } catch (n) {
    return "function" == typeof t;
  }
}
function _setPrototypeOf3(t, e) {
  return _setPrototypeOf3 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t2, e2) {
    return t2.__proto__ = e2, t2;
  }, _setPrototypeOf3(t, e);
}
function _getPrototypeOf3(t) {
  return _getPrototypeOf3 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t2) {
    return t2.__proto__ || Object.getPrototypeOf(t2);
  }, _getPrototypeOf3(t);
}
function _slicedToArray21(r, e) {
  return _arrayWithHoles21(r) || _iterableToArrayLimit21(r, e) || _unsupportedIterableToArray34(r, e) || _nonIterableRest21();
}
function _nonIterableRest21() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray34(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray34(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray34(r, a) : void 0;
  }
}
function _arrayLikeToArray34(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _iterableToArrayLimit21(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles21(r) {
  if (Array.isArray(r)) return r;
}
function permedSkills() {
  return new Map(Array.from(Object.entries((0, import_kolmafia81.getPermedSkills)())).map(function(_ref) {
    var _ref2 = _slicedToArray21(_ref, 2), skillName = _ref2[0], isHardcore = _ref2[1];
    return [(0, import_kolmafia81.toSkill)(skillName), isHardcore ? Lifestyle.hardcore : Lifestyle.softcore];
  }));
}
function inputToMoonId(moon, playerClass) {
  if (typeof moon === "number") return moon;
  var offset = function() {
    switch (playerClass.primestat) {
      case $stat(_templateObject507 || (_templateObject507 = _taggedTemplateLiteral74(["Muscle"]))):
        return 0;
      case $stat(_templateObject2136 || (_templateObject2136 = _taggedTemplateLiteral74(["Mysticality"]))):
        return 1;
      case $stat(_templateObject3124 || (_templateObject3124 = _taggedTemplateLiteral74(["Moxie"]))):
        return 2;
      default:
        throw new AscendError("unknown prime stat for ".concat(playerClass));
    }
  };
  var fromNormalInput = signNameToId(tc(moon));
  if (fromNormalInput > 0) return fromNormalInput;
  switch (moon.toLowerCase()) {
    case "degrassi":
    case "degrassi knoll":
    case "friendly degrassi knoll":
    case "knoll":
      return 1 + offset();
    case "canada":
    case "canadia":
    case "little canadia":
      return 4 + offset();
    case "gnomads":
    case "gnomish":
    case "gnomish gnomads camp":
      return 7 + offset();
    default:
      throw new AscendError("Invalid moon sign!");
  }
}
function isInValhalla() {
  var charPaneText = (0, import_kolmafia81.visitUrl)("charpane.php");
  var matches = charPaneText.match(/<img src="[^"]*\/otherimages\/inf_\w+\.gif">/);
  return matches !== null;
}
function ascend(options) {
  var _permOptions$permSkil, _permOptions$permSkil2;
  var DEFAULT_OPTIONS = {
    kolGender: get("defaultGenderOverride", "female") === "male" ? KolGender.male : KolGender.female,
    consumable: $item(_templateObject4104 || (_templateObject4104 = _taggedTemplateLiteral74(["astral six-pack"]))),
    pet: $item(_templateObject557 || (_templateObject557 = _taggedTemplateLiteral74(["none"])))
  };
  var prunedOptions = Object.fromEntries(Object.entries(options).filter(function(_ref3) {
    var _ref4 = _slicedToArray21(_ref3, 2), value = _ref4[1];
    return value;
  }));
  var _DEFAULT_OPTIONS$prun = _objectSpread10(_objectSpread10({}, DEFAULT_OPTIONS), prunedOptions), path3 = _DEFAULT_OPTIONS$prun.path, playerClass = _DEFAULT_OPTIONS$prun.playerClass, lifestyle = _DEFAULT_OPTIONS$prun.lifestyle, kolGender = _DEFAULT_OPTIONS$prun.kolGender, moon = _DEFAULT_OPTIONS$prun.moon, consumable = _DEFAULT_OPTIONS$prun.consumable, pet = _DEFAULT_OPTIONS$prun.pet, permOptions = _DEFAULT_OPTIONS$prun.permOptions;
  if (playerClass.path !== (path3.avatar ? path3 : import_kolmafia81.Path.none)) {
    throw new AscendError("Invalid class ".concat(playerClass, " for this path!"));
  }
  if (path3.id < 0) throw new AscendError("Invalid path: ".concat(path3, "!"));
  var moonId = inputToMoonId(moon, playerClass);
  if (moonId < 1 || moonId > 9) throw new Error("Invalid moon ".concat(moon));
  if (!$items(_templateObject654 || (_templateObject654 = _taggedTemplateLiteral74(["none, astral six-pack, astral hot dog dinner, [10882]carton of astral energy drinks"]))).includes(consumable)) {
    throw new AscendError("Invalid astral consumable: ".concat(consumable));
  }
  if (!$items(_templateObject748 || (_templateObject748 = _taggedTemplateLiteral74(["none, astral bludgeon, astral shield, astral chapeau, astral bracer, astral longbow, astral shorts, astral mace, astral trousers, astral ring, astral statuette, astral pistol, astral mask, astral pet sweater, astral shirt, astral belt"]))).includes(pet)) {
    throw new AscendError("Invalid astral pet: ".concat(pet));
  }
  var unownedSkills = _toConsumableArray20((_permOptions$permSkil = permOptions === null || permOptions === void 0 ? void 0 : permOptions.permSkills.keys()) !== null && _permOptions$permSkil !== void 0 ? _permOptions$permSkil : []).filter(function(skill2) {
    return !(0, import_kolmafia81.haveSkill)(skill2);
  });
  if (unownedSkills.length) {
    throw new AscendError("You're trying to perm the following skills, but don't actually have them: ".concat(unownedSkills.join(", ")));
  }
  var unpermableSkills = _toConsumableArray20((_permOptions$permSkil2 = permOptions === null || permOptions === void 0 ? void 0 : permOptions.permSkills.keys()) !== null && _permOptions$permSkil2 !== void 0 ? _permOptions$permSkil2 : []).filter(function(skill2) {
    return !skill2.permable;
  });
  if (unpermableSkills.length) {
    throw new AscendError("You're trying to perm the following skills, but they're unpermable: ".concat(unownedSkills.join(", ")));
  }
  if (!isInValhalla()) {
    (0, import_kolmafia81.visitUrl)("ascend.php?action=ascend&confirm=on&confirm2=on");
  }
  if (!isInValhalla()) {
    throw new AscendError("Failed to ascend--do you have a pending trade offer?");
  }
  (0, import_kolmafia81.visitUrl)("afterlife.php?action=pearlygates");
  if (consumable !== $item(_templateObject839 || (_templateObject839 = _taggedTemplateLiteral74(["none"])))) {
    (0, import_kolmafia81.visitUrl)("afterlife.php?action=buydeli&whichitem=".concat(consumable.id));
  }
  if (pet !== $item(_templateObject933 || (_templateObject933 = _taggedTemplateLiteral74(["none"])))) {
    (0, import_kolmafia81.visitUrl)("afterlife.php?action=buyarmory&whichitem=".concat(pet.id));
  }
  if (permOptions) {
    var currentPerms = permedSkills();
    var karma = get("bankedKarma");
    var _iterator = _createForOfIteratorHelper10(permOptions.permSkills.entries()), _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done; ) {
        var _currentPerms$get;
        var _step$value = _slicedToArray21(_step.value, 2), skill = _step$value[0], prospectivePermLevel = _step$value[1];
        var currentPermLevel = (_currentPerms$get = currentPerms.get(skill)) !== null && _currentPerms$get !== void 0 ? _currentPerms$get : Lifestyle.casual;
        if (prospectivePermLevel > currentPermLevel) {
          var expectedKarma = 100 * (prospectivePermLevel - currentPermLevel);
          if (karma < expectedKarma) {
            if (!permOptions.neverAbort) throw new AscendError("Skill ".concat(skill, " is too karmaically expensive!"));
            continue;
          }
          karma -= expectedKarma;
          var permText = prospectivePermLevel === Lifestyle.hardcore ? "hcperm" : "scperm";
          (0, import_kolmafia81.visitUrl)("afterlife.php?action=".concat(permText, "&whichskill=").concat(skill.id));
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  }
  (0, import_kolmafia81.visitUrl)("afterlife.php?action=ascend&confirmascend=1&whichsign=".concat(moonId, "&gender=").concat(kolGender, "&whichclass=").concat(playerClass.id, "&whichpath=").concat(path3.id, "&asctype=").concat(lifestyle, "&nopetok=1&noskillsok=1&lamepathok=1&lamesignok=1&pwd"), true);
}
function prepareAscension() {
  var _ref5 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, garden = _ref5.garden, eudora = _ref5.eudora, chateau = _ref5.chateau, throwOnFail = _ref5.throwOnFail;
  throwOnFail = throwOnFail !== null && throwOnFail !== void 0 ? throwOnFail : true;
  if (garden && !Object.getOwnPropertyNames((0, import_kolmafia81.getCampground)()).includes(garden)) {
    (0, import_kolmafia81.use)(import_kolmafia81.Item.get(garden));
    var gardenName = Object.getOwnPropertyNames((0, import_kolmafia81.getCampground)()).find(isGarden);
    if (gardenName !== garden && throwOnFail) {
      throw new AscensionPrepError(garden, gardenName);
    }
  }
  if (eudora && (0, import_kolmafia81.eudoraItem)().name !== eudora) {
    var eudoraNumber = 1 + eudorae.indexOf(eudora);
    if (!(0, import_kolmafia81.xpath)((0, import_kolmafia81.visitUrl)("account.php?tab=correspondence"), '//select[@name="whichpenpal"]/option/@value').includes(eudoraNumber.toString()) && throwOnFail) {
      throw new AscensionPrepError("Unable to swap eudora to ".concat(eudora, " because you are not subscribed to it."));
    } else {
      (0, import_kolmafia81.visitUrl)("account.php?actions[]=whichpenpal&whichpenpal=".concat(eudoraNumber, "&action=Update"), true);
    }
    if ((0, import_kolmafia81.eudoraItem)() !== import_kolmafia81.Item.get(eudora) && throwOnFail) {
      throw new AscensionPrepError(eudora, (0, import_kolmafia81.eudoraItem)());
    }
  }
  if (chateau && ChateauMantegna_exports.have()) {
    var desk = chateau.desk, ceiling = chateau.ceiling, nightstand = chateau.nightstand;
    if (ceiling && ChateauMantegna_exports.getCeiling() !== ceiling) {
      if (!ChateauMantegna_exports.changeCeiling(ceiling) && throwOnFail) {
        var _ChateauMantegna$getC;
        throw new AscensionPrepError(ceiling, (_ChateauMantegna$getC = ChateauMantegna_exports.getCeiling()) !== null && _ChateauMantegna$getC !== void 0 ? _ChateauMantegna$getC : "unknown");
      }
    }
    if (desk && ChateauMantegna_exports.getDesk() !== desk) {
      if (!ChateauMantegna_exports.changeDesk(desk) && throwOnFail) {
        var _ChateauMantegna$getD;
        throw new AscensionPrepError(desk, (_ChateauMantegna$getD = ChateauMantegna_exports.getDesk()) !== null && _ChateauMantegna$getD !== void 0 ? _ChateauMantegna$getD : "unknown");
      }
    }
    if (nightstand && ChateauMantegna_exports.getNightstand() !== nightstand) {
      if (!ChateauMantegna_exports.changeNightstand(nightstand) && throwOnFail) {
        var _ChateauMantegna$getN;
        throw new AscensionPrepError(nightstand, (_ChateauMantegna$getN = ChateauMantegna_exports.getNightstand()) !== null && _ChateauMantegna$getN !== void 0 ? _ChateauMantegna$getN : "unknown");
      }
    }
  }
}
var import_kolmafia81, _templateObject507, _templateObject2136, _templateObject3124, _templateObject4104, _templateObject557, _templateObject654, _templateObject748, _templateObject839, _templateObject933, Lifestyle, KolGender, AscendError, gardens, eudorae, isGarden, isEudora, isDesk, isNightstand, isCeiling, AscensionPrepError;
var init_ascend = __esm({
  "node_modules/libram/dist/ascend.js": function() {
    import_kolmafia81 = require("kolmafia");
    init_moonSign();
    init_property();
    init_resources();
    init_template_string();
    init_utils();
    (function(Lifestyle2) {
      Lifestyle2[Lifestyle2["casual"] = 1] = "casual";
      Lifestyle2[Lifestyle2["softcore"] = 2] = "softcore";
      Lifestyle2[Lifestyle2["normal"] = 2] = "normal";
      Lifestyle2[Lifestyle2["hardcore"] = 3] = "hardcore";
    })(Lifestyle || (Lifestyle = {}));
    (function(KolGender2) {
      KolGender2[KolGender2["male"] = 1] = "male";
      KolGender2[KolGender2["female"] = 2] = "female";
    })(KolGender || (KolGender = {}));
    AscendError = /* @__PURE__ */ function(_Error) {
      function AscendError2() {
        _classCallCheck12(this, AscendError2);
        return _callSuper3(this, AscendError2, arguments);
      }
      _inherits3(AscendError2, _Error);
      return _createClass12(AscendError2);
    }(/* @__PURE__ */ _wrapNativeSuper3(Error));
    gardens = ["packet of pumpkin seeds", "Peppermint Pip Packet", "packet of dragon's teeth", "packet of beer seeds", "packet of winter seeds", "packet of thanksgarden seeds", "packet of tall grass seeds", "packet of mushroom spores", "packet of rock seeds"];
    eudorae = ["My Own Pen Pal kit", "GameInformPowerDailyPro subscription card", "Xi Receiver Unit", "New-You Club Membership Form", "Our Daily Candles\u2122 order form", "Black and White Apron Enrollment Form"];
    isGarden = function(x) {
      return arrayContains(x, gardens);
    };
    isEudora = function(x) {
      return arrayContains(x, eudorae);
    };
    isDesk = function(x) {
      return arrayContains(x, ChateauMantegna_exports.desks);
    };
    isNightstand = function(x) {
      return arrayContains(x, ChateauMantegna_exports.nightstands);
    };
    isCeiling = function(x) {
      return arrayContains(x, ChateauMantegna_exports.ceilings);
    };
    AscensionPrepError = /* @__PURE__ */ function(_Error2) {
      function AscensionPrepError2(cause, original) {
        var _this;
        _classCallCheck12(this, AscensionPrepError2);
        if (isGarden(cause)) {
          _this = _callSuper3(this, AscensionPrepError2, ["Unable to swap garden to ".concat(cause, "; garden is currently ").concat(original, ".")]);
          _defineProperty18(_assertThisInitialized3(_this), "cause", void 0);
        } else if (isEudora(cause)) {
          _this = _callSuper3(this, AscensionPrepError2, ["Unable to swap eudora to ".concat(cause, "; eudora is currently ").concat(original, ".")]);
          _defineProperty18(_assertThisInitialized3(_this), "cause", void 0);
        } else if (isDesk(cause)) {
          _this = _callSuper3(this, AscensionPrepError2, ["Unable to swap chateau desk to ".concat(cause, "; desk is currently ").concat(original, ".")]);
          _defineProperty18(_assertThisInitialized3(_this), "cause", void 0);
        } else if (isNightstand(cause)) {
          _this = _callSuper3(this, AscensionPrepError2, ["Unable to swap chateau nightstand to ".concat(cause, "; nightstand is currently ").concat(original, ".")]);
          _defineProperty18(_assertThisInitialized3(_this), "cause", void 0);
        } else if (isCeiling(cause)) {
          _this = _callSuper3(this, AscensionPrepError2, ["Unable to swap chateau ceiling to ".concat(cause, "; ceiling is currently ").concat(original, ".")]);
          _defineProperty18(_assertThisInitialized3(_this), "cause", void 0);
        } else {
          _this = _callSuper3(this, AscensionPrepError2, [cause]);
          _defineProperty18(_assertThisInitialized3(_this), "cause", void 0);
        }
        _this.cause = cause;
        return _assertThisInitialized3(_this);
      }
      _inherits3(AscensionPrepError2, _Error2);
      return _createClass12(AscensionPrepError2);
    }(/* @__PURE__ */ _wrapNativeSuper3(Error));
  }
});

// node_modules/html-entities/lib/named-references.js
var require_named_references = __commonJS({
  "node_modules/html-entities/lib/named-references.js": function(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.bodyRegExps = {
      xml: /&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);?/g,
      html4: /&notin;|&(?:nbsp|iexcl|cent|pound|curren|yen|brvbar|sect|uml|copy|ordf|laquo|not|shy|reg|macr|deg|plusmn|sup2|sup3|acute|micro|para|middot|cedil|sup1|ordm|raquo|frac14|frac12|frac34|iquest|Agrave|Aacute|Acirc|Atilde|Auml|Aring|AElig|Ccedil|Egrave|Eacute|Ecirc|Euml|Igrave|Iacute|Icirc|Iuml|ETH|Ntilde|Ograve|Oacute|Ocirc|Otilde|Ouml|times|Oslash|Ugrave|Uacute|Ucirc|Uuml|Yacute|THORN|szlig|agrave|aacute|acirc|atilde|auml|aring|aelig|ccedil|egrave|eacute|ecirc|euml|igrave|iacute|icirc|iuml|eth|ntilde|ograve|oacute|ocirc|otilde|ouml|divide|oslash|ugrave|uacute|ucirc|uuml|yacute|thorn|yuml|quot|amp|lt|gt|#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);?/g,
      html5: /&centerdot;|&copysr;|&divideontimes;|&gtcc;|&gtcir;|&gtdot;|&gtlPar;|&gtquest;|&gtrapprox;|&gtrarr;|&gtrdot;|&gtreqless;|&gtreqqless;|&gtrless;|&gtrsim;|&ltcc;|&ltcir;|&ltdot;|&lthree;|&ltimes;|&ltlarr;|&ltquest;|&ltrPar;|&ltri;|&ltrie;|&ltrif;|&notin;|&notinE;|&notindot;|&notinva;|&notinvb;|&notinvc;|&notni;|&notniva;|&notnivb;|&notnivc;|&parallel;|&timesb;|&timesbar;|&timesd;|&(?:AElig|AMP|Aacute|Acirc|Agrave|Aring|Atilde|Auml|COPY|Ccedil|ETH|Eacute|Ecirc|Egrave|Euml|GT|Iacute|Icirc|Igrave|Iuml|LT|Ntilde|Oacute|Ocirc|Ograve|Oslash|Otilde|Ouml|QUOT|REG|THORN|Uacute|Ucirc|Ugrave|Uuml|Yacute|aacute|acirc|acute|aelig|agrave|amp|aring|atilde|auml|brvbar|ccedil|cedil|cent|copy|curren|deg|divide|eacute|ecirc|egrave|eth|euml|frac12|frac14|frac34|gt|iacute|icirc|iexcl|igrave|iquest|iuml|laquo|lt|macr|micro|middot|nbsp|not|ntilde|oacute|ocirc|ograve|ordf|ordm|oslash|otilde|ouml|para|plusmn|pound|quot|raquo|reg|sect|shy|sup1|sup2|sup3|szlig|thorn|times|uacute|ucirc|ugrave|uml|uuml|yacute|yen|yuml|#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);?/g
    };
    exports2.namedReferences = {
      xml: {
        entities: {
          "&lt;": "<",
          "&gt;": ">",
          "&quot;": '"',
          "&apos;": "'",
          "&amp;": "&"
        },
        characters: {
          "<": "&lt;",
          ">": "&gt;",
          '"': "&quot;",
          "'": "&apos;",
          "&": "&amp;"
        }
      },
      html4: {
        entities: {
          "&apos;": "'",
          "&nbsp": "\xA0",
          "&nbsp;": "\xA0",
          "&iexcl": "\xA1",
          "&iexcl;": "\xA1",
          "&cent": "\xA2",
          "&cent;": "\xA2",
          "&pound": "\xA3",
          "&pound;": "\xA3",
          "&curren": "\xA4",
          "&curren;": "\xA4",
          "&yen": "\xA5",
          "&yen;": "\xA5",
          "&brvbar": "\xA6",
          "&brvbar;": "\xA6",
          "&sect": "\xA7",
          "&sect;": "\xA7",
          "&uml": "\xA8",
          "&uml;": "\xA8",
          "&copy": "\xA9",
          "&copy;": "\xA9",
          "&ordf": "\xAA",
          "&ordf;": "\xAA",
          "&laquo": "\xAB",
          "&laquo;": "\xAB",
          "&not": "\xAC",
          "&not;": "\xAC",
          "&shy": "\xAD",
          "&shy;": "\xAD",
          "&reg": "\xAE",
          "&reg;": "\xAE",
          "&macr": "\xAF",
          "&macr;": "\xAF",
          "&deg": "\xB0",
          "&deg;": "\xB0",
          "&plusmn": "\xB1",
          "&plusmn;": "\xB1",
          "&sup2": "\xB2",
          "&sup2;": "\xB2",
          "&sup3": "\xB3",
          "&sup3;": "\xB3",
          "&acute": "\xB4",
          "&acute;": "\xB4",
          "&micro": "\xB5",
          "&micro;": "\xB5",
          "&para": "\xB6",
          "&para;": "\xB6",
          "&middot": "\xB7",
          "&middot;": "\xB7",
          "&cedil": "\xB8",
          "&cedil;": "\xB8",
          "&sup1": "\xB9",
          "&sup1;": "\xB9",
          "&ordm": "\xBA",
          "&ordm;": "\xBA",
          "&raquo": "\xBB",
          "&raquo;": "\xBB",
          "&frac14": "\xBC",
          "&frac14;": "\xBC",
          "&frac12": "\xBD",
          "&frac12;": "\xBD",
          "&frac34": "\xBE",
          "&frac34;": "\xBE",
          "&iquest": "\xBF",
          "&iquest;": "\xBF",
          "&Agrave": "\xC0",
          "&Agrave;": "\xC0",
          "&Aacute": "\xC1",
          "&Aacute;": "\xC1",
          "&Acirc": "\xC2",
          "&Acirc;": "\xC2",
          "&Atilde": "\xC3",
          "&Atilde;": "\xC3",
          "&Auml": "\xC4",
          "&Auml;": "\xC4",
          "&Aring": "\xC5",
          "&Aring;": "\xC5",
          "&AElig": "\xC6",
          "&AElig;": "\xC6",
          "&Ccedil": "\xC7",
          "&Ccedil;": "\xC7",
          "&Egrave": "\xC8",
          "&Egrave;": "\xC8",
          "&Eacute": "\xC9",
          "&Eacute;": "\xC9",
          "&Ecirc": "\xCA",
          "&Ecirc;": "\xCA",
          "&Euml": "\xCB",
          "&Euml;": "\xCB",
          "&Igrave": "\xCC",
          "&Igrave;": "\xCC",
          "&Iacute": "\xCD",
          "&Iacute;": "\xCD",
          "&Icirc": "\xCE",
          "&Icirc;": "\xCE",
          "&Iuml": "\xCF",
          "&Iuml;": "\xCF",
          "&ETH": "\xD0",
          "&ETH;": "\xD0",
          "&Ntilde": "\xD1",
          "&Ntilde;": "\xD1",
          "&Ograve": "\xD2",
          "&Ograve;": "\xD2",
          "&Oacute": "\xD3",
          "&Oacute;": "\xD3",
          "&Ocirc": "\xD4",
          "&Ocirc;": "\xD4",
          "&Otilde": "\xD5",
          "&Otilde;": "\xD5",
          "&Ouml": "\xD6",
          "&Ouml;": "\xD6",
          "&times": "\xD7",
          "&times;": "\xD7",
          "&Oslash": "\xD8",
          "&Oslash;": "\xD8",
          "&Ugrave": "\xD9",
          "&Ugrave;": "\xD9",
          "&Uacute": "\xDA",
          "&Uacute;": "\xDA",
          "&Ucirc": "\xDB",
          "&Ucirc;": "\xDB",
          "&Uuml": "\xDC",
          "&Uuml;": "\xDC",
          "&Yacute": "\xDD",
          "&Yacute;": "\xDD",
          "&THORN": "\xDE",
          "&THORN;": "\xDE",
          "&szlig": "\xDF",
          "&szlig;": "\xDF",
          "&agrave": "\xE0",
          "&agrave;": "\xE0",
          "&aacute": "\xE1",
          "&aacute;": "\xE1",
          "&acirc": "\xE2",
          "&acirc;": "\xE2",
          "&atilde": "\xE3",
          "&atilde;": "\xE3",
          "&auml": "\xE4",
          "&auml;": "\xE4",
          "&aring": "\xE5",
          "&aring;": "\xE5",
          "&aelig": "\xE6",
          "&aelig;": "\xE6",
          "&ccedil": "\xE7",
          "&ccedil;": "\xE7",
          "&egrave": "\xE8",
          "&egrave;": "\xE8",
          "&eacute": "\xE9",
          "&eacute;": "\xE9",
          "&ecirc": "\xEA",
          "&ecirc;": "\xEA",
          "&euml": "\xEB",
          "&euml;": "\xEB",
          "&igrave": "\xEC",
          "&igrave;": "\xEC",
          "&iacute": "\xED",
          "&iacute;": "\xED",
          "&icirc": "\xEE",
          "&icirc;": "\xEE",
          "&iuml": "\xEF",
          "&iuml;": "\xEF",
          "&eth": "\xF0",
          "&eth;": "\xF0",
          "&ntilde": "\xF1",
          "&ntilde;": "\xF1",
          "&ograve": "\xF2",
          "&ograve;": "\xF2",
          "&oacute": "\xF3",
          "&oacute;": "\xF3",
          "&ocirc": "\xF4",
          "&ocirc;": "\xF4",
          "&otilde": "\xF5",
          "&otilde;": "\xF5",
          "&ouml": "\xF6",
          "&ouml;": "\xF6",
          "&divide": "\xF7",
          "&divide;": "\xF7",
          "&oslash": "\xF8",
          "&oslash;": "\xF8",
          "&ugrave": "\xF9",
          "&ugrave;": "\xF9",
          "&uacute": "\xFA",
          "&uacute;": "\xFA",
          "&ucirc": "\xFB",
          "&ucirc;": "\xFB",
          "&uuml": "\xFC",
          "&uuml;": "\xFC",
          "&yacute": "\xFD",
          "&yacute;": "\xFD",
          "&thorn": "\xFE",
          "&thorn;": "\xFE",
          "&yuml": "\xFF",
          "&yuml;": "\xFF",
          "&quot": '"',
          "&quot;": '"',
          "&amp": "&",
          "&amp;": "&",
          "&lt": "<",
          "&lt;": "<",
          "&gt": ">",
          "&gt;": ">",
          "&OElig;": "\u0152",
          "&oelig;": "\u0153",
          "&Scaron;": "\u0160",
          "&scaron;": "\u0161",
          "&Yuml;": "\u0178",
          "&circ;": "\u02C6",
          "&tilde;": "\u02DC",
          "&ensp;": "\u2002",
          "&emsp;": "\u2003",
          "&thinsp;": "\u2009",
          "&zwnj;": "\u200C",
          "&zwj;": "\u200D",
          "&lrm;": "\u200E",
          "&rlm;": "\u200F",
          "&ndash;": "\u2013",
          "&mdash;": "\u2014",
          "&lsquo;": "\u2018",
          "&rsquo;": "\u2019",
          "&sbquo;": "\u201A",
          "&ldquo;": "\u201C",
          "&rdquo;": "\u201D",
          "&bdquo;": "\u201E",
          "&dagger;": "\u2020",
          "&Dagger;": "\u2021",
          "&permil;": "\u2030",
          "&lsaquo;": "\u2039",
          "&rsaquo;": "\u203A",
          "&euro;": "\u20AC",
          "&fnof;": "\u0192",
          "&Alpha;": "\u0391",
          "&Beta;": "\u0392",
          "&Gamma;": "\u0393",
          "&Delta;": "\u0394",
          "&Epsilon;": "\u0395",
          "&Zeta;": "\u0396",
          "&Eta;": "\u0397",
          "&Theta;": "\u0398",
          "&Iota;": "\u0399",
          "&Kappa;": "\u039A",
          "&Lambda;": "\u039B",
          "&Mu;": "\u039C",
          "&Nu;": "\u039D",
          "&Xi;": "\u039E",
          "&Omicron;": "\u039F",
          "&Pi;": "\u03A0",
          "&Rho;": "\u03A1",
          "&Sigma;": "\u03A3",
          "&Tau;": "\u03A4",
          "&Upsilon;": "\u03A5",
          "&Phi;": "\u03A6",
          "&Chi;": "\u03A7",
          "&Psi;": "\u03A8",
          "&Omega;": "\u03A9",
          "&alpha;": "\u03B1",
          "&beta;": "\u03B2",
          "&gamma;": "\u03B3",
          "&delta;": "\u03B4",
          "&epsilon;": "\u03B5",
          "&zeta;": "\u03B6",
          "&eta;": "\u03B7",
          "&theta;": "\u03B8",
          "&iota;": "\u03B9",
          "&kappa;": "\u03BA",
          "&lambda;": "\u03BB",
          "&mu;": "\u03BC",
          "&nu;": "\u03BD",
          "&xi;": "\u03BE",
          "&omicron;": "\u03BF",
          "&pi;": "\u03C0",
          "&rho;": "\u03C1",
          "&sigmaf;": "\u03C2",
          "&sigma;": "\u03C3",
          "&tau;": "\u03C4",
          "&upsilon;": "\u03C5",
          "&phi;": "\u03C6",
          "&chi;": "\u03C7",
          "&psi;": "\u03C8",
          "&omega;": "\u03C9",
          "&thetasym;": "\u03D1",
          "&upsih;": "\u03D2",
          "&piv;": "\u03D6",
          "&bull;": "\u2022",
          "&hellip;": "\u2026",
          "&prime;": "\u2032",
          "&Prime;": "\u2033",
          "&oline;": "\u203E",
          "&frasl;": "\u2044",
          "&weierp;": "\u2118",
          "&image;": "\u2111",
          "&real;": "\u211C",
          "&trade;": "\u2122",
          "&alefsym;": "\u2135",
          "&larr;": "\u2190",
          "&uarr;": "\u2191",
          "&rarr;": "\u2192",
          "&darr;": "\u2193",
          "&harr;": "\u2194",
          "&crarr;": "\u21B5",
          "&lArr;": "\u21D0",
          "&uArr;": "\u21D1",
          "&rArr;": "\u21D2",
          "&dArr;": "\u21D3",
          "&hArr;": "\u21D4",
          "&forall;": "\u2200",
          "&part;": "\u2202",
          "&exist;": "\u2203",
          "&empty;": "\u2205",
          "&nabla;": "\u2207",
          "&isin;": "\u2208",
          "&notin;": "\u2209",
          "&ni;": "\u220B",
          "&prod;": "\u220F",
          "&sum;": "\u2211",
          "&minus;": "\u2212",
          "&lowast;": "\u2217",
          "&radic;": "\u221A",
          "&prop;": "\u221D",
          "&infin;": "\u221E",
          "&ang;": "\u2220",
          "&and;": "\u2227",
          "&or;": "\u2228",
          "&cap;": "\u2229",
          "&cup;": "\u222A",
          "&int;": "\u222B",
          "&there4;": "\u2234",
          "&sim;": "\u223C",
          "&cong;": "\u2245",
          "&asymp;": "\u2248",
          "&ne;": "\u2260",
          "&equiv;": "\u2261",
          "&le;": "\u2264",
          "&ge;": "\u2265",
          "&sub;": "\u2282",
          "&sup;": "\u2283",
          "&nsub;": "\u2284",
          "&sube;": "\u2286",
          "&supe;": "\u2287",
          "&oplus;": "\u2295",
          "&otimes;": "\u2297",
          "&perp;": "\u22A5",
          "&sdot;": "\u22C5",
          "&lceil;": "\u2308",
          "&rceil;": "\u2309",
          "&lfloor;": "\u230A",
          "&rfloor;": "\u230B",
          "&lang;": "\u2329",
          "&rang;": "\u232A",
          "&loz;": "\u25CA",
          "&spades;": "\u2660",
          "&clubs;": "\u2663",
          "&hearts;": "\u2665",
          "&diams;": "\u2666"
        },
        characters: {
          "'": "&apos;",
          "\xA0": "&nbsp;",
          "\xA1": "&iexcl;",
          "\xA2": "&cent;",
          "\xA3": "&pound;",
          "\xA4": "&curren;",
          "\xA5": "&yen;",
          "\xA6": "&brvbar;",
          "\xA7": "&sect;",
          "\xA8": "&uml;",
          "\xA9": "&copy;",
          "\xAA": "&ordf;",
          "\xAB": "&laquo;",
          "\xAC": "&not;",
          "\xAD": "&shy;",
          "\xAE": "&reg;",
          "\xAF": "&macr;",
          "\xB0": "&deg;",
          "\xB1": "&plusmn;",
          "\xB2": "&sup2;",
          "\xB3": "&sup3;",
          "\xB4": "&acute;",
          "\xB5": "&micro;",
          "\xB6": "&para;",
          "\xB7": "&middot;",
          "\xB8": "&cedil;",
          "\xB9": "&sup1;",
          "\xBA": "&ordm;",
          "\xBB": "&raquo;",
          "\xBC": "&frac14;",
          "\xBD": "&frac12;",
          "\xBE": "&frac34;",
          "\xBF": "&iquest;",
          "\xC0": "&Agrave;",
          "\xC1": "&Aacute;",
          "\xC2": "&Acirc;",
          "\xC3": "&Atilde;",
          "\xC4": "&Auml;",
          "\xC5": "&Aring;",
          "\xC6": "&AElig;",
          "\xC7": "&Ccedil;",
          "\xC8": "&Egrave;",
          "\xC9": "&Eacute;",
          "\xCA": "&Ecirc;",
          "\xCB": "&Euml;",
          "\xCC": "&Igrave;",
          "\xCD": "&Iacute;",
          "\xCE": "&Icirc;",
          "\xCF": "&Iuml;",
          "\xD0": "&ETH;",
          "\xD1": "&Ntilde;",
          "\xD2": "&Ograve;",
          "\xD3": "&Oacute;",
          "\xD4": "&Ocirc;",
          "\xD5": "&Otilde;",
          "\xD6": "&Ouml;",
          "\xD7": "&times;",
          "\xD8": "&Oslash;",
          "\xD9": "&Ugrave;",
          "\xDA": "&Uacute;",
          "\xDB": "&Ucirc;",
          "\xDC": "&Uuml;",
          "\xDD": "&Yacute;",
          "\xDE": "&THORN;",
          "\xDF": "&szlig;",
          "\xE0": "&agrave;",
          "\xE1": "&aacute;",
          "\xE2": "&acirc;",
          "\xE3": "&atilde;",
          "\xE4": "&auml;",
          "\xE5": "&aring;",
          "\xE6": "&aelig;",
          "\xE7": "&ccedil;",
          "\xE8": "&egrave;",
          "\xE9": "&eacute;",
          "\xEA": "&ecirc;",
          "\xEB": "&euml;",
          "\xEC": "&igrave;",
          "\xED": "&iacute;",
          "\xEE": "&icirc;",
          "\xEF": "&iuml;",
          "\xF0": "&eth;",
          "\xF1": "&ntilde;",
          "\xF2": "&ograve;",
          "\xF3": "&oacute;",
          "\xF4": "&ocirc;",
          "\xF5": "&otilde;",
          "\xF6": "&ouml;",
          "\xF7": "&divide;",
          "\xF8": "&oslash;",
          "\xF9": "&ugrave;",
          "\xFA": "&uacute;",
          "\xFB": "&ucirc;",
          "\xFC": "&uuml;",
          "\xFD": "&yacute;",
          "\xFE": "&thorn;",
          "\xFF": "&yuml;",
          '"': "&quot;",
          "&": "&amp;",
          "<": "&lt;",
          ">": "&gt;",
          "\u0152": "&OElig;",
          "\u0153": "&oelig;",
          "\u0160": "&Scaron;",
          "\u0161": "&scaron;",
          "\u0178": "&Yuml;",
          "\u02C6": "&circ;",
          "\u02DC": "&tilde;",
          "\u2002": "&ensp;",
          "\u2003": "&emsp;",
          "\u2009": "&thinsp;",
          "\u200C": "&zwnj;",
          "\u200D": "&zwj;",
          "\u200E": "&lrm;",
          "\u200F": "&rlm;",
          "\u2013": "&ndash;",
          "\u2014": "&mdash;",
          "\u2018": "&lsquo;",
          "\u2019": "&rsquo;",
          "\u201A": "&sbquo;",
          "\u201C": "&ldquo;",
          "\u201D": "&rdquo;",
          "\u201E": "&bdquo;",
          "\u2020": "&dagger;",
          "\u2021": "&Dagger;",
          "\u2030": "&permil;",
          "\u2039": "&lsaquo;",
          "\u203A": "&rsaquo;",
          "\u20AC": "&euro;",
          "\u0192": "&fnof;",
          "\u0391": "&Alpha;",
          "\u0392": "&Beta;",
          "\u0393": "&Gamma;",
          "\u0394": "&Delta;",
          "\u0395": "&Epsilon;",
          "\u0396": "&Zeta;",
          "\u0397": "&Eta;",
          "\u0398": "&Theta;",
          "\u0399": "&Iota;",
          "\u039A": "&Kappa;",
          "\u039B": "&Lambda;",
          "\u039C": "&Mu;",
          "\u039D": "&Nu;",
          "\u039E": "&Xi;",
          "\u039F": "&Omicron;",
          "\u03A0": "&Pi;",
          "\u03A1": "&Rho;",
          "\u03A3": "&Sigma;",
          "\u03A4": "&Tau;",
          "\u03A5": "&Upsilon;",
          "\u03A6": "&Phi;",
          "\u03A7": "&Chi;",
          "\u03A8": "&Psi;",
          "\u03A9": "&Omega;",
          "\u03B1": "&alpha;",
          "\u03B2": "&beta;",
          "\u03B3": "&gamma;",
          "\u03B4": "&delta;",
          "\u03B5": "&epsilon;",
          "\u03B6": "&zeta;",
          "\u03B7": "&eta;",
          "\u03B8": "&theta;",
          "\u03B9": "&iota;",
          "\u03BA": "&kappa;",
          "\u03BB": "&lambda;",
          "\u03BC": "&mu;",
          "\u03BD": "&nu;",
          "\u03BE": "&xi;",
          "\u03BF": "&omicron;",
          "\u03C0": "&pi;",
          "\u03C1": "&rho;",
          "\u03C2": "&sigmaf;",
          "\u03C3": "&sigma;",
          "\u03C4": "&tau;",
          "\u03C5": "&upsilon;",
          "\u03C6": "&phi;",
          "\u03C7": "&chi;",
          "\u03C8": "&psi;",
          "\u03C9": "&omega;",
          "\u03D1": "&thetasym;",
          "\u03D2": "&upsih;",
          "\u03D6": "&piv;",
          "\u2022": "&bull;",
          "\u2026": "&hellip;",
          "\u2032": "&prime;",
          "\u2033": "&Prime;",
          "\u203E": "&oline;",
          "\u2044": "&frasl;",
          "\u2118": "&weierp;",
          "\u2111": "&image;",
          "\u211C": "&real;",
          "\u2122": "&trade;",
          "\u2135": "&alefsym;",
          "\u2190": "&larr;",
          "\u2191": "&uarr;",
          "\u2192": "&rarr;",
          "\u2193": "&darr;",
          "\u2194": "&harr;",
          "\u21B5": "&crarr;",
          "\u21D0": "&lArr;",
          "\u21D1": "&uArr;",
          "\u21D2": "&rArr;",
          "\u21D3": "&dArr;",
          "\u21D4": "&hArr;",
          "\u2200": "&forall;",
          "\u2202": "&part;",
          "\u2203": "&exist;",
          "\u2205": "&empty;",
          "\u2207": "&nabla;",
          "\u2208": "&isin;",
          "\u2209": "&notin;",
          "\u220B": "&ni;",
          "\u220F": "&prod;",
          "\u2211": "&sum;",
          "\u2212": "&minus;",
          "\u2217": "&lowast;",
          "\u221A": "&radic;",
          "\u221D": "&prop;",
          "\u221E": "&infin;",
          "\u2220": "&ang;",
          "\u2227": "&and;",
          "\u2228": "&or;",
          "\u2229": "&cap;",
          "\u222A": "&cup;",
          "\u222B": "&int;",
          "\u2234": "&there4;",
          "\u223C": "&sim;",
          "\u2245": "&cong;",
          "\u2248": "&asymp;",
          "\u2260": "&ne;",
          "\u2261": "&equiv;",
          "\u2264": "&le;",
          "\u2265": "&ge;",
          "\u2282": "&sub;",
          "\u2283": "&sup;",
          "\u2284": "&nsub;",
          "\u2286": "&sube;",
          "\u2287": "&supe;",
          "\u2295": "&oplus;",
          "\u2297": "&otimes;",
          "\u22A5": "&perp;",
          "\u22C5": "&sdot;",
          "\u2308": "&lceil;",
          "\u2309": "&rceil;",
          "\u230A": "&lfloor;",
          "\u230B": "&rfloor;",
          "\u2329": "&lang;",
          "\u232A": "&rang;",
          "\u25CA": "&loz;",
          "\u2660": "&spades;",
          "\u2663": "&clubs;",
          "\u2665": "&hearts;",
          "\u2666": "&diams;"
        }
      },
      html5: {
        entities: {
          "&AElig": "\xC6",
          "&AElig;": "\xC6",
          "&AMP": "&",
          "&AMP;": "&",
          "&Aacute": "\xC1",
          "&Aacute;": "\xC1",
          "&Abreve;": "\u0102",
          "&Acirc": "\xC2",
          "&Acirc;": "\xC2",
          "&Acy;": "\u0410",
          "&Afr;": "\uD835\uDD04",
          "&Agrave": "\xC0",
          "&Agrave;": "\xC0",
          "&Alpha;": "\u0391",
          "&Amacr;": "\u0100",
          "&And;": "\u2A53",
          "&Aogon;": "\u0104",
          "&Aopf;": "\uD835\uDD38",
          "&ApplyFunction;": "\u2061",
          "&Aring": "\xC5",
          "&Aring;": "\xC5",
          "&Ascr;": "\uD835\uDC9C",
          "&Assign;": "\u2254",
          "&Atilde": "\xC3",
          "&Atilde;": "\xC3",
          "&Auml": "\xC4",
          "&Auml;": "\xC4",
          "&Backslash;": "\u2216",
          "&Barv;": "\u2AE7",
          "&Barwed;": "\u2306",
          "&Bcy;": "\u0411",
          "&Because;": "\u2235",
          "&Bernoullis;": "\u212C",
          "&Beta;": "\u0392",
          "&Bfr;": "\uD835\uDD05",
          "&Bopf;": "\uD835\uDD39",
          "&Breve;": "\u02D8",
          "&Bscr;": "\u212C",
          "&Bumpeq;": "\u224E",
          "&CHcy;": "\u0427",
          "&COPY": "\xA9",
          "&COPY;": "\xA9",
          "&Cacute;": "\u0106",
          "&Cap;": "\u22D2",
          "&CapitalDifferentialD;": "\u2145",
          "&Cayleys;": "\u212D",
          "&Ccaron;": "\u010C",
          "&Ccedil": "\xC7",
          "&Ccedil;": "\xC7",
          "&Ccirc;": "\u0108",
          "&Cconint;": "\u2230",
          "&Cdot;": "\u010A",
          "&Cedilla;": "\xB8",
          "&CenterDot;": "\xB7",
          "&Cfr;": "\u212D",
          "&Chi;": "\u03A7",
          "&CircleDot;": "\u2299",
          "&CircleMinus;": "\u2296",
          "&CirclePlus;": "\u2295",
          "&CircleTimes;": "\u2297",
          "&ClockwiseContourIntegral;": "\u2232",
          "&CloseCurlyDoubleQuote;": "\u201D",
          "&CloseCurlyQuote;": "\u2019",
          "&Colon;": "\u2237",
          "&Colone;": "\u2A74",
          "&Congruent;": "\u2261",
          "&Conint;": "\u222F",
          "&ContourIntegral;": "\u222E",
          "&Copf;": "\u2102",
          "&Coproduct;": "\u2210",
          "&CounterClockwiseContourIntegral;": "\u2233",
          "&Cross;": "\u2A2F",
          "&Cscr;": "\uD835\uDC9E",
          "&Cup;": "\u22D3",
          "&CupCap;": "\u224D",
          "&DD;": "\u2145",
          "&DDotrahd;": "\u2911",
          "&DJcy;": "\u0402",
          "&DScy;": "\u0405",
          "&DZcy;": "\u040F",
          "&Dagger;": "\u2021",
          "&Darr;": "\u21A1",
          "&Dashv;": "\u2AE4",
          "&Dcaron;": "\u010E",
          "&Dcy;": "\u0414",
          "&Del;": "\u2207",
          "&Delta;": "\u0394",
          "&Dfr;": "\uD835\uDD07",
          "&DiacriticalAcute;": "\xB4",
          "&DiacriticalDot;": "\u02D9",
          "&DiacriticalDoubleAcute;": "\u02DD",
          "&DiacriticalGrave;": "`",
          "&DiacriticalTilde;": "\u02DC",
          "&Diamond;": "\u22C4",
          "&DifferentialD;": "\u2146",
          "&Dopf;": "\uD835\uDD3B",
          "&Dot;": "\xA8",
          "&DotDot;": "\u20DC",
          "&DotEqual;": "\u2250",
          "&DoubleContourIntegral;": "\u222F",
          "&DoubleDot;": "\xA8",
          "&DoubleDownArrow;": "\u21D3",
          "&DoubleLeftArrow;": "\u21D0",
          "&DoubleLeftRightArrow;": "\u21D4",
          "&DoubleLeftTee;": "\u2AE4",
          "&DoubleLongLeftArrow;": "\u27F8",
          "&DoubleLongLeftRightArrow;": "\u27FA",
          "&DoubleLongRightArrow;": "\u27F9",
          "&DoubleRightArrow;": "\u21D2",
          "&DoubleRightTee;": "\u22A8",
          "&DoubleUpArrow;": "\u21D1",
          "&DoubleUpDownArrow;": "\u21D5",
          "&DoubleVerticalBar;": "\u2225",
          "&DownArrow;": "\u2193",
          "&DownArrowBar;": "\u2913",
          "&DownArrowUpArrow;": "\u21F5",
          "&DownBreve;": "\u0311",
          "&DownLeftRightVector;": "\u2950",
          "&DownLeftTeeVector;": "\u295E",
          "&DownLeftVector;": "\u21BD",
          "&DownLeftVectorBar;": "\u2956",
          "&DownRightTeeVector;": "\u295F",
          "&DownRightVector;": "\u21C1",
          "&DownRightVectorBar;": "\u2957",
          "&DownTee;": "\u22A4",
          "&DownTeeArrow;": "\u21A7",
          "&Downarrow;": "\u21D3",
          "&Dscr;": "\uD835\uDC9F",
          "&Dstrok;": "\u0110",
          "&ENG;": "\u014A",
          "&ETH": "\xD0",
          "&ETH;": "\xD0",
          "&Eacute": "\xC9",
          "&Eacute;": "\xC9",
          "&Ecaron;": "\u011A",
          "&Ecirc": "\xCA",
          "&Ecirc;": "\xCA",
          "&Ecy;": "\u042D",
          "&Edot;": "\u0116",
          "&Efr;": "\uD835\uDD08",
          "&Egrave": "\xC8",
          "&Egrave;": "\xC8",
          "&Element;": "\u2208",
          "&Emacr;": "\u0112",
          "&EmptySmallSquare;": "\u25FB",
          "&EmptyVerySmallSquare;": "\u25AB",
          "&Eogon;": "\u0118",
          "&Eopf;": "\uD835\uDD3C",
          "&Epsilon;": "\u0395",
          "&Equal;": "\u2A75",
          "&EqualTilde;": "\u2242",
          "&Equilibrium;": "\u21CC",
          "&Escr;": "\u2130",
          "&Esim;": "\u2A73",
          "&Eta;": "\u0397",
          "&Euml": "\xCB",
          "&Euml;": "\xCB",
          "&Exists;": "\u2203",
          "&ExponentialE;": "\u2147",
          "&Fcy;": "\u0424",
          "&Ffr;": "\uD835\uDD09",
          "&FilledSmallSquare;": "\u25FC",
          "&FilledVerySmallSquare;": "\u25AA",
          "&Fopf;": "\uD835\uDD3D",
          "&ForAll;": "\u2200",
          "&Fouriertrf;": "\u2131",
          "&Fscr;": "\u2131",
          "&GJcy;": "\u0403",
          "&GT": ">",
          "&GT;": ">",
          "&Gamma;": "\u0393",
          "&Gammad;": "\u03DC",
          "&Gbreve;": "\u011E",
          "&Gcedil;": "\u0122",
          "&Gcirc;": "\u011C",
          "&Gcy;": "\u0413",
          "&Gdot;": "\u0120",
          "&Gfr;": "\uD835\uDD0A",
          "&Gg;": "\u22D9",
          "&Gopf;": "\uD835\uDD3E",
          "&GreaterEqual;": "\u2265",
          "&GreaterEqualLess;": "\u22DB",
          "&GreaterFullEqual;": "\u2267",
          "&GreaterGreater;": "\u2AA2",
          "&GreaterLess;": "\u2277",
          "&GreaterSlantEqual;": "\u2A7E",
          "&GreaterTilde;": "\u2273",
          "&Gscr;": "\uD835\uDCA2",
          "&Gt;": "\u226B",
          "&HARDcy;": "\u042A",
          "&Hacek;": "\u02C7",
          "&Hat;": "^",
          "&Hcirc;": "\u0124",
          "&Hfr;": "\u210C",
          "&HilbertSpace;": "\u210B",
          "&Hopf;": "\u210D",
          "&HorizontalLine;": "\u2500",
          "&Hscr;": "\u210B",
          "&Hstrok;": "\u0126",
          "&HumpDownHump;": "\u224E",
          "&HumpEqual;": "\u224F",
          "&IEcy;": "\u0415",
          "&IJlig;": "\u0132",
          "&IOcy;": "\u0401",
          "&Iacute": "\xCD",
          "&Iacute;": "\xCD",
          "&Icirc": "\xCE",
          "&Icirc;": "\xCE",
          "&Icy;": "\u0418",
          "&Idot;": "\u0130",
          "&Ifr;": "\u2111",
          "&Igrave": "\xCC",
          "&Igrave;": "\xCC",
          "&Im;": "\u2111",
          "&Imacr;": "\u012A",
          "&ImaginaryI;": "\u2148",
          "&Implies;": "\u21D2",
          "&Int;": "\u222C",
          "&Integral;": "\u222B",
          "&Intersection;": "\u22C2",
          "&InvisibleComma;": "\u2063",
          "&InvisibleTimes;": "\u2062",
          "&Iogon;": "\u012E",
          "&Iopf;": "\uD835\uDD40",
          "&Iota;": "\u0399",
          "&Iscr;": "\u2110",
          "&Itilde;": "\u0128",
          "&Iukcy;": "\u0406",
          "&Iuml": "\xCF",
          "&Iuml;": "\xCF",
          "&Jcirc;": "\u0134",
          "&Jcy;": "\u0419",
          "&Jfr;": "\uD835\uDD0D",
          "&Jopf;": "\uD835\uDD41",
          "&Jscr;": "\uD835\uDCA5",
          "&Jsercy;": "\u0408",
          "&Jukcy;": "\u0404",
          "&KHcy;": "\u0425",
          "&KJcy;": "\u040C",
          "&Kappa;": "\u039A",
          "&Kcedil;": "\u0136",
          "&Kcy;": "\u041A",
          "&Kfr;": "\uD835\uDD0E",
          "&Kopf;": "\uD835\uDD42",
          "&Kscr;": "\uD835\uDCA6",
          "&LJcy;": "\u0409",
          "&LT": "<",
          "&LT;": "<",
          "&Lacute;": "\u0139",
          "&Lambda;": "\u039B",
          "&Lang;": "\u27EA",
          "&Laplacetrf;": "\u2112",
          "&Larr;": "\u219E",
          "&Lcaron;": "\u013D",
          "&Lcedil;": "\u013B",
          "&Lcy;": "\u041B",
          "&LeftAngleBracket;": "\u27E8",
          "&LeftArrow;": "\u2190",
          "&LeftArrowBar;": "\u21E4",
          "&LeftArrowRightArrow;": "\u21C6",
          "&LeftCeiling;": "\u2308",
          "&LeftDoubleBracket;": "\u27E6",
          "&LeftDownTeeVector;": "\u2961",
          "&LeftDownVector;": "\u21C3",
          "&LeftDownVectorBar;": "\u2959",
          "&LeftFloor;": "\u230A",
          "&LeftRightArrow;": "\u2194",
          "&LeftRightVector;": "\u294E",
          "&LeftTee;": "\u22A3",
          "&LeftTeeArrow;": "\u21A4",
          "&LeftTeeVector;": "\u295A",
          "&LeftTriangle;": "\u22B2",
          "&LeftTriangleBar;": "\u29CF",
          "&LeftTriangleEqual;": "\u22B4",
          "&LeftUpDownVector;": "\u2951",
          "&LeftUpTeeVector;": "\u2960",
          "&LeftUpVector;": "\u21BF",
          "&LeftUpVectorBar;": "\u2958",
          "&LeftVector;": "\u21BC",
          "&LeftVectorBar;": "\u2952",
          "&Leftarrow;": "\u21D0",
          "&Leftrightarrow;": "\u21D4",
          "&LessEqualGreater;": "\u22DA",
          "&LessFullEqual;": "\u2266",
          "&LessGreater;": "\u2276",
          "&LessLess;": "\u2AA1",
          "&LessSlantEqual;": "\u2A7D",
          "&LessTilde;": "\u2272",
          "&Lfr;": "\uD835\uDD0F",
          "&Ll;": "\u22D8",
          "&Lleftarrow;": "\u21DA",
          "&Lmidot;": "\u013F",
          "&LongLeftArrow;": "\u27F5",
          "&LongLeftRightArrow;": "\u27F7",
          "&LongRightArrow;": "\u27F6",
          "&Longleftarrow;": "\u27F8",
          "&Longleftrightarrow;": "\u27FA",
          "&Longrightarrow;": "\u27F9",
          "&Lopf;": "\uD835\uDD43",
          "&LowerLeftArrow;": "\u2199",
          "&LowerRightArrow;": "\u2198",
          "&Lscr;": "\u2112",
          "&Lsh;": "\u21B0",
          "&Lstrok;": "\u0141",
          "&Lt;": "\u226A",
          "&Map;": "\u2905",
          "&Mcy;": "\u041C",
          "&MediumSpace;": "\u205F",
          "&Mellintrf;": "\u2133",
          "&Mfr;": "\uD835\uDD10",
          "&MinusPlus;": "\u2213",
          "&Mopf;": "\uD835\uDD44",
          "&Mscr;": "\u2133",
          "&Mu;": "\u039C",
          "&NJcy;": "\u040A",
          "&Nacute;": "\u0143",
          "&Ncaron;": "\u0147",
          "&Ncedil;": "\u0145",
          "&Ncy;": "\u041D",
          "&NegativeMediumSpace;": "\u200B",
          "&NegativeThickSpace;": "\u200B",
          "&NegativeThinSpace;": "\u200B",
          "&NegativeVeryThinSpace;": "\u200B",
          "&NestedGreaterGreater;": "\u226B",
          "&NestedLessLess;": "\u226A",
          "&NewLine;": "\n",
          "&Nfr;": "\uD835\uDD11",
          "&NoBreak;": "\u2060",
          "&NonBreakingSpace;": "\xA0",
          "&Nopf;": "\u2115",
          "&Not;": "\u2AEC",
          "&NotCongruent;": "\u2262",
          "&NotCupCap;": "\u226D",
          "&NotDoubleVerticalBar;": "\u2226",
          "&NotElement;": "\u2209",
          "&NotEqual;": "\u2260",
          "&NotEqualTilde;": "\u2242\u0338",
          "&NotExists;": "\u2204",
          "&NotGreater;": "\u226F",
          "&NotGreaterEqual;": "\u2271",
          "&NotGreaterFullEqual;": "\u2267\u0338",
          "&NotGreaterGreater;": "\u226B\u0338",
          "&NotGreaterLess;": "\u2279",
          "&NotGreaterSlantEqual;": "\u2A7E\u0338",
          "&NotGreaterTilde;": "\u2275",
          "&NotHumpDownHump;": "\u224E\u0338",
          "&NotHumpEqual;": "\u224F\u0338",
          "&NotLeftTriangle;": "\u22EA",
          "&NotLeftTriangleBar;": "\u29CF\u0338",
          "&NotLeftTriangleEqual;": "\u22EC",
          "&NotLess;": "\u226E",
          "&NotLessEqual;": "\u2270",
          "&NotLessGreater;": "\u2278",
          "&NotLessLess;": "\u226A\u0338",
          "&NotLessSlantEqual;": "\u2A7D\u0338",
          "&NotLessTilde;": "\u2274",
          "&NotNestedGreaterGreater;": "\u2AA2\u0338",
          "&NotNestedLessLess;": "\u2AA1\u0338",
          "&NotPrecedes;": "\u2280",
          "&NotPrecedesEqual;": "\u2AAF\u0338",
          "&NotPrecedesSlantEqual;": "\u22E0",
          "&NotReverseElement;": "\u220C",
          "&NotRightTriangle;": "\u22EB",
          "&NotRightTriangleBar;": "\u29D0\u0338",
          "&NotRightTriangleEqual;": "\u22ED",
          "&NotSquareSubset;": "\u228F\u0338",
          "&NotSquareSubsetEqual;": "\u22E2",
          "&NotSquareSuperset;": "\u2290\u0338",
          "&NotSquareSupersetEqual;": "\u22E3",
          "&NotSubset;": "\u2282\u20D2",
          "&NotSubsetEqual;": "\u2288",
          "&NotSucceeds;": "\u2281",
          "&NotSucceedsEqual;": "\u2AB0\u0338",
          "&NotSucceedsSlantEqual;": "\u22E1",
          "&NotSucceedsTilde;": "\u227F\u0338",
          "&NotSuperset;": "\u2283\u20D2",
          "&NotSupersetEqual;": "\u2289",
          "&NotTilde;": "\u2241",
          "&NotTildeEqual;": "\u2244",
          "&NotTildeFullEqual;": "\u2247",
          "&NotTildeTilde;": "\u2249",
          "&NotVerticalBar;": "\u2224",
          "&Nscr;": "\uD835\uDCA9",
          "&Ntilde": "\xD1",
          "&Ntilde;": "\xD1",
          "&Nu;": "\u039D",
          "&OElig;": "\u0152",
          "&Oacute": "\xD3",
          "&Oacute;": "\xD3",
          "&Ocirc": "\xD4",
          "&Ocirc;": "\xD4",
          "&Ocy;": "\u041E",
          "&Odblac;": "\u0150",
          "&Ofr;": "\uD835\uDD12",
          "&Ograve": "\xD2",
          "&Ograve;": "\xD2",
          "&Omacr;": "\u014C",
          "&Omega;": "\u03A9",
          "&Omicron;": "\u039F",
          "&Oopf;": "\uD835\uDD46",
          "&OpenCurlyDoubleQuote;": "\u201C",
          "&OpenCurlyQuote;": "\u2018",
          "&Or;": "\u2A54",
          "&Oscr;": "\uD835\uDCAA",
          "&Oslash": "\xD8",
          "&Oslash;": "\xD8",
          "&Otilde": "\xD5",
          "&Otilde;": "\xD5",
          "&Otimes;": "\u2A37",
          "&Ouml": "\xD6",
          "&Ouml;": "\xD6",
          "&OverBar;": "\u203E",
          "&OverBrace;": "\u23DE",
          "&OverBracket;": "\u23B4",
          "&OverParenthesis;": "\u23DC",
          "&PartialD;": "\u2202",
          "&Pcy;": "\u041F",
          "&Pfr;": "\uD835\uDD13",
          "&Phi;": "\u03A6",
          "&Pi;": "\u03A0",
          "&PlusMinus;": "\xB1",
          "&Poincareplane;": "\u210C",
          "&Popf;": "\u2119",
          "&Pr;": "\u2ABB",
          "&Precedes;": "\u227A",
          "&PrecedesEqual;": "\u2AAF",
          "&PrecedesSlantEqual;": "\u227C",
          "&PrecedesTilde;": "\u227E",
          "&Prime;": "\u2033",
          "&Product;": "\u220F",
          "&Proportion;": "\u2237",
          "&Proportional;": "\u221D",
          "&Pscr;": "\uD835\uDCAB",
          "&Psi;": "\u03A8",
          "&QUOT": '"',
          "&QUOT;": '"',
          "&Qfr;": "\uD835\uDD14",
          "&Qopf;": "\u211A",
          "&Qscr;": "\uD835\uDCAC",
          "&RBarr;": "\u2910",
          "&REG": "\xAE",
          "&REG;": "\xAE",
          "&Racute;": "\u0154",
          "&Rang;": "\u27EB",
          "&Rarr;": "\u21A0",
          "&Rarrtl;": "\u2916",
          "&Rcaron;": "\u0158",
          "&Rcedil;": "\u0156",
          "&Rcy;": "\u0420",
          "&Re;": "\u211C",
          "&ReverseElement;": "\u220B",
          "&ReverseEquilibrium;": "\u21CB",
          "&ReverseUpEquilibrium;": "\u296F",
          "&Rfr;": "\u211C",
          "&Rho;": "\u03A1",
          "&RightAngleBracket;": "\u27E9",
          "&RightArrow;": "\u2192",
          "&RightArrowBar;": "\u21E5",
          "&RightArrowLeftArrow;": "\u21C4",
          "&RightCeiling;": "\u2309",
          "&RightDoubleBracket;": "\u27E7",
          "&RightDownTeeVector;": "\u295D",
          "&RightDownVector;": "\u21C2",
          "&RightDownVectorBar;": "\u2955",
          "&RightFloor;": "\u230B",
          "&RightTee;": "\u22A2",
          "&RightTeeArrow;": "\u21A6",
          "&RightTeeVector;": "\u295B",
          "&RightTriangle;": "\u22B3",
          "&RightTriangleBar;": "\u29D0",
          "&RightTriangleEqual;": "\u22B5",
          "&RightUpDownVector;": "\u294F",
          "&RightUpTeeVector;": "\u295C",
          "&RightUpVector;": "\u21BE",
          "&RightUpVectorBar;": "\u2954",
          "&RightVector;": "\u21C0",
          "&RightVectorBar;": "\u2953",
          "&Rightarrow;": "\u21D2",
          "&Ropf;": "\u211D",
          "&RoundImplies;": "\u2970",
          "&Rrightarrow;": "\u21DB",
          "&Rscr;": "\u211B",
          "&Rsh;": "\u21B1",
          "&RuleDelayed;": "\u29F4",
          "&SHCHcy;": "\u0429",
          "&SHcy;": "\u0428",
          "&SOFTcy;": "\u042C",
          "&Sacute;": "\u015A",
          "&Sc;": "\u2ABC",
          "&Scaron;": "\u0160",
          "&Scedil;": "\u015E",
          "&Scirc;": "\u015C",
          "&Scy;": "\u0421",
          "&Sfr;": "\uD835\uDD16",
          "&ShortDownArrow;": "\u2193",
          "&ShortLeftArrow;": "\u2190",
          "&ShortRightArrow;": "\u2192",
          "&ShortUpArrow;": "\u2191",
          "&Sigma;": "\u03A3",
          "&SmallCircle;": "\u2218",
          "&Sopf;": "\uD835\uDD4A",
          "&Sqrt;": "\u221A",
          "&Square;": "\u25A1",
          "&SquareIntersection;": "\u2293",
          "&SquareSubset;": "\u228F",
          "&SquareSubsetEqual;": "\u2291",
          "&SquareSuperset;": "\u2290",
          "&SquareSupersetEqual;": "\u2292",
          "&SquareUnion;": "\u2294",
          "&Sscr;": "\uD835\uDCAE",
          "&Star;": "\u22C6",
          "&Sub;": "\u22D0",
          "&Subset;": "\u22D0",
          "&SubsetEqual;": "\u2286",
          "&Succeeds;": "\u227B",
          "&SucceedsEqual;": "\u2AB0",
          "&SucceedsSlantEqual;": "\u227D",
          "&SucceedsTilde;": "\u227F",
          "&SuchThat;": "\u220B",
          "&Sum;": "\u2211",
          "&Sup;": "\u22D1",
          "&Superset;": "\u2283",
          "&SupersetEqual;": "\u2287",
          "&Supset;": "\u22D1",
          "&THORN": "\xDE",
          "&THORN;": "\xDE",
          "&TRADE;": "\u2122",
          "&TSHcy;": "\u040B",
          "&TScy;": "\u0426",
          "&Tab;": "	",
          "&Tau;": "\u03A4",
          "&Tcaron;": "\u0164",
          "&Tcedil;": "\u0162",
          "&Tcy;": "\u0422",
          "&Tfr;": "\uD835\uDD17",
          "&Therefore;": "\u2234",
          "&Theta;": "\u0398",
          "&ThickSpace;": "\u205F\u200A",
          "&ThinSpace;": "\u2009",
          "&Tilde;": "\u223C",
          "&TildeEqual;": "\u2243",
          "&TildeFullEqual;": "\u2245",
          "&TildeTilde;": "\u2248",
          "&Topf;": "\uD835\uDD4B",
          "&TripleDot;": "\u20DB",
          "&Tscr;": "\uD835\uDCAF",
          "&Tstrok;": "\u0166",
          "&Uacute": "\xDA",
          "&Uacute;": "\xDA",
          "&Uarr;": "\u219F",
          "&Uarrocir;": "\u2949",
          "&Ubrcy;": "\u040E",
          "&Ubreve;": "\u016C",
          "&Ucirc": "\xDB",
          "&Ucirc;": "\xDB",
          "&Ucy;": "\u0423",
          "&Udblac;": "\u0170",
          "&Ufr;": "\uD835\uDD18",
          "&Ugrave": "\xD9",
          "&Ugrave;": "\xD9",
          "&Umacr;": "\u016A",
          "&UnderBar;": "_",
          "&UnderBrace;": "\u23DF",
          "&UnderBracket;": "\u23B5",
          "&UnderParenthesis;": "\u23DD",
          "&Union;": "\u22C3",
          "&UnionPlus;": "\u228E",
          "&Uogon;": "\u0172",
          "&Uopf;": "\uD835\uDD4C",
          "&UpArrow;": "\u2191",
          "&UpArrowBar;": "\u2912",
          "&UpArrowDownArrow;": "\u21C5",
          "&UpDownArrow;": "\u2195",
          "&UpEquilibrium;": "\u296E",
          "&UpTee;": "\u22A5",
          "&UpTeeArrow;": "\u21A5",
          "&Uparrow;": "\u21D1",
          "&Updownarrow;": "\u21D5",
          "&UpperLeftArrow;": "\u2196",
          "&UpperRightArrow;": "\u2197",
          "&Upsi;": "\u03D2",
          "&Upsilon;": "\u03A5",
          "&Uring;": "\u016E",
          "&Uscr;": "\uD835\uDCB0",
          "&Utilde;": "\u0168",
          "&Uuml": "\xDC",
          "&Uuml;": "\xDC",
          "&VDash;": "\u22AB",
          "&Vbar;": "\u2AEB",
          "&Vcy;": "\u0412",
          "&Vdash;": "\u22A9",
          "&Vdashl;": "\u2AE6",
          "&Vee;": "\u22C1",
          "&Verbar;": "\u2016",
          "&Vert;": "\u2016",
          "&VerticalBar;": "\u2223",
          "&VerticalLine;": "|",
          "&VerticalSeparator;": "\u2758",
          "&VerticalTilde;": "\u2240",
          "&VeryThinSpace;": "\u200A",
          "&Vfr;": "\uD835\uDD19",
          "&Vopf;": "\uD835\uDD4D",
          "&Vscr;": "\uD835\uDCB1",
          "&Vvdash;": "\u22AA",
          "&Wcirc;": "\u0174",
          "&Wedge;": "\u22C0",
          "&Wfr;": "\uD835\uDD1A",
          "&Wopf;": "\uD835\uDD4E",
          "&Wscr;": "\uD835\uDCB2",
          "&Xfr;": "\uD835\uDD1B",
          "&Xi;": "\u039E",
          "&Xopf;": "\uD835\uDD4F",
          "&Xscr;": "\uD835\uDCB3",
          "&YAcy;": "\u042F",
          "&YIcy;": "\u0407",
          "&YUcy;": "\u042E",
          "&Yacute": "\xDD",
          "&Yacute;": "\xDD",
          "&Ycirc;": "\u0176",
          "&Ycy;": "\u042B",
          "&Yfr;": "\uD835\uDD1C",
          "&Yopf;": "\uD835\uDD50",
          "&Yscr;": "\uD835\uDCB4",
          "&Yuml;": "\u0178",
          "&ZHcy;": "\u0416",
          "&Zacute;": "\u0179",
          "&Zcaron;": "\u017D",
          "&Zcy;": "\u0417",
          "&Zdot;": "\u017B",
          "&ZeroWidthSpace;": "\u200B",
          "&Zeta;": "\u0396",
          "&Zfr;": "\u2128",
          "&Zopf;": "\u2124",
          "&Zscr;": "\uD835\uDCB5",
          "&aacute": "\xE1",
          "&aacute;": "\xE1",
          "&abreve;": "\u0103",
          "&ac;": "\u223E",
          "&acE;": "\u223E\u0333",
          "&acd;": "\u223F",
          "&acirc": "\xE2",
          "&acirc;": "\xE2",
          "&acute": "\xB4",
          "&acute;": "\xB4",
          "&acy;": "\u0430",
          "&aelig": "\xE6",
          "&aelig;": "\xE6",
          "&af;": "\u2061",
          "&afr;": "\uD835\uDD1E",
          "&agrave": "\xE0",
          "&agrave;": "\xE0",
          "&alefsym;": "\u2135",
          "&aleph;": "\u2135",
          "&alpha;": "\u03B1",
          "&amacr;": "\u0101",
          "&amalg;": "\u2A3F",
          "&amp": "&",
          "&amp;": "&",
          "&and;": "\u2227",
          "&andand;": "\u2A55",
          "&andd;": "\u2A5C",
          "&andslope;": "\u2A58",
          "&andv;": "\u2A5A",
          "&ang;": "\u2220",
          "&ange;": "\u29A4",
          "&angle;": "\u2220",
          "&angmsd;": "\u2221",
          "&angmsdaa;": "\u29A8",
          "&angmsdab;": "\u29A9",
          "&angmsdac;": "\u29AA",
          "&angmsdad;": "\u29AB",
          "&angmsdae;": "\u29AC",
          "&angmsdaf;": "\u29AD",
          "&angmsdag;": "\u29AE",
          "&angmsdah;": "\u29AF",
          "&angrt;": "\u221F",
          "&angrtvb;": "\u22BE",
          "&angrtvbd;": "\u299D",
          "&angsph;": "\u2222",
          "&angst;": "\xC5",
          "&angzarr;": "\u237C",
          "&aogon;": "\u0105",
          "&aopf;": "\uD835\uDD52",
          "&ap;": "\u2248",
          "&apE;": "\u2A70",
          "&apacir;": "\u2A6F",
          "&ape;": "\u224A",
          "&apid;": "\u224B",
          "&apos;": "'",
          "&approx;": "\u2248",
          "&approxeq;": "\u224A",
          "&aring": "\xE5",
          "&aring;": "\xE5",
          "&ascr;": "\uD835\uDCB6",
          "&ast;": "*",
          "&asymp;": "\u2248",
          "&asympeq;": "\u224D",
          "&atilde": "\xE3",
          "&atilde;": "\xE3",
          "&auml": "\xE4",
          "&auml;": "\xE4",
          "&awconint;": "\u2233",
          "&awint;": "\u2A11",
          "&bNot;": "\u2AED",
          "&backcong;": "\u224C",
          "&backepsilon;": "\u03F6",
          "&backprime;": "\u2035",
          "&backsim;": "\u223D",
          "&backsimeq;": "\u22CD",
          "&barvee;": "\u22BD",
          "&barwed;": "\u2305",
          "&barwedge;": "\u2305",
          "&bbrk;": "\u23B5",
          "&bbrktbrk;": "\u23B6",
          "&bcong;": "\u224C",
          "&bcy;": "\u0431",
          "&bdquo;": "\u201E",
          "&becaus;": "\u2235",
          "&because;": "\u2235",
          "&bemptyv;": "\u29B0",
          "&bepsi;": "\u03F6",
          "&bernou;": "\u212C",
          "&beta;": "\u03B2",
          "&beth;": "\u2136",
          "&between;": "\u226C",
          "&bfr;": "\uD835\uDD1F",
          "&bigcap;": "\u22C2",
          "&bigcirc;": "\u25EF",
          "&bigcup;": "\u22C3",
          "&bigodot;": "\u2A00",
          "&bigoplus;": "\u2A01",
          "&bigotimes;": "\u2A02",
          "&bigsqcup;": "\u2A06",
          "&bigstar;": "\u2605",
          "&bigtriangledown;": "\u25BD",
          "&bigtriangleup;": "\u25B3",
          "&biguplus;": "\u2A04",
          "&bigvee;": "\u22C1",
          "&bigwedge;": "\u22C0",
          "&bkarow;": "\u290D",
          "&blacklozenge;": "\u29EB",
          "&blacksquare;": "\u25AA",
          "&blacktriangle;": "\u25B4",
          "&blacktriangledown;": "\u25BE",
          "&blacktriangleleft;": "\u25C2",
          "&blacktriangleright;": "\u25B8",
          "&blank;": "\u2423",
          "&blk12;": "\u2592",
          "&blk14;": "\u2591",
          "&blk34;": "\u2593",
          "&block;": "\u2588",
          "&bne;": "=\u20E5",
          "&bnequiv;": "\u2261\u20E5",
          "&bnot;": "\u2310",
          "&bopf;": "\uD835\uDD53",
          "&bot;": "\u22A5",
          "&bottom;": "\u22A5",
          "&bowtie;": "\u22C8",
          "&boxDL;": "\u2557",
          "&boxDR;": "\u2554",
          "&boxDl;": "\u2556",
          "&boxDr;": "\u2553",
          "&boxH;": "\u2550",
          "&boxHD;": "\u2566",
          "&boxHU;": "\u2569",
          "&boxHd;": "\u2564",
          "&boxHu;": "\u2567",
          "&boxUL;": "\u255D",
          "&boxUR;": "\u255A",
          "&boxUl;": "\u255C",
          "&boxUr;": "\u2559",
          "&boxV;": "\u2551",
          "&boxVH;": "\u256C",
          "&boxVL;": "\u2563",
          "&boxVR;": "\u2560",
          "&boxVh;": "\u256B",
          "&boxVl;": "\u2562",
          "&boxVr;": "\u255F",
          "&boxbox;": "\u29C9",
          "&boxdL;": "\u2555",
          "&boxdR;": "\u2552",
          "&boxdl;": "\u2510",
          "&boxdr;": "\u250C",
          "&boxh;": "\u2500",
          "&boxhD;": "\u2565",
          "&boxhU;": "\u2568",
          "&boxhd;": "\u252C",
          "&boxhu;": "\u2534",
          "&boxminus;": "\u229F",
          "&boxplus;": "\u229E",
          "&boxtimes;": "\u22A0",
          "&boxuL;": "\u255B",
          "&boxuR;": "\u2558",
          "&boxul;": "\u2518",
          "&boxur;": "\u2514",
          "&boxv;": "\u2502",
          "&boxvH;": "\u256A",
          "&boxvL;": "\u2561",
          "&boxvR;": "\u255E",
          "&boxvh;": "\u253C",
          "&boxvl;": "\u2524",
          "&boxvr;": "\u251C",
          "&bprime;": "\u2035",
          "&breve;": "\u02D8",
          "&brvbar": "\xA6",
          "&brvbar;": "\xA6",
          "&bscr;": "\uD835\uDCB7",
          "&bsemi;": "\u204F",
          "&bsim;": "\u223D",
          "&bsime;": "\u22CD",
          "&bsol;": "\\",
          "&bsolb;": "\u29C5",
          "&bsolhsub;": "\u27C8",
          "&bull;": "\u2022",
          "&bullet;": "\u2022",
          "&bump;": "\u224E",
          "&bumpE;": "\u2AAE",
          "&bumpe;": "\u224F",
          "&bumpeq;": "\u224F",
          "&cacute;": "\u0107",
          "&cap;": "\u2229",
          "&capand;": "\u2A44",
          "&capbrcup;": "\u2A49",
          "&capcap;": "\u2A4B",
          "&capcup;": "\u2A47",
          "&capdot;": "\u2A40",
          "&caps;": "\u2229\uFE00",
          "&caret;": "\u2041",
          "&caron;": "\u02C7",
          "&ccaps;": "\u2A4D",
          "&ccaron;": "\u010D",
          "&ccedil": "\xE7",
          "&ccedil;": "\xE7",
          "&ccirc;": "\u0109",
          "&ccups;": "\u2A4C",
          "&ccupssm;": "\u2A50",
          "&cdot;": "\u010B",
          "&cedil": "\xB8",
          "&cedil;": "\xB8",
          "&cemptyv;": "\u29B2",
          "&cent": "\xA2",
          "&cent;": "\xA2",
          "&centerdot;": "\xB7",
          "&cfr;": "\uD835\uDD20",
          "&chcy;": "\u0447",
          "&check;": "\u2713",
          "&checkmark;": "\u2713",
          "&chi;": "\u03C7",
          "&cir;": "\u25CB",
          "&cirE;": "\u29C3",
          "&circ;": "\u02C6",
          "&circeq;": "\u2257",
          "&circlearrowleft;": "\u21BA",
          "&circlearrowright;": "\u21BB",
          "&circledR;": "\xAE",
          "&circledS;": "\u24C8",
          "&circledast;": "\u229B",
          "&circledcirc;": "\u229A",
          "&circleddash;": "\u229D",
          "&cire;": "\u2257",
          "&cirfnint;": "\u2A10",
          "&cirmid;": "\u2AEF",
          "&cirscir;": "\u29C2",
          "&clubs;": "\u2663",
          "&clubsuit;": "\u2663",
          "&colon;": ":",
          "&colone;": "\u2254",
          "&coloneq;": "\u2254",
          "&comma;": ",",
          "&commat;": "@",
          "&comp;": "\u2201",
          "&compfn;": "\u2218",
          "&complement;": "\u2201",
          "&complexes;": "\u2102",
          "&cong;": "\u2245",
          "&congdot;": "\u2A6D",
          "&conint;": "\u222E",
          "&copf;": "\uD835\uDD54",
          "&coprod;": "\u2210",
          "&copy": "\xA9",
          "&copy;": "\xA9",
          "&copysr;": "\u2117",
          "&crarr;": "\u21B5",
          "&cross;": "\u2717",
          "&cscr;": "\uD835\uDCB8",
          "&csub;": "\u2ACF",
          "&csube;": "\u2AD1",
          "&csup;": "\u2AD0",
          "&csupe;": "\u2AD2",
          "&ctdot;": "\u22EF",
          "&cudarrl;": "\u2938",
          "&cudarrr;": "\u2935",
          "&cuepr;": "\u22DE",
          "&cuesc;": "\u22DF",
          "&cularr;": "\u21B6",
          "&cularrp;": "\u293D",
          "&cup;": "\u222A",
          "&cupbrcap;": "\u2A48",
          "&cupcap;": "\u2A46",
          "&cupcup;": "\u2A4A",
          "&cupdot;": "\u228D",
          "&cupor;": "\u2A45",
          "&cups;": "\u222A\uFE00",
          "&curarr;": "\u21B7",
          "&curarrm;": "\u293C",
          "&curlyeqprec;": "\u22DE",
          "&curlyeqsucc;": "\u22DF",
          "&curlyvee;": "\u22CE",
          "&curlywedge;": "\u22CF",
          "&curren": "\xA4",
          "&curren;": "\xA4",
          "&curvearrowleft;": "\u21B6",
          "&curvearrowright;": "\u21B7",
          "&cuvee;": "\u22CE",
          "&cuwed;": "\u22CF",
          "&cwconint;": "\u2232",
          "&cwint;": "\u2231",
          "&cylcty;": "\u232D",
          "&dArr;": "\u21D3",
          "&dHar;": "\u2965",
          "&dagger;": "\u2020",
          "&daleth;": "\u2138",
          "&darr;": "\u2193",
          "&dash;": "\u2010",
          "&dashv;": "\u22A3",
          "&dbkarow;": "\u290F",
          "&dblac;": "\u02DD",
          "&dcaron;": "\u010F",
          "&dcy;": "\u0434",
          "&dd;": "\u2146",
          "&ddagger;": "\u2021",
          "&ddarr;": "\u21CA",
          "&ddotseq;": "\u2A77",
          "&deg": "\xB0",
          "&deg;": "\xB0",
          "&delta;": "\u03B4",
          "&demptyv;": "\u29B1",
          "&dfisht;": "\u297F",
          "&dfr;": "\uD835\uDD21",
          "&dharl;": "\u21C3",
          "&dharr;": "\u21C2",
          "&diam;": "\u22C4",
          "&diamond;": "\u22C4",
          "&diamondsuit;": "\u2666",
          "&diams;": "\u2666",
          "&die;": "\xA8",
          "&digamma;": "\u03DD",
          "&disin;": "\u22F2",
          "&div;": "\xF7",
          "&divide": "\xF7",
          "&divide;": "\xF7",
          "&divideontimes;": "\u22C7",
          "&divonx;": "\u22C7",
          "&djcy;": "\u0452",
          "&dlcorn;": "\u231E",
          "&dlcrop;": "\u230D",
          "&dollar;": "$",
          "&dopf;": "\uD835\uDD55",
          "&dot;": "\u02D9",
          "&doteq;": "\u2250",
          "&doteqdot;": "\u2251",
          "&dotminus;": "\u2238",
          "&dotplus;": "\u2214",
          "&dotsquare;": "\u22A1",
          "&doublebarwedge;": "\u2306",
          "&downarrow;": "\u2193",
          "&downdownarrows;": "\u21CA",
          "&downharpoonleft;": "\u21C3",
          "&downharpoonright;": "\u21C2",
          "&drbkarow;": "\u2910",
          "&drcorn;": "\u231F",
          "&drcrop;": "\u230C",
          "&dscr;": "\uD835\uDCB9",
          "&dscy;": "\u0455",
          "&dsol;": "\u29F6",
          "&dstrok;": "\u0111",
          "&dtdot;": "\u22F1",
          "&dtri;": "\u25BF",
          "&dtrif;": "\u25BE",
          "&duarr;": "\u21F5",
          "&duhar;": "\u296F",
          "&dwangle;": "\u29A6",
          "&dzcy;": "\u045F",
          "&dzigrarr;": "\u27FF",
          "&eDDot;": "\u2A77",
          "&eDot;": "\u2251",
          "&eacute": "\xE9",
          "&eacute;": "\xE9",
          "&easter;": "\u2A6E",
          "&ecaron;": "\u011B",
          "&ecir;": "\u2256",
          "&ecirc": "\xEA",
          "&ecirc;": "\xEA",
          "&ecolon;": "\u2255",
          "&ecy;": "\u044D",
          "&edot;": "\u0117",
          "&ee;": "\u2147",
          "&efDot;": "\u2252",
          "&efr;": "\uD835\uDD22",
          "&eg;": "\u2A9A",
          "&egrave": "\xE8",
          "&egrave;": "\xE8",
          "&egs;": "\u2A96",
          "&egsdot;": "\u2A98",
          "&el;": "\u2A99",
          "&elinters;": "\u23E7",
          "&ell;": "\u2113",
          "&els;": "\u2A95",
          "&elsdot;": "\u2A97",
          "&emacr;": "\u0113",
          "&empty;": "\u2205",
          "&emptyset;": "\u2205",
          "&emptyv;": "\u2205",
          "&emsp13;": "\u2004",
          "&emsp14;": "\u2005",
          "&emsp;": "\u2003",
          "&eng;": "\u014B",
          "&ensp;": "\u2002",
          "&eogon;": "\u0119",
          "&eopf;": "\uD835\uDD56",
          "&epar;": "\u22D5",
          "&eparsl;": "\u29E3",
          "&eplus;": "\u2A71",
          "&epsi;": "\u03B5",
          "&epsilon;": "\u03B5",
          "&epsiv;": "\u03F5",
          "&eqcirc;": "\u2256",
          "&eqcolon;": "\u2255",
          "&eqsim;": "\u2242",
          "&eqslantgtr;": "\u2A96",
          "&eqslantless;": "\u2A95",
          "&equals;": "=",
          "&equest;": "\u225F",
          "&equiv;": "\u2261",
          "&equivDD;": "\u2A78",
          "&eqvparsl;": "\u29E5",
          "&erDot;": "\u2253",
          "&erarr;": "\u2971",
          "&escr;": "\u212F",
          "&esdot;": "\u2250",
          "&esim;": "\u2242",
          "&eta;": "\u03B7",
          "&eth": "\xF0",
          "&eth;": "\xF0",
          "&euml": "\xEB",
          "&euml;": "\xEB",
          "&euro;": "\u20AC",
          "&excl;": "!",
          "&exist;": "\u2203",
          "&expectation;": "\u2130",
          "&exponentiale;": "\u2147",
          "&fallingdotseq;": "\u2252",
          "&fcy;": "\u0444",
          "&female;": "\u2640",
          "&ffilig;": "\uFB03",
          "&fflig;": "\uFB00",
          "&ffllig;": "\uFB04",
          "&ffr;": "\uD835\uDD23",
          "&filig;": "\uFB01",
          "&fjlig;": "fj",
          "&flat;": "\u266D",
          "&fllig;": "\uFB02",
          "&fltns;": "\u25B1",
          "&fnof;": "\u0192",
          "&fopf;": "\uD835\uDD57",
          "&forall;": "\u2200",
          "&fork;": "\u22D4",
          "&forkv;": "\u2AD9",
          "&fpartint;": "\u2A0D",
          "&frac12": "\xBD",
          "&frac12;": "\xBD",
          "&frac13;": "\u2153",
          "&frac14": "\xBC",
          "&frac14;": "\xBC",
          "&frac15;": "\u2155",
          "&frac16;": "\u2159",
          "&frac18;": "\u215B",
          "&frac23;": "\u2154",
          "&frac25;": "\u2156",
          "&frac34": "\xBE",
          "&frac34;": "\xBE",
          "&frac35;": "\u2157",
          "&frac38;": "\u215C",
          "&frac45;": "\u2158",
          "&frac56;": "\u215A",
          "&frac58;": "\u215D",
          "&frac78;": "\u215E",
          "&frasl;": "\u2044",
          "&frown;": "\u2322",
          "&fscr;": "\uD835\uDCBB",
          "&gE;": "\u2267",
          "&gEl;": "\u2A8C",
          "&gacute;": "\u01F5",
          "&gamma;": "\u03B3",
          "&gammad;": "\u03DD",
          "&gap;": "\u2A86",
          "&gbreve;": "\u011F",
          "&gcirc;": "\u011D",
          "&gcy;": "\u0433",
          "&gdot;": "\u0121",
          "&ge;": "\u2265",
          "&gel;": "\u22DB",
          "&geq;": "\u2265",
          "&geqq;": "\u2267",
          "&geqslant;": "\u2A7E",
          "&ges;": "\u2A7E",
          "&gescc;": "\u2AA9",
          "&gesdot;": "\u2A80",
          "&gesdoto;": "\u2A82",
          "&gesdotol;": "\u2A84",
          "&gesl;": "\u22DB\uFE00",
          "&gesles;": "\u2A94",
          "&gfr;": "\uD835\uDD24",
          "&gg;": "\u226B",
          "&ggg;": "\u22D9",
          "&gimel;": "\u2137",
          "&gjcy;": "\u0453",
          "&gl;": "\u2277",
          "&glE;": "\u2A92",
          "&gla;": "\u2AA5",
          "&glj;": "\u2AA4",
          "&gnE;": "\u2269",
          "&gnap;": "\u2A8A",
          "&gnapprox;": "\u2A8A",
          "&gne;": "\u2A88",
          "&gneq;": "\u2A88",
          "&gneqq;": "\u2269",
          "&gnsim;": "\u22E7",
          "&gopf;": "\uD835\uDD58",
          "&grave;": "`",
          "&gscr;": "\u210A",
          "&gsim;": "\u2273",
          "&gsime;": "\u2A8E",
          "&gsiml;": "\u2A90",
          "&gt": ">",
          "&gt;": ">",
          "&gtcc;": "\u2AA7",
          "&gtcir;": "\u2A7A",
          "&gtdot;": "\u22D7",
          "&gtlPar;": "\u2995",
          "&gtquest;": "\u2A7C",
          "&gtrapprox;": "\u2A86",
          "&gtrarr;": "\u2978",
          "&gtrdot;": "\u22D7",
          "&gtreqless;": "\u22DB",
          "&gtreqqless;": "\u2A8C",
          "&gtrless;": "\u2277",
          "&gtrsim;": "\u2273",
          "&gvertneqq;": "\u2269\uFE00",
          "&gvnE;": "\u2269\uFE00",
          "&hArr;": "\u21D4",
          "&hairsp;": "\u200A",
          "&half;": "\xBD",
          "&hamilt;": "\u210B",
          "&hardcy;": "\u044A",
          "&harr;": "\u2194",
          "&harrcir;": "\u2948",
          "&harrw;": "\u21AD",
          "&hbar;": "\u210F",
          "&hcirc;": "\u0125",
          "&hearts;": "\u2665",
          "&heartsuit;": "\u2665",
          "&hellip;": "\u2026",
          "&hercon;": "\u22B9",
          "&hfr;": "\uD835\uDD25",
          "&hksearow;": "\u2925",
          "&hkswarow;": "\u2926",
          "&hoarr;": "\u21FF",
          "&homtht;": "\u223B",
          "&hookleftarrow;": "\u21A9",
          "&hookrightarrow;": "\u21AA",
          "&hopf;": "\uD835\uDD59",
          "&horbar;": "\u2015",
          "&hscr;": "\uD835\uDCBD",
          "&hslash;": "\u210F",
          "&hstrok;": "\u0127",
          "&hybull;": "\u2043",
          "&hyphen;": "\u2010",
          "&iacute": "\xED",
          "&iacute;": "\xED",
          "&ic;": "\u2063",
          "&icirc": "\xEE",
          "&icirc;": "\xEE",
          "&icy;": "\u0438",
          "&iecy;": "\u0435",
          "&iexcl": "\xA1",
          "&iexcl;": "\xA1",
          "&iff;": "\u21D4",
          "&ifr;": "\uD835\uDD26",
          "&igrave": "\xEC",
          "&igrave;": "\xEC",
          "&ii;": "\u2148",
          "&iiiint;": "\u2A0C",
          "&iiint;": "\u222D",
          "&iinfin;": "\u29DC",
          "&iiota;": "\u2129",
          "&ijlig;": "\u0133",
          "&imacr;": "\u012B",
          "&image;": "\u2111",
          "&imagline;": "\u2110",
          "&imagpart;": "\u2111",
          "&imath;": "\u0131",
          "&imof;": "\u22B7",
          "&imped;": "\u01B5",
          "&in;": "\u2208",
          "&incare;": "\u2105",
          "&infin;": "\u221E",
          "&infintie;": "\u29DD",
          "&inodot;": "\u0131",
          "&int;": "\u222B",
          "&intcal;": "\u22BA",
          "&integers;": "\u2124",
          "&intercal;": "\u22BA",
          "&intlarhk;": "\u2A17",
          "&intprod;": "\u2A3C",
          "&iocy;": "\u0451",
          "&iogon;": "\u012F",
          "&iopf;": "\uD835\uDD5A",
          "&iota;": "\u03B9",
          "&iprod;": "\u2A3C",
          "&iquest": "\xBF",
          "&iquest;": "\xBF",
          "&iscr;": "\uD835\uDCBE",
          "&isin;": "\u2208",
          "&isinE;": "\u22F9",
          "&isindot;": "\u22F5",
          "&isins;": "\u22F4",
          "&isinsv;": "\u22F3",
          "&isinv;": "\u2208",
          "&it;": "\u2062",
          "&itilde;": "\u0129",
          "&iukcy;": "\u0456",
          "&iuml": "\xEF",
          "&iuml;": "\xEF",
          "&jcirc;": "\u0135",
          "&jcy;": "\u0439",
          "&jfr;": "\uD835\uDD27",
          "&jmath;": "\u0237",
          "&jopf;": "\uD835\uDD5B",
          "&jscr;": "\uD835\uDCBF",
          "&jsercy;": "\u0458",
          "&jukcy;": "\u0454",
          "&kappa;": "\u03BA",
          "&kappav;": "\u03F0",
          "&kcedil;": "\u0137",
          "&kcy;": "\u043A",
          "&kfr;": "\uD835\uDD28",
          "&kgreen;": "\u0138",
          "&khcy;": "\u0445",
          "&kjcy;": "\u045C",
          "&kopf;": "\uD835\uDD5C",
          "&kscr;": "\uD835\uDCC0",
          "&lAarr;": "\u21DA",
          "&lArr;": "\u21D0",
          "&lAtail;": "\u291B",
          "&lBarr;": "\u290E",
          "&lE;": "\u2266",
          "&lEg;": "\u2A8B",
          "&lHar;": "\u2962",
          "&lacute;": "\u013A",
          "&laemptyv;": "\u29B4",
          "&lagran;": "\u2112",
          "&lambda;": "\u03BB",
          "&lang;": "\u27E8",
          "&langd;": "\u2991",
          "&langle;": "\u27E8",
          "&lap;": "\u2A85",
          "&laquo": "\xAB",
          "&laquo;": "\xAB",
          "&larr;": "\u2190",
          "&larrb;": "\u21E4",
          "&larrbfs;": "\u291F",
          "&larrfs;": "\u291D",
          "&larrhk;": "\u21A9",
          "&larrlp;": "\u21AB",
          "&larrpl;": "\u2939",
          "&larrsim;": "\u2973",
          "&larrtl;": "\u21A2",
          "&lat;": "\u2AAB",
          "&latail;": "\u2919",
          "&late;": "\u2AAD",
          "&lates;": "\u2AAD\uFE00",
          "&lbarr;": "\u290C",
          "&lbbrk;": "\u2772",
          "&lbrace;": "{",
          "&lbrack;": "[",
          "&lbrke;": "\u298B",
          "&lbrksld;": "\u298F",
          "&lbrkslu;": "\u298D",
          "&lcaron;": "\u013E",
          "&lcedil;": "\u013C",
          "&lceil;": "\u2308",
          "&lcub;": "{",
          "&lcy;": "\u043B",
          "&ldca;": "\u2936",
          "&ldquo;": "\u201C",
          "&ldquor;": "\u201E",
          "&ldrdhar;": "\u2967",
          "&ldrushar;": "\u294B",
          "&ldsh;": "\u21B2",
          "&le;": "\u2264",
          "&leftarrow;": "\u2190",
          "&leftarrowtail;": "\u21A2",
          "&leftharpoondown;": "\u21BD",
          "&leftharpoonup;": "\u21BC",
          "&leftleftarrows;": "\u21C7",
          "&leftrightarrow;": "\u2194",
          "&leftrightarrows;": "\u21C6",
          "&leftrightharpoons;": "\u21CB",
          "&leftrightsquigarrow;": "\u21AD",
          "&leftthreetimes;": "\u22CB",
          "&leg;": "\u22DA",
          "&leq;": "\u2264",
          "&leqq;": "\u2266",
          "&leqslant;": "\u2A7D",
          "&les;": "\u2A7D",
          "&lescc;": "\u2AA8",
          "&lesdot;": "\u2A7F",
          "&lesdoto;": "\u2A81",
          "&lesdotor;": "\u2A83",
          "&lesg;": "\u22DA\uFE00",
          "&lesges;": "\u2A93",
          "&lessapprox;": "\u2A85",
          "&lessdot;": "\u22D6",
          "&lesseqgtr;": "\u22DA",
          "&lesseqqgtr;": "\u2A8B",
          "&lessgtr;": "\u2276",
          "&lesssim;": "\u2272",
          "&lfisht;": "\u297C",
          "&lfloor;": "\u230A",
          "&lfr;": "\uD835\uDD29",
          "&lg;": "\u2276",
          "&lgE;": "\u2A91",
          "&lhard;": "\u21BD",
          "&lharu;": "\u21BC",
          "&lharul;": "\u296A",
          "&lhblk;": "\u2584",
          "&ljcy;": "\u0459",
          "&ll;": "\u226A",
          "&llarr;": "\u21C7",
          "&llcorner;": "\u231E",
          "&llhard;": "\u296B",
          "&lltri;": "\u25FA",
          "&lmidot;": "\u0140",
          "&lmoust;": "\u23B0",
          "&lmoustache;": "\u23B0",
          "&lnE;": "\u2268",
          "&lnap;": "\u2A89",
          "&lnapprox;": "\u2A89",
          "&lne;": "\u2A87",
          "&lneq;": "\u2A87",
          "&lneqq;": "\u2268",
          "&lnsim;": "\u22E6",
          "&loang;": "\u27EC",
          "&loarr;": "\u21FD",
          "&lobrk;": "\u27E6",
          "&longleftarrow;": "\u27F5",
          "&longleftrightarrow;": "\u27F7",
          "&longmapsto;": "\u27FC",
          "&longrightarrow;": "\u27F6",
          "&looparrowleft;": "\u21AB",
          "&looparrowright;": "\u21AC",
          "&lopar;": "\u2985",
          "&lopf;": "\uD835\uDD5D",
          "&loplus;": "\u2A2D",
          "&lotimes;": "\u2A34",
          "&lowast;": "\u2217",
          "&lowbar;": "_",
          "&loz;": "\u25CA",
          "&lozenge;": "\u25CA",
          "&lozf;": "\u29EB",
          "&lpar;": "(",
          "&lparlt;": "\u2993",
          "&lrarr;": "\u21C6",
          "&lrcorner;": "\u231F",
          "&lrhar;": "\u21CB",
          "&lrhard;": "\u296D",
          "&lrm;": "\u200E",
          "&lrtri;": "\u22BF",
          "&lsaquo;": "\u2039",
          "&lscr;": "\uD835\uDCC1",
          "&lsh;": "\u21B0",
          "&lsim;": "\u2272",
          "&lsime;": "\u2A8D",
          "&lsimg;": "\u2A8F",
          "&lsqb;": "[",
          "&lsquo;": "\u2018",
          "&lsquor;": "\u201A",
          "&lstrok;": "\u0142",
          "&lt": "<",
          "&lt;": "<",
          "&ltcc;": "\u2AA6",
          "&ltcir;": "\u2A79",
          "&ltdot;": "\u22D6",
          "&lthree;": "\u22CB",
          "&ltimes;": "\u22C9",
          "&ltlarr;": "\u2976",
          "&ltquest;": "\u2A7B",
          "&ltrPar;": "\u2996",
          "&ltri;": "\u25C3",
          "&ltrie;": "\u22B4",
          "&ltrif;": "\u25C2",
          "&lurdshar;": "\u294A",
          "&luruhar;": "\u2966",
          "&lvertneqq;": "\u2268\uFE00",
          "&lvnE;": "\u2268\uFE00",
          "&mDDot;": "\u223A",
          "&macr": "\xAF",
          "&macr;": "\xAF",
          "&male;": "\u2642",
          "&malt;": "\u2720",
          "&maltese;": "\u2720",
          "&map;": "\u21A6",
          "&mapsto;": "\u21A6",
          "&mapstodown;": "\u21A7",
          "&mapstoleft;": "\u21A4",
          "&mapstoup;": "\u21A5",
          "&marker;": "\u25AE",
          "&mcomma;": "\u2A29",
          "&mcy;": "\u043C",
          "&mdash;": "\u2014",
          "&measuredangle;": "\u2221",
          "&mfr;": "\uD835\uDD2A",
          "&mho;": "\u2127",
          "&micro": "\xB5",
          "&micro;": "\xB5",
          "&mid;": "\u2223",
          "&midast;": "*",
          "&midcir;": "\u2AF0",
          "&middot": "\xB7",
          "&middot;": "\xB7",
          "&minus;": "\u2212",
          "&minusb;": "\u229F",
          "&minusd;": "\u2238",
          "&minusdu;": "\u2A2A",
          "&mlcp;": "\u2ADB",
          "&mldr;": "\u2026",
          "&mnplus;": "\u2213",
          "&models;": "\u22A7",
          "&mopf;": "\uD835\uDD5E",
          "&mp;": "\u2213",
          "&mscr;": "\uD835\uDCC2",
          "&mstpos;": "\u223E",
          "&mu;": "\u03BC",
          "&multimap;": "\u22B8",
          "&mumap;": "\u22B8",
          "&nGg;": "\u22D9\u0338",
          "&nGt;": "\u226B\u20D2",
          "&nGtv;": "\u226B\u0338",
          "&nLeftarrow;": "\u21CD",
          "&nLeftrightarrow;": "\u21CE",
          "&nLl;": "\u22D8\u0338",
          "&nLt;": "\u226A\u20D2",
          "&nLtv;": "\u226A\u0338",
          "&nRightarrow;": "\u21CF",
          "&nVDash;": "\u22AF",
          "&nVdash;": "\u22AE",
          "&nabla;": "\u2207",
          "&nacute;": "\u0144",
          "&nang;": "\u2220\u20D2",
          "&nap;": "\u2249",
          "&napE;": "\u2A70\u0338",
          "&napid;": "\u224B\u0338",
          "&napos;": "\u0149",
          "&napprox;": "\u2249",
          "&natur;": "\u266E",
          "&natural;": "\u266E",
          "&naturals;": "\u2115",
          "&nbsp": "\xA0",
          "&nbsp;": "\xA0",
          "&nbump;": "\u224E\u0338",
          "&nbumpe;": "\u224F\u0338",
          "&ncap;": "\u2A43",
          "&ncaron;": "\u0148",
          "&ncedil;": "\u0146",
          "&ncong;": "\u2247",
          "&ncongdot;": "\u2A6D\u0338",
          "&ncup;": "\u2A42",
          "&ncy;": "\u043D",
          "&ndash;": "\u2013",
          "&ne;": "\u2260",
          "&neArr;": "\u21D7",
          "&nearhk;": "\u2924",
          "&nearr;": "\u2197",
          "&nearrow;": "\u2197",
          "&nedot;": "\u2250\u0338",
          "&nequiv;": "\u2262",
          "&nesear;": "\u2928",
          "&nesim;": "\u2242\u0338",
          "&nexist;": "\u2204",
          "&nexists;": "\u2204",
          "&nfr;": "\uD835\uDD2B",
          "&ngE;": "\u2267\u0338",
          "&nge;": "\u2271",
          "&ngeq;": "\u2271",
          "&ngeqq;": "\u2267\u0338",
          "&ngeqslant;": "\u2A7E\u0338",
          "&nges;": "\u2A7E\u0338",
          "&ngsim;": "\u2275",
          "&ngt;": "\u226F",
          "&ngtr;": "\u226F",
          "&nhArr;": "\u21CE",
          "&nharr;": "\u21AE",
          "&nhpar;": "\u2AF2",
          "&ni;": "\u220B",
          "&nis;": "\u22FC",
          "&nisd;": "\u22FA",
          "&niv;": "\u220B",
          "&njcy;": "\u045A",
          "&nlArr;": "\u21CD",
          "&nlE;": "\u2266\u0338",
          "&nlarr;": "\u219A",
          "&nldr;": "\u2025",
          "&nle;": "\u2270",
          "&nleftarrow;": "\u219A",
          "&nleftrightarrow;": "\u21AE",
          "&nleq;": "\u2270",
          "&nleqq;": "\u2266\u0338",
          "&nleqslant;": "\u2A7D\u0338",
          "&nles;": "\u2A7D\u0338",
          "&nless;": "\u226E",
          "&nlsim;": "\u2274",
          "&nlt;": "\u226E",
          "&nltri;": "\u22EA",
          "&nltrie;": "\u22EC",
          "&nmid;": "\u2224",
          "&nopf;": "\uD835\uDD5F",
          "&not": "\xAC",
          "&not;": "\xAC",
          "&notin;": "\u2209",
          "&notinE;": "\u22F9\u0338",
          "&notindot;": "\u22F5\u0338",
          "&notinva;": "\u2209",
          "&notinvb;": "\u22F7",
          "&notinvc;": "\u22F6",
          "&notni;": "\u220C",
          "&notniva;": "\u220C",
          "&notnivb;": "\u22FE",
          "&notnivc;": "\u22FD",
          "&npar;": "\u2226",
          "&nparallel;": "\u2226",
          "&nparsl;": "\u2AFD\u20E5",
          "&npart;": "\u2202\u0338",
          "&npolint;": "\u2A14",
          "&npr;": "\u2280",
          "&nprcue;": "\u22E0",
          "&npre;": "\u2AAF\u0338",
          "&nprec;": "\u2280",
          "&npreceq;": "\u2AAF\u0338",
          "&nrArr;": "\u21CF",
          "&nrarr;": "\u219B",
          "&nrarrc;": "\u2933\u0338",
          "&nrarrw;": "\u219D\u0338",
          "&nrightarrow;": "\u219B",
          "&nrtri;": "\u22EB",
          "&nrtrie;": "\u22ED",
          "&nsc;": "\u2281",
          "&nsccue;": "\u22E1",
          "&nsce;": "\u2AB0\u0338",
          "&nscr;": "\uD835\uDCC3",
          "&nshortmid;": "\u2224",
          "&nshortparallel;": "\u2226",
          "&nsim;": "\u2241",
          "&nsime;": "\u2244",
          "&nsimeq;": "\u2244",
          "&nsmid;": "\u2224",
          "&nspar;": "\u2226",
          "&nsqsube;": "\u22E2",
          "&nsqsupe;": "\u22E3",
          "&nsub;": "\u2284",
          "&nsubE;": "\u2AC5\u0338",
          "&nsube;": "\u2288",
          "&nsubset;": "\u2282\u20D2",
          "&nsubseteq;": "\u2288",
          "&nsubseteqq;": "\u2AC5\u0338",
          "&nsucc;": "\u2281",
          "&nsucceq;": "\u2AB0\u0338",
          "&nsup;": "\u2285",
          "&nsupE;": "\u2AC6\u0338",
          "&nsupe;": "\u2289",
          "&nsupset;": "\u2283\u20D2",
          "&nsupseteq;": "\u2289",
          "&nsupseteqq;": "\u2AC6\u0338",
          "&ntgl;": "\u2279",
          "&ntilde": "\xF1",
          "&ntilde;": "\xF1",
          "&ntlg;": "\u2278",
          "&ntriangleleft;": "\u22EA",
          "&ntrianglelefteq;": "\u22EC",
          "&ntriangleright;": "\u22EB",
          "&ntrianglerighteq;": "\u22ED",
          "&nu;": "\u03BD",
          "&num;": "#",
          "&numero;": "\u2116",
          "&numsp;": "\u2007",
          "&nvDash;": "\u22AD",
          "&nvHarr;": "\u2904",
          "&nvap;": "\u224D\u20D2",
          "&nvdash;": "\u22AC",
          "&nvge;": "\u2265\u20D2",
          "&nvgt;": ">\u20D2",
          "&nvinfin;": "\u29DE",
          "&nvlArr;": "\u2902",
          "&nvle;": "\u2264\u20D2",
          "&nvlt;": "<\u20D2",
          "&nvltrie;": "\u22B4\u20D2",
          "&nvrArr;": "\u2903",
          "&nvrtrie;": "\u22B5\u20D2",
          "&nvsim;": "\u223C\u20D2",
          "&nwArr;": "\u21D6",
          "&nwarhk;": "\u2923",
          "&nwarr;": "\u2196",
          "&nwarrow;": "\u2196",
          "&nwnear;": "\u2927",
          "&oS;": "\u24C8",
          "&oacute": "\xF3",
          "&oacute;": "\xF3",
          "&oast;": "\u229B",
          "&ocir;": "\u229A",
          "&ocirc": "\xF4",
          "&ocirc;": "\xF4",
          "&ocy;": "\u043E",
          "&odash;": "\u229D",
          "&odblac;": "\u0151",
          "&odiv;": "\u2A38",
          "&odot;": "\u2299",
          "&odsold;": "\u29BC",
          "&oelig;": "\u0153",
          "&ofcir;": "\u29BF",
          "&ofr;": "\uD835\uDD2C",
          "&ogon;": "\u02DB",
          "&ograve": "\xF2",
          "&ograve;": "\xF2",
          "&ogt;": "\u29C1",
          "&ohbar;": "\u29B5",
          "&ohm;": "\u03A9",
          "&oint;": "\u222E",
          "&olarr;": "\u21BA",
          "&olcir;": "\u29BE",
          "&olcross;": "\u29BB",
          "&oline;": "\u203E",
          "&olt;": "\u29C0",
          "&omacr;": "\u014D",
          "&omega;": "\u03C9",
          "&omicron;": "\u03BF",
          "&omid;": "\u29B6",
          "&ominus;": "\u2296",
          "&oopf;": "\uD835\uDD60",
          "&opar;": "\u29B7",
          "&operp;": "\u29B9",
          "&oplus;": "\u2295",
          "&or;": "\u2228",
          "&orarr;": "\u21BB",
          "&ord;": "\u2A5D",
          "&order;": "\u2134",
          "&orderof;": "\u2134",
          "&ordf": "\xAA",
          "&ordf;": "\xAA",
          "&ordm": "\xBA",
          "&ordm;": "\xBA",
          "&origof;": "\u22B6",
          "&oror;": "\u2A56",
          "&orslope;": "\u2A57",
          "&orv;": "\u2A5B",
          "&oscr;": "\u2134",
          "&oslash": "\xF8",
          "&oslash;": "\xF8",
          "&osol;": "\u2298",
          "&otilde": "\xF5",
          "&otilde;": "\xF5",
          "&otimes;": "\u2297",
          "&otimesas;": "\u2A36",
          "&ouml": "\xF6",
          "&ouml;": "\xF6",
          "&ovbar;": "\u233D",
          "&par;": "\u2225",
          "&para": "\xB6",
          "&para;": "\xB6",
          "&parallel;": "\u2225",
          "&parsim;": "\u2AF3",
          "&parsl;": "\u2AFD",
          "&part;": "\u2202",
          "&pcy;": "\u043F",
          "&percnt;": "%",
          "&period;": ".",
          "&permil;": "\u2030",
          "&perp;": "\u22A5",
          "&pertenk;": "\u2031",
          "&pfr;": "\uD835\uDD2D",
          "&phi;": "\u03C6",
          "&phiv;": "\u03D5",
          "&phmmat;": "\u2133",
          "&phone;": "\u260E",
          "&pi;": "\u03C0",
          "&pitchfork;": "\u22D4",
          "&piv;": "\u03D6",
          "&planck;": "\u210F",
          "&planckh;": "\u210E",
          "&plankv;": "\u210F",
          "&plus;": "+",
          "&plusacir;": "\u2A23",
          "&plusb;": "\u229E",
          "&pluscir;": "\u2A22",
          "&plusdo;": "\u2214",
          "&plusdu;": "\u2A25",
          "&pluse;": "\u2A72",
          "&plusmn": "\xB1",
          "&plusmn;": "\xB1",
          "&plussim;": "\u2A26",
          "&plustwo;": "\u2A27",
          "&pm;": "\xB1",
          "&pointint;": "\u2A15",
          "&popf;": "\uD835\uDD61",
          "&pound": "\xA3",
          "&pound;": "\xA3",
          "&pr;": "\u227A",
          "&prE;": "\u2AB3",
          "&prap;": "\u2AB7",
          "&prcue;": "\u227C",
          "&pre;": "\u2AAF",
          "&prec;": "\u227A",
          "&precapprox;": "\u2AB7",
          "&preccurlyeq;": "\u227C",
          "&preceq;": "\u2AAF",
          "&precnapprox;": "\u2AB9",
          "&precneqq;": "\u2AB5",
          "&precnsim;": "\u22E8",
          "&precsim;": "\u227E",
          "&prime;": "\u2032",
          "&primes;": "\u2119",
          "&prnE;": "\u2AB5",
          "&prnap;": "\u2AB9",
          "&prnsim;": "\u22E8",
          "&prod;": "\u220F",
          "&profalar;": "\u232E",
          "&profline;": "\u2312",
          "&profsurf;": "\u2313",
          "&prop;": "\u221D",
          "&propto;": "\u221D",
          "&prsim;": "\u227E",
          "&prurel;": "\u22B0",
          "&pscr;": "\uD835\uDCC5",
          "&psi;": "\u03C8",
          "&puncsp;": "\u2008",
          "&qfr;": "\uD835\uDD2E",
          "&qint;": "\u2A0C",
          "&qopf;": "\uD835\uDD62",
          "&qprime;": "\u2057",
          "&qscr;": "\uD835\uDCC6",
          "&quaternions;": "\u210D",
          "&quatint;": "\u2A16",
          "&quest;": "?",
          "&questeq;": "\u225F",
          "&quot": '"',
          "&quot;": '"',
          "&rAarr;": "\u21DB",
          "&rArr;": "\u21D2",
          "&rAtail;": "\u291C",
          "&rBarr;": "\u290F",
          "&rHar;": "\u2964",
          "&race;": "\u223D\u0331",
          "&racute;": "\u0155",
          "&radic;": "\u221A",
          "&raemptyv;": "\u29B3",
          "&rang;": "\u27E9",
          "&rangd;": "\u2992",
          "&range;": "\u29A5",
          "&rangle;": "\u27E9",
          "&raquo": "\xBB",
          "&raquo;": "\xBB",
          "&rarr;": "\u2192",
          "&rarrap;": "\u2975",
          "&rarrb;": "\u21E5",
          "&rarrbfs;": "\u2920",
          "&rarrc;": "\u2933",
          "&rarrfs;": "\u291E",
          "&rarrhk;": "\u21AA",
          "&rarrlp;": "\u21AC",
          "&rarrpl;": "\u2945",
          "&rarrsim;": "\u2974",
          "&rarrtl;": "\u21A3",
          "&rarrw;": "\u219D",
          "&ratail;": "\u291A",
          "&ratio;": "\u2236",
          "&rationals;": "\u211A",
          "&rbarr;": "\u290D",
          "&rbbrk;": "\u2773",
          "&rbrace;": "}",
          "&rbrack;": "]",
          "&rbrke;": "\u298C",
          "&rbrksld;": "\u298E",
          "&rbrkslu;": "\u2990",
          "&rcaron;": "\u0159",
          "&rcedil;": "\u0157",
          "&rceil;": "\u2309",
          "&rcub;": "}",
          "&rcy;": "\u0440",
          "&rdca;": "\u2937",
          "&rdldhar;": "\u2969",
          "&rdquo;": "\u201D",
          "&rdquor;": "\u201D",
          "&rdsh;": "\u21B3",
          "&real;": "\u211C",
          "&realine;": "\u211B",
          "&realpart;": "\u211C",
          "&reals;": "\u211D",
          "&rect;": "\u25AD",
          "&reg": "\xAE",
          "&reg;": "\xAE",
          "&rfisht;": "\u297D",
          "&rfloor;": "\u230B",
          "&rfr;": "\uD835\uDD2F",
          "&rhard;": "\u21C1",
          "&rharu;": "\u21C0",
          "&rharul;": "\u296C",
          "&rho;": "\u03C1",
          "&rhov;": "\u03F1",
          "&rightarrow;": "\u2192",
          "&rightarrowtail;": "\u21A3",
          "&rightharpoondown;": "\u21C1",
          "&rightharpoonup;": "\u21C0",
          "&rightleftarrows;": "\u21C4",
          "&rightleftharpoons;": "\u21CC",
          "&rightrightarrows;": "\u21C9",
          "&rightsquigarrow;": "\u219D",
          "&rightthreetimes;": "\u22CC",
          "&ring;": "\u02DA",
          "&risingdotseq;": "\u2253",
          "&rlarr;": "\u21C4",
          "&rlhar;": "\u21CC",
          "&rlm;": "\u200F",
          "&rmoust;": "\u23B1",
          "&rmoustache;": "\u23B1",
          "&rnmid;": "\u2AEE",
          "&roang;": "\u27ED",
          "&roarr;": "\u21FE",
          "&robrk;": "\u27E7",
          "&ropar;": "\u2986",
          "&ropf;": "\uD835\uDD63",
          "&roplus;": "\u2A2E",
          "&rotimes;": "\u2A35",
          "&rpar;": ")",
          "&rpargt;": "\u2994",
          "&rppolint;": "\u2A12",
          "&rrarr;": "\u21C9",
          "&rsaquo;": "\u203A",
          "&rscr;": "\uD835\uDCC7",
          "&rsh;": "\u21B1",
          "&rsqb;": "]",
          "&rsquo;": "\u2019",
          "&rsquor;": "\u2019",
          "&rthree;": "\u22CC",
          "&rtimes;": "\u22CA",
          "&rtri;": "\u25B9",
          "&rtrie;": "\u22B5",
          "&rtrif;": "\u25B8",
          "&rtriltri;": "\u29CE",
          "&ruluhar;": "\u2968",
          "&rx;": "\u211E",
          "&sacute;": "\u015B",
          "&sbquo;": "\u201A",
          "&sc;": "\u227B",
          "&scE;": "\u2AB4",
          "&scap;": "\u2AB8",
          "&scaron;": "\u0161",
          "&sccue;": "\u227D",
          "&sce;": "\u2AB0",
          "&scedil;": "\u015F",
          "&scirc;": "\u015D",
          "&scnE;": "\u2AB6",
          "&scnap;": "\u2ABA",
          "&scnsim;": "\u22E9",
          "&scpolint;": "\u2A13",
          "&scsim;": "\u227F",
          "&scy;": "\u0441",
          "&sdot;": "\u22C5",
          "&sdotb;": "\u22A1",
          "&sdote;": "\u2A66",
          "&seArr;": "\u21D8",
          "&searhk;": "\u2925",
          "&searr;": "\u2198",
          "&searrow;": "\u2198",
          "&sect": "\xA7",
          "&sect;": "\xA7",
          "&semi;": ";",
          "&seswar;": "\u2929",
          "&setminus;": "\u2216",
          "&setmn;": "\u2216",
          "&sext;": "\u2736",
          "&sfr;": "\uD835\uDD30",
          "&sfrown;": "\u2322",
          "&sharp;": "\u266F",
          "&shchcy;": "\u0449",
          "&shcy;": "\u0448",
          "&shortmid;": "\u2223",
          "&shortparallel;": "\u2225",
          "&shy": "\xAD",
          "&shy;": "\xAD",
          "&sigma;": "\u03C3",
          "&sigmaf;": "\u03C2",
          "&sigmav;": "\u03C2",
          "&sim;": "\u223C",
          "&simdot;": "\u2A6A",
          "&sime;": "\u2243",
          "&simeq;": "\u2243",
          "&simg;": "\u2A9E",
          "&simgE;": "\u2AA0",
          "&siml;": "\u2A9D",
          "&simlE;": "\u2A9F",
          "&simne;": "\u2246",
          "&simplus;": "\u2A24",
          "&simrarr;": "\u2972",
          "&slarr;": "\u2190",
          "&smallsetminus;": "\u2216",
          "&smashp;": "\u2A33",
          "&smeparsl;": "\u29E4",
          "&smid;": "\u2223",
          "&smile;": "\u2323",
          "&smt;": "\u2AAA",
          "&smte;": "\u2AAC",
          "&smtes;": "\u2AAC\uFE00",
          "&softcy;": "\u044C",
          "&sol;": "/",
          "&solb;": "\u29C4",
          "&solbar;": "\u233F",
          "&sopf;": "\uD835\uDD64",
          "&spades;": "\u2660",
          "&spadesuit;": "\u2660",
          "&spar;": "\u2225",
          "&sqcap;": "\u2293",
          "&sqcaps;": "\u2293\uFE00",
          "&sqcup;": "\u2294",
          "&sqcups;": "\u2294\uFE00",
          "&sqsub;": "\u228F",
          "&sqsube;": "\u2291",
          "&sqsubset;": "\u228F",
          "&sqsubseteq;": "\u2291",
          "&sqsup;": "\u2290",
          "&sqsupe;": "\u2292",
          "&sqsupset;": "\u2290",
          "&sqsupseteq;": "\u2292",
          "&squ;": "\u25A1",
          "&square;": "\u25A1",
          "&squarf;": "\u25AA",
          "&squf;": "\u25AA",
          "&srarr;": "\u2192",
          "&sscr;": "\uD835\uDCC8",
          "&ssetmn;": "\u2216",
          "&ssmile;": "\u2323",
          "&sstarf;": "\u22C6",
          "&star;": "\u2606",
          "&starf;": "\u2605",
          "&straightepsilon;": "\u03F5",
          "&straightphi;": "\u03D5",
          "&strns;": "\xAF",
          "&sub;": "\u2282",
          "&subE;": "\u2AC5",
          "&subdot;": "\u2ABD",
          "&sube;": "\u2286",
          "&subedot;": "\u2AC3",
          "&submult;": "\u2AC1",
          "&subnE;": "\u2ACB",
          "&subne;": "\u228A",
          "&subplus;": "\u2ABF",
          "&subrarr;": "\u2979",
          "&subset;": "\u2282",
          "&subseteq;": "\u2286",
          "&subseteqq;": "\u2AC5",
          "&subsetneq;": "\u228A",
          "&subsetneqq;": "\u2ACB",
          "&subsim;": "\u2AC7",
          "&subsub;": "\u2AD5",
          "&subsup;": "\u2AD3",
          "&succ;": "\u227B",
          "&succapprox;": "\u2AB8",
          "&succcurlyeq;": "\u227D",
          "&succeq;": "\u2AB0",
          "&succnapprox;": "\u2ABA",
          "&succneqq;": "\u2AB6",
          "&succnsim;": "\u22E9",
          "&succsim;": "\u227F",
          "&sum;": "\u2211",
          "&sung;": "\u266A",
          "&sup1": "\xB9",
          "&sup1;": "\xB9",
          "&sup2": "\xB2",
          "&sup2;": "\xB2",
          "&sup3": "\xB3",
          "&sup3;": "\xB3",
          "&sup;": "\u2283",
          "&supE;": "\u2AC6",
          "&supdot;": "\u2ABE",
          "&supdsub;": "\u2AD8",
          "&supe;": "\u2287",
          "&supedot;": "\u2AC4",
          "&suphsol;": "\u27C9",
          "&suphsub;": "\u2AD7",
          "&suplarr;": "\u297B",
          "&supmult;": "\u2AC2",
          "&supnE;": "\u2ACC",
          "&supne;": "\u228B",
          "&supplus;": "\u2AC0",
          "&supset;": "\u2283",
          "&supseteq;": "\u2287",
          "&supseteqq;": "\u2AC6",
          "&supsetneq;": "\u228B",
          "&supsetneqq;": "\u2ACC",
          "&supsim;": "\u2AC8",
          "&supsub;": "\u2AD4",
          "&supsup;": "\u2AD6",
          "&swArr;": "\u21D9",
          "&swarhk;": "\u2926",
          "&swarr;": "\u2199",
          "&swarrow;": "\u2199",
          "&swnwar;": "\u292A",
          "&szlig": "\xDF",
          "&szlig;": "\xDF",
          "&target;": "\u2316",
          "&tau;": "\u03C4",
          "&tbrk;": "\u23B4",
          "&tcaron;": "\u0165",
          "&tcedil;": "\u0163",
          "&tcy;": "\u0442",
          "&tdot;": "\u20DB",
          "&telrec;": "\u2315",
          "&tfr;": "\uD835\uDD31",
          "&there4;": "\u2234",
          "&therefore;": "\u2234",
          "&theta;": "\u03B8",
          "&thetasym;": "\u03D1",
          "&thetav;": "\u03D1",
          "&thickapprox;": "\u2248",
          "&thicksim;": "\u223C",
          "&thinsp;": "\u2009",
          "&thkap;": "\u2248",
          "&thksim;": "\u223C",
          "&thorn": "\xFE",
          "&thorn;": "\xFE",
          "&tilde;": "\u02DC",
          "&times": "\xD7",
          "&times;": "\xD7",
          "&timesb;": "\u22A0",
          "&timesbar;": "\u2A31",
          "&timesd;": "\u2A30",
          "&tint;": "\u222D",
          "&toea;": "\u2928",
          "&top;": "\u22A4",
          "&topbot;": "\u2336",
          "&topcir;": "\u2AF1",
          "&topf;": "\uD835\uDD65",
          "&topfork;": "\u2ADA",
          "&tosa;": "\u2929",
          "&tprime;": "\u2034",
          "&trade;": "\u2122",
          "&triangle;": "\u25B5",
          "&triangledown;": "\u25BF",
          "&triangleleft;": "\u25C3",
          "&trianglelefteq;": "\u22B4",
          "&triangleq;": "\u225C",
          "&triangleright;": "\u25B9",
          "&trianglerighteq;": "\u22B5",
          "&tridot;": "\u25EC",
          "&trie;": "\u225C",
          "&triminus;": "\u2A3A",
          "&triplus;": "\u2A39",
          "&trisb;": "\u29CD",
          "&tritime;": "\u2A3B",
          "&trpezium;": "\u23E2",
          "&tscr;": "\uD835\uDCC9",
          "&tscy;": "\u0446",
          "&tshcy;": "\u045B",
          "&tstrok;": "\u0167",
          "&twixt;": "\u226C",
          "&twoheadleftarrow;": "\u219E",
          "&twoheadrightarrow;": "\u21A0",
          "&uArr;": "\u21D1",
          "&uHar;": "\u2963",
          "&uacute": "\xFA",
          "&uacute;": "\xFA",
          "&uarr;": "\u2191",
          "&ubrcy;": "\u045E",
          "&ubreve;": "\u016D",
          "&ucirc": "\xFB",
          "&ucirc;": "\xFB",
          "&ucy;": "\u0443",
          "&udarr;": "\u21C5",
          "&udblac;": "\u0171",
          "&udhar;": "\u296E",
          "&ufisht;": "\u297E",
          "&ufr;": "\uD835\uDD32",
          "&ugrave": "\xF9",
          "&ugrave;": "\xF9",
          "&uharl;": "\u21BF",
          "&uharr;": "\u21BE",
          "&uhblk;": "\u2580",
          "&ulcorn;": "\u231C",
          "&ulcorner;": "\u231C",
          "&ulcrop;": "\u230F",
          "&ultri;": "\u25F8",
          "&umacr;": "\u016B",
          "&uml": "\xA8",
          "&uml;": "\xA8",
          "&uogon;": "\u0173",
          "&uopf;": "\uD835\uDD66",
          "&uparrow;": "\u2191",
          "&updownarrow;": "\u2195",
          "&upharpoonleft;": "\u21BF",
          "&upharpoonright;": "\u21BE",
          "&uplus;": "\u228E",
          "&upsi;": "\u03C5",
          "&upsih;": "\u03D2",
          "&upsilon;": "\u03C5",
          "&upuparrows;": "\u21C8",
          "&urcorn;": "\u231D",
          "&urcorner;": "\u231D",
          "&urcrop;": "\u230E",
          "&uring;": "\u016F",
          "&urtri;": "\u25F9",
          "&uscr;": "\uD835\uDCCA",
          "&utdot;": "\u22F0",
          "&utilde;": "\u0169",
          "&utri;": "\u25B5",
          "&utrif;": "\u25B4",
          "&uuarr;": "\u21C8",
          "&uuml": "\xFC",
          "&uuml;": "\xFC",
          "&uwangle;": "\u29A7",
          "&vArr;": "\u21D5",
          "&vBar;": "\u2AE8",
          "&vBarv;": "\u2AE9",
          "&vDash;": "\u22A8",
          "&vangrt;": "\u299C",
          "&varepsilon;": "\u03F5",
          "&varkappa;": "\u03F0",
          "&varnothing;": "\u2205",
          "&varphi;": "\u03D5",
          "&varpi;": "\u03D6",
          "&varpropto;": "\u221D",
          "&varr;": "\u2195",
          "&varrho;": "\u03F1",
          "&varsigma;": "\u03C2",
          "&varsubsetneq;": "\u228A\uFE00",
          "&varsubsetneqq;": "\u2ACB\uFE00",
          "&varsupsetneq;": "\u228B\uFE00",
          "&varsupsetneqq;": "\u2ACC\uFE00",
          "&vartheta;": "\u03D1",
          "&vartriangleleft;": "\u22B2",
          "&vartriangleright;": "\u22B3",
          "&vcy;": "\u0432",
          "&vdash;": "\u22A2",
          "&vee;": "\u2228",
          "&veebar;": "\u22BB",
          "&veeeq;": "\u225A",
          "&vellip;": "\u22EE",
          "&verbar;": "|",
          "&vert;": "|",
          "&vfr;": "\uD835\uDD33",
          "&vltri;": "\u22B2",
          "&vnsub;": "\u2282\u20D2",
          "&vnsup;": "\u2283\u20D2",
          "&vopf;": "\uD835\uDD67",
          "&vprop;": "\u221D",
          "&vrtri;": "\u22B3",
          "&vscr;": "\uD835\uDCCB",
          "&vsubnE;": "\u2ACB\uFE00",
          "&vsubne;": "\u228A\uFE00",
          "&vsupnE;": "\u2ACC\uFE00",
          "&vsupne;": "\u228B\uFE00",
          "&vzigzag;": "\u299A",
          "&wcirc;": "\u0175",
          "&wedbar;": "\u2A5F",
          "&wedge;": "\u2227",
          "&wedgeq;": "\u2259",
          "&weierp;": "\u2118",
          "&wfr;": "\uD835\uDD34",
          "&wopf;": "\uD835\uDD68",
          "&wp;": "\u2118",
          "&wr;": "\u2240",
          "&wreath;": "\u2240",
          "&wscr;": "\uD835\uDCCC",
          "&xcap;": "\u22C2",
          "&xcirc;": "\u25EF",
          "&xcup;": "\u22C3",
          "&xdtri;": "\u25BD",
          "&xfr;": "\uD835\uDD35",
          "&xhArr;": "\u27FA",
          "&xharr;": "\u27F7",
          "&xi;": "\u03BE",
          "&xlArr;": "\u27F8",
          "&xlarr;": "\u27F5",
          "&xmap;": "\u27FC",
          "&xnis;": "\u22FB",
          "&xodot;": "\u2A00",
          "&xopf;": "\uD835\uDD69",
          "&xoplus;": "\u2A01",
          "&xotime;": "\u2A02",
          "&xrArr;": "\u27F9",
          "&xrarr;": "\u27F6",
          "&xscr;": "\uD835\uDCCD",
          "&xsqcup;": "\u2A06",
          "&xuplus;": "\u2A04",
          "&xutri;": "\u25B3",
          "&xvee;": "\u22C1",
          "&xwedge;": "\u22C0",
          "&yacute": "\xFD",
          "&yacute;": "\xFD",
          "&yacy;": "\u044F",
          "&ycirc;": "\u0177",
          "&ycy;": "\u044B",
          "&yen": "\xA5",
          "&yen;": "\xA5",
          "&yfr;": "\uD835\uDD36",
          "&yicy;": "\u0457",
          "&yopf;": "\uD835\uDD6A",
          "&yscr;": "\uD835\uDCCE",
          "&yucy;": "\u044E",
          "&yuml": "\xFF",
          "&yuml;": "\xFF",
          "&zacute;": "\u017A",
          "&zcaron;": "\u017E",
          "&zcy;": "\u0437",
          "&zdot;": "\u017C",
          "&zeetrf;": "\u2128",
          "&zeta;": "\u03B6",
          "&zfr;": "\uD835\uDD37",
          "&zhcy;": "\u0436",
          "&zigrarr;": "\u21DD",
          "&zopf;": "\uD835\uDD6B",
          "&zscr;": "\uD835\uDCCF",
          "&zwj;": "\u200D",
          "&zwnj;": "\u200C"
        },
        characters: {
          "\xC6": "&AElig;",
          "&": "&amp;",
          "\xC1": "&Aacute;",
          "\u0102": "&Abreve;",
          "\xC2": "&Acirc;",
          "\u0410": "&Acy;",
          "\uD835\uDD04": "&Afr;",
          "\xC0": "&Agrave;",
          "\u0391": "&Alpha;",
          "\u0100": "&Amacr;",
          "\u2A53": "&And;",
          "\u0104": "&Aogon;",
          "\uD835\uDD38": "&Aopf;",
          "\u2061": "&af;",
          "\xC5": "&angst;",
          "\uD835\uDC9C": "&Ascr;",
          "\u2254": "&coloneq;",
          "\xC3": "&Atilde;",
          "\xC4": "&Auml;",
          "\u2216": "&ssetmn;",
          "\u2AE7": "&Barv;",
          "\u2306": "&doublebarwedge;",
          "\u0411": "&Bcy;",
          "\u2235": "&because;",
          "\u212C": "&bernou;",
          "\u0392": "&Beta;",
          "\uD835\uDD05": "&Bfr;",
          "\uD835\uDD39": "&Bopf;",
          "\u02D8": "&breve;",
          "\u224E": "&bump;",
          "\u0427": "&CHcy;",
          "\xA9": "&copy;",
          "\u0106": "&Cacute;",
          "\u22D2": "&Cap;",
          "\u2145": "&DD;",
          "\u212D": "&Cfr;",
          "\u010C": "&Ccaron;",
          "\xC7": "&Ccedil;",
          "\u0108": "&Ccirc;",
          "\u2230": "&Cconint;",
          "\u010A": "&Cdot;",
          "\xB8": "&cedil;",
          "\xB7": "&middot;",
          "\u03A7": "&Chi;",
          "\u2299": "&odot;",
          "\u2296": "&ominus;",
          "\u2295": "&oplus;",
          "\u2297": "&otimes;",
          "\u2232": "&cwconint;",
          "\u201D": "&rdquor;",
          "\u2019": "&rsquor;",
          "\u2237": "&Proportion;",
          "\u2A74": "&Colone;",
          "\u2261": "&equiv;",
          "\u222F": "&DoubleContourIntegral;",
          "\u222E": "&oint;",
          "\u2102": "&complexes;",
          "\u2210": "&coprod;",
          "\u2233": "&awconint;",
          "\u2A2F": "&Cross;",
          "\uD835\uDC9E": "&Cscr;",
          "\u22D3": "&Cup;",
          "\u224D": "&asympeq;",
          "\u2911": "&DDotrahd;",
          "\u0402": "&DJcy;",
          "\u0405": "&DScy;",
          "\u040F": "&DZcy;",
          "\u2021": "&ddagger;",
          "\u21A1": "&Darr;",
          "\u2AE4": "&DoubleLeftTee;",
          "\u010E": "&Dcaron;",
          "\u0414": "&Dcy;",
          "\u2207": "&nabla;",
          "\u0394": "&Delta;",
          "\uD835\uDD07": "&Dfr;",
          "\xB4": "&acute;",
          "\u02D9": "&dot;",
          "\u02DD": "&dblac;",
          "`": "&grave;",
          "\u02DC": "&tilde;",
          "\u22C4": "&diamond;",
          "\u2146": "&dd;",
          "\uD835\uDD3B": "&Dopf;",
          "\xA8": "&uml;",
          "\u20DC": "&DotDot;",
          "\u2250": "&esdot;",
          "\u21D3": "&dArr;",
          "\u21D0": "&lArr;",
          "\u21D4": "&iff;",
          "\u27F8": "&xlArr;",
          "\u27FA": "&xhArr;",
          "\u27F9": "&xrArr;",
          "\u21D2": "&rArr;",
          "\u22A8": "&vDash;",
          "\u21D1": "&uArr;",
          "\u21D5": "&vArr;",
          "\u2225": "&spar;",
          "\u2193": "&downarrow;",
          "\u2913": "&DownArrowBar;",
          "\u21F5": "&duarr;",
          "\u0311": "&DownBreve;",
          "\u2950": "&DownLeftRightVector;",
          "\u295E": "&DownLeftTeeVector;",
          "\u21BD": "&lhard;",
          "\u2956": "&DownLeftVectorBar;",
          "\u295F": "&DownRightTeeVector;",
          "\u21C1": "&rightharpoondown;",
          "\u2957": "&DownRightVectorBar;",
          "\u22A4": "&top;",
          "\u21A7": "&mapstodown;",
          "\uD835\uDC9F": "&Dscr;",
          "\u0110": "&Dstrok;",
          "\u014A": "&ENG;",
          "\xD0": "&ETH;",
          "\xC9": "&Eacute;",
          "\u011A": "&Ecaron;",
          "\xCA": "&Ecirc;",
          "\u042D": "&Ecy;",
          "\u0116": "&Edot;",
          "\uD835\uDD08": "&Efr;",
          "\xC8": "&Egrave;",
          "\u2208": "&isinv;",
          "\u0112": "&Emacr;",
          "\u25FB": "&EmptySmallSquare;",
          "\u25AB": "&EmptyVerySmallSquare;",
          "\u0118": "&Eogon;",
          "\uD835\uDD3C": "&Eopf;",
          "\u0395": "&Epsilon;",
          "\u2A75": "&Equal;",
          "\u2242": "&esim;",
          "\u21CC": "&rlhar;",
          "\u2130": "&expectation;",
          "\u2A73": "&Esim;",
          "\u0397": "&Eta;",
          "\xCB": "&Euml;",
          "\u2203": "&exist;",
          "\u2147": "&exponentiale;",
          "\u0424": "&Fcy;",
          "\uD835\uDD09": "&Ffr;",
          "\u25FC": "&FilledSmallSquare;",
          "\u25AA": "&squf;",
          "\uD835\uDD3D": "&Fopf;",
          "\u2200": "&forall;",
          "\u2131": "&Fscr;",
          "\u0403": "&GJcy;",
          ">": "&gt;",
          "\u0393": "&Gamma;",
          "\u03DC": "&Gammad;",
          "\u011E": "&Gbreve;",
          "\u0122": "&Gcedil;",
          "\u011C": "&Gcirc;",
          "\u0413": "&Gcy;",
          "\u0120": "&Gdot;",
          "\uD835\uDD0A": "&Gfr;",
          "\u22D9": "&ggg;",
          "\uD835\uDD3E": "&Gopf;",
          "\u2265": "&geq;",
          "\u22DB": "&gtreqless;",
          "\u2267": "&geqq;",
          "\u2AA2": "&GreaterGreater;",
          "\u2277": "&gtrless;",
          "\u2A7E": "&ges;",
          "\u2273": "&gtrsim;",
          "\uD835\uDCA2": "&Gscr;",
          "\u226B": "&gg;",
          "\u042A": "&HARDcy;",
          "\u02C7": "&caron;",
          "^": "&Hat;",
          "\u0124": "&Hcirc;",
          "\u210C": "&Poincareplane;",
          "\u210B": "&hamilt;",
          "\u210D": "&quaternions;",
          "\u2500": "&boxh;",
          "\u0126": "&Hstrok;",
          "\u224F": "&bumpeq;",
          "\u0415": "&IEcy;",
          "\u0132": "&IJlig;",
          "\u0401": "&IOcy;",
          "\xCD": "&Iacute;",
          "\xCE": "&Icirc;",
          "\u0418": "&Icy;",
          "\u0130": "&Idot;",
          "\u2111": "&imagpart;",
          "\xCC": "&Igrave;",
          "\u012A": "&Imacr;",
          "\u2148": "&ii;",
          "\u222C": "&Int;",
          "\u222B": "&int;",
          "\u22C2": "&xcap;",
          "\u2063": "&ic;",
          "\u2062": "&it;",
          "\u012E": "&Iogon;",
          "\uD835\uDD40": "&Iopf;",
          "\u0399": "&Iota;",
          "\u2110": "&imagline;",
          "\u0128": "&Itilde;",
          "\u0406": "&Iukcy;",
          "\xCF": "&Iuml;",
          "\u0134": "&Jcirc;",
          "\u0419": "&Jcy;",
          "\uD835\uDD0D": "&Jfr;",
          "\uD835\uDD41": "&Jopf;",
          "\uD835\uDCA5": "&Jscr;",
          "\u0408": "&Jsercy;",
          "\u0404": "&Jukcy;",
          "\u0425": "&KHcy;",
          "\u040C": "&KJcy;",
          "\u039A": "&Kappa;",
          "\u0136": "&Kcedil;",
          "\u041A": "&Kcy;",
          "\uD835\uDD0E": "&Kfr;",
          "\uD835\uDD42": "&Kopf;",
          "\uD835\uDCA6": "&Kscr;",
          "\u0409": "&LJcy;",
          "<": "&lt;",
          "\u0139": "&Lacute;",
          "\u039B": "&Lambda;",
          "\u27EA": "&Lang;",
          "\u2112": "&lagran;",
          "\u219E": "&twoheadleftarrow;",
          "\u013D": "&Lcaron;",
          "\u013B": "&Lcedil;",
          "\u041B": "&Lcy;",
          "\u27E8": "&langle;",
          "\u2190": "&slarr;",
          "\u21E4": "&larrb;",
          "\u21C6": "&lrarr;",
          "\u2308": "&lceil;",
          "\u27E6": "&lobrk;",
          "\u2961": "&LeftDownTeeVector;",
          "\u21C3": "&downharpoonleft;",
          "\u2959": "&LeftDownVectorBar;",
          "\u230A": "&lfloor;",
          "\u2194": "&leftrightarrow;",
          "\u294E": "&LeftRightVector;",
          "\u22A3": "&dashv;",
          "\u21A4": "&mapstoleft;",
          "\u295A": "&LeftTeeVector;",
          "\u22B2": "&vltri;",
          "\u29CF": "&LeftTriangleBar;",
          "\u22B4": "&trianglelefteq;",
          "\u2951": "&LeftUpDownVector;",
          "\u2960": "&LeftUpTeeVector;",
          "\u21BF": "&upharpoonleft;",
          "\u2958": "&LeftUpVectorBar;",
          "\u21BC": "&lharu;",
          "\u2952": "&LeftVectorBar;",
          "\u22DA": "&lesseqgtr;",
          "\u2266": "&leqq;",
          "\u2276": "&lg;",
          "\u2AA1": "&LessLess;",
          "\u2A7D": "&les;",
          "\u2272": "&lsim;",
          "\uD835\uDD0F": "&Lfr;",
          "\u22D8": "&Ll;",
          "\u21DA": "&lAarr;",
          "\u013F": "&Lmidot;",
          "\u27F5": "&xlarr;",
          "\u27F7": "&xharr;",
          "\u27F6": "&xrarr;",
          "\uD835\uDD43": "&Lopf;",
          "\u2199": "&swarrow;",
          "\u2198": "&searrow;",
          "\u21B0": "&lsh;",
          "\u0141": "&Lstrok;",
          "\u226A": "&ll;",
          "\u2905": "&Map;",
          "\u041C": "&Mcy;",
          "\u205F": "&MediumSpace;",
          "\u2133": "&phmmat;",
          "\uD835\uDD10": "&Mfr;",
          "\u2213": "&mp;",
          "\uD835\uDD44": "&Mopf;",
          "\u039C": "&Mu;",
          "\u040A": "&NJcy;",
          "\u0143": "&Nacute;",
          "\u0147": "&Ncaron;",
          "\u0145": "&Ncedil;",
          "\u041D": "&Ncy;",
          "\u200B": "&ZeroWidthSpace;",
          "\n": "&NewLine;",
          "\uD835\uDD11": "&Nfr;",
          "\u2060": "&NoBreak;",
          "\xA0": "&nbsp;",
          "\u2115": "&naturals;",
          "\u2AEC": "&Not;",
          "\u2262": "&nequiv;",
          "\u226D": "&NotCupCap;",
          "\u2226": "&nspar;",
          "\u2209": "&notinva;",
          "\u2260": "&ne;",
          "\u2242\u0338": "&nesim;",
          "\u2204": "&nexists;",
          "\u226F": "&ngtr;",
          "\u2271": "&ngeq;",
          "\u2267\u0338": "&ngeqq;",
          "\u226B\u0338": "&nGtv;",
          "\u2279": "&ntgl;",
          "\u2A7E\u0338": "&nges;",
          "\u2275": "&ngsim;",
          "\u224E\u0338": "&nbump;",
          "\u224F\u0338": "&nbumpe;",
          "\u22EA": "&ntriangleleft;",
          "\u29CF\u0338": "&NotLeftTriangleBar;",
          "\u22EC": "&ntrianglelefteq;",
          "\u226E": "&nlt;",
          "\u2270": "&nleq;",
          "\u2278": "&ntlg;",
          "\u226A\u0338": "&nLtv;",
          "\u2A7D\u0338": "&nles;",
          "\u2274": "&nlsim;",
          "\u2AA2\u0338": "&NotNestedGreaterGreater;",
          "\u2AA1\u0338": "&NotNestedLessLess;",
          "\u2280": "&nprec;",
          "\u2AAF\u0338": "&npreceq;",
          "\u22E0": "&nprcue;",
          "\u220C": "&notniva;",
          "\u22EB": "&ntriangleright;",
          "\u29D0\u0338": "&NotRightTriangleBar;",
          "\u22ED": "&ntrianglerighteq;",
          "\u228F\u0338": "&NotSquareSubset;",
          "\u22E2": "&nsqsube;",
          "\u2290\u0338": "&NotSquareSuperset;",
          "\u22E3": "&nsqsupe;",
          "\u2282\u20D2": "&vnsub;",
          "\u2288": "&nsubseteq;",
          "\u2281": "&nsucc;",
          "\u2AB0\u0338": "&nsucceq;",
          "\u22E1": "&nsccue;",
          "\u227F\u0338": "&NotSucceedsTilde;",
          "\u2283\u20D2": "&vnsup;",
          "\u2289": "&nsupseteq;",
          "\u2241": "&nsim;",
          "\u2244": "&nsimeq;",
          "\u2247": "&ncong;",
          "\u2249": "&napprox;",
          "\u2224": "&nsmid;",
          "\uD835\uDCA9": "&Nscr;",
          "\xD1": "&Ntilde;",
          "\u039D": "&Nu;",
          "\u0152": "&OElig;",
          "\xD3": "&Oacute;",
          "\xD4": "&Ocirc;",
          "\u041E": "&Ocy;",
          "\u0150": "&Odblac;",
          "\uD835\uDD12": "&Ofr;",
          "\xD2": "&Ograve;",
          "\u014C": "&Omacr;",
          "\u03A9": "&ohm;",
          "\u039F": "&Omicron;",
          "\uD835\uDD46": "&Oopf;",
          "\u201C": "&ldquo;",
          "\u2018": "&lsquo;",
          "\u2A54": "&Or;",
          "\uD835\uDCAA": "&Oscr;",
          "\xD8": "&Oslash;",
          "\xD5": "&Otilde;",
          "\u2A37": "&Otimes;",
          "\xD6": "&Ouml;",
          "\u203E": "&oline;",
          "\u23DE": "&OverBrace;",
          "\u23B4": "&tbrk;",
          "\u23DC": "&OverParenthesis;",
          "\u2202": "&part;",
          "\u041F": "&Pcy;",
          "\uD835\uDD13": "&Pfr;",
          "\u03A6": "&Phi;",
          "\u03A0": "&Pi;",
          "\xB1": "&pm;",
          "\u2119": "&primes;",
          "\u2ABB": "&Pr;",
          "\u227A": "&prec;",
          "\u2AAF": "&preceq;",
          "\u227C": "&preccurlyeq;",
          "\u227E": "&prsim;",
          "\u2033": "&Prime;",
          "\u220F": "&prod;",
          "\u221D": "&vprop;",
          "\uD835\uDCAB": "&Pscr;",
          "\u03A8": "&Psi;",
          '"': "&quot;",
          "\uD835\uDD14": "&Qfr;",
          "\u211A": "&rationals;",
          "\uD835\uDCAC": "&Qscr;",
          "\u2910": "&drbkarow;",
          "\xAE": "&reg;",
          "\u0154": "&Racute;",
          "\u27EB": "&Rang;",
          "\u21A0": "&twoheadrightarrow;",
          "\u2916": "&Rarrtl;",
          "\u0158": "&Rcaron;",
          "\u0156": "&Rcedil;",
          "\u0420": "&Rcy;",
          "\u211C": "&realpart;",
          "\u220B": "&niv;",
          "\u21CB": "&lrhar;",
          "\u296F": "&duhar;",
          "\u03A1": "&Rho;",
          "\u27E9": "&rangle;",
          "\u2192": "&srarr;",
          "\u21E5": "&rarrb;",
          "\u21C4": "&rlarr;",
          "\u2309": "&rceil;",
          "\u27E7": "&robrk;",
          "\u295D": "&RightDownTeeVector;",
          "\u21C2": "&downharpoonright;",
          "\u2955": "&RightDownVectorBar;",
          "\u230B": "&rfloor;",
          "\u22A2": "&vdash;",
          "\u21A6": "&mapsto;",
          "\u295B": "&RightTeeVector;",
          "\u22B3": "&vrtri;",
          "\u29D0": "&RightTriangleBar;",
          "\u22B5": "&trianglerighteq;",
          "\u294F": "&RightUpDownVector;",
          "\u295C": "&RightUpTeeVector;",
          "\u21BE": "&upharpoonright;",
          "\u2954": "&RightUpVectorBar;",
          "\u21C0": "&rightharpoonup;",
          "\u2953": "&RightVectorBar;",
          "\u211D": "&reals;",
          "\u2970": "&RoundImplies;",
          "\u21DB": "&rAarr;",
          "\u211B": "&realine;",
          "\u21B1": "&rsh;",
          "\u29F4": "&RuleDelayed;",
          "\u0429": "&SHCHcy;",
          "\u0428": "&SHcy;",
          "\u042C": "&SOFTcy;",
          "\u015A": "&Sacute;",
          "\u2ABC": "&Sc;",
          "\u0160": "&Scaron;",
          "\u015E": "&Scedil;",
          "\u015C": "&Scirc;",
          "\u0421": "&Scy;",
          "\uD835\uDD16": "&Sfr;",
          "\u2191": "&uparrow;",
          "\u03A3": "&Sigma;",
          "\u2218": "&compfn;",
          "\uD835\uDD4A": "&Sopf;",
          "\u221A": "&radic;",
          "\u25A1": "&square;",
          "\u2293": "&sqcap;",
          "\u228F": "&sqsubset;",
          "\u2291": "&sqsubseteq;",
          "\u2290": "&sqsupset;",
          "\u2292": "&sqsupseteq;",
          "\u2294": "&sqcup;",
          "\uD835\uDCAE": "&Sscr;",
          "\u22C6": "&sstarf;",
          "\u22D0": "&Subset;",
          "\u2286": "&subseteq;",
          "\u227B": "&succ;",
          "\u2AB0": "&succeq;",
          "\u227D": "&succcurlyeq;",
          "\u227F": "&succsim;",
          "\u2211": "&sum;",
          "\u22D1": "&Supset;",
          "\u2283": "&supset;",
          "\u2287": "&supseteq;",
          "\xDE": "&THORN;",
          "\u2122": "&trade;",
          "\u040B": "&TSHcy;",
          "\u0426": "&TScy;",
          "	": "&Tab;",
          "\u03A4": "&Tau;",
          "\u0164": "&Tcaron;",
          "\u0162": "&Tcedil;",
          "\u0422": "&Tcy;",
          "\uD835\uDD17": "&Tfr;",
          "\u2234": "&therefore;",
          "\u0398": "&Theta;",
          "\u205F\u200A": "&ThickSpace;",
          "\u2009": "&thinsp;",
          "\u223C": "&thksim;",
          "\u2243": "&simeq;",
          "\u2245": "&cong;",
          "\u2248": "&thkap;",
          "\uD835\uDD4B": "&Topf;",
          "\u20DB": "&tdot;",
          "\uD835\uDCAF": "&Tscr;",
          "\u0166": "&Tstrok;",
          "\xDA": "&Uacute;",
          "\u219F": "&Uarr;",
          "\u2949": "&Uarrocir;",
          "\u040E": "&Ubrcy;",
          "\u016C": "&Ubreve;",
          "\xDB": "&Ucirc;",
          "\u0423": "&Ucy;",
          "\u0170": "&Udblac;",
          "\uD835\uDD18": "&Ufr;",
          "\xD9": "&Ugrave;",
          "\u016A": "&Umacr;",
          _: "&lowbar;",
          "\u23DF": "&UnderBrace;",
          "\u23B5": "&bbrk;",
          "\u23DD": "&UnderParenthesis;",
          "\u22C3": "&xcup;",
          "\u228E": "&uplus;",
          "\u0172": "&Uogon;",
          "\uD835\uDD4C": "&Uopf;",
          "\u2912": "&UpArrowBar;",
          "\u21C5": "&udarr;",
          "\u2195": "&varr;",
          "\u296E": "&udhar;",
          "\u22A5": "&perp;",
          "\u21A5": "&mapstoup;",
          "\u2196": "&nwarrow;",
          "\u2197": "&nearrow;",
          "\u03D2": "&upsih;",
          "\u03A5": "&Upsilon;",
          "\u016E": "&Uring;",
          "\uD835\uDCB0": "&Uscr;",
          "\u0168": "&Utilde;",
          "\xDC": "&Uuml;",
          "\u22AB": "&VDash;",
          "\u2AEB": "&Vbar;",
          "\u0412": "&Vcy;",
          "\u22A9": "&Vdash;",
          "\u2AE6": "&Vdashl;",
          "\u22C1": "&xvee;",
          "\u2016": "&Vert;",
          "\u2223": "&smid;",
          "|": "&vert;",
          "\u2758": "&VerticalSeparator;",
          "\u2240": "&wreath;",
          "\u200A": "&hairsp;",
          "\uD835\uDD19": "&Vfr;",
          "\uD835\uDD4D": "&Vopf;",
          "\uD835\uDCB1": "&Vscr;",
          "\u22AA": "&Vvdash;",
          "\u0174": "&Wcirc;",
          "\u22C0": "&xwedge;",
          "\uD835\uDD1A": "&Wfr;",
          "\uD835\uDD4E": "&Wopf;",
          "\uD835\uDCB2": "&Wscr;",
          "\uD835\uDD1B": "&Xfr;",
          "\u039E": "&Xi;",
          "\uD835\uDD4F": "&Xopf;",
          "\uD835\uDCB3": "&Xscr;",
          "\u042F": "&YAcy;",
          "\u0407": "&YIcy;",
          "\u042E": "&YUcy;",
          "\xDD": "&Yacute;",
          "\u0176": "&Ycirc;",
          "\u042B": "&Ycy;",
          "\uD835\uDD1C": "&Yfr;",
          "\uD835\uDD50": "&Yopf;",
          "\uD835\uDCB4": "&Yscr;",
          "\u0178": "&Yuml;",
          "\u0416": "&ZHcy;",
          "\u0179": "&Zacute;",
          "\u017D": "&Zcaron;",
          "\u0417": "&Zcy;",
          "\u017B": "&Zdot;",
          "\u0396": "&Zeta;",
          "\u2128": "&zeetrf;",
          "\u2124": "&integers;",
          "\uD835\uDCB5": "&Zscr;",
          "\xE1": "&aacute;",
          "\u0103": "&abreve;",
          "\u223E": "&mstpos;",
          "\u223E\u0333": "&acE;",
          "\u223F": "&acd;",
          "\xE2": "&acirc;",
          "\u0430": "&acy;",
          "\xE6": "&aelig;",
          "\uD835\uDD1E": "&afr;",
          "\xE0": "&agrave;",
          "\u2135": "&aleph;",
          "\u03B1": "&alpha;",
          "\u0101": "&amacr;",
          "\u2A3F": "&amalg;",
          "\u2227": "&wedge;",
          "\u2A55": "&andand;",
          "\u2A5C": "&andd;",
          "\u2A58": "&andslope;",
          "\u2A5A": "&andv;",
          "\u2220": "&angle;",
          "\u29A4": "&ange;",
          "\u2221": "&measuredangle;",
          "\u29A8": "&angmsdaa;",
          "\u29A9": "&angmsdab;",
          "\u29AA": "&angmsdac;",
          "\u29AB": "&angmsdad;",
          "\u29AC": "&angmsdae;",
          "\u29AD": "&angmsdaf;",
          "\u29AE": "&angmsdag;",
          "\u29AF": "&angmsdah;",
          "\u221F": "&angrt;",
          "\u22BE": "&angrtvb;",
          "\u299D": "&angrtvbd;",
          "\u2222": "&angsph;",
          "\u237C": "&angzarr;",
          "\u0105": "&aogon;",
          "\uD835\uDD52": "&aopf;",
          "\u2A70": "&apE;",
          "\u2A6F": "&apacir;",
          "\u224A": "&approxeq;",
          "\u224B": "&apid;",
          "'": "&apos;",
          "\xE5": "&aring;",
          "\uD835\uDCB6": "&ascr;",
          "*": "&midast;",
          "\xE3": "&atilde;",
          "\xE4": "&auml;",
          "\u2A11": "&awint;",
          "\u2AED": "&bNot;",
          "\u224C": "&bcong;",
          "\u03F6": "&bepsi;",
          "\u2035": "&bprime;",
          "\u223D": "&bsim;",
          "\u22CD": "&bsime;",
          "\u22BD": "&barvee;",
          "\u2305": "&barwedge;",
          "\u23B6": "&bbrktbrk;",
          "\u0431": "&bcy;",
          "\u201E": "&ldquor;",
          "\u29B0": "&bemptyv;",
          "\u03B2": "&beta;",
          "\u2136": "&beth;",
          "\u226C": "&twixt;",
          "\uD835\uDD1F": "&bfr;",
          "\u25EF": "&xcirc;",
          "\u2A00": "&xodot;",
          "\u2A01": "&xoplus;",
          "\u2A02": "&xotime;",
          "\u2A06": "&xsqcup;",
          "\u2605": "&starf;",
          "\u25BD": "&xdtri;",
          "\u25B3": "&xutri;",
          "\u2A04": "&xuplus;",
          "\u290D": "&rbarr;",
          "\u29EB": "&lozf;",
          "\u25B4": "&utrif;",
          "\u25BE": "&dtrif;",
          "\u25C2": "&ltrif;",
          "\u25B8": "&rtrif;",
          "\u2423": "&blank;",
          "\u2592": "&blk12;",
          "\u2591": "&blk14;",
          "\u2593": "&blk34;",
          "\u2588": "&block;",
          "=\u20E5": "&bne;",
          "\u2261\u20E5": "&bnequiv;",
          "\u2310": "&bnot;",
          "\uD835\uDD53": "&bopf;",
          "\u22C8": "&bowtie;",
          "\u2557": "&boxDL;",
          "\u2554": "&boxDR;",
          "\u2556": "&boxDl;",
          "\u2553": "&boxDr;",
          "\u2550": "&boxH;",
          "\u2566": "&boxHD;",
          "\u2569": "&boxHU;",
          "\u2564": "&boxHd;",
          "\u2567": "&boxHu;",
          "\u255D": "&boxUL;",
          "\u255A": "&boxUR;",
          "\u255C": "&boxUl;",
          "\u2559": "&boxUr;",
          "\u2551": "&boxV;",
          "\u256C": "&boxVH;",
          "\u2563": "&boxVL;",
          "\u2560": "&boxVR;",
          "\u256B": "&boxVh;",
          "\u2562": "&boxVl;",
          "\u255F": "&boxVr;",
          "\u29C9": "&boxbox;",
          "\u2555": "&boxdL;",
          "\u2552": "&boxdR;",
          "\u2510": "&boxdl;",
          "\u250C": "&boxdr;",
          "\u2565": "&boxhD;",
          "\u2568": "&boxhU;",
          "\u252C": "&boxhd;",
          "\u2534": "&boxhu;",
          "\u229F": "&minusb;",
          "\u229E": "&plusb;",
          "\u22A0": "&timesb;",
          "\u255B": "&boxuL;",
          "\u2558": "&boxuR;",
          "\u2518": "&boxul;",
          "\u2514": "&boxur;",
          "\u2502": "&boxv;",
          "\u256A": "&boxvH;",
          "\u2561": "&boxvL;",
          "\u255E": "&boxvR;",
          "\u253C": "&boxvh;",
          "\u2524": "&boxvl;",
          "\u251C": "&boxvr;",
          "\xA6": "&brvbar;",
          "\uD835\uDCB7": "&bscr;",
          "\u204F": "&bsemi;",
          "\\": "&bsol;",
          "\u29C5": "&bsolb;",
          "\u27C8": "&bsolhsub;",
          "\u2022": "&bullet;",
          "\u2AAE": "&bumpE;",
          "\u0107": "&cacute;",
          "\u2229": "&cap;",
          "\u2A44": "&capand;",
          "\u2A49": "&capbrcup;",
          "\u2A4B": "&capcap;",
          "\u2A47": "&capcup;",
          "\u2A40": "&capdot;",
          "\u2229\uFE00": "&caps;",
          "\u2041": "&caret;",
          "\u2A4D": "&ccaps;",
          "\u010D": "&ccaron;",
          "\xE7": "&ccedil;",
          "\u0109": "&ccirc;",
          "\u2A4C": "&ccups;",
          "\u2A50": "&ccupssm;",
          "\u010B": "&cdot;",
          "\u29B2": "&cemptyv;",
          "\xA2": "&cent;",
          "\uD835\uDD20": "&cfr;",
          "\u0447": "&chcy;",
          "\u2713": "&checkmark;",
          "\u03C7": "&chi;",
          "\u25CB": "&cir;",
          "\u29C3": "&cirE;",
          "\u02C6": "&circ;",
          "\u2257": "&cire;",
          "\u21BA": "&olarr;",
          "\u21BB": "&orarr;",
          "\u24C8": "&oS;",
          "\u229B": "&oast;",
          "\u229A": "&ocir;",
          "\u229D": "&odash;",
          "\u2A10": "&cirfnint;",
          "\u2AEF": "&cirmid;",
          "\u29C2": "&cirscir;",
          "\u2663": "&clubsuit;",
          ":": "&colon;",
          ",": "&comma;",
          "@": "&commat;",
          "\u2201": "&complement;",
          "\u2A6D": "&congdot;",
          "\uD835\uDD54": "&copf;",
          "\u2117": "&copysr;",
          "\u21B5": "&crarr;",
          "\u2717": "&cross;",
          "\uD835\uDCB8": "&cscr;",
          "\u2ACF": "&csub;",
          "\u2AD1": "&csube;",
          "\u2AD0": "&csup;",
          "\u2AD2": "&csupe;",
          "\u22EF": "&ctdot;",
          "\u2938": "&cudarrl;",
          "\u2935": "&cudarrr;",
          "\u22DE": "&curlyeqprec;",
          "\u22DF": "&curlyeqsucc;",
          "\u21B6": "&curvearrowleft;",
          "\u293D": "&cularrp;",
          "\u222A": "&cup;",
          "\u2A48": "&cupbrcap;",
          "\u2A46": "&cupcap;",
          "\u2A4A": "&cupcup;",
          "\u228D": "&cupdot;",
          "\u2A45": "&cupor;",
          "\u222A\uFE00": "&cups;",
          "\u21B7": "&curvearrowright;",
          "\u293C": "&curarrm;",
          "\u22CE": "&cuvee;",
          "\u22CF": "&cuwed;",
          "\xA4": "&curren;",
          "\u2231": "&cwint;",
          "\u232D": "&cylcty;",
          "\u2965": "&dHar;",
          "\u2020": "&dagger;",
          "\u2138": "&daleth;",
          "\u2010": "&hyphen;",
          "\u290F": "&rBarr;",
          "\u010F": "&dcaron;",
          "\u0434": "&dcy;",
          "\u21CA": "&downdownarrows;",
          "\u2A77": "&eDDot;",
          "\xB0": "&deg;",
          "\u03B4": "&delta;",
          "\u29B1": "&demptyv;",
          "\u297F": "&dfisht;",
          "\uD835\uDD21": "&dfr;",
          "\u2666": "&diams;",
          "\u03DD": "&gammad;",
          "\u22F2": "&disin;",
          "\xF7": "&divide;",
          "\u22C7": "&divonx;",
          "\u0452": "&djcy;",
          "\u231E": "&llcorner;",
          "\u230D": "&dlcrop;",
          $: "&dollar;",
          "\uD835\uDD55": "&dopf;",
          "\u2251": "&eDot;",
          "\u2238": "&minusd;",
          "\u2214": "&plusdo;",
          "\u22A1": "&sdotb;",
          "\u231F": "&lrcorner;",
          "\u230C": "&drcrop;",
          "\uD835\uDCB9": "&dscr;",
          "\u0455": "&dscy;",
          "\u29F6": "&dsol;",
          "\u0111": "&dstrok;",
          "\u22F1": "&dtdot;",
          "\u25BF": "&triangledown;",
          "\u29A6": "&dwangle;",
          "\u045F": "&dzcy;",
          "\u27FF": "&dzigrarr;",
          "\xE9": "&eacute;",
          "\u2A6E": "&easter;",
          "\u011B": "&ecaron;",
          "\u2256": "&eqcirc;",
          "\xEA": "&ecirc;",
          "\u2255": "&eqcolon;",
          "\u044D": "&ecy;",
          "\u0117": "&edot;",
          "\u2252": "&fallingdotseq;",
          "\uD835\uDD22": "&efr;",
          "\u2A9A": "&eg;",
          "\xE8": "&egrave;",
          "\u2A96": "&eqslantgtr;",
          "\u2A98": "&egsdot;",
          "\u2A99": "&el;",
          "\u23E7": "&elinters;",
          "\u2113": "&ell;",
          "\u2A95": "&eqslantless;",
          "\u2A97": "&elsdot;",
          "\u0113": "&emacr;",
          "\u2205": "&varnothing;",
          "\u2004": "&emsp13;",
          "\u2005": "&emsp14;",
          "\u2003": "&emsp;",
          "\u014B": "&eng;",
          "\u2002": "&ensp;",
          "\u0119": "&eogon;",
          "\uD835\uDD56": "&eopf;",
          "\u22D5": "&epar;",
          "\u29E3": "&eparsl;",
          "\u2A71": "&eplus;",
          "\u03B5": "&epsilon;",
          "\u03F5": "&varepsilon;",
          "=": "&equals;",
          "\u225F": "&questeq;",
          "\u2A78": "&equivDD;",
          "\u29E5": "&eqvparsl;",
          "\u2253": "&risingdotseq;",
          "\u2971": "&erarr;",
          "\u212F": "&escr;",
          "\u03B7": "&eta;",
          "\xF0": "&eth;",
          "\xEB": "&euml;",
          "\u20AC": "&euro;",
          "!": "&excl;",
          "\u0444": "&fcy;",
          "\u2640": "&female;",
          "\uFB03": "&ffilig;",
          "\uFB00": "&fflig;",
          "\uFB04": "&ffllig;",
          "\uD835\uDD23": "&ffr;",
          "\uFB01": "&filig;",
          fj: "&fjlig;",
          "\u266D": "&flat;",
          "\uFB02": "&fllig;",
          "\u25B1": "&fltns;",
          "\u0192": "&fnof;",
          "\uD835\uDD57": "&fopf;",
          "\u22D4": "&pitchfork;",
          "\u2AD9": "&forkv;",
          "\u2A0D": "&fpartint;",
          "\xBD": "&half;",
          "\u2153": "&frac13;",
          "\xBC": "&frac14;",
          "\u2155": "&frac15;",
          "\u2159": "&frac16;",
          "\u215B": "&frac18;",
          "\u2154": "&frac23;",
          "\u2156": "&frac25;",
          "\xBE": "&frac34;",
          "\u2157": "&frac35;",
          "\u215C": "&frac38;",
          "\u2158": "&frac45;",
          "\u215A": "&frac56;",
          "\u215D": "&frac58;",
          "\u215E": "&frac78;",
          "\u2044": "&frasl;",
          "\u2322": "&sfrown;",
          "\uD835\uDCBB": "&fscr;",
          "\u2A8C": "&gtreqqless;",
          "\u01F5": "&gacute;",
          "\u03B3": "&gamma;",
          "\u2A86": "&gtrapprox;",
          "\u011F": "&gbreve;",
          "\u011D": "&gcirc;",
          "\u0433": "&gcy;",
          "\u0121": "&gdot;",
          "\u2AA9": "&gescc;",
          "\u2A80": "&gesdot;",
          "\u2A82": "&gesdoto;",
          "\u2A84": "&gesdotol;",
          "\u22DB\uFE00": "&gesl;",
          "\u2A94": "&gesles;",
          "\uD835\uDD24": "&gfr;",
          "\u2137": "&gimel;",
          "\u0453": "&gjcy;",
          "\u2A92": "&glE;",
          "\u2AA5": "&gla;",
          "\u2AA4": "&glj;",
          "\u2269": "&gneqq;",
          "\u2A8A": "&gnapprox;",
          "\u2A88": "&gneq;",
          "\u22E7": "&gnsim;",
          "\uD835\uDD58": "&gopf;",
          "\u210A": "&gscr;",
          "\u2A8E": "&gsime;",
          "\u2A90": "&gsiml;",
          "\u2AA7": "&gtcc;",
          "\u2A7A": "&gtcir;",
          "\u22D7": "&gtrdot;",
          "\u2995": "&gtlPar;",
          "\u2A7C": "&gtquest;",
          "\u2978": "&gtrarr;",
          "\u2269\uFE00": "&gvnE;",
          "\u044A": "&hardcy;",
          "\u2948": "&harrcir;",
          "\u21AD": "&leftrightsquigarrow;",
          "\u210F": "&plankv;",
          "\u0125": "&hcirc;",
          "\u2665": "&heartsuit;",
          "\u2026": "&mldr;",
          "\u22B9": "&hercon;",
          "\uD835\uDD25": "&hfr;",
          "\u2925": "&searhk;",
          "\u2926": "&swarhk;",
          "\u21FF": "&hoarr;",
          "\u223B": "&homtht;",
          "\u21A9": "&larrhk;",
          "\u21AA": "&rarrhk;",
          "\uD835\uDD59": "&hopf;",
          "\u2015": "&horbar;",
          "\uD835\uDCBD": "&hscr;",
          "\u0127": "&hstrok;",
          "\u2043": "&hybull;",
          "\xED": "&iacute;",
          "\xEE": "&icirc;",
          "\u0438": "&icy;",
          "\u0435": "&iecy;",
          "\xA1": "&iexcl;",
          "\uD835\uDD26": "&ifr;",
          "\xEC": "&igrave;",
          "\u2A0C": "&qint;",
          "\u222D": "&tint;",
          "\u29DC": "&iinfin;",
          "\u2129": "&iiota;",
          "\u0133": "&ijlig;",
          "\u012B": "&imacr;",
          "\u0131": "&inodot;",
          "\u22B7": "&imof;",
          "\u01B5": "&imped;",
          "\u2105": "&incare;",
          "\u221E": "&infin;",
          "\u29DD": "&infintie;",
          "\u22BA": "&intercal;",
          "\u2A17": "&intlarhk;",
          "\u2A3C": "&iprod;",
          "\u0451": "&iocy;",
          "\u012F": "&iogon;",
          "\uD835\uDD5A": "&iopf;",
          "\u03B9": "&iota;",
          "\xBF": "&iquest;",
          "\uD835\uDCBE": "&iscr;",
          "\u22F9": "&isinE;",
          "\u22F5": "&isindot;",
          "\u22F4": "&isins;",
          "\u22F3": "&isinsv;",
          "\u0129": "&itilde;",
          "\u0456": "&iukcy;",
          "\xEF": "&iuml;",
          "\u0135": "&jcirc;",
          "\u0439": "&jcy;",
          "\uD835\uDD27": "&jfr;",
          "\u0237": "&jmath;",
          "\uD835\uDD5B": "&jopf;",
          "\uD835\uDCBF": "&jscr;",
          "\u0458": "&jsercy;",
          "\u0454": "&jukcy;",
          "\u03BA": "&kappa;",
          "\u03F0": "&varkappa;",
          "\u0137": "&kcedil;",
          "\u043A": "&kcy;",
          "\uD835\uDD28": "&kfr;",
          "\u0138": "&kgreen;",
          "\u0445": "&khcy;",
          "\u045C": "&kjcy;",
          "\uD835\uDD5C": "&kopf;",
          "\uD835\uDCC0": "&kscr;",
          "\u291B": "&lAtail;",
          "\u290E": "&lBarr;",
          "\u2A8B": "&lesseqqgtr;",
          "\u2962": "&lHar;",
          "\u013A": "&lacute;",
          "\u29B4": "&laemptyv;",
          "\u03BB": "&lambda;",
          "\u2991": "&langd;",
          "\u2A85": "&lessapprox;",
          "\xAB": "&laquo;",
          "\u291F": "&larrbfs;",
          "\u291D": "&larrfs;",
          "\u21AB": "&looparrowleft;",
          "\u2939": "&larrpl;",
          "\u2973": "&larrsim;",
          "\u21A2": "&leftarrowtail;",
          "\u2AAB": "&lat;",
          "\u2919": "&latail;",
          "\u2AAD": "&late;",
          "\u2AAD\uFE00": "&lates;",
          "\u290C": "&lbarr;",
          "\u2772": "&lbbrk;",
          "{": "&lcub;",
          "[": "&lsqb;",
          "\u298B": "&lbrke;",
          "\u298F": "&lbrksld;",
          "\u298D": "&lbrkslu;",
          "\u013E": "&lcaron;",
          "\u013C": "&lcedil;",
          "\u043B": "&lcy;",
          "\u2936": "&ldca;",
          "\u2967": "&ldrdhar;",
          "\u294B": "&ldrushar;",
          "\u21B2": "&ldsh;",
          "\u2264": "&leq;",
          "\u21C7": "&llarr;",
          "\u22CB": "&lthree;",
          "\u2AA8": "&lescc;",
          "\u2A7F": "&lesdot;",
          "\u2A81": "&lesdoto;",
          "\u2A83": "&lesdotor;",
          "\u22DA\uFE00": "&lesg;",
          "\u2A93": "&lesges;",
          "\u22D6": "&ltdot;",
          "\u297C": "&lfisht;",
          "\uD835\uDD29": "&lfr;",
          "\u2A91": "&lgE;",
          "\u296A": "&lharul;",
          "\u2584": "&lhblk;",
          "\u0459": "&ljcy;",
          "\u296B": "&llhard;",
          "\u25FA": "&lltri;",
          "\u0140": "&lmidot;",
          "\u23B0": "&lmoustache;",
          "\u2268": "&lneqq;",
          "\u2A89": "&lnapprox;",
          "\u2A87": "&lneq;",
          "\u22E6": "&lnsim;",
          "\u27EC": "&loang;",
          "\u21FD": "&loarr;",
          "\u27FC": "&xmap;",
          "\u21AC": "&rarrlp;",
          "\u2985": "&lopar;",
          "\uD835\uDD5D": "&lopf;",
          "\u2A2D": "&loplus;",
          "\u2A34": "&lotimes;",
          "\u2217": "&lowast;",
          "\u25CA": "&lozenge;",
          "(": "&lpar;",
          "\u2993": "&lparlt;",
          "\u296D": "&lrhard;",
          "\u200E": "&lrm;",
          "\u22BF": "&lrtri;",
          "\u2039": "&lsaquo;",
          "\uD835\uDCC1": "&lscr;",
          "\u2A8D": "&lsime;",
          "\u2A8F": "&lsimg;",
          "\u201A": "&sbquo;",
          "\u0142": "&lstrok;",
          "\u2AA6": "&ltcc;",
          "\u2A79": "&ltcir;",
          "\u22C9": "&ltimes;",
          "\u2976": "&ltlarr;",
          "\u2A7B": "&ltquest;",
          "\u2996": "&ltrPar;",
          "\u25C3": "&triangleleft;",
          "\u294A": "&lurdshar;",
          "\u2966": "&luruhar;",
          "\u2268\uFE00": "&lvnE;",
          "\u223A": "&mDDot;",
          "\xAF": "&strns;",
          "\u2642": "&male;",
          "\u2720": "&maltese;",
          "\u25AE": "&marker;",
          "\u2A29": "&mcomma;",
          "\u043C": "&mcy;",
          "\u2014": "&mdash;",
          "\uD835\uDD2A": "&mfr;",
          "\u2127": "&mho;",
          "\xB5": "&micro;",
          "\u2AF0": "&midcir;",
          "\u2212": "&minus;",
          "\u2A2A": "&minusdu;",
          "\u2ADB": "&mlcp;",
          "\u22A7": "&models;",
          "\uD835\uDD5E": "&mopf;",
          "\uD835\uDCC2": "&mscr;",
          "\u03BC": "&mu;",
          "\u22B8": "&mumap;",
          "\u22D9\u0338": "&nGg;",
          "\u226B\u20D2": "&nGt;",
          "\u21CD": "&nlArr;",
          "\u21CE": "&nhArr;",
          "\u22D8\u0338": "&nLl;",
          "\u226A\u20D2": "&nLt;",
          "\u21CF": "&nrArr;",
          "\u22AF": "&nVDash;",
          "\u22AE": "&nVdash;",
          "\u0144": "&nacute;",
          "\u2220\u20D2": "&nang;",
          "\u2A70\u0338": "&napE;",
          "\u224B\u0338": "&napid;",
          "\u0149": "&napos;",
          "\u266E": "&natural;",
          "\u2A43": "&ncap;",
          "\u0148": "&ncaron;",
          "\u0146": "&ncedil;",
          "\u2A6D\u0338": "&ncongdot;",
          "\u2A42": "&ncup;",
          "\u043D": "&ncy;",
          "\u2013": "&ndash;",
          "\u21D7": "&neArr;",
          "\u2924": "&nearhk;",
          "\u2250\u0338": "&nedot;",
          "\u2928": "&toea;",
          "\uD835\uDD2B": "&nfr;",
          "\u21AE": "&nleftrightarrow;",
          "\u2AF2": "&nhpar;",
          "\u22FC": "&nis;",
          "\u22FA": "&nisd;",
          "\u045A": "&njcy;",
          "\u2266\u0338": "&nleqq;",
          "\u219A": "&nleftarrow;",
          "\u2025": "&nldr;",
          "\uD835\uDD5F": "&nopf;",
          "\xAC": "&not;",
          "\u22F9\u0338": "&notinE;",
          "\u22F5\u0338": "&notindot;",
          "\u22F7": "&notinvb;",
          "\u22F6": "&notinvc;",
          "\u22FE": "&notnivb;",
          "\u22FD": "&notnivc;",
          "\u2AFD\u20E5": "&nparsl;",
          "\u2202\u0338": "&npart;",
          "\u2A14": "&npolint;",
          "\u219B": "&nrightarrow;",
          "\u2933\u0338": "&nrarrc;",
          "\u219D\u0338": "&nrarrw;",
          "\uD835\uDCC3": "&nscr;",
          "\u2284": "&nsub;",
          "\u2AC5\u0338": "&nsubseteqq;",
          "\u2285": "&nsup;",
          "\u2AC6\u0338": "&nsupseteqq;",
          "\xF1": "&ntilde;",
          "\u03BD": "&nu;",
          "#": "&num;",
          "\u2116": "&numero;",
          "\u2007": "&numsp;",
          "\u22AD": "&nvDash;",
          "\u2904": "&nvHarr;",
          "\u224D\u20D2": "&nvap;",
          "\u22AC": "&nvdash;",
          "\u2265\u20D2": "&nvge;",
          ">\u20D2": "&nvgt;",
          "\u29DE": "&nvinfin;",
          "\u2902": "&nvlArr;",
          "\u2264\u20D2": "&nvle;",
          "<\u20D2": "&nvlt;",
          "\u22B4\u20D2": "&nvltrie;",
          "\u2903": "&nvrArr;",
          "\u22B5\u20D2": "&nvrtrie;",
          "\u223C\u20D2": "&nvsim;",
          "\u21D6": "&nwArr;",
          "\u2923": "&nwarhk;",
          "\u2927": "&nwnear;",
          "\xF3": "&oacute;",
          "\xF4": "&ocirc;",
          "\u043E": "&ocy;",
          "\u0151": "&odblac;",
          "\u2A38": "&odiv;",
          "\u29BC": "&odsold;",
          "\u0153": "&oelig;",
          "\u29BF": "&ofcir;",
          "\uD835\uDD2C": "&ofr;",
          "\u02DB": "&ogon;",
          "\xF2": "&ograve;",
          "\u29C1": "&ogt;",
          "\u29B5": "&ohbar;",
          "\u29BE": "&olcir;",
          "\u29BB": "&olcross;",
          "\u29C0": "&olt;",
          "\u014D": "&omacr;",
          "\u03C9": "&omega;",
          "\u03BF": "&omicron;",
          "\u29B6": "&omid;",
          "\uD835\uDD60": "&oopf;",
          "\u29B7": "&opar;",
          "\u29B9": "&operp;",
          "\u2228": "&vee;",
          "\u2A5D": "&ord;",
          "\u2134": "&oscr;",
          "\xAA": "&ordf;",
          "\xBA": "&ordm;",
          "\u22B6": "&origof;",
          "\u2A56": "&oror;",
          "\u2A57": "&orslope;",
          "\u2A5B": "&orv;",
          "\xF8": "&oslash;",
          "\u2298": "&osol;",
          "\xF5": "&otilde;",
          "\u2A36": "&otimesas;",
          "\xF6": "&ouml;",
          "\u233D": "&ovbar;",
          "\xB6": "&para;",
          "\u2AF3": "&parsim;",
          "\u2AFD": "&parsl;",
          "\u043F": "&pcy;",
          "%": "&percnt;",
          ".": "&period;",
          "\u2030": "&permil;",
          "\u2031": "&pertenk;",
          "\uD835\uDD2D": "&pfr;",
          "\u03C6": "&phi;",
          "\u03D5": "&varphi;",
          "\u260E": "&phone;",
          "\u03C0": "&pi;",
          "\u03D6": "&varpi;",
          "\u210E": "&planckh;",
          "+": "&plus;",
          "\u2A23": "&plusacir;",
          "\u2A22": "&pluscir;",
          "\u2A25": "&plusdu;",
          "\u2A72": "&pluse;",
          "\u2A26": "&plussim;",
          "\u2A27": "&plustwo;",
          "\u2A15": "&pointint;",
          "\uD835\uDD61": "&popf;",
          "\xA3": "&pound;",
          "\u2AB3": "&prE;",
          "\u2AB7": "&precapprox;",
          "\u2AB9": "&prnap;",
          "\u2AB5": "&prnE;",
          "\u22E8": "&prnsim;",
          "\u2032": "&prime;",
          "\u232E": "&profalar;",
          "\u2312": "&profline;",
          "\u2313": "&profsurf;",
          "\u22B0": "&prurel;",
          "\uD835\uDCC5": "&pscr;",
          "\u03C8": "&psi;",
          "\u2008": "&puncsp;",
          "\uD835\uDD2E": "&qfr;",
          "\uD835\uDD62": "&qopf;",
          "\u2057": "&qprime;",
          "\uD835\uDCC6": "&qscr;",
          "\u2A16": "&quatint;",
          "?": "&quest;",
          "\u291C": "&rAtail;",
          "\u2964": "&rHar;",
          "\u223D\u0331": "&race;",
          "\u0155": "&racute;",
          "\u29B3": "&raemptyv;",
          "\u2992": "&rangd;",
          "\u29A5": "&range;",
          "\xBB": "&raquo;",
          "\u2975": "&rarrap;",
          "\u2920": "&rarrbfs;",
          "\u2933": "&rarrc;",
          "\u291E": "&rarrfs;",
          "\u2945": "&rarrpl;",
          "\u2974": "&rarrsim;",
          "\u21A3": "&rightarrowtail;",
          "\u219D": "&rightsquigarrow;",
          "\u291A": "&ratail;",
          "\u2236": "&ratio;",
          "\u2773": "&rbbrk;",
          "}": "&rcub;",
          "]": "&rsqb;",
          "\u298C": "&rbrke;",
          "\u298E": "&rbrksld;",
          "\u2990": "&rbrkslu;",
          "\u0159": "&rcaron;",
          "\u0157": "&rcedil;",
          "\u0440": "&rcy;",
          "\u2937": "&rdca;",
          "\u2969": "&rdldhar;",
          "\u21B3": "&rdsh;",
          "\u25AD": "&rect;",
          "\u297D": "&rfisht;",
          "\uD835\uDD2F": "&rfr;",
          "\u296C": "&rharul;",
          "\u03C1": "&rho;",
          "\u03F1": "&varrho;",
          "\u21C9": "&rrarr;",
          "\u22CC": "&rthree;",
          "\u02DA": "&ring;",
          "\u200F": "&rlm;",
          "\u23B1": "&rmoustache;",
          "\u2AEE": "&rnmid;",
          "\u27ED": "&roang;",
          "\u21FE": "&roarr;",
          "\u2986": "&ropar;",
          "\uD835\uDD63": "&ropf;",
          "\u2A2E": "&roplus;",
          "\u2A35": "&rotimes;",
          ")": "&rpar;",
          "\u2994": "&rpargt;",
          "\u2A12": "&rppolint;",
          "\u203A": "&rsaquo;",
          "\uD835\uDCC7": "&rscr;",
          "\u22CA": "&rtimes;",
          "\u25B9": "&triangleright;",
          "\u29CE": "&rtriltri;",
          "\u2968": "&ruluhar;",
          "\u211E": "&rx;",
          "\u015B": "&sacute;",
          "\u2AB4": "&scE;",
          "\u2AB8": "&succapprox;",
          "\u0161": "&scaron;",
          "\u015F": "&scedil;",
          "\u015D": "&scirc;",
          "\u2AB6": "&succneqq;",
          "\u2ABA": "&succnapprox;",
          "\u22E9": "&succnsim;",
          "\u2A13": "&scpolint;",
          "\u0441": "&scy;",
          "\u22C5": "&sdot;",
          "\u2A66": "&sdote;",
          "\u21D8": "&seArr;",
          "\xA7": "&sect;",
          ";": "&semi;",
          "\u2929": "&tosa;",
          "\u2736": "&sext;",
          "\uD835\uDD30": "&sfr;",
          "\u266F": "&sharp;",
          "\u0449": "&shchcy;",
          "\u0448": "&shcy;",
          "\xAD": "&shy;",
          "\u03C3": "&sigma;",
          "\u03C2": "&varsigma;",
          "\u2A6A": "&simdot;",
          "\u2A9E": "&simg;",
          "\u2AA0": "&simgE;",
          "\u2A9D": "&siml;",
          "\u2A9F": "&simlE;",
          "\u2246": "&simne;",
          "\u2A24": "&simplus;",
          "\u2972": "&simrarr;",
          "\u2A33": "&smashp;",
          "\u29E4": "&smeparsl;",
          "\u2323": "&ssmile;",
          "\u2AAA": "&smt;",
          "\u2AAC": "&smte;",
          "\u2AAC\uFE00": "&smtes;",
          "\u044C": "&softcy;",
          "/": "&sol;",
          "\u29C4": "&solb;",
          "\u233F": "&solbar;",
          "\uD835\uDD64": "&sopf;",
          "\u2660": "&spadesuit;",
          "\u2293\uFE00": "&sqcaps;",
          "\u2294\uFE00": "&sqcups;",
          "\uD835\uDCC8": "&sscr;",
          "\u2606": "&star;",
          "\u2282": "&subset;",
          "\u2AC5": "&subseteqq;",
          "\u2ABD": "&subdot;",
          "\u2AC3": "&subedot;",
          "\u2AC1": "&submult;",
          "\u2ACB": "&subsetneqq;",
          "\u228A": "&subsetneq;",
          "\u2ABF": "&subplus;",
          "\u2979": "&subrarr;",
          "\u2AC7": "&subsim;",
          "\u2AD5": "&subsub;",
          "\u2AD3": "&subsup;",
          "\u266A": "&sung;",
          "\xB9": "&sup1;",
          "\xB2": "&sup2;",
          "\xB3": "&sup3;",
          "\u2AC6": "&supseteqq;",
          "\u2ABE": "&supdot;",
          "\u2AD8": "&supdsub;",
          "\u2AC4": "&supedot;",
          "\u27C9": "&suphsol;",
          "\u2AD7": "&suphsub;",
          "\u297B": "&suplarr;",
          "\u2AC2": "&supmult;",
          "\u2ACC": "&supsetneqq;",
          "\u228B": "&supsetneq;",
          "\u2AC0": "&supplus;",
          "\u2AC8": "&supsim;",
          "\u2AD4": "&supsub;",
          "\u2AD6": "&supsup;",
          "\u21D9": "&swArr;",
          "\u292A": "&swnwar;",
          "\xDF": "&szlig;",
          "\u2316": "&target;",
          "\u03C4": "&tau;",
          "\u0165": "&tcaron;",
          "\u0163": "&tcedil;",
          "\u0442": "&tcy;",
          "\u2315": "&telrec;",
          "\uD835\uDD31": "&tfr;",
          "\u03B8": "&theta;",
          "\u03D1": "&vartheta;",
          "\xFE": "&thorn;",
          "\xD7": "&times;",
          "\u2A31": "&timesbar;",
          "\u2A30": "&timesd;",
          "\u2336": "&topbot;",
          "\u2AF1": "&topcir;",
          "\uD835\uDD65": "&topf;",
          "\u2ADA": "&topfork;",
          "\u2034": "&tprime;",
          "\u25B5": "&utri;",
          "\u225C": "&trie;",
          "\u25EC": "&tridot;",
          "\u2A3A": "&triminus;",
          "\u2A39": "&triplus;",
          "\u29CD": "&trisb;",
          "\u2A3B": "&tritime;",
          "\u23E2": "&trpezium;",
          "\uD835\uDCC9": "&tscr;",
          "\u0446": "&tscy;",
          "\u045B": "&tshcy;",
          "\u0167": "&tstrok;",
          "\u2963": "&uHar;",
          "\xFA": "&uacute;",
          "\u045E": "&ubrcy;",
          "\u016D": "&ubreve;",
          "\xFB": "&ucirc;",
          "\u0443": "&ucy;",
          "\u0171": "&udblac;",
          "\u297E": "&ufisht;",
          "\uD835\uDD32": "&ufr;",
          "\xF9": "&ugrave;",
          "\u2580": "&uhblk;",
          "\u231C": "&ulcorner;",
          "\u230F": "&ulcrop;",
          "\u25F8": "&ultri;",
          "\u016B": "&umacr;",
          "\u0173": "&uogon;",
          "\uD835\uDD66": "&uopf;",
          "\u03C5": "&upsilon;",
          "\u21C8": "&uuarr;",
          "\u231D": "&urcorner;",
          "\u230E": "&urcrop;",
          "\u016F": "&uring;",
          "\u25F9": "&urtri;",
          "\uD835\uDCCA": "&uscr;",
          "\u22F0": "&utdot;",
          "\u0169": "&utilde;",
          "\xFC": "&uuml;",
          "\u29A7": "&uwangle;",
          "\u2AE8": "&vBar;",
          "\u2AE9": "&vBarv;",
          "\u299C": "&vangrt;",
          "\u228A\uFE00": "&vsubne;",
          "\u2ACB\uFE00": "&vsubnE;",
          "\u228B\uFE00": "&vsupne;",
          "\u2ACC\uFE00": "&vsupnE;",
          "\u0432": "&vcy;",
          "\u22BB": "&veebar;",
          "\u225A": "&veeeq;",
          "\u22EE": "&vellip;",
          "\uD835\uDD33": "&vfr;",
          "\uD835\uDD67": "&vopf;",
          "\uD835\uDCCB": "&vscr;",
          "\u299A": "&vzigzag;",
          "\u0175": "&wcirc;",
          "\u2A5F": "&wedbar;",
          "\u2259": "&wedgeq;",
          "\u2118": "&wp;",
          "\uD835\uDD34": "&wfr;",
          "\uD835\uDD68": "&wopf;",
          "\uD835\uDCCC": "&wscr;",
          "\uD835\uDD35": "&xfr;",
          "\u03BE": "&xi;",
          "\u22FB": "&xnis;",
          "\uD835\uDD69": "&xopf;",
          "\uD835\uDCCD": "&xscr;",
          "\xFD": "&yacute;",
          "\u044F": "&yacy;",
          "\u0177": "&ycirc;",
          "\u044B": "&ycy;",
          "\xA5": "&yen;",
          "\uD835\uDD36": "&yfr;",
          "\u0457": "&yicy;",
          "\uD835\uDD6A": "&yopf;",
          "\uD835\uDCCE": "&yscr;",
          "\u044E": "&yucy;",
          "\xFF": "&yuml;",
          "\u017A": "&zacute;",
          "\u017E": "&zcaron;",
          "\u0437": "&zcy;",
          "\u017C": "&zdot;",
          "\u03B6": "&zeta;",
          "\uD835\uDD37": "&zfr;",
          "\u0436": "&zhcy;",
          "\u21DD": "&zigrarr;",
          "\uD835\uDD6B": "&zopf;",
          "\uD835\uDCCF": "&zscr;",
          "\u200D": "&zwj;",
          "\u200C": "&zwnj;"
        }
      }
    };
  }
});

// node_modules/html-entities/lib/numeric-unicode-map.js
var require_numeric_unicode_map = __commonJS({
  "node_modules/html-entities/lib/numeric-unicode-map.js": function(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.numericUnicodeMap = {
      0: 65533,
      128: 8364,
      130: 8218,
      131: 402,
      132: 8222,
      133: 8230,
      134: 8224,
      135: 8225,
      136: 710,
      137: 8240,
      138: 352,
      139: 8249,
      140: 338,
      142: 381,
      145: 8216,
      146: 8217,
      147: 8220,
      148: 8221,
      149: 8226,
      150: 8211,
      151: 8212,
      152: 732,
      153: 8482,
      154: 353,
      155: 8250,
      156: 339,
      158: 382,
      159: 376
    };
  }
});

// node_modules/html-entities/lib/surrogate-pairs.js
var require_surrogate_pairs = __commonJS({
  "node_modules/html-entities/lib/surrogate-pairs.js": function(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.fromCodePoint = String.fromCodePoint || function(astralCodePoint) {
      return String.fromCharCode(Math.floor((astralCodePoint - 65536) / 1024) + 55296, (astralCodePoint - 65536) % 1024 + 56320);
    };
    exports2.getCodePoint = String.prototype.codePointAt ? function(input, position) {
      return input.codePointAt(position);
    } : function(input, position) {
      return (input.charCodeAt(position) - 55296) * 1024 + input.charCodeAt(position + 1) - 56320 + 65536;
    };
    exports2.highSurrogateFrom = 55296;
    exports2.highSurrogateTo = 56319;
  }
});

// node_modules/html-entities/lib/index.js
var require_lib = __commonJS({
  "node_modules/html-entities/lib/index.js": function(exports2) {
    "use strict";
    var __assign = exports2 && exports2.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    var named_references_1 = require_named_references();
    var numeric_unicode_map_1 = require_numeric_unicode_map();
    var surrogate_pairs_1 = require_surrogate_pairs();
    var allNamedReferences = __assign(__assign({}, named_references_1.namedReferences), {
      all: named_references_1.namedReferences.html5
    });
    function replaceUsingRegExp(macroText, macroRegExp, macroReplacer) {
      macroRegExp.lastIndex = 0;
      var replaceMatch = macroRegExp.exec(macroText);
      var replaceResult;
      if (replaceMatch) {
        replaceResult = "";
        var replaceLastIndex = 0;
        do {
          if (replaceLastIndex !== replaceMatch.index) {
            replaceResult += macroText.substring(replaceLastIndex, replaceMatch.index);
          }
          var replaceInput = replaceMatch[0];
          replaceResult += macroReplacer(replaceInput);
          replaceLastIndex = replaceMatch.index + replaceInput.length;
        } while (replaceMatch = macroRegExp.exec(macroText));
        if (replaceLastIndex !== macroText.length) {
          replaceResult += macroText.substring(replaceLastIndex);
        }
      } else {
        replaceResult = macroText;
      }
      return replaceResult;
    }
    var encodeRegExps = {
      specialChars: /[<>'"&]/g,
      nonAscii: /[<>'"&\u0080-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/g,
      nonAsciiPrintable: /[<>'"&\x01-\x08\x11-\x15\x17-\x1F\x7f-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/g,
      nonAsciiPrintableOnly: /[\x01-\x08\x11-\x15\x17-\x1F\x7f-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/g,
      extensive: /[\x01-\x0c\x0e-\x1f\x21-\x2c\x2e-\x2f\x3a-\x40\x5b-\x60\x7b-\x7d\x7f-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/g
    };
    var defaultEncodeOptions = {
      mode: "specialChars",
      level: "all",
      numeric: "decimal"
    };
    function encode(text, _a) {
      var _b = _a === void 0 ? defaultEncodeOptions : _a, _c = _b.mode, mode = _c === void 0 ? "specialChars" : _c, _d = _b.numeric, numeric = _d === void 0 ? "decimal" : _d, _e = _b.level, level = _e === void 0 ? "all" : _e;
      if (!text) {
        return "";
      }
      var encodeRegExp = encodeRegExps[mode];
      var references = allNamedReferences[level].characters;
      var isHex = numeric === "hexadecimal";
      return replaceUsingRegExp(text, encodeRegExp, function(input) {
        var result = references[input];
        if (!result) {
          var code = input.length > 1 ? surrogate_pairs_1.getCodePoint(input, 0) : input.charCodeAt(0);
          result = (isHex ? "&#x" + code.toString(16) : "&#" + code) + ";";
        }
        return result;
      });
    }
    exports2.encode = encode;
    var defaultDecodeOptions = {
      scope: "body",
      level: "all"
    };
    var strict = /&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);/g;
    var attribute = /&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+)[;=]?/g;
    var baseDecodeRegExps = {
      xml: {
        strict: strict,
        attribute: attribute,
        body: named_references_1.bodyRegExps.xml
      },
      html4: {
        strict: strict,
        attribute: attribute,
        body: named_references_1.bodyRegExps.html4
      },
      html5: {
        strict: strict,
        attribute: attribute,
        body: named_references_1.bodyRegExps.html5
      }
    };
    var decodeRegExps = __assign(__assign({}, baseDecodeRegExps), {
      all: baseDecodeRegExps.html5
    });
    var fromCharCode = String.fromCharCode;
    var outOfBoundsChar = fromCharCode(65533);
    var defaultDecodeEntityOptions = {
      level: "all"
    };
    function getDecodedEntity(entity, references, isAttribute, isStrict) {
      var decodeResult = entity;
      var decodeEntityLastChar = entity[entity.length - 1];
      if (isAttribute && decodeEntityLastChar === "=") {
        decodeResult = entity;
      } else if (isStrict && decodeEntityLastChar !== ";") {
        decodeResult = entity;
      } else {
        var decodeResultByReference = references[entity];
        if (decodeResultByReference) {
          decodeResult = decodeResultByReference;
        } else if (entity[0] === "&" && entity[1] === "#") {
          var decodeSecondChar = entity[2];
          var decodeCode = decodeSecondChar == "x" || decodeSecondChar == "X" ? parseInt(entity.substr(3), 16) : parseInt(entity.substr(2));
          decodeResult = decodeCode >= 1114111 ? outOfBoundsChar : decodeCode > 65535 ? surrogate_pairs_1.fromCodePoint(decodeCode) : fromCharCode(numeric_unicode_map_1.numericUnicodeMap[decodeCode] || decodeCode);
        }
      }
      return decodeResult;
    }
    function decodeEntity(entity, _a) {
      var _b = (_a === void 0 ? defaultDecodeEntityOptions : _a).level, level = _b === void 0 ? "all" : _b;
      if (!entity) {
        return "";
      }
      return getDecodedEntity(entity, allNamedReferences[level].entities, false, false);
    }
    exports2.decodeEntity = decodeEntity;
    function decode(text, _a) {
      var _b = _a === void 0 ? defaultDecodeOptions : _a, _c = _b.level, level = _c === void 0 ? "all" : _c, _d = _b.scope, scope = _d === void 0 ? level === "xml" ? "strict" : "body" : _d;
      if (!text) {
        return "";
      }
      var decodeRegExp = decodeRegExps[level][scope];
      var references = allNamedReferences[level].entities;
      var isAttribute = scope === "attribute";
      var isStrict = scope === "strict";
      return replaceUsingRegExp(text, decodeRegExp, function(entity) {
        return getDecodedEntity(entity, references, isAttribute, isStrict);
      });
    }
    exports2.decode = decode;
  }
});

// node_modules/libram/dist/Clan.js
function _typeof20(o) {
  "@babel/helpers - typeof";
  return _typeof20 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof20(o);
}
function _toConsumableArray21(r) {
  return _arrayWithoutHoles21(r) || _iterableToArray21(r) || _unsupportedIterableToArray35(r) || _nonIterableSpread21();
}
function _nonIterableSpread21() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray21(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles21(r) {
  if (Array.isArray(r)) return _arrayLikeToArray35(r);
}
function _createForOfIteratorHelper11(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t) {
    if (Array.isArray(r) || (t = _unsupportedIterableToArray35(r)) || e && r && "number" == typeof r.length) {
      t && (r = t);
      var _n = 0, F = function F2() {
      };
      return { s: F, n: function n() {
        return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
      }, e: function e2(r2) {
        throw r2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o, a = true, u = false;
  return { s: function s() {
    t = t.call(r);
  }, n: function n() {
    var r2 = t.next();
    return a = r2.done, r2;
  }, e: function e2(r2) {
    u = true, o = r2;
  }, f: function f() {
    try {
      a || null == t.return || t.return();
    } finally {
      if (u) throw o;
    }
  } };
}
function _slicedToArray22(r, e) {
  return _arrayWithHoles22(r) || _iterableToArrayLimit22(r, e) || _unsupportedIterableToArray35(r, e) || _nonIterableRest22();
}
function _nonIterableRest22() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray35(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray35(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray35(r, a) : void 0;
  }
}
function _arrayLikeToArray35(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _iterableToArrayLimit22(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles22(r) {
  if (Array.isArray(r)) return r;
}
function _classCallCheck13(a, n) {
  if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties13(e, r) {
  for (var t = 0; t < r.length; t++) {
    var o = r[t];
    o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e, _toPropertyKey20(o.key), o);
  }
}
function _createClass13(e, r, t) {
  return r && _defineProperties13(e.prototype, r), t && _defineProperties13(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
}
function _defineProperty19(e, r, t) {
  return (r = _toPropertyKey20(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
}
function _toPropertyKey20(t) {
  var i = _toPrimitive20(t, "string");
  return "symbol" == _typeof20(i) ? i : i + "";
}
function _toPrimitive20(t, r) {
  if ("object" != _typeof20(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof20(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _wrapRegExp() {
  _wrapRegExp = function _wrapRegExp2(e2, r2) {
    return new BabelRegExp(e2, void 0, r2);
  };
  var e = RegExp.prototype, r = /* @__PURE__ */ new WeakMap();
  function BabelRegExp(e2, t, p) {
    var o = RegExp(e2, t);
    return r.set(o, p || r.get(e2)), _setPrototypeOf4(o, BabelRegExp.prototype);
  }
  function buildGroups(e2, t) {
    var p = r.get(t);
    return Object.keys(p).reduce(function(r2, t2) {
      var o = p[t2];
      if ("number" == typeof o) r2[t2] = e2[o];
      else {
        for (var i = 0; void 0 === e2[o[i]] && i + 1 < o.length; ) i++;
        r2[t2] = e2[o[i]];
      }
      return r2;
    }, /* @__PURE__ */ Object.create(null));
  }
  return _inherits4(BabelRegExp, RegExp), BabelRegExp.prototype.exec = function(r2) {
    var t = e.exec.call(this, r2);
    if (t) {
      t.groups = buildGroups(t, this);
      var p = t.indices;
      p && (p.groups = buildGroups(p, this));
    }
    return t;
  }, BabelRegExp.prototype[Symbol.replace] = function(t, p) {
    if ("string" == typeof p) {
      var o = r.get(this);
      return e[Symbol.replace].call(this, t, p.replace(/\$<([^>]+)(>|$)/g, function(e2, r2, t2) {
        if ("" === t2) return e2;
        var p2 = o[r2];
        return Array.isArray(p2) ? "$" + p2.join("$") : "number" == typeof p2 ? "$" + p2 : "";
      }));
    }
    if ("function" == typeof p) {
      var i = this;
      return e[Symbol.replace].call(this, t, function() {
        var e2 = arguments;
        return "object" != _typeof20(e2[e2.length - 1]) && (e2 = [].slice.call(e2)).push(buildGroups(e2, i)), p.apply(this, e2);
      });
    }
    return e[Symbol.replace].call(this, t, p);
  }, _wrapRegExp.apply(this, arguments);
}
function _inherits4(t, e) {
  if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
  t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: true, configurable: true } }), Object.defineProperty(t, "prototype", { writable: false }), e && _setPrototypeOf4(t, e);
}
function _setPrototypeOf4(t, e) {
  return _setPrototypeOf4 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t2, e2) {
    return t2.__proto__ = e2, t2;
  }, _setPrototypeOf4(t, e);
}
var import_html_entities, import_kolmafia82, clanIdCache, toPlayerId, LOG_FAX_PATTERN, WHITELIST_DEGREE_PATTERN, Clan;
var init_Clan = __esm({
  "node_modules/libram/dist/Clan.js": function() {
    import_html_entities = __toESM(require_lib(), 1);
    import_kolmafia82 = require("kolmafia");
    init_lib();
    init_logger();
    init_utils();
    clanIdCache = {};
    toPlayerId = function(player) {
      return typeof player === "string" ? (0, import_kolmafia82.getPlayerId)(player) : player;
    };
    LOG_FAX_PATTERN = /* @__PURE__ */ _wrapRegExp(/(\d{2}\/\d{2}\/\d{2}, \d{2}:\d{2}(?:AM|PM): )<a [^>]+>([^<]+)<\/a>(?: faxed in a (.*?))<br>/, {
      monster: 3
    });
    WHITELIST_DEGREE_PATTERN = /* @__PURE__ */ _wrapRegExp(/(.*?) \(\xB0(\d+)\)/, {
      name: 1,
      degree: 2
    });
    Clan = /* @__PURE__ */ function() {
      function Clan2(id, name) {
        _classCallCheck13(this, Clan2);
        _defineProperty19(this, "id", void 0);
        _defineProperty19(this, "name", void 0);
        this.id = id;
        this.name = name;
      }
      return _createClass13(Clan2, [{
        key: "_check",
        value: function _check() {
          if (this.id !== (0, import_kolmafia82.getClanId)()) {
            throw new Error("You are no longer a member of this clan");
          }
        }
        /**
         * Join clan
         *
         * @returns Joined clan
         */
      }, {
        key: "join",
        value: function join() {
          return Clan2.join(this.id);
        }
        /**
         * Check that this clan is the player's current clan
         *
         * @returns Whether this is the current clan
         */
      }, {
        key: "check",
        value: function check() {
          return (0, import_kolmafia82.visitUrl)("clan_hall.php").includes("<b>".concat(this.name, "</b>"));
        }
        /**
         * Determine the monster that is currently in the current clan's fax machine if any
         *
         * @returns The current fax monster
         */
      }, {
        key: "getCurrentFax",
        value: function getCurrentFax() {
          this._check();
          var logs = (0, import_kolmafia82.visitUrl)("clan_log.php");
          var lastFax = logs.match(LOG_FAX_PATTERN);
          if (!lastFax) return null;
          var _lastFax = _slicedToArray22(lastFax, 4), monsterName = _lastFax[3];
          if (!monsterName) return null;
          return import_kolmafia82.Monster.get(monsterName);
        }
        /**
         * List available ranks (name, degree and id) from the current clan
         *
         * @returns List of ranks
         */
      }, {
        key: "getRanks",
        value: function getRanks() {
          this._check();
          var page = (0, import_kolmafia82.visitUrl)("clan_whitelist.php");
          return (0, import_kolmafia82.xpath)(page, '//select[@name="level"]//option').map(function(option) {
            var validHtml = "<select>".concat(option, "</select>");
            var match = (0, import_kolmafia82.xpath)(validHtml, "//text()")[0].match(WHITELIST_DEGREE_PATTERN);
            var id = (0, import_kolmafia82.xpath)(validHtml, "//@value")[0];
            if (!match || !id) return null;
            var _match = _slicedToArray22(match, 3), encodedName = _match[1], degree = _match[2];
            return {
              name: (0, import_html_entities.decode)(encodedName),
              degree: Number.parseInt(degree),
              id: Number.parseInt(id)
            };
          }).filter(notNull);
        }
        /**
         * Add a player to the current clan's whitelist.
         * If the player is already in the whitelist this will change their rank or title.
         *
         * @param player Player id or name
         * @param rankName Rank to give the player. If not provided they will be given the lowest rank
         * @param title Title to give the player. If not provided, will be blank
         * @returns Success
         */
      }, {
        key: "addPlayerToWhitelist",
        value: function addPlayerToWhitelist(player, rankName) {
          var title = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "";
          this._check();
          var playerId = toPlayerId(player);
          var ranks = this.getRanks();
          var rank = rankName ? ranks.find(function(r) {
            return r.name === rankName;
          }) : ranks.sort(function(a, b) {
            return a.degree - b.degree;
          })[0];
          if (!rank) return false;
          var result = (0, import_kolmafia82.visitUrl)("clan_whitelist.php?action=add&pwd&addwho=".concat(playerId, "&level=").concat(rank.id, "&title=").concat(title));
          return result.includes("added to whitelist.") || result.includes("That player is already on the whitelist");
        }
        /**
         * Remove a player from the current clan's whitelist
         *
         * @param player Player id or name
         * @returns Success
         */
      }, {
        key: "removePlayerFromWhitelist",
        value: function removePlayerFromWhitelist(player) {
          this._check();
          var playerId = toPlayerId(player);
          var result = (0, import_kolmafia82.visitUrl)("clan_whitelist.php?action=updatewl&pwd&who=".concat(playerId, "&remove=Remove"));
          return result.includes("Whitelist updated.");
        }
        /**
         * Return the amount of meat in the current clan's coffer
         *
         * @returns Amount of meat
         */
      }, {
        key: "getMeatInCoffer",
        value: function getMeatInCoffer() {
          this._check();
          var page = (0, import_kolmafia82.visitUrl)("clan_stash.php");
          var _ref = page.match(/Your <b>Clan Coffer<\/b> contains ([\d,]+) Meat./) || ["0", "0"], _ref2 = _slicedToArray22(_ref, 2), meat = _ref2[1];
          return parseNumber(meat);
        }
        /**
         * Add the given amount of meat to the current clan's coffer.
         *
         * @param amount Amount of meat to put in coffer
         * @returns Success
         */
      }, {
        key: "putMeatInCoffer",
        value: function putMeatInCoffer(amount2) {
          this._check();
          var result = (0, import_kolmafia82.visitUrl)("clan_stash.php?pwd&action=contribute&howmuch=".concat(amount2));
          return result.includes("You contributed");
        }
      }, {
        key: "take",
        value: function take(items) {
          this._check();
          var map = arrayToCountedMap(items);
          map.forEach(function(quantity, item15) {
            var needed = Math.max(0, quantity - (0, import_kolmafia82.availableAmount)(item15));
            if (needed === 0) {
              return map.set(item15, 0);
            }
            var foldGroup = getFoldGroup(item15);
            var _iterator = _createForOfIteratorHelper11(foldGroup), _step;
            try {
              for (_iterator.s(); !(_step = _iterator.n()).done; ) {
                var foldable = _step.value;
                var quantityToFold = Math.min(needed, (0, import_kolmafia82.availableAmount)(foldable));
                for (var _i2 = 0; _i2 < quantityToFold; _i2++) {
                  (0, import_kolmafia82.cliExecute)("fold ".concat(item15.name));
                  needed--;
                }
                return map.set(item15, needed);
              }
            } catch (err) {
              _iterator.e(err);
            } finally {
              _iterator.f();
            }
            (0, import_kolmafia82.refreshStash)();
            for (var _i = 0, _arr = [item15].concat(_toConsumableArray21(foldGroup)); _i < _arr.length; _i++) {
              var matchingItem = _arr[_i];
              var quantityToTake = Math.min(needed, (0, import_kolmafia82.stashAmount)(matchingItem));
              if (quantityToTake === 0) continue;
              if (!(0, import_kolmafia82.takeStash)(quantityToTake, matchingItem)) return;
              if (matchingItem === item15) {
                needed -= quantityToTake;
              } else {
                for (var i = 0; i < quantityToTake; i++) {
                  (0, import_kolmafia82.cliExecute)("fold ".concat(matchingItem.name));
                  needed--;
                }
              }
            }
          });
          return Array.isArray(items) ? countedMapToArray(map) : map;
        }
      }, {
        key: "put",
        value: function put(items) {
          this._check();
          var map = arrayToCountedMap(items);
          if (!this.check()) throw new Error("Wanted to return ".concat(countedMapToString(map), " to ").concat(this.name, " but KoLmafia's clan data is out of sync"));
          map.forEach(function(quantity, item15) {
            (0, import_kolmafia82.retrieveItem)(quantity, item15);
            var returned = Math.min(quantity, (0, import_kolmafia82.availableAmount)(item15));
            (0, import_kolmafia82.putStash)(returned, item15);
            map.set(item15, quantity - returned);
          });
          return Array.isArray(items) ? countedMapToArray(map) : map;
        }
      }, {
        key: "withStash",
        value: function withStash(items, callback) {
          var _this = this;
          this._check();
          var map = arrayToCountedMap(items);
          return Clan2._withStash(function() {
            return _this.take(map);
          }, function(borrowed) {
            return _this.put(borrowed);
          }, callback);
        }
      }], [{
        key: "_join",
        value: function _join(id) {
          var result = (0, import_kolmafia82.visitUrl)("showclan.php?recruiter=1&whichclan=".concat(id, "&pwd&whichclan=").concat(id, "&action=joinclan&apply=Apply+to+this+Clan&confirm=on"));
          if (!result.includes("clanhalltop.gif")) {
            throw new Error("Could not join clan");
          }
          return Clan2.get();
        }
      }, {
        key: "_withStash",
        value: function _withStash(borrowFn, returnFn, callback) {
          var borrowed = borrowFn();
          var map = arrayToCountedMap(borrowed);
          try {
            return callback(borrowed);
          } finally {
            if (map.size > 0) {
              var returned = arrayToCountedMap(returnFn(borrowed));
              map.forEach(function(quantity, item15) {
                var remaining = quantity - (returned.get(item15) || 0);
                if (remaining > 0) {
                  map.set(item15, remaining);
                } else {
                  map.delete(item15);
                }
              });
              if (map.size > 0) {
                logger_default.error("Failed to return <b>".concat(countedMapToString(map), "</b> to <b>").concat(this.name, "</b> stash"));
              }
            }
          }
        }
        /**
         * Join a clan
         *
         * @param clanIdOrName Clan id or name
         * @returns Instance of joined clan
         */
      }, {
        key: "join",
        value: function join(clanIdOrName) {
          var clanId;
          if (typeof clanIdOrName === "string") {
            var clanName = clanIdOrName.toLowerCase();
            if (clanName === (0, import_kolmafia82.getClanName)().toLowerCase()) {
              return Clan2.get();
            }
            if (!(clanName in clanIdCache)) {
              var clan = Clan2.getWhitelisted().find(function(c) {
                return c.name.toLowerCase() === clanName;
              });
              if (!clan) {
                throw new Error("Player is not whitelisted to clan");
              }
              clanIdCache[clanName] = clan.id;
            }
            clanId = clanIdCache[clanName];
          } else {
            clanId = clanIdOrName;
            if (clanId === (0, import_kolmafia82.getClanId)()) {
              return Clan2.get();
            }
          }
          return Clan2._join(clanId);
        }
        /**
         * Execute callback as a member of a clan and then restore prior membership
         *
         * @param clanIdOrName Clan id or name
         * @param callback Actions to carry out while member of specified can
         * @returns Return value from callback
         */
      }, {
        key: "with",
        value: function _with(clanIdOrName, callback) {
          var startingClan = Clan2.get();
          var clan = Clan2.join(clanIdOrName);
          try {
            return callback(clan);
          } finally {
            startingClan.join();
          }
        }
      }, {
        key: "withStash",
        value: function withStash(clanIdOrName, items, callback) {
          return Clan2._withStash(function() {
            return Clan2.with(clanIdOrName, function(clan) {
              return clan.take(items);
            });
          }, function(borrowed) {
            return Clan2.with(clanIdOrName, function(clan) {
              return clan.put(borrowed);
            });
          }, callback);
        }
        /**
         * Get the player's current clan
         *
         * @returns Player's clan
         */
      }, {
        key: "get",
        value: function get4() {
          return new Clan2((0, import_kolmafia82.getClanId)(), (0, import_kolmafia82.getClanName)());
        }
        /**
         * Get list of clans to which the player is whitelisted
         *
         * @returns List of clans
         */
      }, {
        key: "getWhitelisted",
        value: function getWhitelisted() {
          var page = (0, import_kolmafia82.visitUrl)("clan_signup.php");
          return (0, import_kolmafia82.xpath)(page, '//select[@name="whichclan"]//option').map(function(option) {
            var validHtml = "<select>".concat(option, "</select>");
            var id = Number.parseInt((0, import_kolmafia82.xpath)(validHtml, "//@value")[0]);
            var name = (0, import_html_entities.decode)((0, import_kolmafia82.xpath)(validHtml, "//text()")[0]);
            return new Clan2(id, name);
          });
        }
      }]);
    }();
  }
});

// node_modules/libram/dist/challengePaths/2014/HeavyRains.js
var HeavyRains_exports = {};
__export(HeavyRains_exports, {
  RAIN_MONSTER_WINDOW_BEGIN: function() {
    return RAIN_MONSTER_WINDOW_BEGIN;
  },
  RAIN_MONSTER_WINDOW_END: function() {
    return RAIN_MONSTER_WINDOW_END;
  },
  canRainMan: function() {
    return canRainMan;
  },
  expectedWanderer: function() {
    return expectedWanderer;
  },
  path: function() {
    return path;
  },
  rainMan: function() {
    return rainMan;
  },
  wanderers: function() {
    return wanderers;
  }
});
function _taggedTemplateLiteral75(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function rainMan(target) {
  if (canRainMan(target)) {
    withChoice(970, "1&whichmonster=".concat(target.id), function() {
      return (0, import_kolmafia83.useSkill)($skill(_templateObject508 || (_templateObject508 = _taggedTemplateLiteral75(["Rain Man"]))));
    });
  }
}
function canRainMan(target) {
  if (!have($skill(_templateObject2137 || (_templateObject2137 = _taggedTemplateLiteral75(["Rain Man"])))) || // having the skill implies you are in heavy rains path
  (0, import_kolmafia83.myRain)() < 50 || !target.copyable || target.id < 0) {
    return false;
  }
  if ((0, import_kolmafia83.monsterFactoidsAvailable)(target, false) > 0) {
    return true;
  }
  var page = withChoice(970, 2, function() {
    return (0, import_kolmafia83.visitUrl)("runskillz.php?pwd&action=Skillz&whichskill=".concat($skill(_templateObject3125 || (_templateObject3125 = _taggedTemplateLiteral75(["Rain Man"]))).id, "&quantity=1"));
  });
  return page.indexOf("<option value=".concat(target.id, ">")) > 0;
}
function expectedWanderer(location7) {
  var difficultyWaterLevel = location7.difficultyLevel === "low" ? 1 : 2;
  var environmentWaterLevel = location7.environment === "underground" ? 4 : location7.environment === "indoor" ? 2 : 1;
  var waterLevel = (0, import_kolmafia83.numericModifier)(import_kolmafia83.Modifier.get("Water Level")) + difficultyWaterLevel + environmentWaterLevel;
  if (waterLevel > 1 && waterLevel < 6) {
    return wanderers[waterLevel - 1];
  } else if (waterLevel === 6 && location7.environment === "underground") {
    return $monster(_templateObject4105 || (_templateObject4105 = _taggedTemplateLiteral75(["giant tardigrade"])));
  } else if (waterLevel === 6 && location7.environment === "indoor") {
    return $monster(_templateObject558 || (_templateObject558 = _taggedTemplateLiteral75(["aquaconda"])));
  } else if (waterLevel === 6 && location7.environment === "outdoor") {
    return $monster(_templateObject655 || (_templateObject655 = _taggedTemplateLiteral75(["storm cow"])));
  } else {
    return $monster(_templateObject749 || (_templateObject749 = _taggedTemplateLiteral75(["giant isopod"])));
  }
}
var import_kolmafia83, _templateObject508, _templateObject2137, _templateObject3125, _templateObject4105, _templateObject558, _templateObject655, _templateObject749, _templateObject840, RAIN_MONSTER_WINDOW_BEGIN, RAIN_MONSTER_WINDOW_END, wanderers, path;
var init_HeavyRains = __esm({
  "node_modules/libram/dist/challengePaths/2014/HeavyRains.js": function() {
    import_kolmafia83 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    RAIN_MONSTER_WINDOW_BEGIN = "Rain Monster window begin";
    RAIN_MONSTER_WINDOW_END = "Rain Monster window end";
    wanderers = Object.freeze(import_kolmafia83.Monster.get(["giant isopod", "gourmet gourami", "freshwater bonefish", "alley catfish", "piranhadon", "giant tardigrade", "aquaconda", "storm cow"]));
    path = $path(_templateObject840 || (_templateObject840 = _taggedTemplateLiteral75(["Heavy Rains"])));
  }
});

// node_modules/libram/dist/challengePaths/2015/CommunityService.js
function _typeof21(o) {
  "@babel/helpers - typeof";
  return _typeof21 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof21(o);
}
function _slicedToArray23(r, e) {
  return _arrayWithHoles23(r) || _iterableToArrayLimit23(r, e) || _unsupportedIterableToArray36(r, e) || _nonIterableRest23();
}
function _nonIterableRest23() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray36(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray36(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray36(r, a) : void 0;
  }
}
function _arrayLikeToArray36(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _iterableToArrayLimit23(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles23(r) {
  if (Array.isArray(r)) return r;
}
function _classCallCheck14(a, n) {
  if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties14(e, r) {
  for (var t = 0; t < r.length; t++) {
    var o = r[t];
    o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e, _toPropertyKey21(o.key), o);
  }
}
function _createClass14(e, r, t) {
  return r && _defineProperties14(e.prototype, r), t && _defineProperties14(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
}
function _defineProperty20(e, r, t) {
  return (r = _toPropertyKey21(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
}
function _toPropertyKey21(t) {
  var i = _toPrimitive21(t, "string");
  return "symbol" == _typeof21(i) ? i : i + "";
}
function _toPrimitive21(t, r) {
  if ("object" != _typeof21(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof21(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _taggedTemplateLiteral76(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function hypotheticalModifier(modifier) {
  for (var _len = arguments.length, effects = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    effects[_key - 1] = arguments[_key];
  }
  var newEffects = effects.filter(function(e) {
    return !have(e);
  });
  return (0, import_kolmafia84.numericModifier)(modifier) + sum(newEffects, function(effect2) {
    return (0, import_kolmafia84.numericModifier)(effect2, modifier);
  });
}
var import_kolmafia84, _templateObject509, _templateObject2138, _templateObject3126, _templateObject4106, _templateObject559, _templateObject656, _CommunityService, _templateObject750, _templateObject841, _templateObject934, _templateObject027, _templateObject1126, _templateObject1025, _templateObject1127, _templateObject1223, _templateObject1321, _templateObject1420, _templateObject1519, _templateObject1619, _templateObject1716, _templateObject1816, _templateObject1916, _templateObject2015, _templateObject2139, _templateObject2218, _templateObject2317, _templateObject2415, _templateObject2514, _templateObject2613, _templateObject2711, _templateObject2811, _templateObject2911, thralls, statCommunityServicePredictor, visitCouncil, CommunityService;
var init_CommunityService = __esm({
  "node_modules/libram/dist/challengePaths/2015/CommunityService.js": function() {
    import_kolmafia84 = require("kolmafia");
    init_lib();
    init_maximize();
    init_property();
    init_resources();
    init_template_string();
    init_utils();
    thralls = /* @__PURE__ */ new Map([[$stat(_templateObject509 || (_templateObject509 = _taggedTemplateLiteral76(["muscle"]))), $thrall(_templateObject2138 || (_templateObject2138 = _taggedTemplateLiteral76(["Elbow Macaroni"])))], [$stat(_templateObject3126 || (_templateObject3126 = _taggedTemplateLiteral76(["moxie"]))), $thrall(_templateObject4106 || (_templateObject4106 = _taggedTemplateLiteral76(["Penne Dreadful"])))]]);
    statCommunityServicePredictor = function(stat) {
      return function() {
        return 60 - Math.floor(1 / 30 * ((0, import_kolmafia84.myBuffedstat)(stat) - (0, import_kolmafia84.myBasestat)(thralls.get(stat) === (0, import_kolmafia84.myThrall)() && !have($effect(_templateObject559 || (_templateObject559 = _taggedTemplateLiteral76(["Expert Oiliness"])))) ? $stat(_templateObject656 || (_templateObject656 = _taggedTemplateLiteral76(["mysticality"]))) : stat)));
      };
    };
    visitCouncil = function() {
      return (0, import_kolmafia84.visitUrl)("council.php");
    };
    CommunityService = /* @__PURE__ */ function() {
      function CommunityService2(id, stat, property, predictor, maximizeRequirements) {
        _classCallCheck14(this, CommunityService2);
        _defineProperty20(this, "choice", void 0);
        _defineProperty20(this, "stat", void 0);
        _defineProperty20(this, "property", void 0);
        _defineProperty20(this, "predictor", void 0);
        _defineProperty20(this, "maximizeRequirements", void 0);
        _defineProperty20(this, "timer", null);
        this.choice = id;
        this.stat = stat;
        this.property = property;
        this.predictor = predictor;
        this.maximizeRequirements = maximizeRequirements;
      }
      return _createClass14(CommunityService2, [{
        key: "id",
        get: function get4() {
          return this.choice;
        }
        /**
         * @returns The primary stat the test measures, used primarily as memorable shorthand in place of test names.
         */
      }, {
        key: "statName",
        get: function get4() {
          return this.stat;
        }
        /**
         * @returns The name of the test, used primarily as part of the string property "csServicesPerformed"
         */
      }, {
        key: "name",
        get: function get4() {
          return this.property;
        }
        /**
         *  @returns The predicted number of turns this test will take given your character's current state.
         */
      }, {
        key: "prediction",
        get: function get4() {
          return this.predictor();
        }
        /**
         * @returns A Requirement object, if applicable, that aligns with the things needed to maximize for this particular test.
         */
      }, {
        key: "requirement",
        get: function get4() {
          return this.maximizeRequirements;
        }
        /**
         * Start the time & turn counter for the Test in question.
         */
      }, {
        key: "startTimer",
        value: function startTimer() {
          var _this$timer;
          (_this$timer = this.timer) !== null && _this$timer !== void 0 ? _this$timer : this.timer = {
            time: Date.now(),
            turns: (0, import_kolmafia84.myTurncount)()
          };
        }
      }, {
        key: "isDone",
        value: (
          /**
           * Checks the "csServicesPerformed" property to see whether mafia currently believes this test is complete.
           *
           * @returns Whether mafia currently believes this test is complete.
           */
          function isDone() {
            return get("csServicesPerformed").includes(this.property);
          }
        )
        /**
         * Maximizes based on the Requirement associated with this particular test.
         */
      }, {
        key: "maximize",
        value: function maximize2() {
          if (this.maximizeRequirements) this.maximizeRequirements.maximize();
        }
        /**
         * Attempts to turn in the test to the Council of Loathing.
         *
         * @returns Whether mafia believes the test is complete at the end of this function.
         */
      }, {
        key: "do",
        value: function _do() {
          if (get("csServicesPerformed").trim().length === 0) visitCouncil();
          visitCouncil();
          var councilText = (0, import_kolmafia84.runChoice)(this.choice);
          return this._verifyIsDone(councilText);
        }
        /**
         * Wrapper function that prepares for a test and then completes it, adding time and turn details to the log.
         *
         * @param prepare A function that does all necessary preparations for this CS test, including choosing your outfit. Optionally returns the number of turns you expect to spend preparing for the test.
         * @param maxTurns We will run the test iff the predicted/actual turns is less than or equal to this parameter.
         * @returns "completed", "failed", or "already completed".
         */
      }, {
        key: "run",
        value: function run(prepare) {
          var _this$timer2;
          var maxTurns = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Infinity;
          if (this.isDone()) return "already completed";
          var _ref = (_this$timer2 = this.timer) !== null && _this$timer2 !== void 0 ? _this$timer2 : {
            time: Date.now(),
            turns: (0, import_kolmafia84.myTurncount)()
          }, time = _ref.time, turns2 = _ref.turns;
          var additionalTurns;
          try {
            var result = prepare();
            additionalTurns = typeof result === "number" ? result : 0;
          } catch (e) {
            (0, import_kolmafia84.print)("".concat(e), "red");
            return "failed";
          }
          var prediction = this.predictor();
          var council = visitCouncil();
          var turnCost = this._actualCost(council);
          if (!turnCost) return "already completed";
          if (turnCost > Math.min(maxTurns, (0, import_kolmafia84.myAdventures)())) {
            return "failed";
          }
          if (!this.do()) return "failed";
          CommunityService2.log[this.property] = {
            predictedTurns: prediction + additionalTurns,
            turnCost: (0, import_kolmafia84.myTurncount)() - turns2,
            seconds: (Date.now() - time) / 1e3,
            type: "test"
          };
          return "completed";
        }
      }, {
        key: "_verifyIsDone",
        value: function _verifyIsDone(councilText) {
          return !councilText.includes("<input type=hidden name=option value=".concat(this.choice, ">"));
        }
        /**
         * Checks council.php to verify that a test is complete; more reliable than isDone, but requires an additional pagehit.
         *
         * @returns Whether council.php suggests that the test is complete.
         */
      }, {
        key: "verifyIsDone",
        value: function verifyIsDone() {
          return this._verifyIsDone(visitCouncil());
        }
      }, {
        key: "_actualCost",
        value: function _actualCost(councilText) {
          var match = councilText.match("<input type=hidden name=option value=".concat(this.id, ">.*?Perform Service \\((\\d+) Adventures\\)"));
          return match ? parseInt(match[1]) : 0;
        }
        /**
         * Checks council.php for the number of turns this test will take; more reliable than prediction, but requires an additional pagehit.
         *
         * @returns The number of turns to complete this test according to council.php.
         */
      }, {
        key: "actualCost",
        value: function actualCost() {
          return this._actualCost(visitCouncil());
        }
        /**
         * @param effects A spread array of Effects to consider
         * @returns The number of turns we expect to save if we start using those effects
         */
      }, {
        key: "turnsSavedBy",
        value: function turnsSavedBy() {
          var currentTurns = clamp(this.prediction, 1, 60);
          var newTurns = clamp(this.predictor.apply(this, arguments), 1, 60);
          return currentTurns - newTurns;
        }
        /**
         * A log of the predicted turns, actual turns, and duration of each CS test performed.
         */
      }], [{
        key: "startTimer",
        value: (
          /**
           * Start the time & turn counter for the given task
           *
           * @param name The name of the task to start the counter of
           */
          function startTimer(name) {
            if (!this.taskTimers.has(name)) {
              this.taskTimers.set(name, {
                time: Date.now(),
                turns: (0, import_kolmafia84.myTurncount)()
              });
            }
          }
        )
      }, {
        key: "logTask",
        value: function logTask(name, action) {
          var _this$taskTimers$get, _action;
          var _ref2 = (_this$taskTimers$get = this.taskTimers.get(name)) !== null && _this$taskTimers$get !== void 0 ? _this$taskTimers$get : {
            time: Date.now(),
            turns: (0, import_kolmafia84.myTurncount)()
          }, time = _ref2.time, turns2 = _ref2.turns;
          var estimatedTurns = (_action = action()) !== null && _action !== void 0 ? _action : 0;
          CommunityService2.log[name] = {
            type: "task",
            turnCost: (0, import_kolmafia84.myTurncount)() - turns2,
            predictedTurns: estimatedTurns,
            seconds: (Date.now() - time) / 1e3
          };
        }
      }, {
        key: "printLog",
        value: (
          /**
           * Prints turncount and time details of the test in question.
           *
           * @param colour The colour (or color) you'd like the log to be printed in.
           */
          function printLog() {
            var colour = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "blue";
            var logEntries = Object.entries(CommunityService2.log);
            for (var _i = 0, _logEntries = logEntries; _i < _logEntries.length; _i++) {
              var _logEntries$_i = _slicedToArray23(_logEntries[_i], 2), testName = _logEntries$_i[0], testEntry = _logEntries$_i[1];
              var type = testEntry.type, predictedTurns = testEntry.predictedTurns, turnCost = testEntry.turnCost, seconds = testEntry.seconds;
              if (type === "test") {
                (0, import_kolmafia84.print)("We predicted the ".concat(testName, " test would take ").concat(predictedTurns, " turns, ").concat(predictedTurns === turnCost ? "and" : "but", " it took ").concat(turnCost, " turns."), colour);
                (0, import_kolmafia84.print)("".concat(testName, " took ").concat(seconds.toFixed(1), " seconds."), colour);
              } else {
                if (!(predictedTurns === 0 && turnCost === 0)) {
                  (0, import_kolmafia84.print)("We predicted the task ".concat(testName, " would take ").concat(predictedTurns, " turns, ").concat(predictedTurns === turnCost ? "and" : "but", " it took ").concat(turnCost, " turns."), colour);
                }
                (0, import_kolmafia84.print)("The task ".concat(testName, " took ").concat(seconds.toFixed(1), " seconds."), colour);
              }
            }
            var totalTime = sum(logEntries, function(_ref3) {
              var _ref4 = _slicedToArray23(_ref3, 2), testEntry2 = _ref4[1];
              return testEntry2.seconds;
            });
            (0, import_kolmafia84.print)("All together, you have spent ".concat(totalTime.toFixed(1), " seconds during this Community Service run"), colour);
          }
        )
        // Below, we have the tests themselves.
      }]);
    }();
    _CommunityService = CommunityService;
    _defineProperty20(CommunityService, "taskTimers", /* @__PURE__ */ new Map());
    _defineProperty20(CommunityService, "log", {});
    _defineProperty20(CommunityService, "HP", new _CommunityService(1, "HP", "Donate Blood", function() {
      return 60 - Math.floor(((0, import_kolmafia84.myMaxhp)() - (0, import_kolmafia84.myBuffedstat)($stat(_templateObject750 || (_templateObject750 = _taggedTemplateLiteral76(["muscle"])))) - 3) / 30);
    }, new Requirement(["HP"], {})));
    _defineProperty20(CommunityService, "Muscle", new _CommunityService(2, "Muscle", "Feed The Children", statCommunityServicePredictor($stat(_templateObject841 || (_templateObject841 = _taggedTemplateLiteral76(["Muscle"])))), new Requirement(["Muscle"], {})));
    _defineProperty20(CommunityService, "Mysticality", new _CommunityService(3, "Mysticality", "Build Playground Mazes", statCommunityServicePredictor($stat(_templateObject934 || (_templateObject934 = _taggedTemplateLiteral76(["Mysticality"])))), new Requirement(["Mysticality"], {})));
    _defineProperty20(CommunityService, "Moxie", new _CommunityService(4, "Moxie", "Feed Conspirators", statCommunityServicePredictor($stat(_templateObject027 || (_templateObject027 = _taggedTemplateLiteral76(["Moxie"])))), new Requirement(["Moxie"], {})));
    _defineProperty20(CommunityService, "FamiliarWeight", new _CommunityService(5, "Familiar Weight", "Breed More Collies", function() {
      for (var _len2 = arguments.length, effects = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        effects[_key2] = arguments[_key2];
      }
      return 60 - Math.floor((totalFamiliarWeight((0, import_kolmafia84.myFamiliar)(), false) + hypotheticalModifier.apply(void 0, ["Familiar Weight"].concat(effects))) / 5);
    }, new Requirement(["Familiar Weight"], {})));
    _defineProperty20(CommunityService, "WeaponDamage", new _CommunityService(6, "Weapon Damage", "Reduce Gazelle Population", function() {
      var weaponPower = (0, import_kolmafia84.getPower)((0, import_kolmafia84.equippedItem)($slot(_templateObject1126 || (_templateObject1126 = _taggedTemplateLiteral76(["weapon"])))));
      var offhandPower = (0, import_kolmafia84.toSlot)((0, import_kolmafia84.equippedItem)($slot(_templateObject1025 || (_templateObject1025 = _taggedTemplateLiteral76(["off-hand"]))))) === $slot(_templateObject1127 || (_templateObject1127 = _taggedTemplateLiteral76(["weapon"]))) ? (0, import_kolmafia84.getPower)((0, import_kolmafia84.equippedItem)($slot(_templateObject1223 || (_templateObject1223 = _taggedTemplateLiteral76(["off-hand"]))))) : 0;
      var familiarPower = (0, import_kolmafia84.toSlot)((0, import_kolmafia84.equippedItem)($slot(_templateObject1321 || (_templateObject1321 = _taggedTemplateLiteral76(["familiar"]))))) === $slot(_templateObject1420 || (_templateObject1420 = _taggedTemplateLiteral76(["weapon"]))) ? (0, import_kolmafia84.getPower)((0, import_kolmafia84.equippedItem)($slot(_templateObject1519 || (_templateObject1519 = _taggedTemplateLiteral76(["familiar"]))))) : 0;
      var multiplier = have($effect(_templateObject1619 || (_templateObject1619 = _taggedTemplateLiteral76(["Bow-Legged Swagger"])))) ? 2 : 1;
      for (var _len3 = arguments.length, effects = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        effects[_key3] = arguments[_key3];
      }
      return 60 - Math.floor(multiplier * (hypotheticalModifier.apply(void 0, ["Weapon Damage"].concat(effects)) - 0.15 * (weaponPower + offhandPower + familiarPower)) / 50 + 1e-3) - Math.floor(multiplier * hypotheticalModifier.apply(void 0, ["Weapon Damage Percent"].concat(effects)) / 50 + 1e-3);
    }, new Requirement(["Weapon Damage", "Weapon Damage Percent"], {})));
    _defineProperty20(CommunityService, "SpellDamage", new _CommunityService(7, "Spell Damage", "Make Sausage", function() {
      var dragonfishDamage = (0, import_kolmafia84.myFamiliar)() === $familiar(_templateObject1716 || (_templateObject1716 = _taggedTemplateLiteral76(["Magic Dragonfish"]))) ? (0, import_kolmafia84.numericModifier)($familiar(_templateObject1816 || (_templateObject1816 = _taggedTemplateLiteral76(["Magic Dragonfish"]))), "Spell Damage Percent", totalFamiliarWeight(), $item.none) : 0;
      for (var _len4 = arguments.length, effects = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        effects[_key4] = arguments[_key4];
      }
      return 60 - Math.floor(hypotheticalModifier.apply(void 0, ["Spell Damage"].concat(effects)) / 50 + 1e-3) - Math.floor((hypotheticalModifier.apply(void 0, ["Spell Damage Percent"].concat(effects)) - dragonfishDamage) / 50 + 1e-3);
    }, new Requirement(["Spell Damage", "Spell Damage Percent"], {})));
    _defineProperty20(CommunityService, "Noncombat", new _CommunityService(8, "Non-Combat", "Be a Living Statue", function() {
      for (var _len5 = arguments.length, effects = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        effects[_key5] = arguments[_key5];
      }
      var noncombatRate = -1 * hypotheticalModifier.apply(void 0, ["Raw Combat Rate"].concat(effects));
      var currentFamiliarModifier = -1 * (0, import_kolmafia84.numericModifier)((0, import_kolmafia84.myFamiliar)(), "Raw Combat Rate", totalFamiliarWeight(), (0, import_kolmafia84.equippedItem)($slot(_templateObject1916 || (_templateObject1916 = _taggedTemplateLiteral76(["familiar"])))));
      var newFamiliarModifier = -1 * (0, import_kolmafia84.numericModifier)((0, import_kolmafia84.myFamiliar)(), "Raw Combat Rate", totalFamiliarWeight((0, import_kolmafia84.myFamiliar)(), false) + hypotheticalModifier.apply(void 0, ["Familiar Weight"].concat(effects)), (0, import_kolmafia84.equippedItem)($slot(_templateObject2015 || (_templateObject2015 = _taggedTemplateLiteral76(["familiar"])))));
      var adjustedRate = noncombatRate - currentFamiliarModifier + newFamiliarModifier;
      return 60 - 3 * Math.floor(adjustedRate / 5);
    }, new Requirement(["-Raw Combat Rate"], {})));
    _defineProperty20(CommunityService, "BoozeDrop", new _CommunityService(9, "Item Drop", "Make Margaritas", function() {
      var mummingCostume = MummingTrunk_exports.currentCostumes().get((0, import_kolmafia84.myFamiliar)());
      var mummingBuff = mummingCostume && mummingCostume[0] === "Item Drop" ? mummingCostume[1] : 0;
      var familiarItemDrop = (0, import_kolmafia84.numericModifier)((0, import_kolmafia84.myFamiliar)(), "Item Drop", totalFamiliarWeight(), (0, import_kolmafia84.equippedItem)($slot(_templateObject2139 || (_templateObject2139 = _taggedTemplateLiteral76(["familiar"]))))) + mummingBuff - (0, import_kolmafia84.numericModifier)((0, import_kolmafia84.equippedItem)($slot(_templateObject2218 || (_templateObject2218 = _taggedTemplateLiteral76(["familiar"])))), "Item Drop");
      var familiarBoozeDrop = (0, import_kolmafia84.numericModifier)((0, import_kolmafia84.myFamiliar)(), "Booze Drop", totalFamiliarWeight(), (0, import_kolmafia84.equippedItem)($slot(_templateObject2317 || (_templateObject2317 = _taggedTemplateLiteral76(["familiar"]))))) - (0, import_kolmafia84.numericModifier)((0, import_kolmafia84.equippedItem)($slot(_templateObject2415 || (_templateObject2415 = _taggedTemplateLiteral76(["familiar"])))), "Booze Drop");
      var multiplier = (0, import_kolmafia84.haveEquipped)($item(_templateObject2514 || (_templateObject2514 = _taggedTemplateLiteral76(["broken champagne bottle"])))) && get("garbageChampagneCharge") > 0 ? 0.5 : 1;
      for (var _len6 = arguments.length, effects = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        effects[_key6] = arguments[_key6];
      }
      return 60 - Math.floor(multiplier * (hypotheticalModifier.apply(void 0, ["Item Drop"].concat(effects)) - familiarItemDrop - (0, import_kolmafia84.numericModifier)((0, import_kolmafia84.myThrall)(), "Item Drop")) / 30 + 1e-3) - Math.floor((hypotheticalModifier.apply(void 0, ["Booze Drop"].concat(effects)) - familiarBoozeDrop) / 15 + 1e-3);
    }, new Requirement(["Item Drop", "2 Booze Drop"], {
      preventEquip: $items(_templateObject2613 || (_templateObject2613 = _taggedTemplateLiteral76(["broken champagne bottle"])))
    })));
    _defineProperty20(CommunityService, "HotRes", new _CommunityService(10, "Hot Resistance", "Clean Steam Tunnels", function() {
      var currentFamiliarModifier = (0, import_kolmafia84.numericModifier)((0, import_kolmafia84.myFamiliar)(), "Hot Resistance", totalFamiliarWeight(), (0, import_kolmafia84.equippedItem)($slot(_templateObject2711 || (_templateObject2711 = _taggedTemplateLiteral76(["familiar"])))));
      for (var _len7 = arguments.length, effects = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        effects[_key7] = arguments[_key7];
      }
      var newFamiliarModifier = (0, import_kolmafia84.numericModifier)((0, import_kolmafia84.myFamiliar)(), "Hot Resistance", totalFamiliarWeight((0, import_kolmafia84.myFamiliar)(), false) + hypotheticalModifier.apply(void 0, ["Familiar Weight"].concat(effects)), (0, import_kolmafia84.equippedItem)($slot(_templateObject2811 || (_templateObject2811 = _taggedTemplateLiteral76(["familiar"])))));
      return 60 - (hypotheticalModifier.apply(void 0, ["Hot Resistance"].concat(effects)) - currentFamiliarModifier + newFamiliarModifier);
    }, new Requirement(["Hot Resistance"], {})));
    _defineProperty20(CommunityService, "CoilWire", new _CommunityService(11, "Coil Wire", "Coil Wire", function() {
      return 60;
    }, new Requirement([], {})));
    _defineProperty20(CommunityService, "donate", function() {
      visitCouncil();
      (0, import_kolmafia84.visitUrl)("choice.php?whichchoice=1089&option=30");
    });
    _defineProperty20(CommunityService, "path", $path(_templateObject2911 || (_templateObject2911 = _taggedTemplateLiteral76(["Community Service"]))));
  }
});

// node_modules/libram/dist/challengePaths/2016/NuclearAutumn.js
var NuclearAutumn_exports = {};
__export(NuclearAutumn_exports, {
  chronoLab: function() {
    return chronoLab;
  },
  coolingTank: function() {
    return coolingTank;
  },
  path: function() {
    return path2;
  },
  spa: function() {
    return spa;
  }
});
function _taggedTemplateLiteral77(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function coolingTank() {
  (0, import_kolmafia85.visitUrl)("place.php?whichplace=falloutshelter&action=vault8");
}
function spa() {
  (0, import_kolmafia85.visitUrl)("place.php?whichplace=falloutshelter&action=vault3");
}
function chronoLab() {
  (0, import_kolmafia85.visitUrl)("place.php?whichplace=falloutshelter&action=vault5");
}
var import_kolmafia85, _templateObject560, path2;
var init_NuclearAutumn = __esm({
  "node_modules/libram/dist/challengePaths/2016/NuclearAutumn.js": function() {
    import_kolmafia85 = require("kolmafia");
    init_template_string();
    path2 = $path(_templateObject560 || (_templateObject560 = _taggedTemplateLiteral77(["Nuclear Autumn"])));
  }
});

// node_modules/libram/dist/challengePaths/index.js
var init_challengePaths = __esm({
  "node_modules/libram/dist/challengePaths/index.js": function() {
    init_HeavyRains();
    init_CommunityService();
    init_NuclearAutumn();
  }
});

// node_modules/libram/dist/diet/knapsack.js
function _typeof22(o) {
  "@babel/helpers - typeof";
  return _typeof22 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof22(o);
}
function _toConsumableArray22(r) {
  return _arrayWithoutHoles22(r) || _iterableToArray22(r) || _unsupportedIterableToArray37(r) || _nonIterableSpread22();
}
function _nonIterableSpread22() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray22(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles22(r) {
  if (Array.isArray(r)) return _arrayLikeToArray37(r);
}
function _slicedToArray24(r, e) {
  return _arrayWithHoles24(r) || _iterableToArrayLimit24(r, e) || _unsupportedIterableToArray37(r, e) || _nonIterableRest24();
}
function _nonIterableRest24() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit24(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles24(r) {
  if (Array.isArray(r)) return r;
}
function _createForOfIteratorHelper12(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t) {
    if (Array.isArray(r) || (t = _unsupportedIterableToArray37(r)) || e && r && "number" == typeof r.length) {
      t && (r = t);
      var _n = 0, F = function F2() {
      };
      return { s: F, n: function n() {
        return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
      }, e: function e2(r2) {
        throw r2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o, a = true, u = false;
  return { s: function s() {
    t = t.call(r);
  }, n: function n() {
    var r2 = t.next();
    return a = r2.done, r2;
  }, e: function e2(r2) {
    u = true, o = r2;
  }, f: function f() {
    try {
      a || null == t.return || t.return();
    } finally {
      if (u) throw o;
    }
  } };
}
function _unsupportedIterableToArray37(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray37(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray37(r, a) : void 0;
  }
}
function _arrayLikeToArray37(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _defineProperties15(e, r) {
  for (var t = 0; t < r.length; t++) {
    var o = r[t];
    o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e, _toPropertyKey22(o.key), o);
  }
}
function _createClass15(e, r, t) {
  return r && _defineProperties15(e.prototype, r), t && _defineProperties15(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
}
function _classCallCheck15(a, n) {
  if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperty21(e, r, t) {
  return (r = _toPropertyKey22(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
}
function _toPropertyKey22(t) {
  var i = _toPrimitive22(t, "string");
  return "symbol" == _typeof22(i) ? i : i + "";
}
function _toPrimitive22(t, r) {
  if ("object" != _typeof22(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof22(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function aggregate(list, isEqual) {
  var aggregatedList = [];
  var _iterator = _createForOfIteratorHelper12(list), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var item15 = _step.value;
      if (aggregatedList.length === 0) {
        aggregatedList.push([item15, 1]);
      } else {
        var last = aggregatedList[aggregatedList.length - 1];
        var _last = _slicedToArray24(last, 1), lastItem = _last[0];
        if (isEqual ? isEqual(item15, lastItem) : item15 === lastItem) {
          last[1]++;
        } else {
          aggregatedList.push([item15, 1]);
        }
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return aggregatedList;
}
function knapsack(values, capacity) {
  var _ref5;
  if (!Number.isFinite(capacity)) {
    throw new Error("Invalid capacity.");
  }
  var valuesInverted = values.map(function(_ref) {
    var _ref2 = _slicedToArray24(_ref, 4), thing = _ref2[0], value2 = _ref2[1], weight = _ref2[2], maximum2 = _ref2[3];
    return weight < 0 && maximum2 !== void 0 ? [new Not(thing), -value2, -weight, maximum2] : [thing, value2, weight, maximum2];
  });
  var capacityAdjustment = sum(values, function(_ref3) {
    var _ref4 = _slicedToArray24(_ref3, 4), weight = _ref4[2], maximum2 = _ref4[3];
    return weight < 0 && maximum2 !== void 0 ? -weight * maximum2 : 0;
  });
  var adjustedCapacity = capacity + capacityAdjustment;
  if (adjustedCapacity < 0) {
    return [-Infinity, []];
  }
  var valuesSorted = _toConsumableArray22(valuesInverted).sort(function(x, y) {
    return x[2] - y[2];
  });
  var values01 = (_ref5 = []).concat.apply(_ref5, _toConsumableArray22(valuesSorted.map(function(_ref6) {
    var _ref7 = _slicedToArray24(_ref6, 4), thing = _ref7[0], value2 = _ref7[1], weight = _ref7[2], maximum2 = _ref7[3];
    if (!Number.isFinite(weight) || weight < 0) {
      throw new Error("Invalid weight ".concat(weight, " for ").concat(thing instanceof Not ? "not ".concat(thing.thing) : thing));
    }
    var maxQuantity = Math.floor(maximum2 !== null && maximum2 !== void 0 ? maximum2 : adjustedCapacity / weight);
    if (maxQuantity < 0) {
      throw new Error("Invalid max quantity ".concat(maxQuantity, " for ").concat(thing instanceof Not ? "not ".concat(thing.thing) : thing));
    }
    return new Array(maxQuantity).fill([thing, value2, weight]);
  })));
  var memoizationTable = new Array(values01.length);
  for (var i = 0; i < values01.length; i++) {
    memoizationTable[i] = new Array(adjustedCapacity).fill(null);
  }
  var _bestSolution = bestSolution(memoizationTable, values01, values01.length - 1, adjustedCapacity), _bestSolution2 = _slicedToArray24(_bestSolution, 2), value = _bestSolution2[0], invertedSolution = _bestSolution2[1];
  var aggregatedSolution = aggregate(invertedSolution);
  var countMap = new Map(aggregatedSolution);
  var valueAdjustment = 0;
  var solution = aggregatedSolution.filter(function(_ref8) {
    var _ref9 = _slicedToArray24(_ref8, 1), thingOrNot2 = _ref9[0];
    return !(thingOrNot2 instanceof Not);
  });
  var _iterator2 = _createForOfIteratorHelper12(valuesSorted), _step2;
  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
      var _step2$value = _slicedToArray24(_step2.value, 4), thingOrNot = _step2$value[0], _value = _step2$value[1], maximum = _step2$value[3];
      if (thingOrNot instanceof Not) {
        var _countMap$get;
        var notCount = (_countMap$get = countMap.get(thingOrNot)) !== null && _countMap$get !== void 0 ? _countMap$get : 0;
        if (maximum === void 0) {
          throw new Error("Cannot find maximum for item ".concat(thingOrNot.thing, "."));
        }
        if (notCount > maximum) {
          throw new Error("Somehow picked ".concat(notCount, " more than the maximum ").concat(notCount, " for item ").concat(thingOrNot.thing, "."));
        }
        if (notCount < maximum) {
          solution.push([thingOrNot.thing, maximum - notCount]);
        }
        valueAdjustment -= maximum * _value;
      }
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
  return [value + valueAdjustment, solution];
}
function bestSolution(memoizationTable, values, currentIndex, remainingCapacity) {
  if (remainingCapacity < 0) return [-Infinity, []];
  if (remainingCapacity === 0 || currentIndex < 0) return [0, []];
  var memoized = memoizationTable[currentIndex][remainingCapacity - 1];
  if (memoized !== null) return memoized;
  var _values$currentIndex = _slicedToArray24(values[currentIndex], 3), item15 = _values$currentIndex[0], value = _values$currentIndex[1], weight = _values$currentIndex[2];
  var _bestSolution3 = bestSolution(memoizationTable, values, currentIndex - 1, remainingCapacity - weight), _bestSolution4 = _slicedToArray24(_bestSolution3, 2), valueIncludeRest = _bestSolution4[0], itemsInclude = _bestSolution4[1];
  var valueInclude = valueIncludeRest + value;
  var _bestSolution5 = bestSolution(memoizationTable, values, currentIndex - 1, remainingCapacity), _bestSolution6 = _slicedToArray24(_bestSolution5, 2), valueExclude = _bestSolution6[0], itemsExclude = _bestSolution6[1];
  var result = valueInclude > valueExclude ? [valueInclude, [].concat(_toConsumableArray22(itemsInclude), [item15])] : [valueExclude, itemsExclude];
  memoizationTable[currentIndex][remainingCapacity - 1] = result;
  return result;
}
var Not;
var init_knapsack = __esm({
  "node_modules/libram/dist/diet/knapsack.js": function() {
    init_utils();
    Not = /* @__PURE__ */ _createClass15(function Not2(thing) {
      _classCallCheck15(this, Not2);
      _defineProperty21(this, "thing", void 0);
      this.thing = thing;
    });
  }
});

// node_modules/libram/dist/diet/index.js
function _typeof23(o) {
  "@babel/helpers - typeof";
  return _typeof23 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof23(o);
}
function _createForOfIteratorHelper13(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t) {
    if (Array.isArray(r) || (t = _unsupportedIterableToArray38(r)) || e && r && "number" == typeof r.length) {
      t && (r = t);
      var _n = 0, F = function F2() {
      };
      return { s: F, n: function n() {
        return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
      }, e: function e2(r2) {
        throw r2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o, a = true, u = false;
  return { s: function s() {
    t = t.call(r);
  }, n: function n() {
    var r2 = t.next();
    return a = r2.done, r2;
  }, e: function e2(r2) {
    u = true, o = r2;
  }, f: function f() {
    try {
      a || null == t.return || t.return();
    } finally {
      if (u) throw o;
    }
  } };
}
function ownKeys11(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread11(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys11(Object(t), true).forEach(function(r2) {
      _defineProperty22(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys11(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _classCallCheck16(a, n) {
  if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties16(e, r) {
  for (var t = 0; t < r.length; t++) {
    var o = r[t];
    o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e, _toPropertyKey23(o.key), o);
  }
}
function _createClass16(e, r, t) {
  return r && _defineProperties16(e.prototype, r), t && _defineProperties16(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
}
function _defineProperty22(e, r, t) {
  return (r = _toPropertyKey23(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
}
function _toPropertyKey23(t) {
  var i = _toPrimitive23(t, "string");
  return "symbol" == _typeof23(i) ? i : i + "";
}
function _toPrimitive23(t, r) {
  if ("object" != _typeof23(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof23(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _toConsumableArray23(r) {
  return _arrayWithoutHoles23(r) || _iterableToArray23(r) || _unsupportedIterableToArray38(r) || _nonIterableSpread23();
}
function _nonIterableSpread23() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray23(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles23(r) {
  if (Array.isArray(r)) return _arrayLikeToArray38(r);
}
function _slicedToArray25(r, e) {
  return _arrayWithHoles25(r) || _iterableToArrayLimit25(r, e) || _unsupportedIterableToArray38(r, e) || _nonIterableRest25();
}
function _nonIterableRest25() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray38(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray38(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray38(r, a) : void 0;
  }
}
function _arrayLikeToArray38(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _iterableToArrayLimit25(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles25(r) {
  if (Array.isArray(r)) return r;
}
function _taggedTemplateLiteral78(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function isMonday() {
  return get2("Muscle Percent", $item(_templateObject561 || (_templateObject561 = _taggedTemplateLiteral78(["Tuesday's ruby"])))) > 0;
}
function seasoningAdventures(item15) {
  var _getRange = getRange(item15.adventures), _getRange2 = _slicedToArray25(_getRange, 2), min = _getRange2[0], max = _getRange2[1];
  return max - min <= 1 ? 1 : 0.5;
}
function _expectedAdventures(menuItem, modifiers) {
  var _item$notes, _item$notes2, _item$notes3, _item$notes4, _item$notes5;
  var item15 = menuItem.item;
  if (item15.adventures === "") return 0;
  var _getRange3 = getRange(item15.adventures), _getRange4 = _slicedToArray25(_getRange3, 2), min = _getRange4[0], max = _getRange4[1];
  var interpolated = _toConsumableArray23(new Array(max - min + 1).keys()).map(function(n) {
    return n + min;
  });
  var forkMugMultiplier = menuItem.itemType() === "food" && (_item$notes = item15.notes) !== null && _item$notes !== void 0 && _item$notes.includes("SALAD") || menuItem.itemType() === "booze" && (_item$notes2 = item15.notes) !== null && _item$notes2 !== void 0 && _item$notes2.includes("BEER") ? 1.5 : 1.3;
  var aioliAdventures = item15.fullness;
  var garish = modifiers.garish && ((_item$notes3 = item15.notes) === null || _item$notes3 === void 0 ? void 0 : _item$notes3.includes("LASAGNA")) && !isMonday();
  var refinedPalate = modifiers.refinedPalate && ((_item$notes4 = item15.notes) === null || _item$notes4 === void 0 ? void 0 : _item$notes4.includes("WINE"));
  var pinkyRing = modifiers.pinkyRing && ((_item$notes5 = item15.notes) === null || _item$notes5 === void 0 ? void 0 : _item$notes5.includes("WINE"));
  return sum(interpolated, function(baseAdventures) {
    var _item$notes6, _item$notes7;
    var adventures = baseAdventures;
    if (modifiers.forkMug) {
      adventures = Math.floor(adventures * forkMugMultiplier);
    }
    if ((_item$notes6 = item15.notes) !== null && _item$notes6 !== void 0 && _item$notes6.includes("SAUCY") && modifiers.saucemaven) {
      adventures += (0, import_kolmafia86.myPrimestat)() === $stat(_templateObject2140 || (_templateObject2140 = _taggedTemplateLiteral78(["Mysticality"]))) ? 5 : 3;
    }
    if (garish) adventures += 5;
    if (refinedPalate) adventures = Math.floor(adventures * 1.25);
    if (pinkyRing) adventures = Math.round(adventures * 1.125);
    if ((_item$notes7 = item15.notes) !== null && _item$notes7 !== void 0 && _item$notes7.includes("MARTINI") && modifiers.tuxedoShirt) {
      adventures += 2;
    }
    if (menuItem.itemType() === "food" && modifiers.mayoflex) adventures++;
    if (menuItem.itemType() === "food" && modifiers.seasoning) {
      adventures += seasoningAdventures(item15);
    }
    if (menuItem.itemType() === "food" && modifiers.aioli) {
      adventures += aioliAdventures;
    }
    if (menuItem.itemType() === "food" && modifiers.whetStone) adventures++;
    return adventures;
  }) / interpolated.length;
}
function isOrgan(x) {
  return organs.includes(x);
}
function planDiet(mpa, menu2) {
  var organCapacities = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [["food", null], ["booze", null], ["spleen item", null]];
  var resolvedOrganCapacities = organCapacities.map(function(_ref8) {
    var _ref9 = _slicedToArray25(_ref8, 2), organ = _ref9[0], size = _ref9[1];
    return [organ, size !== null && size !== void 0 ? size : organ === "food" ? (0, import_kolmafia86.fullnessLimit)() - (0, import_kolmafia86.myFullness)() : organ === "booze" ? (0, import_kolmafia86.inebrietyLimit)() - (0, import_kolmafia86.myInebriety)() : organ === "spleen item" ? (0, import_kolmafia86.spleenLimit)() - (0, import_kolmafia86.mySpleenUse)() : 0];
  });
  var includedInteractingItems = menu2.map(function(menuItem) {
    var interacting = interactingItems.find(function(_ref0) {
      var _ref1 = _slicedToArray25(_ref0, 1), itemOrEffect = _ref1[0];
      return menuItem.item === itemOrEffect || menuItem.item === $item(_templateObject5310 || (_templateObject5310 = _taggedTemplateLiteral78(["pocket wish"]))) && menuItem.effect === itemOrEffect;
    });
    if (interacting) {
      var _interacting = _slicedToArray25(interacting, 2), organSizes = _interacting[1];
      return [menuItem, organSizes];
    } else {
      return null;
    }
  }).filter(function(value) {
    return value !== null;
  });
  var dietPlanner = new DietPlanner(mpa, menu2.filter(function(menuItem) {
    return !includedInteractingItems.some(function(_ref10) {
      var _ref11 = _slicedToArray25(_ref10, 1), interacting = _ref11[0];
      return interacting === menuItem;
    });
  }));
  var _dietPlanner$planOrga = dietPlanner.planOrgansWithTrials(resolvedOrganCapacities.filter(function(_ref12) {
    var _ref13 = _slicedToArray25(_ref12, 2), organ = _ref13[0], capacity = _ref13[1];
    return ["food", "booze"].includes(organ) && capacity >= 0;
  }), includedInteractingItems, {}), _dietPlanner$planOrga2 = _slicedToArray25(_dietPlanner$planOrga, 2), planFoodBooze = _dietPlanner$planOrga2[1];
  var spleenCapacity = resolvedOrganCapacities.find(function(_ref14) {
    var _ref15 = _slicedToArray25(_ref14, 1), organ = _ref15[0];
    return organ === "spleen item";
  });
  if (spleenCapacity) {
    var additionalSpleen = sum(planFoodBooze, function(_ref16) {
      var _ref17 = _slicedToArray25(_ref16, 2), items = _ref17[0], number = _ref17[1];
      return items.some(function(menuItem) {
        return $items(_templateObject5410 || (_templateObject5410 = _taggedTemplateLiteral78(["jar of fermented pickle juice, extra-greasy slider"]))).includes(menuItem.item);
      }) ? 5 * number : 0;
    });
    var _spleenCapacity = _slicedToArray25(spleenCapacity, 2), availableSpleen = _spleenCapacity[1];
    var _dietPlanner$planOrga3 = dietPlanner.planOrgan("spleen item", availableSpleen + additionalSpleen), _dietPlanner$planOrga4 = _slicedToArray25(_dietPlanner$planOrga3, 2), planSpleen = _dietPlanner$planOrga4[1];
    return [].concat(_toConsumableArray23(planFoodBooze), _toConsumableArray23(planSpleen));
  } else {
    return planFoodBooze;
  }
}
var import_kolmafia86, _templateObject561, _templateObject2140, _templateObject3127, _templateObject4107, _templateObject564, _templateObject657, _templateObject751, _templateObject843, _templateObject935, _templateObject028, _templateObject1128, _templateObject1026, _templateObject1129, _templateObject1224, _templateObject1322, _templateObject1421, _templateObject1520, _templateObject1620, _templateObject1717, _templateObject1817, _templateObject1917, _templateObject2016, _templateObject2141, _templateObject2219, _templateObject2318, _templateObject2416, _templateObject2515, _templateObject2614, _templateObject2712, _templateObject2812, _templateObject2912, _templateObject3011, _templateObject3128, _templateObject3214, _templateObject3313, _templateObject3412, _templateObject3511, _templateObject3611, _templateObject3711, _templateObject3811, _templateObject3911, _templateObject4011, _templateObject4114, _templateObject4213, _templateObject4311, _templateObject4410, _templateObject4510, _templateObject4610, _templateObject4710, _templateObject4810, _templateObject4910, _templateObject5010, _templateObject5112, _templateObject5210, _templateObject5310, _templateObject5410, _templateObject5510, _templateObject565, _templateObject574, _templateObject584, _templateObject594, _templateObject604, _templateObject6110, _templateObject6210, _templateObject6310, _templateObject6410, _templateObject658, _templateObject664, _templateObject674, _templateObject684, _templateObject694, _templateObject704, MenuItem, organs, DietPlanner, interactingItems, DietEntry, Diet;
var init_diet = __esm({
  "node_modules/libram/dist/diet/index.js": function() {
    import_kolmafia86 = require("kolmafia");
    init_lib();
    init_modifier();
    init_property();
    init_MayoClinic();
    init_template_string();
    init_utils();
    init_knapsack();
    MenuItem = /* @__PURE__ */ function() {
      function MenuItem2(item15) {
        var _MenuItem$defaultOpti;
        var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        _classCallCheck16(this, MenuItem2);
        _defineProperty22(this, "item", void 0);
        _defineProperty22(this, "organ", void 0);
        _defineProperty22(this, "size", void 0);
        _defineProperty22(this, "maximum", void 0);
        _defineProperty22(this, "additionalValue", void 0);
        _defineProperty22(this, "effect", void 0);
        _defineProperty22(this, "priceOverride", void 0);
        _defineProperty22(this, "mayo", void 0);
        _defineProperty22(this, "data", void 0);
        _defineProperty22(this, "priceCached", void 0);
        _defineProperty22(this, "itemTypeCached", void 0);
        var _options = _objectSpread11(_objectSpread11({}, options), (_MenuItem$defaultOpti = MenuItem2.defaultOptions().get(item15)) !== null && _MenuItem$defaultOpti !== void 0 ? _MenuItem$defaultOpti : {}), size = _options.size, organ = _options.organ, maximum = _options.maximum, additionalValue = _options.additionalValue, effect2 = _options.effect, priceOverride = _options.priceOverride, mayo = _options.mayo, data = _options.data;
        this.item = item15;
        if (notNullish(maximum)) this.maximum = maximum === "auto" ? item15.dailyusesleft : maximum;
        if (notNullish(additionalValue)) this.additionalValue = additionalValue;
        if (notNullish(effect2)) this.effect = effect2;
        if (notNullish(priceOverride)) this.priceOverride = priceOverride;
        if (notNullish(mayo)) this.mayo = mayo;
        if (notNullish(data)) this.data = data;
        if (notNullish(organ)) {
          this.organ = organ;
        } else {
          var typ = (0, import_kolmafia86.itemType)(this.item);
          if (isOrgan(typ)) this.organ = typ;
        }
        this.size = size !== null && size !== void 0 ? size : this.organ === "food" ? this.item.fullness : this.organ === "booze" ? this.item.inebriety : this.organ === "spleen item" ? this.item.spleen : 0;
      }
      return _createClass16(MenuItem2, [{
        key: "equals",
        value: function equals(other) {
          return this.item === other.item && this.effect === other.effect;
        }
      }, {
        key: "toString",
        value: function toString() {
          if (this.effect) {
            return "".concat(this.item, ":").concat(this.effect);
          }
          return this.item.toString();
        }
      }, {
        key: "price",
        value: function price2() {
          if (!this.priceCached) {
            var _this$priceOverride;
            this.priceCached = (_this$priceOverride = this.priceOverride) !== null && _this$priceOverride !== void 0 ? _this$priceOverride : MenuItem2.defaultPriceFunction(this.item);
          }
          return this.priceCached;
        }
      }, {
        key: "itemType",
        value: function itemType() {
          if (!this.itemTypeCached) {
            this.itemTypeCached = (0, import_kolmafia86.itemType)(this.item);
          }
          return this.itemTypeCached;
        }
      }], [{
        key: "defaultOptions",
        value: function defaultOptions() {
          return /* @__PURE__ */ new Map([[$item(_templateObject3127 || (_templateObject3127 = _taggedTemplateLiteral78(["distention pill"]))), {
            organ: "food",
            maximum: !have($item(_templateObject4107 || (_templateObject4107 = _taggedTemplateLiteral78(["distention pill"])))) || get("_distentionPillUsed") ? 0 : 1,
            size: -1
          }], [$item(_templateObject564 || (_templateObject564 = _taggedTemplateLiteral78(["synthetic dog hair pill"]))), {
            organ: "booze",
            maximum: !have($item(_templateObject657 || (_templateObject657 = _taggedTemplateLiteral78(["synthetic dog hair pill"])))) || get("_syntheticDogHairPillUsed") ? 0 : 1,
            size: -1
          }], [$item(_templateObject751 || (_templateObject751 = _taggedTemplateLiteral78(["cuppa Voraci tea"]))), {
            organ: "food",
            maximum: get("_voraciTeaUsed") ? 0 : 1,
            size: -1
          }], [$item(_templateObject843 || (_templateObject843 = _taggedTemplateLiteral78(["cuppa Sobrie tea"]))), {
            organ: "booze",
            maximum: get("_sobrieTeaUsed") ? 0 : 1,
            size: -1
          }], [$item(_templateObject935 || (_templateObject935 = _taggedTemplateLiteral78(["mojo filter"]))), {
            organ: "spleen item",
            maximum: 3 - get("currentMojoFilters"),
            size: -1
          }], [$item(_templateObject028 || (_templateObject028 = _taggedTemplateLiteral78(["spice melange"]))), {
            maximum: get("spiceMelangeUsed") ? 0 : 1
          }], [$item(_templateObject1128 || (_templateObject1128 = _taggedTemplateLiteral78(["Ultra Mega Sour Ball"]))), {
            maximum: get("_ultraMegaSourBallUsed") ? 0 : 1
          }], [$item(_templateObject1026 || (_templateObject1026 = _taggedTemplateLiteral78(["The Plumber's mushroom stew"]))), {
            maximum: get("_plumbersMushroomStewEaten") ? 0 : 1
          }], [$item(_templateObject1129 || (_templateObject1129 = _taggedTemplateLiteral78(["The Mad Liquor"]))), {
            maximum: get("_madLiquorDrunk") ? 0 : 1
          }], [$item(_templateObject1224 || (_templateObject1224 = _taggedTemplateLiteral78(["Doc Clock's thyme cocktail"]))), {
            maximum: get("_docClocksThymeCocktailDrunk") ? 0 : 1
          }], [$item(_templateObject1322 || (_templateObject1322 = _taggedTemplateLiteral78(["Mr. Burnsger"]))), {
            maximum: get("_mrBurnsgerEaten") ? 0 : 1
          }], [$item(_templateObject1421 || (_templateObject1421 = _taggedTemplateLiteral78(["Calzone of Legend"]))), {
            maximum: get("calzoneOfLegendEaten") ? 0 : 1
          }], [$item(_templateObject1520 || (_templateObject1520 = _taggedTemplateLiteral78(["Deep Dish of Legend"]))), {
            maximum: get("deepDishOfLegendEaten") ? 0 : 1
          }], [$item(_templateObject1620 || (_templateObject1620 = _taggedTemplateLiteral78(["Pizza of Legend"]))), {
            maximum: get("pizzaOfLegendEaten") ? 0 : 1
          }], [$item(_templateObject1717 || (_templateObject1717 = _taggedTemplateLiteral78(["jar of fermented pickle juice"]))), {
            maximum: get("_pickleJuiceDrunk") ? 0 : 1
          }], [$item(_templateObject1817 || (_templateObject1817 = _taggedTemplateLiteral78(["extra-greasy slider"]))), {
            maximum: get("_extraGreasySliderEaten") ? 0 : 1
          }], [$item(_templateObject1917 || (_templateObject1917 = _taggedTemplateLiteral78(["voodoo snuff"]))), {
            maximum: get("_voodooSnuffUsed") ? 0 : 1
          }], [$item(_templateObject2016 || (_templateObject2016 = _taggedTemplateLiteral78(["Ol' Scratch's salad fork"]))), {
            maximum: get("_saladForkUsed") ? 0 : 1
          }], [$item(_templateObject2141 || (_templateObject2141 = _taggedTemplateLiteral78(["Frosty's frosty mug"]))), {
            maximum: get("_frostyMugUsed") ? 0 : 1
          }], [$item(_templateObject2219 || (_templateObject2219 = _taggedTemplateLiteral78(["tin cup of mulligan stew"]))), {
            maximum: get("_mulliganStewEaten") ? 0 : 1
          }], [$item(_templateObject2318 || (_templateObject2318 = _taggedTemplateLiteral78(["Hodgman's blanket"]))), {
            maximum: get("_hodgmansBlanketDrunk") ? 0 : 1
          }]]);
        }
      }]);
    }();
    _defineProperty22(MenuItem, "defaultPriceFunction", function(item15) {
      return (0, import_kolmafia86.npcPrice)(item15) > 0 ? (0, import_kolmafia86.npcPrice)(item15) : (0, import_kolmafia86.mallPrice)(item15);
    });
    organs = ["food", "booze", "spleen item"];
    DietPlanner = /* @__PURE__ */ function() {
      function DietPlanner2(mpa, menu2) {
        var _this2 = this;
        var _this = this;
        _classCallCheck16(this, DietPlanner2);
        _defineProperty22(this, "mpa", void 0);
        _defineProperty22(this, "menu", void 0);
        _defineProperty22(this, "mayoLookup", void 0);
        _defineProperty22(this, "fork", void 0);
        _defineProperty22(this, "mug", void 0);
        _defineProperty22(this, "seasoning", void 0);
        _defineProperty22(this, "whetStone", void 0);
        _defineProperty22(this, "aioli", void 0);
        _defineProperty22(this, "spleenValue", 0);
        _defineProperty22(this, "baseDefaultModifiers", {
          forkMug: false,
          seasoning: false,
          whetStone: false,
          aioli: false,
          mayoflex: false,
          refinedPalate: have($effect(_templateObject2416 || (_templateObject2416 = _taggedTemplateLiteral78(["Refined Palate"])))),
          garish: have($effect(_templateObject2515 || (_templateObject2515 = _taggedTemplateLiteral78(["Gar-ish"])))),
          saucemaven: have($skill(_templateObject2614 || (_templateObject2614 = _taggedTemplateLiteral78(["Saucemaven"])))),
          pinkyRing: have($item(_templateObject2712 || (_templateObject2712 = _taggedTemplateLiteral78(["mafia pinky ring"])))) && (0, import_kolmafia86.canEquip)($item(_templateObject2812 || (_templateObject2812 = _taggedTemplateLiteral78(["mafia pinky ring"])))),
          tuxedoShirt: have($item(_templateObject2912 || (_templateObject2912 = _taggedTemplateLiteral78(["tuxedo shirt"])))) && (0, import_kolmafia86.canEquip)($item(_templateObject3011 || (_templateObject3011 = _taggedTemplateLiteral78(["tuxedo shirt"]))))
        });
        this.mpa = mpa;
        var fork = menu2.find(function(item15) {
          return item15.item === $item(_templateObject3128 || (_templateObject3128 = _taggedTemplateLiteral78(["Ol' Scratch's salad fork"])));
        });
        if (fork) this.fork = fork;
        var mug = menu2.find(function(item15) {
          return item15.item === $item(_templateObject3214 || (_templateObject3214 = _taggedTemplateLiteral78(["Frosty's frosty mug"])));
        });
        if (mug) this.mug = mug;
        var seasoning = menu2.find(function(item15) {
          return item15.item === $item(_templateObject3313 || (_templateObject3313 = _taggedTemplateLiteral78(["Special Seasoning"])));
        });
        if (seasoning) this.seasoning = seasoning;
        var whetStone = menu2.find(function(item15) {
          return item15.item === $item(_templateObject3412 || (_templateObject3412 = _taggedTemplateLiteral78(["whet stone"])));
        });
        if (whetStone) this.whetStone = whetStone;
        var aioli = menu2.find(function(item15) {
          return item15.item === $item(_templateObject3511 || (_templateObject3511 = _taggedTemplateLiteral78(["mini kiwi aioli"])));
        });
        if (aioli) this.aioli = aioli;
        this.mayoLookup = /* @__PURE__ */ new Map();
        if (installed3()) {
          var _loop = function _loop2() {
            var mayo = _arr[_i];
            var menuItem = menu2.find(function(item15) {
              return item15.item === mayo;
            });
            if (menuItem) _this.mayoLookup.set(mayo, menuItem);
          };
          for (var _i = 0, _arr = [Mayo.flex, Mayo.zapine]; _i < _arr.length; _i++) {
            _loop();
          }
        }
        this.menu = menu2.filter(function(item15) {
          return item15.organ;
        });
        if (menu2.filter(function(item15) {
          return (0, import_kolmafia86.historicalPrice)(item15.item) === 0 || (0, import_kolmafia86.historicalAge)(item15.item) >= 1;
        }).length > 100) {
          (0, import_kolmafia86.mallPrices)("food");
          (0, import_kolmafia86.mallPrices)("booze");
        }
        var spleenItems = menu2.filter(function(item15) {
          return (0, import_kolmafia86.itemType)(item15.item) === "spleen item";
        });
        spleenItems.sort(function(x, y) {
          return -(_this2.consumptionValue(x) / x.item.spleen - _this2.consumptionValue(y) / y.item.spleen);
        });
        if (spleenItems.length > 0) {
          var bestMarginalSpleenItem = spleenItems.find(function(spleenItem) {
            return spleenItem.maximum === void 0 || spleenItem.maximum * spleenItem.size >= (0, import_kolmafia86.spleenLimit)() - (0, import_kolmafia86.mySpleenUse)();
          });
          if (bestMarginalSpleenItem) {
            this.spleenValue = Math.max(0, this.consumptionValue(bestMarginalSpleenItem) / bestMarginalSpleenItem.size);
          }
        }
      }
      return _createClass16(DietPlanner2, [{
        key: "consumptionValue",
        value: function consumptionValue(menuItem) {
          return this.consumptionHelpersAndValue(menuItem, {})[1];
        }
        /**
         * Determine which helpers will be used with a menu item and its resulting value.
         *
         * @param menuItem Menu item to check.
         * @param overrideModifiers Overrides for consumption modifiers, if any.
         * @returns Pair [array of helpers and base menu item, value].
         */
      }, {
        key: "consumptionHelpersAndValue",
        value: function consumptionHelpersAndValue(menuItem, overrideModifiers) {
          var _menuItem$additionalV, _menuItem$additionalV2;
          var helpers = [];
          if (menuItem.itemType() === "food" && this.mayoLookup.size) {
            var mayo = menuItem.mayo ? this.mayoLookup.get(menuItem.mayo) : this.mayoLookup.get(Mayo.flex);
            if (mayo) helpers.push(mayo);
          }
          var defaultModifiers = _objectSpread11(_objectSpread11({}, this.baseDefaultModifiers), {}, {
            mayoflex: this.mayoLookup.size ? helpers.some(function(item15) {
              return item15.item === Mayo.flex;
            }) : false
          }, overrideModifiers);
          if (this.seasoning && menuItem.itemType() === "food" && this.mpa * seasoningAdventures(menuItem.item) > this.seasoning.price()) {
            helpers.push(this.seasoning);
          }
          if (this.whetStone && menuItem.itemType() === "food" && this.mpa > this.whetStone.price()) {
            helpers.push(this.whetStone);
          }
          if (this.aioli && menuItem.itemType() === "food" && this.mpa * menuItem.item.fullness > this.aioli.price()) {
            helpers.push(this.aioli);
          }
          var forkMug = menuItem.itemType() === "food" ? this.fork : menuItem.itemType() === "booze" ? this.mug : null;
          var forkMugPrice = forkMug ? forkMug.price() : Infinity;
          var baseCost = menuItem.price() + sum(helpers, function(item15) {
            return item15.price();
          });
          var valueRaw = _expectedAdventures(menuItem, defaultModifiers) * this.mpa - baseCost + ((_menuItem$additionalV = menuItem.additionalValue) !== null && _menuItem$additionalV !== void 0 ? _menuItem$additionalV : 0);
          var valueForkMug = _expectedAdventures(menuItem, _objectSpread11(_objectSpread11({}, defaultModifiers), {}, {
            forkMug: true
          })) * this.mpa - baseCost - forkMugPrice + ((_menuItem$additionalV2 = menuItem.additionalValue) !== null && _menuItem$additionalV2 !== void 0 ? _menuItem$additionalV2 : 0);
          var valueSpleen = $items(_templateObject3611 || (_templateObject3611 = _taggedTemplateLiteral78(["jar of fermented pickle juice, extra-greasy slider"]))).includes(menuItem.item) ? 5 * this.spleenValue : 0;
          return forkMug && valueForkMug > valueRaw ? [[].concat(helpers, [forkMug, menuItem]), valueForkMug + valueSpleen] : [[].concat(helpers, [menuItem]), valueRaw + valueSpleen];
        }
        /**
         * Plan an individual organ.
         *
         * @param organ Organ to plan
         * @param capacity Organ capacity.
         * @param overrideModifiers Overrides for consumption modifiers, if any.
         * @returns Pair of [value, menu items and quantities].
         */
      }, {
        key: "planOrgan",
        value: function planOrgan(organ, capacity) {
          var _this = this;
          var overrideModifiers = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          var submenu = this.menu.filter(function(menuItem) {
            return menuItem.organ === organ && (0, import_kolmafia86.myLevel)() >= menuItem.item.levelreq;
          });
          var knapsackValues = submenu.map(function(menuItem) {
            return [].concat(_toConsumableArray23(_this.consumptionHelpersAndValue(menuItem, overrideModifiers)), [menuItem.size, menuItem.maximum]);
          });
          return knapsack(knapsackValues, capacity);
        }
        /**
         * Plan organs.
         *
         * @param organCapacities Organ capacities.
         * @param overrideModifiers Overrides for consumption modifiers, if any.
         * @returns Pair of [value, menu items and quantities].
         */
      }, {
        key: "planOrgans",
        value: function planOrgans(organCapacities) {
          var _this = this;
          var _ref5;
          var overrideModifiers = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          var valuePlans = organCapacities.map(function(_ref) {
            var _ref2 = _slicedToArray25(_ref, 2), organ = _ref2[0], capacity = _ref2[1];
            return _this.planOrgan(organ, capacity, overrideModifiers);
          });
          return [sum(valuePlans, function(_ref3) {
            var _ref4 = _slicedToArray25(_ref3, 1), value = _ref4[0];
            return value;
          }), (_ref5 = []).concat.apply(_ref5, _toConsumableArray23(valuePlans.map(function(_ref6) {
            var _ref7 = _slicedToArray25(_ref6, 2), plan = _ref7[1];
            return plan;
          })))];
        }
        /**
         * Plan organs, retrying with and without each trial item. Runtime is
         * proportional to 2 ^ trialItems.length.
         *
         * @param organCapacities Organ capacities.
         * @param trialItems Items to rerun solver with and without.
         * @param overrideModifiers Overrides for consumption modifiers, if any.
         * @returns Pair of [value, menu items and quantities].
         */
      }, {
        key: "planOrgansWithTrials",
        value: function planOrgansWithTrials(organCapacities, trialItems, overrideModifiers) {
          if (trialItems.length === 0) {
            return this.planOrgans(organCapacities, overrideModifiers);
          }
          var _trialItems$ = _slicedToArray25(trialItems[0], 2), trialItem = _trialItems$[0], organSizes = _trialItems$[1];
          if (trialItem.maximum !== void 0 && trialItem.maximum <= 0) {
            return this.planOrgansWithTrials(organCapacities, trialItems.slice(1), overrideModifiers);
          }
          var organCapacitiesWithMap = new Map(organCapacities);
          var _iterator = _createForOfIteratorHelper13(organSizes), _step;
          try {
            for (_iterator.s(); !(_step = _iterator.n()).done; ) {
              var _step$value = _slicedToArray25(_step.value, 2), organ = _step$value[0], size = _step$value[1];
              var current2 = organCapacitiesWithMap.get(organ);
              if (current2 === void 0) {
                return this.planOrgansWithTrials(organCapacities, trialItems.slice(1), overrideModifiers);
              }
              organCapacitiesWithMap.set(organ, current2 - size);
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
          var organCapacitiesWith = _toConsumableArray23(organCapacitiesWithMap);
          var isRefinedPalate = trialItem.item === $item(_templateObject3711 || (_templateObject3711 = _taggedTemplateLiteral78(["pocket wish"]))) && trialItem.effect === $effect(_templateObject3811 || (_templateObject3811 = _taggedTemplateLiteral78(["Refined Palate"]))) || trialItem.item === $item(_templateObject3911 || (_templateObject3911 = _taggedTemplateLiteral78(["toasted brie"])));
          var isGarish = trialItem.item === $item(_templateObject4011 || (_templateObject4011 = _taggedTemplateLiteral78(["pocket wish"]))) && trialItem.effect === $effect(_templateObject4114 || (_templateObject4114 = _taggedTemplateLiteral78(["Gar-ish"]))) || trialItem.item === $item(_templateObject4213 || (_templateObject4213 = _taggedTemplateLiteral78(["potion of the field gar"])));
          var _this$planOrgansWithT = this.planOrgansWithTrials(organCapacities, trialItems.slice(1), overrideModifiers), _this$planOrgansWithT2 = _slicedToArray25(_this$planOrgansWithT, 2), valueWithout = _this$planOrgansWithT2[0], planWithout = _this$planOrgansWithT2[1];
          var _this$planOrgansWithT3 = this.planOrgansWithTrials(organCapacitiesWith, trialItems.slice(1), _objectSpread11(_objectSpread11(_objectSpread11({}, overrideModifiers), isRefinedPalate ? {
            refinedPalate: true
          } : {}), isGarish ? {
            garish: true
          } : {})), _this$planOrgansWithT4 = _slicedToArray25(_this$planOrgansWithT3, 2), valueWith = _this$planOrgansWithT4[0], planWith = _this$planOrgansWithT4[1];
          var _this$consumptionHelp = this.consumptionHelpersAndValue(trialItem, {}), _this$consumptionHelp2 = _slicedToArray25(_this$consumptionHelp, 2), helpersAndItem = _this$consumptionHelp2[0], value = _this$consumptionHelp2[1];
          return valueWithout > valueWith + value ? [valueWithout, planWithout] : [valueWith + value, [].concat(_toConsumableArray23(planWith), [[helpersAndItem, 1]])];
        }
      }]);
    }();
    interactingItems = [[$item(_templateObject4311 || (_templateObject4311 = _taggedTemplateLiteral78(["spice melange"]))), [["food", -3], ["booze", -3]]], [$item(_templateObject4410 || (_templateObject4410 = _taggedTemplateLiteral78(["Ultra Mega Sour Ball"]))), [["food", -3], ["booze", -3]]], [$item(_templateObject4510 || (_templateObject4510 = _taggedTemplateLiteral78(["The Plumber's mushroom stew"]))), [["food", 3], ["booze", -1]]], [$item(_templateObject4610 || (_templateObject4610 = _taggedTemplateLiteral78(["The Mad Liquor"]))), [["food", -1], ["booze", 3]]], [$item(_templateObject4710 || (_templateObject4710 = _taggedTemplateLiteral78(["Doc Clock's thyme cocktail"]))), [["food", -2], ["booze", 4]]], [$item(_templateObject4810 || (_templateObject4810 = _taggedTemplateLiteral78(["Mr. Burnsger"]))), [["food", 4], ["booze", -2]]], [$effect(_templateObject4910 || (_templateObject4910 = _taggedTemplateLiteral78(["Refined Palate"]))), []], [$item(_templateObject5010 || (_templateObject5010 = _taggedTemplateLiteral78(["toasted brie"]))), [["food", 2]]], [$effect(_templateObject5112 || (_templateObject5112 = _taggedTemplateLiteral78(["Gar-ish"]))), []], [$item(_templateObject5210 || (_templateObject5210 = _taggedTemplateLiteral78(["potion of the field gar"]))), []]];
    DietEntry = /* @__PURE__ */ function() {
      function DietEntry2(menuItems, quantity) {
        _classCallCheck16(this, DietEntry2);
        _defineProperty22(this, "quantity", void 0);
        _defineProperty22(this, "menuItems", void 0);
        this.menuItems = Object.freeze(menuItems);
        this.quantity = quantity;
      }
      return _createClass16(DietEntry2, [{
        key: "target",
        value: function target() {
          return this.menuItems[this.menuItems.length - 1];
        }
      }, {
        key: "helpers",
        value: function helpers() {
          if (this.menuItems.length > 1) {
            return this.menuItems.slice(0, -1);
          }
          return [];
        }
      }, {
        key: "expectedAdventures",
        value: function expectedAdventures(diet) {
          {
            if (this.menuItems.length === 0 || this.quantity === 0) {
              return 0;
            } else {
              var items = this.menuItems.map(function(m) {
                return m.item;
              });
              var targetItem = this.menuItems[this.menuItems.length - 1].item;
              var fork = (0, import_kolmafia86.itemType)(targetItem) === "food" && items.includes($item(_templateObject5510 || (_templateObject5510 = _taggedTemplateLiteral78(["Ol' Scratch's salad fork"]))));
              var mug = (0, import_kolmafia86.itemType)(targetItem) === "booze" && items.includes($item(_templateObject565 || (_templateObject565 = _taggedTemplateLiteral78(["Frosty's frosty mug"]))));
              return this.quantity * _expectedAdventures(this.menuItems[this.menuItems.length - 1], {
                forkMug: fork || mug,
                seasoning: items.includes($item(_templateObject574 || (_templateObject574 = _taggedTemplateLiteral78(["Special Seasoning"])))),
                whetStone: items.includes($item(_templateObject584 || (_templateObject584 = _taggedTemplateLiteral78(["whet stone"])))),
                aioli: items.includes($item(_templateObject594 || (_templateObject594 = _taggedTemplateLiteral78(["mini kiwi aioli"])))),
                mayoflex: items.includes(Mayo.flex),
                refinedPalate: diet.refinedPalate,
                garish: diet.garish,
                saucemaven: diet.saucemaven,
                pinkyRing: diet.pinkyRing,
                tuxedoShirt: diet.tuxedoShirt
              });
            }
          }
        }
      }, {
        key: "expectedValue",
        value: function expectedValue(mpa, diet) {
          var method = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "gross";
          var gross = mpa * this.expectedAdventures(diet) + this.quantity * sum(this.menuItems, function(menuItem) {
            var _menuItem$additionalV3;
            return (_menuItem$additionalV3 = menuItem.additionalValue) !== null && _menuItem$additionalV3 !== void 0 ? _menuItem$additionalV3 : 0;
          });
          if (method === "gross") {
            return gross;
          } else {
            return gross - this.expectedPrice();
          }
        }
      }, {
        key: "expectedPrice",
        value: function expectedPrice() {
          return this.quantity * sum(this.menuItems, function(menuItem) {
            return menuItem.price();
          });
        }
      }]);
    }();
    Diet = /* @__PURE__ */ function() {
      function Diet2() {
        var entries = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
        _classCallCheck16(this, Diet2);
        _defineProperty22(this, "entries", void 0);
        this.entries = entries;
      }
      return _createClass16(Diet2, [{
        key: "refinedPalate",
        get: function get4() {
          return this.entries.some(function(dietEntry) {
            return dietEntry.menuItems.some(function(trialItem) {
              return trialItem.item === $item(_templateObject604 || (_templateObject604 = _taggedTemplateLiteral78(["pocket wish"]))) && trialItem.effect === $effect(_templateObject6110 || (_templateObject6110 = _taggedTemplateLiteral78(["Refined Palate"]))) || trialItem.item === $item(_templateObject6210 || (_templateObject6210 = _taggedTemplateLiteral78(["toasted brie"])));
            });
          });
        }
      }, {
        key: "garish",
        get: function get4() {
          return this.entries.some(function(dietEntry) {
            return dietEntry.menuItems.some(function(trialItem) {
              return trialItem.item === $item(_templateObject6310 || (_templateObject6310 = _taggedTemplateLiteral78(["pocket wish"]))) && trialItem.effect === $effect(_templateObject6410 || (_templateObject6410 = _taggedTemplateLiteral78(["Gar-ish"]))) || trialItem.item === $item(_templateObject658 || (_templateObject658 = _taggedTemplateLiteral78(["potion of the field gar"])));
            });
          });
        }
      }, {
        key: "saucemaven",
        get: function get4() {
          return have($skill(_templateObject664 || (_templateObject664 = _taggedTemplateLiteral78(["Saucemaven"]))));
        }
      }, {
        key: "tuxedoShirt",
        get: function get4() {
          return have($item(_templateObject674 || (_templateObject674 = _taggedTemplateLiteral78(["tuxedo shirt"])))) && (0, import_kolmafia86.canEquip)($item(_templateObject684 || (_templateObject684 = _taggedTemplateLiteral78(["tuxedo shirt"]))));
        }
      }, {
        key: "pinkyRing",
        get: function get4() {
          return have($item(_templateObject694 || (_templateObject694 = _taggedTemplateLiteral78(["mafia pinky ring"])))) && (0, import_kolmafia86.canEquip)($item(_templateObject704 || (_templateObject704 = _taggedTemplateLiteral78(["mafia pinky ring"]))));
        }
      }, {
        key: "expectedAdventures",
        value: function expectedAdventures() {
          var _this = this;
          return sum(this.entries, function(dietEntry) {
            return dietEntry.expectedAdventures(_this);
          });
        }
      }, {
        key: "expectedValue",
        value: function expectedValue(mpa) {
          var _this = this;
          var method = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "gross";
          return sum(this.entries, function(dietEntry) {
            return dietEntry.expectedValue(mpa, _this, method);
          });
        }
      }, {
        key: "expectedPrice",
        value: function expectedPrice() {
          return sum(this.entries, function(dietEntry) {
            return dietEntry.expectedPrice();
          });
        }
      }, {
        key: "copy",
        value: function copy() {
          return new Diet2(_toConsumableArray23(this.entries));
        }
      }], [{
        key: "from",
        value: function from(rawDiet) {
          var diet = rawDiet.map(function(item15) {
            var _item = _slicedToArray25(item15, 2), menuItems = _item[0], quantity = _item[1];
            return new DietEntry(menuItems, quantity);
          });
          return new Diet2(diet);
        }
      }, {
        key: "plan",
        value: function plan(mpa, menu2) {
          var organCapacities = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {
            food: "auto",
            booze: "auto",
            spleen: "auto"
          };
          var food = organCapacities.food, booze = organCapacities.booze, spleen = organCapacities.spleen;
          var plannerCapacity = [];
          if (food) {
            plannerCapacity.push(["food", food === "auto" ? null : food]);
          }
          if (booze) {
            plannerCapacity.push(["booze", booze === "auto" ? null : booze]);
          }
          if (spleen) {
            plannerCapacity.push(["spleen item", spleen === "auto" ? null : spleen]);
          }
          return Diet2.from(planDiet(mpa, menu2, plannerCapacity));
        }
      }]);
    }();
  }
});

// node_modules/libram/dist/Dungeon.js
function _typeof24(o) {
  "@babel/helpers - typeof";
  return _typeof24 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof24(o);
}
function _taggedTemplateLiteral79(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function _createForOfIteratorHelper14(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t) {
    if (Array.isArray(r) || (t = _unsupportedIterableToArray39(r)) || e && r && "number" == typeof r.length) {
      t && (r = t);
      var _n = 0, F = function F2() {
      };
      return { s: F, n: function n() {
        return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
      }, e: function e2(r2) {
        throw r2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o, a = true, u = false;
  return { s: function s() {
    t = t.call(r);
  }, n: function n() {
    var r2 = t.next();
    return a = r2.done, r2;
  }, e: function e2(r2) {
    u = true, o = r2;
  }, f: function f() {
    try {
      a || null == t.return || t.return();
    } finally {
      if (u) throw o;
    }
  } };
}
function _toConsumableArray24(r) {
  return _arrayWithoutHoles24(r) || _iterableToArray24(r) || _unsupportedIterableToArray39(r) || _nonIterableSpread24();
}
function _nonIterableSpread24() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray39(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray39(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray39(r, a) : void 0;
  }
}
function _iterableToArray24(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles24(r) {
  if (Array.isArray(r)) return _arrayLikeToArray39(r);
}
function _arrayLikeToArray39(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _classCallCheck17(a, n) {
  if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties17(e, r) {
  for (var t = 0; t < r.length; t++) {
    var o = r[t];
    o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e, _toPropertyKey24(o.key), o);
  }
}
function _createClass17(e, r, t) {
  return r && _defineProperties17(e.prototype, r), t && _defineProperties17(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
}
function _defineProperty23(e, r, t) {
  return (r = _toPropertyKey24(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
}
function _toPropertyKey24(t) {
  var i = _toPrimitive24(t, "string");
  return "symbol" == _typeof24(i) ? i : i + "";
}
function _toPrimitive24(t, r) {
  if ("object" != _typeof24(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof24(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
var import_kolmafia87, _templateObject566, _templateObject2142, _templateObject3129, Dungeon, Dreadsylvania, Hobopolis, SlimeTube;
var init_Dungeon = __esm({
  "node_modules/libram/dist/Dungeon.js": function() {
    import_kolmafia87 = require("kolmafia");
    init_Clan();
    init_lib();
    init_template_string();
    init_utils();
    Dungeon = /* @__PURE__ */ function() {
      function Dungeon2(name_, loot, openAction, closeAction, openCost, openImage, closedImage) {
        _classCallCheck17(this, Dungeon2);
        _defineProperty23(this, "name_", void 0);
        _defineProperty23(this, "loot", void 0);
        _defineProperty23(this, "openAction", void 0);
        _defineProperty23(this, "closeAction", void 0);
        _defineProperty23(this, "openCost", void 0);
        _defineProperty23(this, "openImage", void 0);
        _defineProperty23(this, "closedImage", void 0);
        this.name_ = name_;
        this.loot = loot;
        this.openAction = openAction;
        this.closeAction = closeAction;
        this.openCost = openCost;
        this.openImage = openImage;
        this.closedImage = closedImage;
      }
      return _createClass17(Dungeon2, [{
        key: "possibleLoot",
        get: function get4() {
          return _toConsumableArray24(this.loot);
        }
      }, {
        key: "name",
        get: function get4() {
          return this.name_;
        }
      }, {
        key: "distribute",
        value: function distribute(idOrname_) {
          var _this = this;
          var loot = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.loot;
          var distributeAllOfAGivenItem = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !(loot instanceof Map);
          var player = getPlayerFromIdOrName(idOrname_);
          var lootList = loot instanceof Map ? countedMapToArray(loot) : Array.isArray(loot) ? loot : [loot];
          var badLoot = lootList.find(function(lootItem) {
            return !_this.loot.includes(lootItem);
          });
          if (badLoot) {
            throw new Error("".concat(badLoot, " is not a valid piece of dungeon loot"));
          }
          var pageText = (0, import_kolmafia87.visitUrl)("clan_basement.php");
          if (!pageText.match(new RegExp(player.name, "i"))) {
            throw new Error("".concat(player.name, " cannot be distributed loot from ").concat((0, import_kolmafia87.getClanName)()));
          }
          var itemname_s = (0, import_kolmafia87.xpath)(pageText, "//tr/td[2]/b/text()");
          var whichLoots = (0, import_kolmafia87.xpath)(pageText, '//form[@action="clan_basement.php"]//input[@type="hidden"][@name_="whichloot"]/@value');
          itemname_s.forEach(function(itemname_, index) {
            if (lootList.includes((0, import_kolmafia87.toItem)(itemname_))) {
              (0, import_kolmafia87.visitUrl)("clan_basement.php?whichloot=".concat(whichLoots[index], "&recipient=").concat(player.id));
              if (!distributeAllOfAGivenItem) lootList.splice(lootList.indexOf((0, import_kolmafia87.toItem)(itemname_)));
            }
          });
        }
        /**
         * Close this dungeon
         *
         * @returns Whether the dungeon is now closed
         */
      }, {
        key: "close",
        value: function close() {
          (0, import_kolmafia87.visitUrl)("clan_basement.php?action=".concat(this.closeAction, "&confirm=true"), true);
          var pageText = (0, import_kolmafia87.visitUrl)("clan_basement.php");
          return pageText.includes(this.closedImage);
        }
        /**
         * Open an instance of this dungeon
         *
         * @param paymentPolicy How much meat should we put into the clan stash to open this dungeon?
         * @returns Whether the dungeon is now open
         */
      }, {
        key: "open",
        value: function open() {
          var paymentPolicy = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "Difference";
          var pageText = (0, import_kolmafia87.visitUrl)("clan_basement.php");
          if (pageText.includes(this.openImage)) return true;
          var clan = Clan.get();
          if (paymentPolicy === "All") {
            clan.putMeatInCoffer(this.openCost);
          } else {
            var stashMeat = clan.getMeatInCoffer();
            var payDifference = this.openCost - stashMeat;
            if (payDifference > 0) {
              if (paymentPolicy === "None") return false;
              clan.putMeatInCoffer(payDifference);
            }
          }
          (0, import_kolmafia87.visitUrl)("clan_basement.php?action=".concat(this.openAction), true);
          return (0, import_kolmafia87.visitUrl)("clan_basement.php").includes(this.openImage);
        }
        /**
         * @returns A counted map of all loot from this dungeon eligible for distribution
         */
      }, {
        key: "findLoot",
        value: function findLoot() {
          var result = /* @__PURE__ */ new Map();
          var pageText = (0, import_kolmafia87.visitUrl)("clan_basement.php");
          var _iterator = _createForOfIteratorHelper14(this.loot), _step;
          try {
            for (_iterator.s(); !(_step = _iterator.n()).done; ) {
              var _pageText$match$lengt, _pageText$match;
              var lootItem = _step.value;
              result.set(lootItem, (_pageText$match$lengt = (_pageText$match = pageText.match(new RegExp(lootItem.name, "g"))) === null || _pageText$match === void 0 ? void 0 : _pageText$match.length) !== null && _pageText$match$lengt !== void 0 ? _pageText$match$lengt : 0);
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
          return result;
        }
      }]);
    }();
    Dreadsylvania = new Dungeon("Dreadsylvania", $items(_templateObject566 || (_templateObject566 = _taggedTemplateLiteral79(["Great Wolf's headband, Great Wolf's right paw, Great Wolf's left paw, Great Wolf's lice, Great Wolf's rocket launcher, Great Wolf's beastly trousers, Drapes-You-Regally, Warms-Your-Tush, Covers-Your-Head, Protects-Your-Junk, Quiets-Your-Steps, Helps-You-Sleep, Mayor Ghost's khakis, Mayor Ghost's cloak, Mayor Ghost's toupee, Mayor Ghost's scissors, Mayor Ghost's sash, Mayor Ghost's gavel, zombie mariachi hat, zombie accordion, zombie mariachi pants, HOA regulation book, HOA zombie eyes, HOA citation pad, Unkillable Skeleton's skullcap, Unkillable Skeleton's shinguards, Unkillable Skeleton's breastplate, Unkillable Skeleton's shield, Unkillable Skeleton's sawsword, Unkillable Skeleton's restless leg, skull capacitor, Thunkula's drinking cap, Drunkula's silky pants, Drunkula's cape, Drunkula's ring of haze, Drunkula's wineglass, Drunkula's bell, bottle of Bloodweiser, bottle of Bloodweiser, bottle of Bloodweiser, bottle of Bloodweiser, electric Kool-Aid, electric Kool-Aid, electric Kool-Aid, electric Kool-Aid, ghost pepper, ghost pepper, ghost pepper, ghost pepper, Gets-You-Drunk, Gets-You-Drunk, Gets-You-Drunk, Gets-You-Drunk, wriggling severed nose, wriggling severed nose, wriggling severed nose, wriggling severed nose, Hunger\u2122 Sauce, Hunger\u2122 Sauce, Hunger\u2122 Sauce, Hunger\u2122 Sauce"]))), "translatemap", "foldmap", 1e6, "dvmap.gif", "foldmap.gif");
    Hobopolis = new Dungeon("Hobopolis", $items(_templateObject2142 || (_templateObject2142 = _taggedTemplateLiteral79(["Ol' Scratch's ash can, Ol' Scratch's ol' britches, Ol' Scratch's stovepipe hat, Ol' Scratch's infernal pitchfork, Ol' Scratch's manacles, Ol' Scratch's stove door, Frosty's carrot, Frosty's nailbat, Frosty's old silk hat, Frosty's arm, Frosty's iceball, Frosty's snowball sack, Oscus's dumpster waders, Oscus's pelt, Wand of Oscus, Oscus's flypaper pants, Oscus's garbage can lid, Oscus's neverending soda, Zombo's grievous greaves, Zombo's shield, Zombo's skullcap, Zombo's empty eye, Zombo's shoulder blade, Zombo's skull ring, Chester's bag of candy, Chester's cutoffs, Chester's moustache, Chester's Aquarius medallion, Chester's muscle shirt, Chester's sunglasses, Hodgman's bow tie, Hodgman's porkpie hat, Hodgman's lobsterskin pants, Hodgman's almanac, Hodgman's lucky sock, Hodgman's metal detector, Hodgman's varcolac paw, Hodgman's harmonica, Hodgman's garbage sticker, Hodgman's cane, Hodgman's whackin' stick, Hodgman's disgusting technicolor overcoat, Hodgman's imaginary hamster"]))), "cleansewer", "floodsewer", 1e6, "opengrate.gif", "sewergrate.gif");
    SlimeTube = new Dungeon("The Slime Tube", $items(_templateObject3129 || (_templateObject3129 = _taggedTemplateLiteral79(["slime-soaked brain, slime-soaked hypophysis, slime-soaked sweat gland, squirming Slime larva, caustic slime nodule, caustic slime nodule, hardened slime belt, hardened slime hat, hardened slime pants"]))), "cleanspot", "sealtube", 25e4, "slimehole.gif", "greasespot.gif");
  }
});

// node_modules/libram/dist/mining.js
var mining_exports = {};
__export(mining_exports, {
  Mine: function() {
    return Mine;
  },
  caveInCost: function() {
    return caveInCost;
  },
  countFreeMines: function() {
    return countFreeMines;
  },
  findNewCavern: function() {
    return findNewCavern;
  },
  getAccessibleSparkles: function() {
    return getAccessibleSparkles;
  },
  getAsMatrix: function() {
    return getAsMatrix;
  },
  getState: function() {
    return getState;
  },
  hasObjectDetection: function() {
    return hasObjectDetection;
  },
  isValidCoordinate: function() {
    return isValidCoordinate;
  },
  mineCoordinate: function() {
    return mineCoordinate;
  },
  minedSpots: function() {
    return minedSpots;
  },
  stateIndexToCoord: function() {
    return stateIndexToCoord;
  },
  visit: function() {
    return visit2;
  }
});
function _toConsumableArray25(r) {
  return _arrayWithoutHoles25(r) || _iterableToArray25(r) || _unsupportedIterableToArray40(r) || _nonIterableSpread25();
}
function _nonIterableSpread25() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray25(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles25(r) {
  if (Array.isArray(r)) return _arrayLikeToArray40(r);
}
function _slicedToArray26(r, e) {
  return _arrayWithHoles26(r) || _iterableToArrayLimit26(r, e) || _unsupportedIterableToArray40(r, e) || _nonIterableRest26();
}
function _nonIterableRest26() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray40(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray40(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray40(r, a) : void 0;
  }
}
function _arrayLikeToArray40(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _iterableToArrayLimit26(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles26(r) {
  if (Array.isArray(r)) return r;
}
function _taggedTemplateLiteral80(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function hasObjectDetection() {
  var mine = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : Mine.ITZNOTYERZITZ;
  if (mine === Mine.CRIMBONIUM && have($effect(_templateObject567 || (_templateObject567 = _taggedTemplateLiteral80(["Crimbonar"]))))) return true;
  return (0, import_kolmafia88.haveEffect)($effect(_templateObject2143 || (_templateObject2143 = _taggedTemplateLiteral80(["Object Detection"])))) !== 0 || (0, import_kolmafia88.isWearingOutfit)("Dwarvish War Uniform");
}
function caveInCost(mine) {
  switch (mine) {
    case Mine.ITZNOTYERZITZ:
    case Mine.GUMMI:
    case Mine.CRIMBONIUM:
      return (0, import_kolmafia88.myBuffedstat)($stat(_templateObject3130 || (_templateObject3130 = _taggedTemplateLiteral80(["muscle"])))) * 1.5;
    case Mine.KNOB:
      return (0, import_kolmafia88.myBuffedstat)($stat(_templateObject4108 || (_templateObject4108 = _taggedTemplateLiteral80(["muscle"])))) * 0.5;
    case Mine.ANEMONE:
      return (0, import_kolmafia88.myBuffedstat)($stat(_templateObject568 || (_templateObject568 = _taggedTemplateLiteral80(["muscle"])))) * 2.5;
    case Mine.VOLCANO:
      return damageTakenByElement(75, $element(_templateObject659 || (_templateObject659 = _taggedTemplateLiteral80(["hot"]))));
    default:
      return 0;
  }
}
function getAccessibleSparkles(mine) {
  var state = get("mineState".concat(mine), "");
  return _toConsumableArray25(Array(state.length).fill(0)).flatMap(function(v, position) {
    return getAccessibleSparklesForIndex(state, position);
  });
}
function minedSpots(mine) {
  return get("mineState".concat(mine), "").split("").filter(function(c) {
    return c === "o";
  }).length;
}
function findNewCavern(mine) {
  return (0, import_kolmafia88.visitUrl)("mining.php?mine=".concat(mine, "&reset=1&pwd"), true);
}
function mineCoordinate(mine, _ref3) {
  var _ref4 = _slicedToArray26(_ref3, 2), col = _ref4[0], row = _ref4[1];
  var page = (0, import_kolmafia88.visitUrl)("mining.php?mine=".concat(mine, "&which=").concat(col + 8 * row, "&pwd"), true);
  return extractItems(page);
}
function visit2(mine) {
  return (0, import_kolmafia88.visitUrl)("mining.php?mine=".concat(mine));
}
function getState(mine) {
  return get("mineState".concat(mine), "");
}
function getAsMatrix(mine) {
  return chunk(getState(mine).split(""), 6);
}
function countFreeMines() {
  return (have($skill(_templateObject754 || (_templateObject754 = _taggedTemplateLiteral80(["Unaccompanied Miner"])))) ? 5 - get("_unaccompaniedMinerUsed") : 0) + (0, import_kolmafia88.haveEffect)($effect(_templateObject844 || (_templateObject844 = _taggedTemplateLiteral80(["Loded"]))));
}
var import_kolmafia88, _templateObject567, _templateObject2143, _templateObject3130, _templateObject4108, _templateObject568, _templateObject659, _templateObject754, _templateObject844, Mine, isValidCoordinate, stateIndexToCoord, getAccessibleSparklesForIndex;
var init_mining = __esm({
  "node_modules/libram/dist/mining.js": function() {
    import_kolmafia88 = require("kolmafia");
    init_template_string();
    init_utils();
    init_lib();
    init_property();
    (function(Mine2) {
      Mine2[Mine2["ITZNOTYERZITZ"] = 1] = "ITZNOTYERZITZ";
      Mine2[Mine2["KNOB"] = 2] = "KNOB";
      Mine2[Mine2["ANEMONE"] = 3] = "ANEMONE";
      Mine2[Mine2["GUMMI"] = 4] = "GUMMI";
      Mine2[Mine2["CRIMBONIUM"] = 5] = "CRIMBONIUM";
      Mine2[Mine2["VOLCANO"] = 6] = "VOLCANO";
    })(Mine || (Mine = {}));
    isValidCoordinate = function(coord) {
      if (coord.length != 2) return false;
      if (coord[0] < 0 || coord[0] > 7) return false;
      if (coord[1] < 0 || coord[1] > 7) return false;
      return true;
    };
    stateIndexToCoord = function(position) {
      var row = Math.floor(position / 6) + 1;
      var col = position % 6 + 1;
      var coord = [col, row];
      if (!isValidCoordinate(coord)) throw "Could not create valid coordinate from position ".concat(position);
      return coord;
    };
    getAccessibleSparklesForIndex = function(state, index) {
      var coords = stateIndexToCoord(index);
      var col = coords[0] - 1, row = coords[1] - 1;
      if (row >= 5 && state[index] === "*") return [coords];
      if (state[index] !== "o") return [];
      return [[-1, 0], [1, 0], [0, -1], [0, 1]].map(function(_ref) {
        var _ref2 = _slicedToArray26(_ref, 2), dy = _ref2[0], dx = _ref2[1];
        var y = col + dy;
        var x = row + dx;
        if (x < 0 || x > 5 || y < 0 || y > 5) return null;
        return x * 6 + y;
      }).filter(function(i) {
        return i !== null;
      }).filter(function(i) {
        return state[i] === "*";
      }).map(stateIndexToCoord);
    };
  }
});

// node_modules/libram/dist/mood.js
function _typeof25(o) {
  "@babel/helpers - typeof";
  return _typeof25 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof25(o);
}
function _toConsumableArray26(r) {
  return _arrayWithoutHoles26(r) || _iterableToArray26(r) || _unsupportedIterableToArray41(r) || _nonIterableSpread26();
}
function _nonIterableSpread26() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray26(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles26(r) {
  if (Array.isArray(r)) return _arrayLikeToArray41(r);
}
function ownKeys12(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread12(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys12(Object(t), true).forEach(function(r2) {
      _defineProperty24(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys12(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _createForOfIteratorHelper15(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t) {
    if (Array.isArray(r) || (t = _unsupportedIterableToArray41(r)) || e && r && "number" == typeof r.length) {
      t && (r = t);
      var _n = 0, F = function F2() {
      };
      return { s: F, n: function n() {
        return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
      }, e: function e2(r2) {
        throw r2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o, a = true, u = false;
  return { s: function s() {
    t = t.call(r);
  }, n: function n() {
    var r2 = t.next();
    return a = r2.done, r2;
  }, e: function e2(r2) {
    u = true, o = r2;
  }, f: function f() {
    try {
      a || null == t.return || t.return();
    } finally {
      if (u) throw o;
    }
  } };
}
function _unsupportedIterableToArray41(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray41(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray41(r, a) : void 0;
  }
}
function _arrayLikeToArray41(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _callSuper4(t, o, e) {
  return o = _getPrototypeOf4(o), _possibleConstructorReturn4(t, _isNativeReflectConstruct4() ? Reflect.construct(o, e || [], _getPrototypeOf4(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn4(t, e) {
  if (e && ("object" == _typeof25(e) || "function" == typeof e)) return e;
  if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
  return _assertThisInitialized4(t);
}
function _assertThisInitialized4(e) {
  if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e;
}
function _isNativeReflectConstruct4() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct4 = function _isNativeReflectConstruct10() {
    return !!t;
  })();
}
function _getPrototypeOf4(t) {
  return _getPrototypeOf4 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t2) {
    return t2.__proto__ || Object.getPrototypeOf(t2);
  }, _getPrototypeOf4(t);
}
function _inherits5(t, e) {
  if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
  t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: true, configurable: true } }), Object.defineProperty(t, "prototype", { writable: false }), e && _setPrototypeOf5(t, e);
}
function _setPrototypeOf5(t, e) {
  return _setPrototypeOf5 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t2, e2) {
    return t2.__proto__ = e2, t2;
  }, _setPrototypeOf5(t, e);
}
function _defineProperty24(e, r, t) {
  return (r = _toPropertyKey25(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
}
function _classCallCheck18(a, n) {
  if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties18(e, r) {
  for (var t = 0; t < r.length; t++) {
    var o = r[t];
    o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e, _toPropertyKey25(o.key), o);
  }
}
function _createClass18(e, r, t) {
  return r && _defineProperties18(e.prototype, r), t && _defineProperties18(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
}
function _toPropertyKey25(t) {
  var i = _toPrimitive25(t, "string");
  return "symbol" == _typeof25(i) ? i : i + "";
}
function _toPrimitive25(t, r) {
  if ("object" != _typeof25(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof25(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _taggedTemplateLiteral81(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
var import_kolmafia89, _templateObject569, _templateObject2144, _templateObject3131, _templateObject4109, _templateObject570, _templateObject660, _templateObject755, _templateObject845, _templateObject936, _templateObject029, _templateObject1130, _templateObject1027, _templateObject1131, _templateObject1225, _OscusSoda, _templateObject1323, _templateObject1422, _MagicalSausages, _templateObject1521, _templateObject1621, _templateObject1718, _templateObject1818, _templateObject1918, _templateObject2017, _templateObject2145, _templateObject2220, _templateObject2319, _templateObject2417, _templateObject2516, _templateObject2615, _templateObject2713, _templateObject2813, _templateObject2913, _templateObject3012, _templateObject3132, _templateObject3215, _templateObject3314, aprilShieldEffects, MpSource, OscusSoda, MagicalSausages, MoodElement, SkillMoodElement, PotionMoodElement, GenieMoodElement, CustomMoodElement, AsdonMoodElement, Mood;
var init_mood = __esm({
  "node_modules/libram/dist/mood.js": function() {
    import_kolmafia89 = require("kolmafia");
    init_lib();
    init_property();
    init_resources();
    init_template_string();
    init_utils();
    aprilShieldEffects = /* @__PURE__ */ new Map([[$skill(_templateObject569 || (_templateObject569 = _taggedTemplateLiteral81(["Empathy of the Newt"]))), $effect(_templateObject2144 || (_templateObject2144 = _taggedTemplateLiteral81(["Thoughtful Empathy"])))], [$skill(_templateObject3131 || (_templateObject3131 = _taggedTemplateLiteral81(["Sauce Contemplation"]))), $effect(_templateObject4109 || (_templateObject4109 = _taggedTemplateLiteral81(["Lubricating Sauce"])))], [$skill(_templateObject570 || (_templateObject570 = _taggedTemplateLiteral81(["Manicotti Meditation"]))), $effect(_templateObject660 || (_templateObject660 = _taggedTemplateLiteral81(["Tubes of Universal Meat"])))], [$skill(_templateObject755 || (_templateObject755 = _taggedTemplateLiteral81(["Seal Clubbing Frenzy"]))), $effect(_templateObject845 || (_templateObject845 = _taggedTemplateLiteral81(["Slippery as a Seal"])))], [$skill(_templateObject936 || (_templateObject936 = _taggedTemplateLiteral81(["Patience of the Tortoise"]))), $effect(_templateObject029 || (_templateObject029 = _taggedTemplateLiteral81(["Strength of the Tortoise"])))], [$skill(_templateObject1130 || (_templateObject1130 = _taggedTemplateLiteral81(["Disco Aerobics"]))), $effect(_templateObject1027 || (_templateObject1027 = _taggedTemplateLiteral81(["Disco over Matter"])))], [$skill(_templateObject1131 || (_templateObject1131 = _taggedTemplateLiteral81(["Moxie of the Mariachi"]))), $effect(_templateObject1225 || (_templateObject1225 = _taggedTemplateLiteral81(["Mariachi Moisture"])))]]);
    MpSource = /* @__PURE__ */ function() {
      function MpSource2() {
        _classCallCheck18(this, MpSource2);
      }
      return _createClass18(MpSource2, [{
        key: "usesRemaining",
        value: function usesRemaining() {
          return 0;
        }
      }, {
        key: "availableMpMax",
        value: function availableMpMax() {
          return this.availableMpMin();
        }
      }]);
    }();
    OscusSoda = /* @__PURE__ */ function(_MpSource) {
      function OscusSoda2() {
        _classCallCheck18(this, OscusSoda2);
        return _callSuper4(this, OscusSoda2, arguments);
      }
      _inherits5(OscusSoda2, _MpSource);
      return _createClass18(OscusSoda2, [{
        key: "available",
        value: function available7() {
          return have($item(_templateObject1323 || (_templateObject1323 = _taggedTemplateLiteral81(["Oscus's neverending soda"]))));
        }
      }, {
        key: "usesRemaining",
        value: function usesRemaining() {
          return get("oscusSodaUsed") ? 0 : 1;
        }
      }, {
        key: "availableMpMin",
        value: function availableMpMin() {
          return this.available() && this.usesRemaining() > 0 ? 200 : 0;
        }
      }, {
        key: "availableMpMax",
        value: function availableMpMax() {
          return this.available() && this.usesRemaining() > 0 ? 300 : 0;
        }
      }, {
        key: "execute",
        value: function execute() {
          (0, import_kolmafia89.use)($item(_templateObject1422 || (_templateObject1422 = _taggedTemplateLiteral81(["Oscus's neverending soda"]))));
        }
      }]);
    }(MpSource);
    _OscusSoda = OscusSoda;
    _defineProperty24(OscusSoda, "instance", new _OscusSoda());
    MagicalSausages = /* @__PURE__ */ function(_MpSource2) {
      function MagicalSausages2() {
        _classCallCheck18(this, MagicalSausages2);
        return _callSuper4(this, MagicalSausages2, arguments);
      }
      _inherits5(MagicalSausages2, _MpSource2);
      return _createClass18(MagicalSausages2, [{
        key: "available",
        value: function available7() {
          return have($item(_templateObject1521 || (_templateObject1521 = _taggedTemplateLiteral81(["Kramco Sausage-o-Matic\u2122"]))));
        }
      }, {
        key: "usesRemaining",
        value: function usesRemaining() {
          var maxSausages = (0, import_kolmafia89.availableAmount)($item(_templateObject1621 || (_templateObject1621 = _taggedTemplateLiteral81(["magical sausage"])))) + (0, import_kolmafia89.availableAmount)($item(_templateObject1718 || (_templateObject1718 = _taggedTemplateLiteral81(["magical sausage casing"]))));
          return this.available() ? clamp(23 - get("_sausagesEaten"), 0, maxSausages) : 0;
        }
      }, {
        key: "availableMpMin",
        value: function availableMpMin() {
          return this.available() ? Math.min((0, import_kolmafia89.myMaxmp)(), 999) * this.usesRemaining() : 0;
        }
      }, {
        key: "execute",
        value: function execute() {
          var mpSpaceAvailable = (0, import_kolmafia89.myMaxmp)() - (0, import_kolmafia89.myMp)();
          if (mpSpaceAvailable < 700) return;
          var maxSausages = Math.min(this.usesRemaining(), Math.floor(((0, import_kolmafia89.myMaxmp)() - (0, import_kolmafia89.myMp)()) / Math.min((0, import_kolmafia89.myMaxmp)() - (0, import_kolmafia89.myMp)(), 999)));
          (0, import_kolmafia89.retrieveItem)(maxSausages, $item(_templateObject1818 || (_templateObject1818 = _taggedTemplateLiteral81(["magical sausage"]))));
          (0, import_kolmafia89.eat)(maxSausages, $item(_templateObject1918 || (_templateObject1918 = _taggedTemplateLiteral81(["magical sausage"]))));
        }
      }]);
    }(MpSource);
    _MagicalSausages = MagicalSausages;
    _defineProperty24(MagicalSausages, "instance", new _MagicalSausages());
    MoodElement = /* @__PURE__ */ function() {
      function MoodElement2() {
        _classCallCheck18(this, MoodElement2);
      }
      return _createClass18(MoodElement2, [{
        key: "mpCostPerTurn",
        value: function mpCostPerTurn() {
          return 0;
        }
      }, {
        key: "turnIncrement",
        value: function turnIncrement() {
          return 1;
        }
      }]);
    }();
    SkillMoodElement = /* @__PURE__ */ function(_MoodElement) {
      function SkillMoodElement2(skill, options) {
        var _aprilShieldEffects$g;
        var _this;
        _classCallCheck18(this, SkillMoodElement2);
        _this = _callSuper4(this, SkillMoodElement2);
        _defineProperty24(_this, "skill", void 0);
        _defineProperty24(_this, "effect", void 0);
        _defineProperty24(_this, "options", void 0);
        _this.skill = skill;
        _this.effect = options.requireAprilShield ? (_aprilShieldEffects$g = aprilShieldEffects.get(skill)) !== null && _aprilShieldEffects$g !== void 0 ? _aprilShieldEffects$g : $effect.none : (0, import_kolmafia89.toEffect)(skill);
        _this.options = options;
        return _this;
      }
      _inherits5(SkillMoodElement2, _MoodElement);
      return _createClass18(SkillMoodElement2, [{
        key: "aprilShieldRestricted",
        get: function get4() {
          return !this.options.requireAprilShield && this.skill === $skill(_templateObject2017 || (_templateObject2017 = _taggedTemplateLiteral81(["Empathy of the Newt"])));
        }
      }, {
        key: "mpCostPerTurn",
        value: function mpCostPerTurn() {
          var turns2 = (0, import_kolmafia89.turnsPerCast)(this.skill);
          return turns2 > 0 ? (0, import_kolmafia89.mpCost)(this.skill) / turns2 : 0;
        }
      }, {
        key: "turnIncrement",
        value: function turnIncrement() {
          return (0, import_kolmafia89.turnsPerCast)(this.skill);
        }
      }, {
        key: "execute",
        value: function execute(mood, ensureTurns) {
          var _this2 = this;
          if (this.effect === $effect.none) return false;
          var initialTurns = (0, import_kolmafia89.haveEffect)(this.effect);
          var shieldSlot = import_kolmafia89.Slot.all().find(function(slot) {
            return (0, import_kolmafia89.equippedItem)(slot) === $item(_templateObject2145 || (_templateObject2145 = _taggedTemplateLiteral81(["April Shower Thoughts shield"])));
          });
          var initialOffhand = (0, import_kolmafia89.equippedItem)($slot(_templateObject2220 || (_templateObject2220 = _taggedTemplateLiteral81(["off-hand"]))));
          var initialWeapon = (0, import_kolmafia89.equippedItem)($slot(_templateObject2319 || (_templateObject2319 = _taggedTemplateLiteral81(["weapon"]))));
          if (initialTurns >= ensureTurns) return true;
          if (!(0, import_kolmafia89.haveSkill)(this.skill)) return false;
          if (this.aprilShieldRestricted && shieldSlot) {
            unequip($item(_templateObject2417 || (_templateObject2417 = _taggedTemplateLiteral81(["April Shower Thoughts shield"]))));
          }
          if (mood.options.songSlots && isSong(this.skill) && !have(this.effect)) {
            var activeSongs = getActiveSongs();
            var _iterator = _createForOfIteratorHelper15(activeSongs), _step;
            try {
              var _loop = function _loop2() {
                var song2 = _step.value;
                var slot = mood.options.songSlots.find(function(slot2) {
                  return slot2.includes(song2);
                });
                if (!slot || slot.includes(_this2.effect)) {
                  (0, import_kolmafia89.cliExecute)("shrug ".concat(song2));
                  return 1;
                }
              };
              for (_iterator.s(); !(_step = _iterator.n()).done; ) {
                if (_loop()) break;
              }
            } catch (err) {
              _iterator.e(err);
            } finally {
              _iterator.f();
            }
          }
          var oldRemainingCasts = -1;
          var remainingCasts = Math.ceil((ensureTurns - (0, import_kolmafia89.haveEffect)(this.effect)) / (0, import_kolmafia89.turnsPerCast)(this.skill));
          try {
            while (remainingCasts > 0 && oldRemainingCasts !== remainingCasts) {
              if (this.options.requireAprilShield && !shieldSlot) {
                if ((0, import_kolmafia89.weaponHands)(initialWeapon) > 1) unequip(initialWeapon);
                if (!(0, import_kolmafia89.equip)($item(_templateObject2516 || (_templateObject2516 = _taggedTemplateLiteral81(["April Shower Thoughts shield"]))))) return false;
              }
              var maxCasts = 0;
              if ((0, import_kolmafia89.hpCost)(this.skill) > 0) {
                maxCasts = Math.max(0, Math.floor(((0, import_kolmafia89.myHp)() - 1) / (0, import_kolmafia89.hpCost)(this.skill)));
              } else {
                var cost = (0, import_kolmafia89.mpCost)(this.skill);
                maxCasts = Math.floor(Math.min(mood.availableMp(), (0, import_kolmafia89.myMp)()) / cost);
                if (maxCasts < remainingCasts) {
                  var bestMp = Math.min(remainingCasts * cost, (0, import_kolmafia89.myMaxmp)());
                  mood.moreMp(bestMp);
                  maxCasts = Math.floor(Math.min(mood.availableMp(), (0, import_kolmafia89.myMp)()) / cost);
                }
              }
              var casts = clamp(remainingCasts, 0, Math.min(100, maxCasts));
              (0, import_kolmafia89.useSkill)(casts, this.skill);
              oldRemainingCasts = remainingCasts;
              remainingCasts = Math.ceil((ensureTurns - (0, import_kolmafia89.haveEffect)(this.effect)) / (0, import_kolmafia89.turnsPerCast)(this.skill));
            }
            return (0, import_kolmafia89.haveEffect)(this.effect) >= ensureTurns;
          } finally {
            if (shieldSlot) (0, import_kolmafia89.equip)($item(_templateObject2615 || (_templateObject2615 = _taggedTemplateLiteral81(["April Shower Thoughts shield"]))), shieldSlot);
            if (initialOffhand !== (0, import_kolmafia89.equippedItem)($slot(_templateObject2713 || (_templateObject2713 = _taggedTemplateLiteral81(["off-hand"]))))) (0, import_kolmafia89.equip)(initialOffhand, $slot(_templateObject2813 || (_templateObject2813 = _taggedTemplateLiteral81(["off-hand"]))));
            if (initialWeapon !== (0, import_kolmafia89.equippedItem)($slot(_templateObject2913 || (_templateObject2913 = _taggedTemplateLiteral81(["weapon"]))))) (0, import_kolmafia89.equip)(initialWeapon, $slot(_templateObject3012 || (_templateObject3012 = _taggedTemplateLiteral81(["weapon"]))));
          }
        }
      }]);
    }(MoodElement);
    PotionMoodElement = /* @__PURE__ */ function(_MoodElement2) {
      function PotionMoodElement2(potion, maxPricePerTurn) {
        var _this3;
        _classCallCheck18(this, PotionMoodElement2);
        _this3 = _callSuper4(this, PotionMoodElement2);
        _defineProperty24(_this3, "potion", void 0);
        _defineProperty24(_this3, "maxPricePerTurn", void 0);
        _this3.potion = potion;
        _this3.maxPricePerTurn = maxPricePerTurn;
        return _this3;
      }
      _inherits5(PotionMoodElement2, _MoodElement2);
      return _createClass18(PotionMoodElement2, [{
        key: "execute",
        value: function execute(mood, ensureTurns) {
          var effect2 = (0, import_kolmafia89.effectModifier)(this.potion, "Effect");
          var effectTurns = (0, import_kolmafia89.haveEffect)(effect2);
          var turnsPerUse = (0, import_kolmafia89.numericModifier)(this.potion, "Effect Duration");
          if ((0, import_kolmafia89.mallPrice)(this.potion) > this.maxPricePerTurn * turnsPerUse) {
            return false;
          }
          if (effectTurns < ensureTurns) {
            var uses = Math.floor((ensureTurns - effectTurns) / turnsPerUse);
            var quantityToBuy = clamp(uses - (0, import_kolmafia89.availableAmount)(this.potion), 0, 100);
            (0, import_kolmafia89.buy)(quantityToBuy, this.potion, Math.floor(this.maxPricePerTurn * turnsPerUse));
            var quantityToUse = clamp(uses, 0, (0, import_kolmafia89.availableAmount)(this.potion));
            (0, import_kolmafia89.use)(quantityToUse, this.potion);
          }
          var remainingDifference = ensureTurns - (0, import_kolmafia89.haveEffect)(effect2);
          if (remainingDifference > 0) {
            var maxPrice = Math.floor(this.maxPricePerTurn * remainingDifference);
            if ((0, import_kolmafia89.mallPrice)(this.potion) <= maxPrice) {
              if ((0, import_kolmafia89.availableAmount)(this.potion) || (0, import_kolmafia89.buy)(1, this.potion, maxPrice)) {
                (0, import_kolmafia89.use)(1, this.potion);
              }
            }
          }
          return (0, import_kolmafia89.haveEffect)(effect2) >= ensureTurns;
        }
      }]);
    }(MoodElement);
    GenieMoodElement = /* @__PURE__ */ function(_MoodElement3) {
      function GenieMoodElement2(effect2) {
        var _this4;
        _classCallCheck18(this, GenieMoodElement2);
        _this4 = _callSuper4(this, GenieMoodElement2);
        _defineProperty24(_this4, "effect", void 0);
        _this4.effect = effect2;
        return _this4;
      }
      _inherits5(GenieMoodElement2, _MoodElement3);
      return _createClass18(GenieMoodElement2, [{
        key: "execute",
        value: function execute(mood, ensureTurns) {
          if ((0, import_kolmafia89.haveEffect)(this.effect) >= ensureTurns) return true;
          var neededWishes = Math.ceil(((0, import_kolmafia89.haveEffect)(this.effect) - ensureTurns) / 20);
          var wishesToBuy = clamp(neededWishes - (0, import_kolmafia89.availableAmount)($item(_templateObject3132 || (_templateObject3132 = _taggedTemplateLiteral81(["pocket wish"])))), 0, 20);
          (0, import_kolmafia89.buy)(wishesToBuy, $item(_templateObject3215 || (_templateObject3215 = _taggedTemplateLiteral81(["pocket wish"]))), 5e4);
          var wishesToUse = clamp(neededWishes, 0, (0, import_kolmafia89.availableAmount)($item(_templateObject3314 || (_templateObject3314 = _taggedTemplateLiteral81(["pocket wish"])))));
          for (; wishesToUse > 0; wishesToUse--) {
            (0, import_kolmafia89.cliExecute)("genie effect ".concat(this.effect.name));
          }
          return (0, import_kolmafia89.haveEffect)(this.effect) >= ensureTurns;
        }
      }]);
    }(MoodElement);
    CustomMoodElement = /* @__PURE__ */ function(_MoodElement4) {
      function CustomMoodElement2(effect2, gainEffect) {
        var _this5;
        _classCallCheck18(this, CustomMoodElement2);
        _this5 = _callSuper4(this, CustomMoodElement2);
        _defineProperty24(_this5, "effect", void 0);
        _defineProperty24(_this5, "gainEffect", void 0);
        _this5.effect = effect2;
        _this5.gainEffect = gainEffect !== null && gainEffect !== void 0 ? gainEffect : function() {
          return (0, import_kolmafia89.cliExecute)(effect2.default);
        };
        return _this5;
      }
      _inherits5(CustomMoodElement2, _MoodElement4);
      return _createClass18(CustomMoodElement2, [{
        key: "execute",
        value: function execute(mood, ensureTurns) {
          var currentTurns = (0, import_kolmafia89.haveEffect)(this.effect);
          var lastCurrentTurns = -1;
          while (currentTurns < ensureTurns && currentTurns !== lastCurrentTurns) {
            this.gainEffect();
            lastCurrentTurns = currentTurns;
            currentTurns = (0, import_kolmafia89.haveEffect)(this.effect);
          }
          return (0, import_kolmafia89.haveEffect)(this.effect) > ensureTurns;
        }
      }]);
    }(MoodElement);
    AsdonMoodElement = /* @__PURE__ */ function(_MoodElement5) {
      function AsdonMoodElement2(effect2) {
        var _this6;
        var preferInventory = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
        _classCallCheck18(this, AsdonMoodElement2);
        _this6 = _callSuper4(this, AsdonMoodElement2);
        _defineProperty24(_this6, "effect", void 0);
        _defineProperty24(_this6, "preferInventory", void 0);
        _this6.effect = effect2;
        _this6.preferInventory = preferInventory;
        return _this6;
      }
      _inherits5(AsdonMoodElement2, _MoodElement5);
      return _createClass18(AsdonMoodElement2, [{
        key: "execute",
        value: function execute(mood, ensureTurns) {
          return AsdonMartin_exports.drive(this.effect, ensureTurns, this.preferInventory);
        }
      }]);
    }(MoodElement);
    Mood = /* @__PURE__ */ function() {
      function Mood2() {
        var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        _classCallCheck18(this, Mood2);
        _defineProperty24(this, "options", void 0);
        _defineProperty24(this, "elements", []);
        this.options = _objectSpread12(_objectSpread12({}, Mood2.defaultOptions), options);
      }
      return _createClass18(Mood2, [{
        key: "availableMp",
        value: function availableMp() {
          return this.options.useNativeRestores ? Infinity : sum(this.options.mpSources, function(mpSource) {
            return mpSource.availableMpMin();
          }) + Math.max((0, import_kolmafia89.myMp)() - this.options.reserveMp, 0);
        }
      }, {
        key: "moreMp",
        value: function moreMp(minimumTarget) {
          if ((0, import_kolmafia89.myMp)() >= minimumTarget) return;
          var _iterator2 = _createForOfIteratorHelper15(this.options.mpSources), _step2;
          try {
            for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
              var mpSource = _step2.value;
              if (mpSource.usesRemaining() > 0) {
                mpSource.execute();
                if ((0, import_kolmafia89.myMp)() >= minimumTarget) break;
              }
            }
          } catch (err) {
            _iterator2.e(err);
          } finally {
            _iterator2.f();
          }
          if (this.options.useNativeRestores) {
            (0, import_kolmafia89.restoreMp)(minimumTarget);
          }
        }
        /**
         * Add a skill to the mood.
         *
         * @param skill Skill to add.
         * @param options Additional `SkillEffectOptions` to pass to new `SkillMoodElement`
         * @returns This mood to enable chaining
         */
      }, {
        key: "skill",
        value: function skill(_skill) {
          var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          this.elements.push(new SkillMoodElement(_skill, options));
          return this;
        }
        /**
         * Add an effect to the mood, with casting based on {effect.default}.
         *
         * @param effect Effect to add.
         * @param gainEffect How to gain the effect. Only runs if we don't have the effect.
         * @returns This mood to enable chaining
         */
      }, {
        key: "effect",
        value: function effect2(_effect, gainEffect) {
          var skill = (0, import_kolmafia89.toSkill)(_effect);
          if (_toConsumableArray26(aprilShieldEffects.values()).includes(_effect)) {
            return this.skill(skill, {
              requireAprilShield: true
            });
          }
          if (!gainEffect && skill !== $skill.none) return this.skill(skill);
          this.elements.push(new CustomMoodElement(_effect, gainEffect));
          return this;
        }
        /**
         * Add a potion to the mood.
         *
         * @param potion Potion to add.
         * @param maxPricePerTurn Maximum price to pay per turn of the effect.
         * @returns This mood to enable chaining
         */
      }, {
        key: "potion",
        value: function potion(_potion, maxPricePerTurn) {
          this.elements.push(new PotionMoodElement(_potion, maxPricePerTurn));
          return this;
        }
        /**
         * Add an effect to acquire via pocket wishes to the mood.
         *
         * @param effect Effect to wish for in the mood.
         * @returns This mood to enable chaining
         */
      }, {
        key: "genie",
        value: function genie(effect2) {
          this.elements.push(new GenieMoodElement(effect2));
          return this;
        }
        /**
         * Add an Asdon Martin driving style to the mood.
         *
         * @param effect Driving style to add to the mood.
         * @returns This mood to enable chaining
         */
      }, {
        key: "drive",
        value: function drive2(effect2) {
          if (Object.values(AsdonMartin_exports.Driving).includes(effect2) && AsdonMartin_exports.installed()) {
            this.elements.push(new AsdonMoodElement(effect2));
          }
          return this;
        }
        /**
         * Execute the mood, trying to ensure {ensureTurns} of each effect.
         *
         * @param ensureTurns Turns of each effect to try and achieve.
         * @returns Whether or not we successfully got this many turns of every effect in the mood.
         */
      }, {
        key: "execute",
        value: function execute() {
          var ensureTurns = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1;
          var availableMp = this.availableMp();
          var totalMpPerTurn = sum(this.elements, function(element2) {
            return element2.mpCostPerTurn();
          });
          var potentialTurns = Math.floor(availableMp / totalMpPerTurn);
          var completeSuccess = true;
          var _iterator3 = _createForOfIteratorHelper15(this.elements), _step3;
          try {
            for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
              var element = _step3.value;
              var elementTurns = ensureTurns;
              if (element.mpCostPerTurn() > 0) {
                var elementPotentialTurns = Math.floor(potentialTurns / element.turnIncrement()) * element.turnIncrement();
                elementTurns = Math.min(ensureTurns, elementPotentialTurns);
              }
              completeSuccess = element.execute(this, elementTurns) && completeSuccess;
            }
          } catch (err) {
            _iterator3.e(err);
          } finally {
            _iterator3.f();
          }
          this.moreMp(this.options.reserveMp);
          return completeSuccess;
        }
      }], [{
        key: "setDefaultOptions",
        value: (
          /**
           * Set default options for new Mood instances.
           *
           * @param options Default options for new Mood instances.
           */
          function setDefaultOptions(options) {
            Mood2.defaultOptions = _objectSpread12(_objectSpread12({}, Mood2.defaultOptions), options);
          }
        )
      }]);
    }();
    _defineProperty24(Mood, "defaultOptions", {
      songSlots: [],
      mpSources: [MagicalSausages.instance, OscusSoda.instance],
      reserveMp: 0,
      useNativeRestores: false
    });
  }
});

// node_modules/libram/dist/since.js
function _typeof26(o) {
  "@babel/helpers - typeof";
  return _typeof26 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof26(o);
}
function _defineProperties19(e, r) {
  for (var t = 0; t < r.length; t++) {
    var o = r[t];
    o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e, _toPropertyKey26(o.key), o);
  }
}
function _createClass19(e, r, t) {
  return r && _defineProperties19(e.prototype, r), t && _defineProperties19(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
}
function _toPropertyKey26(t) {
  var i = _toPrimitive26(t, "string");
  return "symbol" == _typeof26(i) ? i : i + "";
}
function _toPrimitive26(t, r) {
  if ("object" != _typeof26(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof26(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _classCallCheck19(a, n) {
  if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _callSuper5(t, o, e) {
  return o = _getPrototypeOf5(o), _possibleConstructorReturn5(t, _isNativeReflectConstruct5() ? Reflect.construct(o, e || [], _getPrototypeOf5(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn5(t, e) {
  if (e && ("object" == _typeof26(e) || "function" == typeof e)) return e;
  if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
  return _assertThisInitialized5(t);
}
function _assertThisInitialized5(e) {
  if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e;
}
function _inherits6(t, e) {
  if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
  t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: true, configurable: true } }), Object.defineProperty(t, "prototype", { writable: false }), e && _setPrototypeOf6(t, e);
}
function _wrapNativeSuper4(t) {
  var r = "function" == typeof Map ? /* @__PURE__ */ new Map() : void 0;
  return _wrapNativeSuper4 = function _wrapNativeSuper5(t2) {
    if (null === t2 || !_isNativeFunction4(t2)) return t2;
    if ("function" != typeof t2) throw new TypeError("Super expression must either be null or a function");
    if (void 0 !== r) {
      if (r.has(t2)) return r.get(t2);
      r.set(t2, Wrapper);
    }
    function Wrapper() {
      return _construct4(t2, arguments, _getPrototypeOf5(this).constructor);
    }
    return Wrapper.prototype = Object.create(t2.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }), _setPrototypeOf6(Wrapper, t2);
  }, _wrapNativeSuper4(t);
}
function _construct4(t, e, r) {
  if (_isNativeReflectConstruct5()) return Reflect.construct.apply(null, arguments);
  var o = [null];
  o.push.apply(o, e);
  var p = new (t.bind.apply(t, o))();
  return r && _setPrototypeOf6(p, r.prototype), p;
}
function _isNativeReflectConstruct5() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct5 = function _isNativeReflectConstruct10() {
    return !!t;
  })();
}
function _isNativeFunction4(t) {
  try {
    return -1 !== Function.toString.call(t).indexOf("[native code]");
  } catch (n) {
    return "function" == typeof t;
  }
}
function _setPrototypeOf6(t, e) {
  return _setPrototypeOf6 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t2, e2) {
    return t2.__proto__ = e2, t2;
  }, _setPrototypeOf6(t, e);
}
function _getPrototypeOf5(t) {
  return _getPrototypeOf5 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t2) {
    return t2.__proto__ || Object.getPrototypeOf(t2);
  }, _getPrototypeOf5(t);
}
function getScriptName() {
  var _require$main;
  var scriptName = (_require$main = require.main) === null || _require$main === void 0 ? void 0 : _require$main.id;
  return scriptName ? "'".concat(scriptName, "'") : "This script";
}
function sinceKolmafiaRevision(revision) {
  if (!Number.isInteger(revision)) {
    throw new TypeError("Invalid revision number ".concat(revision, " (must be an integer)"));
  }
  var currentRevision = (0, import_kolmafia90.getRevision)();
  if (currentRevision > 0 && currentRevision < revision) {
    throw new KolmafiaVersionError("".concat(getScriptName(), " requires revision r").concat(revision, " of kolmafia or higher (current: ").concat((0, import_kolmafia90.getRevision)(), "). Up-to-date builds can be found at https://ci.kolmafia.us/."));
  }
}
function sinceKolmafiaVersion(majorVersion, minorVersion) {
  if ((0, import_kolmafia90.getRevision)() >= 25720) {
    return;
  }
  if (!Number.isInteger(majorVersion)) {
    throw new TypeError("Invalid major version number ".concat(majorVersion, " (must be an integer)"));
  }
  if (!Number.isInteger(minorVersion)) {
    throw new TypeError("Invalid minor version number ".concat(minorVersion, " (must be an integer)"));
  }
  if (majorVersion > 21 || majorVersion === 20 && minorVersion > 9) {
    throw new Error("There were no versions released after 21.09. This command will always fail");
  }
  var versionStr = (0, import_kolmafia90.getVersion)();
  var versionStrMatch = /v(\d+)\.(\d+)/.exec(versionStr);
  if (!versionStrMatch) {
    throw new Error('Unexpected KoLmafia version string: "'.concat(versionStr, '". You may need to update the script.'));
  }
  var currentMajorVersion = Number(versionStrMatch[1]);
  var currentMinorVersion = Number(versionStrMatch[2]);
  if (currentMajorVersion < majorVersion || currentMajorVersion === majorVersion && currentMinorVersion < minorVersion) {
    throw new KolmafiaVersionError("".concat(getScriptName(), " requires version ").concat(majorVersion, ".").concat(minorVersion, " of kolmafia or higher (current: ").concat(currentMajorVersion, ".").concat(currentMinorVersion, "). Up-to-date builds can be found at https://ci.kolmafia.us/."));
  }
}
var import_kolmafia90, KolmafiaVersionError;
var init_since = __esm({
  "node_modules/libram/dist/since.js": function() {
    import_kolmafia90 = require("kolmafia");
    KolmafiaVersionError = /* @__PURE__ */ function(_Error) {
      function KolmafiaVersionError2(message) {
        var _this;
        _classCallCheck19(this, KolmafiaVersionError2);
        _this = _callSuper5(this, KolmafiaVersionError2, [message]);
        Object.setPrototypeOf(_this, KolmafiaVersionError2.prototype);
        return _this;
      }
      _inherits6(KolmafiaVersionError2, _Error);
      return _createClass19(KolmafiaVersionError2);
    }(/* @__PURE__ */ _wrapNativeSuper4(Error));
    KolmafiaVersionError.prototype.name = "KolmafiaVersionError";
  }
});

// node_modules/libram/dist/url.js
function _toConsumableArray27(r) {
  return _arrayWithoutHoles27(r) || _iterableToArray27(r) || _unsupportedIterableToArray42(r) || _nonIterableSpread27();
}
function _nonIterableSpread27() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray27(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles27(r) {
  if (Array.isArray(r)) return _arrayLikeToArray42(r);
}
function _slicedToArray27(r, e) {
  return _arrayWithHoles27(r) || _iterableToArrayLimit27(r, e) || _unsupportedIterableToArray42(r, e) || _nonIterableRest27();
}
function _nonIterableRest27() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit27(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles27(r) {
  if (Array.isArray(r)) return r;
}
function _createForOfIteratorHelper16(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t) {
    if (Array.isArray(r) || (t = _unsupportedIterableToArray42(r)) || e && r && "number" == typeof r.length) {
      t && (r = t);
      var _n = 0, F = function F2() {
      };
      return { s: F, n: function n() {
        return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
      }, e: function e2(r2) {
        throw r2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o, a = true, u = false;
  return { s: function s() {
    t = t.call(r);
  }, n: function n() {
    var r2 = t.next();
    return a = r2.done, r2;
  }, e: function e2(r2) {
    u = true, o = r2;
  }, f: function f() {
    try {
      a || null == t.return || t.return();
    } finally {
      if (u) throw o;
    }
  } };
}
function _unsupportedIterableToArray42(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray42(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray42(r, a) : void 0;
  }
}
function _arrayLikeToArray42(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function fetchUrl(path3) {
  var query = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
  var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  var _options$method = options.method, method = _options$method === void 0 ? "POST" : _options$method;
  var url = buildUrl(path3, query);
  return (0, import_kolmafia91.visitUrl)(url, method === "POST", true);
}
function buildUrl(path3) {
  var query = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
  var urlParams = Array.isArray(query) ? query : Object.entries(query);
  if (urlParams.length === 0) {
    return path3;
  }
  var chunks = [path3];
  var sep = path3.includes("?") ? "&" : "?";
  var _iterator = _createForOfIteratorHelper16(urlParams), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var param = _step.value;
      if (param.length !== 2) {
        throw new Error("Query parameter array may only contain pair elements");
      }
      var _param = _slicedToArray27(param, 2), key = _param[0], value = _param[1];
      chunks.push(sep);
      sep = "&";
      chunks.push(encodeURIComponent(key));
      if (value !== EMPTY_VALUE) {
        chunks.push("=");
        chunks.push(encodeURIComponent(value));
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return chunks.join("");
}
function combineQuery() {
  for (var _len = arguments.length, queries = new Array(_len), _key = 0; _key < _len; _key++) {
    queries[_key] = arguments[_key];
  }
  if (queries.length === 1) {
    return queries[0];
  }
  var result = [];
  for (var _i = 0, _queries = queries; _i < _queries.length; _i++) {
    var query = _queries[_i];
    if (Array.isArray(query)) {
      result.push.apply(result, _toConsumableArray27(query));
    } else {
      result.push.apply(result, _toConsumableArray27(Object.entries(query)));
    }
  }
  return result;
}
var import_kolmafia91, EMPTY_VALUE;
var init_url = __esm({
  "node_modules/libram/dist/url.js": function() {
    import_kolmafia91 = require("kolmafia");
    EMPTY_VALUE = Symbol("empty");
  }
});

// node_modules/libram/dist/Kmail.js
function _typeof27(o) {
  "@babel/helpers - typeof";
  return _typeof27 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof27(o);
}
function _createForOfIteratorHelper17(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t) {
    if (Array.isArray(r) || (t = _unsupportedIterableToArray43(r)) || e && r && "number" == typeof r.length) {
      t && (r = t);
      var _n = 0, F = function F2() {
      };
      return { s: F, n: function n() {
        return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
      }, e: function e2(r2) {
        throw r2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o, a = true, u = false;
  return { s: function s() {
    t = t.call(r);
  }, n: function n() {
    var r2 = t.next();
    return a = r2.done, r2;
  }, e: function e2(r2) {
    u = true, o = r2;
  }, f: function f() {
    try {
      a || null == t.return || t.return();
    } finally {
      if (u) throw o;
    }
  } };
}
function _toConsumableArray28(r) {
  return _arrayWithoutHoles28(r) || _iterableToArray28(r) || _unsupportedIterableToArray43(r) || _nonIterableSpread28();
}
function _nonIterableSpread28() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray28(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles28(r) {
  if (Array.isArray(r)) return _arrayLikeToArray43(r);
}
function _slicedToArray28(r, e) {
  return _arrayWithHoles28(r) || _iterableToArrayLimit28(r, e) || _unsupportedIterableToArray43(r, e) || _nonIterableRest28();
}
function _nonIterableRest28() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray43(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray43(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray43(r, a) : void 0;
  }
}
function _arrayLikeToArray43(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _iterableToArrayLimit28(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles28(r) {
  if (Array.isArray(r)) return r;
}
function _classCallCheck20(a, n) {
  if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties20(e, r) {
  for (var t = 0; t < r.length; t++) {
    var o = r[t];
    o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e, _toPropertyKey27(o.key), o);
  }
}
function _createClass20(e, r, t) {
  return r && _defineProperties20(e.prototype, r), t && _defineProperties20(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
}
function _defineProperty25(e, r, t) {
  return (r = _toPropertyKey27(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
}
function _toPropertyKey27(t) {
  var i = _toPrimitive27(t, "string");
  return "symbol" == _typeof27(i) ? i : i + "";
}
function _toPrimitive27(t, r) {
  if ("object" != _typeof27(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof27(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
var import_html_entities2, import_kolmafia92, Kmail;
var init_Kmail = __esm({
  "node_modules/libram/dist/Kmail.js": function() {
    import_html_entities2 = __toESM(require_lib(), 1);
    import_kolmafia92 = require("kolmafia");
    init_lib();
    init_url();
    init_utils();
    Kmail = /* @__PURE__ */ function() {
      function Kmail2(rawKmail) {
        _classCallCheck20(this, Kmail2);
        _defineProperty25(this, "id", void 0);
        _defineProperty25(this, "date", void 0);
        _defineProperty25(this, "type", void 0);
        _defineProperty25(this, "senderId", void 0);
        _defineProperty25(this, "senderName", void 0);
        _defineProperty25(this, "rawMessage", void 0);
        _defineProperty25(this, "_parsedMessageParts", void 0);
        this.id = Number(rawKmail.id);
        this.date = new Date(Number(rawKmail.azunixtime) * 1e3);
        this.type = rawKmail.type;
        this.senderId = Number(rawKmail.fromid);
        this.senderName = rawKmail.fromname;
        this.rawMessage = rawKmail.message;
      }
      return _createClass20(Kmail2, [{
        key: "delete",
        value: function _delete() {
          return Kmail2.delete([this]) === 1;
        }
      }, {
        key: "_messageParts",
        get: function get4() {
          var _this$_parsedMessageP;
          return (_this$_parsedMessageP = this._parsedMessageParts) !== null && _this$_parsedMessageP !== void 0 ? _this$_parsedMessageP : this._parsedMessageParts = this._parseMessageParts();
        }
      }, {
        key: "_parseMessageParts",
        value: function _parseMessageParts() {
          var text = this.rawMessage;
          var insideText;
          if (this.type === "normal") {
            if (text.startsWith("<center><table>")) {
              var endIdx = text.indexOf("</center>");
              text = text.slice(endIdx + 9);
            }
          } else if (this.type === "giftshop") {
            var _text$split = text.split("<p>Inside Note:<p>");
            var _text$split2 = _slicedToArray28(_text$split, 2);
            text = _text$split2[0];
            insideText = _text$split2[1];
          }
          var split = function(s) {
            var idx = s.indexOf("<");
            if (idx === -1) return [s];
            return [s.slice(0, idx), s.slice(idx)];
          };
          var _split = split(text), _split2 = _slicedToArray28(_split, 2), outsideNote = _split2[0], _split2$ = _split2[1], outsideAttachments = _split2$ === void 0 ? null : _split2$;
          var _ref = insideText !== void 0 ? split(insideText) : [], _ref2 = _slicedToArray28(_ref, 2), _ref2$ = _ref2[0], insideNote = _ref2$ === void 0 ? null : _ref2$, _ref2$2 = _ref2[1], insideAttachments = _ref2$2 === void 0 ? null : _ref2$2;
          return {
            outsideNote: (0, import_html_entities2.decode)(outsideNote),
            outsideAttachments: outsideAttachments,
            insideNote: insideNote && (0, import_html_entities2.decode)(insideNote),
            insideAttachments: insideAttachments
          };
        }
        /**
         * Get message contents without any HTML from items or meat
         *
         * @returns Cleaned message contents
         */
      }, {
        key: "message",
        get: function get4() {
          var _this$_messageParts = this._messageParts, outsideNote = _this$_messageParts.outsideNote, insideNote = _this$_messageParts.insideNote;
          if (insideNote !== null) {
            return "".concat(outsideNote, "\n\nInside Note:\n").concat(insideNote);
          }
          return outsideNote;
        }
        /**
         * Get the note on the outside of the gift. If the kmail is not a gift,
         * this will be the entire message.
         *
         * @returns Note on the outside of the gift, or the entire message for non-gifts
         */
      }, {
        key: "outsideNote",
        get: function get4() {
          return this._messageParts.outsideNote;
        }
        /**
         * Get the note on the inside of the gift
         *
         * @returns Note on the inside of the gift
         */
      }, {
        key: "insideNote",
        get: function get4() {
          return this._messageParts.insideNote;
        }
        /**
         * Get items attached to the kmail
         *
         * @returns Map of items attached to the kmail and their quantities
         */
      }, {
        key: "items",
        value: function items() {
          var _this$_messageParts2 = this._messageParts, outsideAttachments = _this$_messageParts2.outsideAttachments, insideAttachments = _this$_messageParts2.insideAttachments;
          return extractItems("".concat(outsideAttachments).concat(insideAttachments));
        }
        /**
         * Get items attached to the outside of the gift, which should be
         * just the gift wrapper for giftshop items, and all items for normal kmails
         *
         * @returns Map of items attached to the kmail and their quantities
         */
      }, {
        key: "outsideItems",
        value: function outsideItems() {
          var outsideAttachments = this._messageParts.outsideAttachments;
          if (!outsideAttachments) return /* @__PURE__ */ new Map();
          return extractItems(outsideAttachments);
        }
        /**
         * Get items attached to the inside of the gift
         *
         * @returns Map of items attached to the kmail and their quantities
         */
      }, {
        key: "insideItems",
        value: function insideItems() {
          var insideAttachments = this._messageParts.insideAttachments;
          if (!insideAttachments) return /* @__PURE__ */ new Map();
          return extractItems(insideAttachments);
        }
        /**
         * Get meat attached to the kmail
         *
         * @returns Meat attached to the kmail
         */
      }, {
        key: "meat",
        value: function meat() {
          var _this$_messageParts3 = this._messageParts, outsideAttachments = _this$_messageParts3.outsideAttachments, insideAttachments = _this$_messageParts3.insideAttachments;
          if (!outsideAttachments && !insideAttachments) return 0;
          return (0, import_kolmafia92.extractMeat)("".concat(outsideAttachments).concat(insideAttachments));
        }
        /**
         * Reply to kmail
         *
         * @param message Message with which to reply
         * @param items Items to send
         * @param meat Meat to send
         * @see Kmail.send
         * @returns True if the kmail was successfully sent
         */
      }, {
        key: "reply",
        value: function reply() {
          var message = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
          var items = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
          var meat = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
          return Kmail2.send(this.senderId, message, items, meat);
        }
      }], [{
        key: "parse",
        value: (
          /**
           * Parses a kmail from KoL's native format
           *
           * @param rawKmail Kmail in the format supplies by api.php
           * @returns Parsed kmail
           */
          function parse(rawKmail) {
            return new Kmail2(rawKmail);
          }
        )
        /**
         * Returns all of the player's kmails
         *
         * @param count Number of kmails to fetch
         * @returns Parsed kmails
         */
      }, {
        key: "inbox",
        value: function inbox() {
          var count = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 100;
          return JSON.parse((0, import_kolmafia92.visitUrl)("api.php?what=kmail&for=libram&count=".concat(count))).map(Kmail2.parse);
        }
        /**
         * Bulk delete kmails
         *
         * @param kmails Kmails to delete
         * @returns Number of kmails deleted
         */
      }, {
        key: "delete",
        value: function _delete(kmails) {
          var _results$match$, _results$match;
          var results = fetchUrl("messages.php", [["the_action", "delete"], ["box", "Inbox"], ["pwd", EMPTY_VALUE]].concat(_toConsumableArray28(kmails.map(function(k) {
            return ["sel".concat(k.id), "on"];
          }))));
          return Number((_results$match$ = (_results$match = results.match(/<td>(\d) messages? deleted.<\/td>/)) === null || _results$match === void 0 ? void 0 : _results$match[1]) !== null && _results$match$ !== void 0 ? _results$match$ : 0);
        }
      }, {
        key: "_genericSend",
        value: function _genericSend(to, message, items, meat, chunkSize, constructUrl, successString) {
          var m = meat;
          var sendableItems = _toConsumableArray28(arrayToCountedMap(items).entries()).filter(function(_ref3) {
            var _ref4 = _slicedToArray28(_ref3, 1), item15 = _ref4[0];
            return (0, import_kolmafia92.isGiftable)(item15);
          });
          var result = true;
          var chunks = chunk(sendableItems, chunkSize);
          var _iterator = _createForOfIteratorHelper17(chunks.length > 0 ? chunks : [null]), _step;
          try {
            var _loop = function _loop2() {
              var _c$length;
              var c = _step.value;
              var itemsQuery = {};
              if (c !== null) {
                c.forEach(function(_ref5, i) {
                  var _ref6 = _slicedToArray28(_ref5, 2), item15 = _ref6[0], quantity = _ref6[1];
                  itemsQuery["whichitem".concat(i + 1)] = item15.id;
                  itemsQuery["howmany".concat(i + 1)] = quantity;
                });
              }
              var _constructUrl = constructUrl({
                meat: m,
                chunkSize: (_c$length = c === null || c === void 0 ? void 0 : c.length) !== null && _c$length !== void 0 ? _c$length : 0
              }), path3 = _constructUrl.path, query = _constructUrl.query;
              var r = fetchUrl(path3, combineQuery(query, itemsQuery));
              if (r.includes("That player cannot receive Meat or items")) {
                return {
                  v: Kmail2.gift(to, message, items, meat)
                };
              }
              m = 0;
              result && (result = r.includes(successString));
            }, _ret;
            for (_iterator.s(); !(_step = _iterator.n()).done; ) {
              _ret = _loop();
              if (_ret) return _ret.v;
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
          return result;
        }
        /**
         * Sends a kmail to a player
         *
         * Sends multiple kmails if more than 11 unique item types are attached.
         * Ignores any ungiftable items.
         * Sends a gift package to players in run
         *
         * @param to The player name or id to receive the kmail
         * @param message The text contents of the message
         * @param items The items to be attached
         * @param meat The quantity of meat to be attached
         * @returns True if the kmail was successfully sent
         */
      }, {
        key: "send",
        value: function send(to) {
          var message = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
          var items = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
          var meat = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0;
          return Kmail2._genericSend(to, message, items, meat, 11, function(_ref7) {
            var meat2 = _ref7.meat;
            return {
              path: "sendmessage.php",
              query: {
                action: "send",
                pwd: EMPTY_VALUE,
                towho: to,
                message: message,
                sendmeat: meat2
              }
            };
          }, ">Message sent.</");
        }
        /**
         * Sends a gift to a player
         *
         * Sends multiple kmails if more than 3 unique item types are attached.
         * Ignores any ungiftable items.
         *
         * @param to The player name or id to receive the gift
         * @param message Message to send
         * @param items The items to be attached
         * @param meat The quantity of meat to be attached
         * @param insideNote The note on the inside of the gift
         * @returns True if the gift was successfully sent
         */
      }, {
        key: "gift",
        value: function gift(to) {
          var message = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
          var items = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
          var meat = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0;
          var insideNote = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : "";
          return Kmail2._genericSend(to, message, items, meat, 3, function(_ref8) {
            var meat2 = _ref8.meat, chunkSize = _ref8.chunkSize;
            return {
              path: "town_sendgift.php",
              query: {
                action: "Yep.",
                pwd: EMPTY_VALUE,
                fromwhere: 0,
                note: message,
                insidenote: insideNote,
                towho: to,
                whichpackage: chunkSize,
                sendmeat: meat2
              }
            };
          }, ">Package sent.</");
        }
      }]);
    }();
  }
});

// node_modules/libram/dist/console.js
var console_exports = {};
__export(console_exports, {
  error: function() {
    return error;
  },
  info: function() {
    return info;
  },
  log: function() {
    return log;
  },
  warn: function() {
    return warn;
  }
});
var import_kolmafia93, logColor, log, info, warn, error;
var init_console = __esm({
  "node_modules/libram/dist/console.js": function() {
    import_kolmafia93 = require("kolmafia");
    logColor = function(color) {
      return function() {
        for (var _len = arguments.length, args2 = new Array(_len), _key = 0; _key < _len; _key++) {
          args2[_key] = arguments[_key];
        }
        var output = args2.map(function(x) {
          return x.toString();
        }).join(" ");
        if (color) {
          (0, import_kolmafia93.print)(output, color);
        } else {
          (0, import_kolmafia93.print)(output);
        }
      };
    };
    log = logColor();
    info = logColor("blue");
    warn = logColor("red");
    error = logColor("red");
  }
});

// node_modules/libram/dist/session.js
function _typeof28(o) {
  "@babel/helpers - typeof";
  return _typeof28 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof28(o);
}
function _classCallCheck21(a, n) {
  if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties21(e, r) {
  for (var t = 0; t < r.length; t++) {
    var o = r[t];
    o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e, _toPropertyKey28(o.key), o);
  }
}
function _createClass21(e, r, t) {
  return r && _defineProperties21(e.prototype, r), t && _defineProperties21(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
}
function _defineProperty26(e, r, t) {
  return (r = _toPropertyKey28(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
}
function _toPropertyKey28(t) {
  var i = _toPrimitive28(t, "string");
  return "symbol" == _typeof28(i) ? i : i + "";
}
function _toPrimitive28(t, r) {
  if ("object" != _typeof28(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof28(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _createForOfIteratorHelper18(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t) {
    if (Array.isArray(r) || (t = _unsupportedIterableToArray44(r)) || e && r && "number" == typeof r.length) {
      t && (r = t);
      var _n = 0, F = function F2() {
      };
      return { s: F, n: function n() {
        return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
      }, e: function e2(r2) {
        throw r2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o, a = true, u = false;
  return { s: function s() {
    t = t.call(r);
  }, n: function n() {
    var r2 = t.next();
    return a = r2.done, r2;
  }, e: function e2(r2) {
    u = true, o = r2;
  }, f: function f() {
    try {
      a || null == t.return || t.return();
    } finally {
      if (u) throw o;
    }
  } };
}
function _slicedToArray29(r, e) {
  return _arrayWithHoles29(r) || _iterableToArrayLimit29(r, e) || _unsupportedIterableToArray44(r, e) || _nonIterableRest29();
}
function _nonIterableRest29() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit29(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles29(r) {
  if (Array.isArray(r)) return r;
}
function _taggedTemplateLiteral82(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function _toConsumableArray29(r) {
  return _arrayWithoutHoles29(r) || _iterableToArray29(r) || _unsupportedIterableToArray44(r) || _nonIterableSpread29();
}
function _nonIterableSpread29() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray44(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray44(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray44(r, a) : void 0;
  }
}
function _iterableToArray29(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles29(r) {
  if (Array.isArray(r)) return _arrayLikeToArray44(r);
}
function _arrayLikeToArray44(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function mySessionItemsWrapper() {
  var sessionOnly = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
  var manyToOne = function(primary, mapped) {
    return mapped.map(function(target) {
      return [target, primary];
    });
  };
  var foldable = function(item16) {
    return manyToOne(item16, getFoldGroup(item16));
  };
  var itemMappings = new Map([].concat(_toConsumableArray29(foldable($item(_templateObject571 || (_templateObject571 = _taggedTemplateLiteral82(["liar's pants"]))))), _toConsumableArray29(foldable($item(_templateObject2146 || (_templateObject2146 = _taggedTemplateLiteral82(["ice pick"]))))), _toConsumableArray29(manyToOne($item(_templateObject3133 || (_templateObject3133 = _taggedTemplateLiteral82(["Spooky Putty sheet"]))), [$item(_templateObject4115 || (_templateObject4115 = _taggedTemplateLiteral82(["Spooky Putty monster"])))].concat(_toConsumableArray29(getFoldGroup($item(_templateObject575 || (_templateObject575 = _taggedTemplateLiteral82(["Spooky Putty sheet"])))))))), _toConsumableArray29(foldable($item(_templateObject661 || (_templateObject661 = _taggedTemplateLiteral82(["stinky cheese sword"]))))), _toConsumableArray29(foldable($item(_templateObject756 || (_templateObject756 = _taggedTemplateLiteral82(["naughty paper shuriken"]))))), _toConsumableArray29(foldable($item(_templateObject846 || (_templateObject846 = _taggedTemplateLiteral82(["Loathing Legion knife"]))))), _toConsumableArray29(foldable($item(_templateObject937 || (_templateObject937 = _taggedTemplateLiteral82(["deceased crimbo tree"]))))), _toConsumableArray29(foldable($item(_templateObject030 || (_templateObject030 = _taggedTemplateLiteral82(["makeshift turban"]))))), _toConsumableArray29(foldable($item(_templateObject1132 || (_templateObject1132 = _taggedTemplateLiteral82(["turtle wax shield"]))))), _toConsumableArray29(foldable($item(_templateObject1028 || (_templateObject1028 = _taggedTemplateLiteral82(["metallic foil bow"]))))), _toConsumableArray29(foldable($item(_templateObject1133 || (_templateObject1133 = _taggedTemplateLiteral82(["ironic moustache"]))))), _toConsumableArray29(foldable($item(_templateObject1226 || (_templateObject1226 = _taggedTemplateLiteral82(["bugged balaclava"]))))), _toConsumableArray29(foldable($item(_templateObject1324 || (_templateObject1324 = _taggedTemplateLiteral82(["toggle switch (Bartend)"]))))), _toConsumableArray29(foldable($item(_templateObject1423 || (_templateObject1423 = _taggedTemplateLiteral82(["mushroom cap"]))))), _toConsumableArray29(manyToOne($item(_templateObject1522 || (_templateObject1522 = _taggedTemplateLiteral82(["can of Rain-Doh"]))), $items(_templateObject1622 || (_templateObject1622 = _taggedTemplateLiteral82(["empty Rain-Doh can"]))))), _toConsumableArray29(manyToOne($item(_templateObject1719 || (_templateObject1719 = _taggedTemplateLiteral82(["meteorite fragment"]))), $items(_templateObject1819 || (_templateObject1819 = _taggedTemplateLiteral82(["meteorite earring, meteorite necklace, meteorite ring"]))))), _toConsumableArray29(manyToOne($item(_templateObject1919 || (_templateObject1919 = _taggedTemplateLiteral82(["Sneaky Pete's leather jacket"]))), $items(_templateObject2018 || (_templateObject2018 = _taggedTemplateLiteral82(["Sneaky Pete's leather jacket (collar popped)"]))))), _toConsumableArray29(manyToOne($item(_templateObject2147 || (_templateObject2147 = _taggedTemplateLiteral82(["Boris's Helm"]))), $items(_templateObject2221 || (_templateObject2221 = _taggedTemplateLiteral82(["Boris's Helm (askew)"]))))), _toConsumableArray29(manyToOne($item(_templateObject2320 || (_templateObject2320 = _taggedTemplateLiteral82(["Jarlsberg's pan"]))), $items(_templateObject2418 || (_templateObject2418 = _taggedTemplateLiteral82(["Jarlsberg's pan (Cosmic portal mode)"]))))), _toConsumableArray29(manyToOne($item(_templateObject2517 || (_templateObject2517 = _taggedTemplateLiteral82(["tiny plastic sword"]))), $items(_templateObject2616 || (_templateObject2616 = _taggedTemplateLiteral82(["grogtini, bodyslam, dirty martini, vesper, cherry bomb, sangria del diablo"]))))), _toConsumableArray29(manyToOne($item(_templateObject2714 || (_templateObject2714 = _taggedTemplateLiteral82(["earthenware muffin tin"]))), $items(_templateObject2814 || (_templateObject2814 = _taggedTemplateLiteral82(["blueberry muffin, bran muffin, chocolate chip muffin"]))))), _toConsumableArray29(manyToOne($item(_templateObject2914 || (_templateObject2914 = _taggedTemplateLiteral82(["ChibiBuddy\u2122 (on)"]))), $items(_templateObject3013 || (_templateObject3013 = _taggedTemplateLiteral82(["ChibiBuddy\u2122 (off)"])))))));
  var inventory = /* @__PURE__ */ new Map();
  var invLocations = sessionOnly ? [import_kolmafia94.mySessionItems] : [import_kolmafia94.mySessionItems, import_kolmafia94.getCloset, import_kolmafia94.getDisplay, import_kolmafia94.getStorage];
  if (!sessionOnly) {
    for (var _i = 0, _Object$entries = Object.entries((0, import_kolmafia94.getCampground)()); _i < _Object$entries.length; _i++) {
      var _itemMappings$get, _inventory$get;
      var _Object$entries$_i = _slicedToArray29(_Object$entries[_i], 2), itemStr = _Object$entries$_i[0], quantity = _Object$entries$_i[1];
      if (!quantity) continue;
      var item15 = (0, import_kolmafia94.toItem)(itemStr);
      if (item15 === $item(_templateObject3134 || (_templateObject3134 = _taggedTemplateLiteral82(["big rock"])))) continue;
      var mappedItem = (_itemMappings$get = itemMappings.get(item15)) !== null && _itemMappings$get !== void 0 ? _itemMappings$get : item15;
      inventory.set(mappedItem, quantity + ((_inventory$get = inventory.get(mappedItem)) !== null && _inventory$get !== void 0 ? _inventory$get : 0));
    }
  }
  for (var _i2 = 0, _invLocations = invLocations; _i2 < _invLocations.length; _i2++) {
    var inventoryFunc = _invLocations[_i2];
    for (var _i3 = 0, _Object$entries2 = Object.entries(inventoryFunc()); _i3 < _Object$entries2.length; _i3++) {
      var _itemMappings$get2, _inventory$get2;
      var _Object$entries2$_i = _slicedToArray29(_Object$entries2[_i3], 2), _itemStr = _Object$entries2$_i[0], _quantity = _Object$entries2$_i[1];
      if (!_quantity) continue;
      var _item = (0, import_kolmafia94.toItem)(_itemStr);
      var _mappedItem = (_itemMappings$get2 = itemMappings.get(_item)) !== null && _itemMappings$get2 !== void 0 ? _itemMappings$get2 : _item;
      inventory.set(_mappedItem, _quantity + ((_inventory$get2 = inventory.get(_mappedItem)) !== null && _inventory$get2 !== void 0 ? _inventory$get2 : 0));
      if (inventory.get(_mappedItem) === 0) inventory.delete(_mappedItem);
    }
  }
  return inventory;
}
function inventoryOperation(a, b, op) {
  var difference = /* @__PURE__ */ new Map();
  var _iterator = _createForOfIteratorHelper18(new Set([].concat(_toConsumableArray29(a.keys()), _toConsumableArray29(b.keys())))), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var _a$get, _b$get;
      var item15 = _step.value;
      difference.set(item15, op((_a$get = a.get(item15)) !== null && _a$get !== void 0 ? _a$get : 0, (_b$get = b.get(item15)) !== null && _b$get !== void 0 ? _b$get : 0));
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  var diffEntries = _toConsumableArray29(difference.entries());
  return new Map(diffEntries.filter(function(_ref) {
    var _ref2 = _slicedToArray29(_ref, 2), value = _ref2[1];
    return value !== 0;
  }));
}
var import_kolmafia94, _templateObject571, _templateObject2146, _templateObject3133, _templateObject4115, _templateObject575, _templateObject661, _templateObject756, _templateObject846, _templateObject937, _templateObject030, _templateObject1132, _templateObject1028, _templateObject1133, _templateObject1226, _templateObject1324, _templateObject1423, _templateObject1522, _templateObject1622, _templateObject1719, _templateObject1819, _templateObject1919, _templateObject2018, _templateObject2147, _templateObject2221, _templateObject2320, _templateObject2418, _templateObject2517, _templateObject2616, _templateObject2714, _templateObject2814, _templateObject2914, _templateObject3013, _templateObject3134, Session;
var init_session = __esm({
  "node_modules/libram/dist/session.js": function() {
    import_kolmafia94 = require("kolmafia");
    init_lib();
    init_template_string();
    init_utils();
    Session = /* @__PURE__ */ function() {
      function Session2(meat, items, totalTurns) {
        _classCallCheck21(this, Session2);
        _defineProperty26(this, "meat", void 0);
        _defineProperty26(this, "items", void 0);
        _defineProperty26(this, "totalTurns", void 0);
        this.meat = meat;
        this.items = items;
        this.totalTurns = totalTurns;
      }
      return _createClass21(Session2, [{
        key: "register",
        value: function register(target, quantity) {
          if (target === "meat") {
            this.meat += quantity;
          } else {
            var _this$items$get;
            this.items.set(target, ((_this$items$get = this.items.get(target)) !== null && _this$items$get !== void 0 ? _this$items$get : 0) + quantity);
          }
        }
        /**
         * Value this session
         *
         * @param itemValue a function that, when given an item, will give a meat value of the item
         * @returns ItemResult with the full value of this session given the input function
         */
      }, {
        key: "value",
        value: function value(itemValue) {
          var turns2 = this.totalTurns;
          var meat = Math.floor(this.meat);
          var itemDetails = _toConsumableArray29(this.items.entries()).map(function(_ref3) {
            var _ref4 = _slicedToArray29(_ref3, 2), item15 = _ref4[0], quantity = _ref4[1];
            return {
              item: item15,
              quantity: quantity,
              // only run itemValue if quantity is nonzero
              value: quantity ? itemValue(item15) * quantity : 0
            };
          });
          var items = Math.floor(sum(itemDetails, "value"));
          return {
            meat: meat,
            items: items,
            total: meat + items,
            itemDetails: itemDetails,
            turns: turns2
          };
        }
        /**
         * Subtract the contents of another session from this one, removing any items that have a resulting quantity of 0
         *  (this will ignore elements in b but not in a)
         *
         * @param other the session from which to pull values to remove from this session
         * @returns a new session representing the difference between this session and the other session
         */
      }, {
        key: "diff",
        value: function diff(other) {
          return new Session2(this.meat - other.meat, inventoryOperation(this.items, other.items, function(a, b) {
            return a - b;
          }), this.totalTurns - other.totalTurns);
        }
        /**
         * Subtract the contents of snasphot b from session a, removing any items that have a resulting quantity of 0
         *  (this will ignore elements in b but not in a)
         *
         * @param a the session from which to subtract elements
         * @param b the session from which to add elements
         * @returns a new session representing the difference between a and b
         */
      }, {
        key: "add",
        value: (
          /**
           * Generate a new session combining multiple sessions together
           *
           * @param other the session from which to add elements to this set
           * @returns a new session representing the addition of other to this
           */
          function add(other) {
            return new Session2(this.meat + other.meat, inventoryOperation(this.items, other.items, function(a, b) {
              return a + b;
            }), this.totalTurns + other.totalTurns);
          }
        )
        /**
         * Combine the contents of sessions
         *
         * @param sessions the set of sessions to combine together
         * @returns a new session representing the difference between a and b
         */
      }, {
        key: "toFile",
        value: (
          /**
           * Export this session to a file in the data/ directory. Conventionally this file should end in ".json"
           *
           * @param filename The file into which to export
           */
          function toFile(filename) {
            var val = {
              meat: this.meat,
              items: Object.fromEntries(this.items),
              totalTurns: this.totalTurns
            };
            (0, import_kolmafia94.bufferToFile)(JSON.stringify(val), Session2.getFilepath(filename));
          }
        )
        /**
         * Import a session from a file in the data/ directory. Conventionally the file should end in ".json"
         *
         * @param filename The file from which to import
         * @returns the session represented by the file
         */
      }, {
        key: "computeMPA",
        value: (
          /**
           * @param other the session to diff against this session when computing MPA
           * @param options options for computing MPA
           * @param options.value a function to compute the meat value of a given item
           * @param options.isOutlier a function to compute if an item is considered an outlier. By default, no items are outliers
           * @param options.excludeValue meat values to exclude when calculating specific portions of the MPA
           * @param options.excludeValue.meat how much meat to exclude when calculating the meat portion of MPA
           * @param options.excludeValue.item how much meat to exclude when calculating hte item portion of MPA
           * @returns an analysis of the effective MPA for the given session
           */
          function computeMPA(other, options) {
            return Session2.computeMPA(this, other, options);
          }
        )
      }], [{
        key: "diff",
        value: function diff(a, b) {
          return a.diff(b);
        }
      }, {
        key: "add",
        value: function add() {
          for (var _len = arguments.length, sessions = new Array(_len), _key = 0; _key < _len; _key++) {
            sessions[_key] = arguments[_key];
          }
          return sessions.reduce(function(previousSession, currentSession) {
            return previousSession.add(currentSession);
          });
        }
      }, {
        key: "getFilepath",
        value: function getFilepath(filename) {
          return filename.endsWith(".json") ? filename : "snapshots/".concat((0, import_kolmafia94.myName)(), "/").concat((0, import_kolmafia94.todayToString)(), "_").concat(filename, ".json");
        }
      }, {
        key: "fromFile",
        value: function fromFile(filename) {
          var fileValue = (0, import_kolmafia94.fileToBuffer)(Session2.getFilepath(filename));
          if (fileValue.length > 0) {
            var _val$totalTurns;
            var val = JSON.parse(fileValue);
            var parsedItems = Object.entries(val.items).map(function(_ref5) {
              var _ref6 = _slicedToArray29(_ref5, 2), itemStr = _ref6[0], quantity = _ref6[1];
              return [(0, import_kolmafia94.toItem)(itemStr), quantity];
            });
            return new Session2(val.meat, new Map(parsedItems), (_val$totalTurns = val.totalTurns) !== null && _val$totalTurns !== void 0 ? _val$totalTurns : 0);
          } else {
            return new Session2(0, /* @__PURE__ */ new Map(), 0);
          }
        }
        /**
         * Return the meat and items for the current session
         *
         * @param sessionOnly should closet, DC, and storage be ignored for the session calculation
         * @returns current session
         */
      }, {
        key: "current",
        value: function current2() {
          var sessionOnly = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
          var meat = sessionOnly ? [import_kolmafia94.mySessionMeat] : [import_kolmafia94.mySessionMeat, import_kolmafia94.myClosetMeat, import_kolmafia94.myStorageMeat];
          return new Session2(sum(meat, function(f) {
            return f();
          }), mySessionItemsWrapper(sessionOnly), (0, import_kolmafia94.totalTurnsPlayed)());
        }
        /**
         * @param baseline the base session to use when computing MPA
         * @param full the full session to use when computing MPA
         * @param options options for computing MPA
         * @param options.value a function to compute the meat value of a given item
         * @param options.isOutlier a function to compute if an item is considered an outlier. By default, no items are outliers
         * @param options.excludeValue meat values to exclude when calculating specific portions of the MPA
         * @param options.excludeValue.meat how much meat to exclude when calculating the meat portion of MPA
         * @param options.excludeValue.item how much meat to exclude when calculating hte item portion of MPA
         * @returns an analysis of the effective MPA for the given session
         */
      }, {
        key: "computeMPA",
        value: function computeMPA(baseline, full, options) {
          var _options$excludeValue, _excludeValue$meat, _excludeValue$item;
          var value = options.value;
          var excludeValue = (_options$excludeValue = options.excludeValue) !== null && _options$excludeValue !== void 0 ? _options$excludeValue : {
            meat: 0,
            item: 0
          };
          var isOutlier = options.isOutlier;
          var result = full.diff(baseline).value(value);
          var meatValue = result.meat - ((_excludeValue$meat = excludeValue.meat) !== null && _excludeValue$meat !== void 0 ? _excludeValue$meat : 0);
          var outlierItems = isOutlier ? result.itemDetails.filter(isOutlier) : [];
          var outliersValue = sum(outlierItems, function(detail) {
            return detail.value;
          });
          var itemValue = result.items - outliersValue - ((_excludeValue$item = excludeValue.item) !== null && _excludeValue$item !== void 0 ? _excludeValue$item : 0);
          var turns2 = result.turns;
          return {
            mpa: {
              effective: (meatValue + itemValue) / turns2,
              total: (meatValue + itemValue + outliersValue) / turns2,
              meat: meatValue / turns2,
              items: itemValue / turns2
            },
            values: {
              effective: meatValue + itemValue,
              total: meatValue + itemValue + outliersValue,
              meat: meatValue,
              items: itemValue
            },
            outlierItems: outlierItems,
            turns: turns2
          };
        }
      }]);
    }();
  }
});

// node_modules/libram/dist/index.js
var dist_exports = {};
__export(dist_exports, {
  $bounties: function() {
    return $bounties;
  },
  $bounty: function() {
    return $bounty;
  },
  $class: function() {
    return $class;
  },
  $classes: function() {
    return $classes;
  },
  $coinmaster: function() {
    return $coinmaster;
  },
  $coinmasters: function() {
    return $coinmasters;
  },
  $effect: function() {
    return $effect;
  },
  $effects: function() {
    return $effects;
  },
  $element: function() {
    return $element;
  },
  $elements: function() {
    return $elements;
  },
  $familiar: function() {
    return $familiar;
  },
  $familiars: function() {
    return $familiars;
  },
  $item: function() {
    return $item;
  },
  $items: function() {
    return $items;
  },
  $location: function() {
    return $location;
  },
  $locations: function() {
    return $locations;
  },
  $modifier: function() {
    return $modifier;
  },
  $modifiers: function() {
    return $modifiers;
  },
  $monster: function() {
    return $monster;
  },
  $monsters: function() {
    return $monsters;
  },
  $path: function() {
    return $path;
  },
  $paths: function() {
    return $paths;
  },
  $phyla: function() {
    return $phyla;
  },
  $phylum: function() {
    return $phylum;
  },
  $servant: function() {
    return $servant;
  },
  $servants: function() {
    return $servants;
  },
  $skill: function() {
    return $skill;
  },
  $skills: function() {
    return $skills;
  },
  $slot: function() {
    return $slot;
  },
  $slots: function() {
    return $slots;
  },
  $stat: function() {
    return $stat;
  },
  $stats: function() {
    return $stats;
  },
  $thrall: function() {
    return $thrall;
  },
  $thralls: function() {
    return $thralls;
  },
  ActionSource: function() {
    return ActionSource;
  },
  AprilingBandHelmet: function() {
    return AprilingBandHelmet_exports;
  },
  AscendError: function() {
    return AscendError;
  },
  AscensionPrepError: function() {
    return AscensionPrepError;
  },
  AsdonMartin: function() {
    return AsdonMartin_exports;
  },
  AugustScepter: function() {
    return AugustScepter_exports;
  },
  AutumnAton: function() {
    return AutumnAton_exports;
  },
  Bandersnatch: function() {
    return Bandersnatch_exports;
  },
  BarrelShrine: function() {
    return BarrelShrine_exports;
  },
  BatWings: function() {
    return BatWings_exports;
  },
  BeachComb: function() {
    return BeachComb_exports;
  },
  BoxingDaycare: function() {
    return BoxingDaycare_exports;
  },
  BurningLeaves: function() {
    return BurningLeaves_exports;
  },
  CampAway: function() {
    return CampAway_exports;
  },
  Cartography: function() {
    return Cartography_exports;
  },
  ChateauMantegna: function() {
    return ChateauMantegna_exports;
  },
  ChestMimic: function() {
    return ChestMimic_exports;
  },
  CinchoDeMayo: function() {
    return CinchoDeMayo_exports;
  },
  Clan: function() {
    return Clan;
  },
  ClosedCircuitPayphone: function() {
    return ClosedCircuitPayphone_exports;
  },
  CombatLoversLocket: function() {
    return CombatLoversLocket_exports;
  },
  CommaChameleon: function() {
    return CommaChameleon_exports;
  },
  CommunityService: function() {
    return CommunityService;
  },
  ConspiracyIsland: function() {
    return ConspiracyIsland_exports;
  },
  Counter: function() {
    return counter_exports;
  },
  CrepeParachute: function() {
    return CrepeParachute_exports;
  },
  CrimboShrub: function() {
    return CrimboShrub_exports;
  },
  CrownOfThrones: function() {
    return CrownOfThrones_exports;
  },
  CrystalBall: function() {
    return CrystalBall_exports;
  },
  CursedMonkeyPaw: function() {
    return CursedMonkeyPaw_exports;
  },
  CyberRealm: function() {
    return CyberRealm_exports;
  },
  DNALab: function() {
    return DNALab_exports;
  },
  DaylightShavings: function() {
    return DaylightShavings_exports;
  },
  DeckOfEveryCard: function() {
    return DeckOfEveryCard_exports;
  },
  DesignerSweatpants: function() {
    return DesignerSweatpants_exports;
  },
  Diet: function() {
    return Diet;
  },
  Dinseylandfill: function() {
    return Dinseylandfill_exports;
  },
  Dreadsylvania: function() {
    return Dreadsylvania;
  },
  Dungeon: function() {
    return Dungeon;
  },
  EnsureError: function() {
    return EnsureError;
  },
  Environment: function() {
    return Environment;
  },
  EverfullDarts: function() {
    return EverfullDarts_exports;
  },
  FloristFriar: function() {
    return Florist_exports;
  },
  GingerBread: function() {
    return GingerBread_exports;
  },
  GreyGoose: function() {
    return GreyGoose_exports;
  },
  Guzzlr: function() {
    return Guzzlr_exports;
  },
  HeavyRains: function() {
    return HeavyRains_exports;
  },
  Hobopolis: function() {
    return Hobopolis;
  },
  Horsery: function() {
    return Horsery_exports;
  },
  InvalidMacroError: function() {
    return InvalidMacroError;
  },
  JuneCleaver: function() {
    return JuneCleaver_exports;
  },
  JungMan: function() {
    return JungMan_exports;
  },
  Kmail: function() {
    return Kmail;
  },
  KolGender: function() {
    return KolGender;
  },
  KolmafiaVersionError: function() {
    return KolmafiaVersionError;
  },
  Latte: function() {
    return LatteLoversMembersMug_exports;
  },
  Leprecondo: function() {
    return Leprecondo_exports;
  },
  Lifestyle: function() {
    return Lifestyle;
  },
  LogLevels: function() {
    return LogLevels;
  },
  LookingGlass: function() {
    return LookingGlass_exports;
  },
  Macro: function() {
    return Macro;
  },
  MagicalSausages: function() {
    return MagicalSausages;
  },
  MayamCalendar: function() {
    return MayamCalendar_exports;
  },
  MayoClinic: function() {
    return MayoClinic_exports;
  },
  MenuItem: function() {
    return MenuItem;
  },
  Mining: function() {
    return mining_exports;
  },
  Mood: function() {
    return Mood;
  },
  MpSource: function() {
    return MpSource;
  },
  MummingTrunk: function() {
    return MummingTrunk_exports;
  },
  NuclearAutumn: function() {
    return NuclearAutumn_exports;
  },
  ObtuseAngel: function() {
    return ObtuseAngel_exports;
  },
  OscusSoda: function() {
    return OscusSoda;
  },
  Pantogram: function() {
    return Pantogram_exports;
  },
  PeridotOfPeril: function() {
    return PeridotOfPeril_exports;
  },
  PocketProfessor: function() {
    return PocketProfessor_exports;
  },
  PrismaticBeret: function() {
    return PrismaticBeret_exports;
  },
  PropertiesManager: function() {
    return PropertiesManager;
  },
  Raffle: function() {
    return Raffle_exports;
  },
  RainDoh: function() {
    return RainDoh_exports;
  },
  RainDohBlackBox: function() {
    return RainDohBlackBox;
  },
  ReagnimatedGnome: function() {
    return ReagnimatedGnome_exports;
  },
  Requirement: function() {
    return Requirement;
  },
  RetroCape: function() {
    return RetroCape_exports;
  },
  Robortender: function() {
    return Robortender_exports;
  },
  Session: function() {
    return Session;
  },
  SlimeTube: function() {
    return SlimeTube;
  },
  Snapper: function() {
    return Snapper_exports;
  },
  SongBoom: function() {
    return SongBoom_exports;
  },
  SourceTerminal: function() {
    return SourceTerminal_exports;
  },
  Spacegate: function() {
    return Spacegate_exports;
  },
  SpookyPutty: function() {
    return SpookyPutty_exports;
  },
  SpookyPuttySheet: function() {
    return SpookyPuttySheet;
  },
  Stickers: function() {
    return Stickers_exports;
  },
  StillSuit: function() {
    return Stillsuit_exports;
  },
  StompingBoots: function() {
    return StompingBoots_exports;
  },
  StrictMacro: function() {
    return StrictMacro;
  },
  TakerSpace: function() {
    return TakerSpace_exports;
  },
  TearawayPants: function() {
    return TearawayPants_exports;
  },
  ToyCupidBow: function() {
    return ToyCupidBow_exports;
  },
  TrainSet: function() {
    return TrainSet_exports;
  },
  TunnelOfLove: function() {
    return TunnelOfLove_exports;
  },
  Wanderer: function() {
    return Wanderer;
  },
  WinterGarden: function() {
    return WinterGarden_exports;
  },
  Witchess: function() {
    return Witchess_exports;
  },
  actionSourcesAvailable: function() {
    return actionSourcesAvailable;
  },
  adventureMacro: function() {
    return adventureMacro;
  },
  adventureMacroAuto: function() {
    return adventureMacroAuto;
  },
  applyModes: function() {
    return applyModes;
  },
  arrayContains: function() {
    return arrayContains;
  },
  arrayEquals: function() {
    return arrayEquals;
  },
  arrayToCountedMap: function() {
    return arrayToCountedMap;
  },
  ascend: function() {
    return ascend;
  },
  bestLibramToCast: function() {
    return bestLibramToCast;
  },
  booleanModifiers: function() {
    return booleanModifiers;
  },
  booleanProperties: function() {
    return booleanProperties;
  },
  bulkAutosell: function() {
    return bulkAutosell;
  },
  bulkPutCloset: function() {
    return bulkPutCloset;
  },
  bulkPutDisplay: function() {
    return bulkPutDisplay;
  },
  bulkPutShop: function() {
    return bulkPutShop;
  },
  bulkPutStash: function() {
    return bulkPutStash;
  },
  bulkRepriceShop: function() {
    return bulkRepriceShop;
  },
  bulkSell: function() {
    return bulkSell;
  },
  bulkTakeCloset: function() {
    return bulkTakeCloset;
  },
  bulkTakeDisplay: function() {
    return bulkTakeDisplay;
  },
  bulkTakeShop: function() {
    return bulkTakeShop;
  },
  bulkTakeStash: function() {
    return bulkTakeStash;
  },
  bulkTakeStorage: function() {
    return bulkTakeStorage;
  },
  byClass: function() {
    return byClass;
  },
  byStat: function() {
    return byStat;
  },
  canRememberSong: function() {
    return canRememberSong;
  },
  canUse: function() {
    return canUse;
  },
  canVisitUrl: function() {
    return canVisitUrl;
  },
  chunk: function() {
    return chunk;
  },
  clamp: function() {
    return clamp;
  },
  clearMaximizerCache: function() {
    return clearMaximizerCache;
  },
  console: function() {
    return console_exports;
  },
  couldUseRainDohBlackBox: function() {
    return couldUseRainDohBlackBox;
  },
  couldUseSpookyPuttySheet: function() {
    return couldUseSpookyPuttySheet;
  },
  countedMapToArray: function() {
    return countedMapToArray;
  },
  countedMapToString: function() {
    return countedMapToString;
  },
  damageTakenByElement: function() {
    return damageTakenByElement;
  },
  directlyUse: function() {
    return directlyUse;
  },
  ensureBanish: function() {
    return ensureBanish;
  },
  ensureEffect: function() {
    return ensureEffect;
  },
  ensureFreeKill: function() {
    return ensureFreeKill;
  },
  ensureFreeRun: function() {
    return ensureFreeRun;
  },
  examine: function() {
    return examine;
  },
  expectedLibramSummon: function() {
    return expectedLibramSummon;
  },
  extractItems: function() {
    return extractItems;
  },
  familiarNumericProperties: function() {
    return familiarNumericProperties;
  },
  familiarProperties: function() {
    return familiarProperties;
  },
  findActionSource: function() {
    return findActionSource;
  },
  findFairyMultiplier: function() {
    return findFairyMultiplier;
  },
  findLeprechaunMultiplier: function() {
    return findLeprechaunMultiplier;
  },
  flat: function() {
    return flat;
  },
  freeCrafts: function() {
    return freeCrafts;
  },
  gameDay: function() {
    return gameDay;
  },
  get: function() {
    return get;
  },
  getAcquirePrice: function() {
    return getAcquirePrice;
  },
  getActiveEffects: function() {
    return getActiveEffects;
  },
  getActiveSongs: function() {
    return getActiveSongs;
  },
  getAllFamiliarTags: function() {
    return getAllFamiliarTags;
  },
  getAverage: function() {
    return getAverage;
  },
  getAverageAdventures: function() {
    return getAverageAdventures;
  },
  getBanishedMonsters: function() {
    return getBanishedMonsters;
  },
  getCombatFlags: function() {
    return getCombatFlags;
  },
  getCurrentModes: function() {
    return getCurrentModes;
  },
  getFamiliarWandererChance: function() {
    return getFamiliarWandererChance;
  },
  getFoldGroup: function() {
    return getFoldGroup;
  },
  getKramcoWandererChance: function() {
    return getKramcoWandererChance;
  },
  getMacroId: function() {
    return getMacroId;
  },
  getModifier: function() {
    return get2;
  },
  getMonsterLocations: function() {
    return getMonsterLocations;
  },
  getPlayerFromIdOrName: function() {
    return getPlayerFromIdOrName;
  },
  getPlayerIdFromName: function() {
    return getPlayerIdFromName;
  },
  getPlayerNameFromId: function() {
    return getPlayerNameFromId;
  },
  getRange: function() {
    return getRange;
  },
  getRegularFamiliarTags: function() {
    return getRegularFamiliarTags;
  },
  getRemainingLiver: function() {
    return getRemainingLiver;
  },
  getRemainingSpleen: function() {
    return getRemainingSpleen;
  },
  getRemainingStomach: function() {
    return getRemainingStomach;
  },
  getSaleValue: function() {
    return getSaleValue;
  },
  getScalingCap: function() {
    return getScalingCap;
  },
  getScalingRate: function() {
    return getScalingRate;
  },
  getSongCount: function() {
    return getSongCount;
  },
  getSongLimit: function() {
    return getSongLimit;
  },
  getTodaysHolidayWanderers: function() {
    return getTodaysHolidayWanderers;
  },
  getTotalModifier: function() {
    return getTotalModifier;
  },
  getTotalPuttyLikeCopiesMade: function() {
    return getTotalPuttyLikeCopiesMade;
  },
  getWandererChance: function() {
    return getWandererChance;
  },
  getZapGroup: function() {
    return getZapGroup;
  },
  have: function() {
    return have;
  },
  haveCounter: function() {
    return haveCounter;
  },
  haveInCampground: function() {
    return haveInCampground;
  },
  haveIntrinsic: function() {
    return haveIntrinsic;
  },
  haveWandererCounter: function() {
    return haveWandererCounter;
  },
  holidayWanderers: function() {
    return holidayWanderers;
  },
  invertMap: function() {
    return invertMap;
  },
  isBooleanProperty: function() {
    return isBooleanProperty;
  },
  isCurrentFamiliar: function() {
    return isCurrentFamiliar;
  },
  isFamiliarProperty: function() {
    return isFamiliarProperty;
  },
  isItemProperty: function() {
    return isItemProperty;
  },
  isLocationProperty: function() {
    return isLocationProperty;
  },
  isMonsterProperty: function() {
    return isMonsterProperty;
  },
  isNumericOrStringProperty: function() {
    return isNumericOrStringProperty;
  },
  isNumericProperty: function() {
    return isNumericProperty;
  },
  isPhylumProperty: function() {
    return isPhylumProperty;
  },
  isRegularFamiliarTag: function() {
    return isRegularFamiliarTag;
  },
  isSong: function() {
    return isSong;
  },
  isStatProperty: function() {
    return isStatProperty;
  },
  isStringProperty: function() {
    return isStringProperty;
  },
  isVoteWandererNow: function() {
    return isVoteWandererNow;
  },
  isWandererNow: function() {
    return isWandererNow;
  },
  itemNumericProperties: function() {
    return itemNumericProperties;
  },
  itemProperties: function() {
    return itemProperties;
  },
  lgrCurrencies: function() {
    return lgrCurrencies;
  },
  locationProperties: function() {
    return locationProperties;
  },
  logger: function() {
    return logger_default;
  },
  makeByXFunction: function() {
    return makeByXFunction;
  },
  maxBy: function() {
    return maxBy;
  },
  maximizeCached: function() {
    return maximizeCached;
  },
  mergeMaximizeOptions: function() {
    return mergeMaximizeOptions;
  },
  modeableItems: function() {
    return modeableItems;
  },
  modeableState: function() {
    return modeableState;
  },
  monsterNumericProperties: function() {
    return monsterNumericProperties;
  },
  monsterProperties: function() {
    return monsterProperties;
  },
  multiSplit: function() {
    return multiSplit;
  },
  noneToNull: function() {
    return noneToNull;
  },
  notNull: function() {
    return notNull;
  },
  notNullish: function() {
    return notNullish;
  },
  numericModifiers: function() {
    return numericModifiers;
  },
  numericOrStringProperties: function() {
    return numericOrStringProperties;
  },
  numericProperties: function() {
    return numericProperties;
  },
  parseNumber: function() {
    return parseNumber;
  },
  permedSkills: function() {
    return permedSkills;
  },
  phylumProperties: function() {
    return phylumProperties;
  },
  pokefamUltTags: function() {
    return pokefamUltTags;
  },
  possibleLibramSummons: function() {
    return possibleLibramSummons;
  },
  prepareAscension: function() {
    return prepareAscension;
  },
  property: function() {
    return property_exports;
  },
  propertyTypes: function() {
    return propertyTypes_exports;
  },
  questStep: function() {
    return questStep;
  },
  random: function() {
    return random;
  },
  realmAvailable: function() {
    return realmAvailable;
  },
  realmCurrency: function() {
    return realmCurrency;
  },
  realmTypes: function() {
    return realmTypes;
  },
  regularFamiliarTags: function() {
    return regularFamiliarTags;
  },
  set: function() {
    return _set;
  },
  setCombatFlags: function() {
    return setCombatFlags;
  },
  setDefaultMaximizeOptions: function() {
    return setDefaultMaximizeOptions;
  },
  setEqual: function() {
    return setEqual;
  },
  setProperties: function() {
    return setProperties;
  },
  signIdToName: function() {
    return signIdToName;
  },
  signNameToId: function() {
    return signNameToId;
  },
  sinceKolmafiaRevision: function() {
    return sinceKolmafiaRevision;
  },
  sinceKolmafiaVersion: function() {
    return sinceKolmafiaVersion;
  },
  splitByCommasWithEscapes: function() {
    return splitByCommasWithEscapes;
  },
  statProperties: function() {
    return statProperties;
  },
  stringModifiers: function() {
    return stringModifiers;
  },
  stringProperties: function() {
    return stringProperties;
  },
  sum: function() {
    return sum;
  },
  sumNumbers: function() {
    return sumNumbers;
  },
  tc: function() {
    return tc;
  },
  telescope: function() {
    return telescope;
  },
  totalFamiliarWeight: function() {
    return totalFamiliarWeight;
  },
  tryFindBanish: function() {
    return tryFindBanish;
  },
  tryFindFreeKill: function() {
    return tryFindFreeKill;
  },
  tryFindFreeRun: function() {
    return tryFindFreeRun;
  },
  tuple: function() {
    return tuple;
  },
  undelay: function() {
    return undelay;
  },
  uneffect: function() {
    return uneffect;
  },
  unequip: function() {
    return unequip;
  },
  withBatch: function() {
    return withBatch;
  },
  withChoice: function() {
    return withChoice;
  },
  withChoices: function() {
    return withChoices;
  },
  withCombatFlags: function() {
    return withCombatFlags;
  },
  withProperties: function() {
    return withProperties;
  },
  withProperty: function() {
    return withProperty;
  }
});
var init_dist = __esm({
  "node_modules/libram/dist/index.js": function() {
    init_actions();
    init_ascend();
    init_Clan();
    init_challengePaths();
    init_combat();
    init_counter();
    init_diet();
    init_Dungeon();
    init_lib();
    init_maximize();
    init_mining();
    init_modifierTypes();
    init_mood();
    init_moonSign();
    init_propertyTypes();
    init_propertyTyping();
    init_resources();
    init_since();
    init_template_string();
    init_Kmail();
    init_logger();
    init_console();
    init_property();
    init_propertyTypes();
    init_utils();
    init_property();
    init_modifier();
    init_session();
    init_logger();
  }
});

// node_modules/garbo-lib/dist/value.js
var require_value = __commonJS({
  "node_modules/garbo-lib/dist/value.js": function(exports2) {
    "use strict";
    var _templateObject690;
    var _templateObject2172;
    var _templateObject3157;
    var _templateObject4135;
    var _templateObject5107;
    var _templateObject691;
    var _templateObject775;
    var _templateObject858;
    var _templateObject947;
    var _templateObject040;
    var _templateObject1150;
    var _templateObject1036;
    var _templateObject1151;
    var _templateObject1234;
    var _templateObject1332;
    var _templateObject1431;
    var _templateObject1530;
    var _templateObject1630;
    var _templateObject1727;
    var _templateObject1826;
    var _templateObject1926;
    var _templateObject2025;
    var _templateObject2173;
    var _templateObject2228;
    var _templateObject2326;
    var _templateObject2424;
    var _templateObject2522;
    var _templateObject2621;
    var _templateObject2719;
    var _templateObject2819;
    var _templateObject2919;
    var _templateObject3018;
    var _templateObject3158;
    var _templateObject3220;
    var _templateObject3319;
    var _templateObject3417;
    var _templateObject3516;
    var _templateObject3616;
    var _templateObject3716;
    var _templateObject3816;
    var _templateObject3915;
    var _templateObject4015;
    var _templateObject4136;
    var _templateObject4217;
    var _templateObject4314;
    var _templateObject4413;
    var _templateObject4513;
    var _templateObject4613;
    var _templateObject4713;
    var _templateObject4813;
    var _templateObject4913;
    var _templateObject5012;
    var _templateObject5114;
    var _templateObject5212;
    var _templateObject5312;
    var _templateObject5412;
    var _templateObject5512;
    var _templateObject5611;
    var _templateObject5710;
    var _templateObject5810;
    var _templateObject5910;
    var _templateObject6010;
    var _templateObject6112;
    var _templateObject6212;
    var _templateObject6312;
    var _templateObject6412;
    var _templateObject6511;
    var _templateObject6610;
    var _templateObject6710;
    var _templateObject6810;
    var _templateObject696;
    var _templateObject706;
    function _createForOfIteratorHelper27(r, e) {
      var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
      if (!t) {
        if (Array.isArray(r) || (t = _unsupportedIterableToArray57(r)) || e && r && "number" == typeof r.length) {
          t && (r = t);
          var _n = 0, F = function F2() {
          };
          return { s: F, n: function n() {
            return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
          }, e: function e2(r2) {
            throw r2;
          }, f: F };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      var o, a = true, u = false;
      return { s: function s() {
        t = t.call(r);
      }, n: function n() {
        var r2 = t.next();
        return a = r2.done, r2;
      }, e: function e2(r2) {
        u = true, o = r2;
      }, f: function f() {
        try {
          a || null == t.return || t.return();
        } finally {
          if (u) throw o;
        }
      } };
    }
    function _taggedTemplateLiteral104(e, t) {
      return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
    }
    function _slicedToArray35(r, e) {
      return _arrayWithHoles35(r) || _iterableToArrayLimit35(r, e) || _unsupportedIterableToArray57(r, e) || _nonIterableRest35();
    }
    function _nonIterableRest35() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _iterableToArrayLimit35(r, l) {
      var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
      if (null != t) {
        var e, n, i, u, a = [], f = true, o = false;
        try {
          if (i = (t = t.call(r)).next, 0 === l) {
            if (Object(t) !== t) return;
            f = false;
          } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
        } catch (r2) {
          o = true, n = r2;
        } finally {
          try {
            if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
          } finally {
            if (o) throw n;
          }
        }
        return a;
      }
    }
    function _arrayWithHoles35(r) {
      if (Array.isArray(r)) return r;
    }
    function _toConsumableArray41(r) {
      return _arrayWithoutHoles41(r) || _iterableToArray41(r) || _unsupportedIterableToArray57(r) || _nonIterableSpread41();
    }
    function _nonIterableSpread41() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray57(r, a) {
      if (r) {
        if ("string" == typeof r) return _arrayLikeToArray57(r, a);
        var t = {}.toString.call(r).slice(8, -1);
        return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray57(r, a) : void 0;
      }
    }
    function _iterableToArray41(r) {
      if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
    }
    function _arrayWithoutHoles41(r) {
      if (Array.isArray(r)) return _arrayLikeToArray57(r);
    }
    function _arrayLikeToArray57(r, a) {
      (null == a || a > r.length) && (a = r.length);
      for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
      return n;
    }
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.makeValue = makeValue2;
    var kolmafia_1 = require("kolmafia");
    var libram_1 = (init_dist(), __toCommonJS(dist_exports));
    function makeValue2() {
      var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      var regularValueCache = /* @__PURE__ */ new Map();
      var historicalValueCache = /* @__PURE__ */ new Map();
      var inputValues = options.itemValues ? _toConsumableArray41(options.itemValues.entries()).map(function(_ref) {
        var _ref2 = _slicedToArray35(_ref, 2), item15 = _ref2[0], val = _ref2[1];
        return [item15, function() {
          return (0, libram_1.undelay)(val);
        }];
      }) : [];
      var specialValueLookup = new Map([[(0, libram_1.$item)(_templateObject690 || (_templateObject690 = _taggedTemplateLiteral104(["Freddy Kruegerand"]))), currency.apply(void 0, _toConsumableArray41((0, libram_1.$items)(_templateObject2172 || (_templateObject2172 = _taggedTemplateLiteral104(["bottle of Bloodweiser, electric Kool-Aid, Dreadsylvanian skeleton key"])))))], [(0, libram_1.$item)(_templateObject3157 || (_templateObject3157 = _taggedTemplateLiteral104(["Beach Buck"]))), currency((0, libram_1.$item)(_templateObject4135 || (_templateObject4135 = _taggedTemplateLiteral104(["one-day ticket to Spring Break Beach"]))))], [(0, libram_1.$item)(_templateObject5107 || (_templateObject5107 = _taggedTemplateLiteral104(["Coinspiracy"]))), currency.apply(void 0, _toConsumableArray41((0, libram_1.$items)(_templateObject691 || (_templateObject691 = _taggedTemplateLiteral104(["Merc Core deployment orders, karma shawarma"])))))], [(0, libram_1.$item)(_templateObject775 || (_templateObject775 = _taggedTemplateLiteral104(["FunFunds\u2122"]))), currency((0, libram_1.$item)(_templateObject858 || (_templateObject858 = _taggedTemplateLiteral104(["one-day ticket to Dinseylandfill"]))))], [(0, libram_1.$item)(_templateObject947 || (_templateObject947 = _taggedTemplateLiteral104(["Volcoino"]))), currency((0, libram_1.$item)(_templateObject040 || (_templateObject040 = _taggedTemplateLiteral104(["one-day ticket to That 70s Volcano"]))))], [(0, libram_1.$item)(_templateObject1150 || (_templateObject1150 = _taggedTemplateLiteral104(["Wal-Mart gift certificate"]))), currency((0, libram_1.$item)(_templateObject1036 || (_templateObject1036 = _taggedTemplateLiteral104(["one-day ticket to The Glaciest"]))))], [(0, libram_1.$item)(_templateObject1151 || (_templateObject1151 = _taggedTemplateLiteral104(["cop dollar"]))), currency((0, libram_1.$item)(_templateObject1234 || (_templateObject1234 = _taggedTemplateLiteral104(["shoe gum"]))))], [(0, libram_1.$item)(_templateObject1332 || (_templateObject1332 = _taggedTemplateLiteral104(["Rubee\u2122"]))), currency((0, libram_1.$item)(_templateObject1431 || (_templateObject1431 = _taggedTemplateLiteral104(["FantasyRealm guest pass"]))))], [(0, libram_1.$item)(_templateObject1530 || (_templateObject1530 = _taggedTemplateLiteral104(["Guzzlrbuck"]))), currency((0, libram_1.$item)(_templateObject1630 || (_templateObject1630 = _taggedTemplateLiteral104(["Never Don't Stop Not Striving"]))))]].concat(_toConsumableArray41(complexCandy()), [[(0, libram_1.$item)(_templateObject1727 || (_templateObject1727 = _taggedTemplateLiteral104(["Merc Core deployment orders"]))), function() {
        return value((0, libram_1.$item)(_templateObject1826 || (_templateObject1826 = _taggedTemplateLiteral104(["one-day ticket to Conspiracy Island"]))));
      }], [(0, libram_1.$item)(_templateObject1926 || (_templateObject1926 = _taggedTemplateLiteral104(["free-range mushroom"]))), function() {
        return 3 * Math.max(value((0, libram_1.$item)(_templateObject2025 || (_templateObject2025 = _taggedTemplateLiteral104(["mushroom tea"])))) - value((0, libram_1.$item)(_templateObject2173 || (_templateObject2173 = _taggedTemplateLiteral104(["soda water"])))), value((0, libram_1.$item)(_templateObject2228 || (_templateObject2228 = _taggedTemplateLiteral104(["mushroom whiskey"])))) - value((0, libram_1.$item)(_templateObject2326 || (_templateObject2326 = _taggedTemplateLiteral104(["fermenting powder"])))), value((0, libram_1.$item)(_templateObject2424 || (_templateObject2424 = _taggedTemplateLiteral104(["mushroom filet"])))));
      }], [(0, libram_1.$item)(_templateObject2522 || (_templateObject2522 = _taggedTemplateLiteral104(["little firkin"]))), function() {
        return averageValue.apply(void 0, _toConsumableArray41((0, libram_1.$items)(_templateObject2621 || (_templateObject2621 = _taggedTemplateLiteral104(["martini, screwdriver, strawberry daiquiri, margarita, vodka martini, tequila sunrise, bottle of Amontillado, barrel-aged martini, barrel gun"])))));
      }], [(0, libram_1.$item)(_templateObject2719 || (_templateObject2719 = _taggedTemplateLiteral104(["normal barrel"]))), function() {
        return averageValue.apply(void 0, _toConsumableArray41((0, libram_1.$items)(_templateObject2819 || (_templateObject2819 = _taggedTemplateLiteral104(["a little sump'm sump'm, pink pony, rockin' wagon, roll in the hay, slip 'n' slide, slap and tickle"])))));
      }], [(0, libram_1.$item)(_templateObject2919 || (_templateObject2919 = _taggedTemplateLiteral104(["big tun"]))), function() {
        return averageValue.apply(void 0, _toConsumableArray41((0, libram_1.$items)(_templateObject3018 || (_templateObject3018 = _taggedTemplateLiteral104(["gibson, gin and tonic, mimosette, tequila sunset, vodka and tonic, zmobie"])))));
      }], [(0, libram_1.$item)(_templateObject3158 || (_templateObject3158 = _taggedTemplateLiteral104(["weathered barrel"]))), function() {
        return averageValue.apply(void 0, _toConsumableArray41((0, libram_1.$items)(_templateObject3220 || (_templateObject3220 = _taggedTemplateLiteral104(["bean burrito, enchanted bean burrito, jumping bean burrito"])))));
      }], [(0, libram_1.$item)(_templateObject3319 || (_templateObject3319 = _taggedTemplateLiteral104(["dusty barrel"]))), function() {
        return averageValue.apply(void 0, _toConsumableArray41((0, libram_1.$items)(_templateObject3417 || (_templateObject3417 = _taggedTemplateLiteral104(["spicy bean burrito, spicy enchanted bean burrito, spicy jumping bean burrito"])))));
      }], [(0, libram_1.$item)(_templateObject3516 || (_templateObject3516 = _taggedTemplateLiteral104(["disintegrating barrel"]))), function() {
        return averageValue.apply(void 0, _toConsumableArray41((0, libram_1.$items)(_templateObject3616 || (_templateObject3616 = _taggedTemplateLiteral104(["insanely spicy bean burrito, insanely spicy enchanted bean burrito, insanely spicy jumping bean burrito"])))));
      }], [(0, libram_1.$item)(_templateObject3716 || (_templateObject3716 = _taggedTemplateLiteral104(["moist barrel"]))), function() {
        return averageValue.apply(void 0, _toConsumableArray41((0, libram_1.$items)(_templateObject3816 || (_templateObject3816 = _taggedTemplateLiteral104(["cast, concentrated magicalness pill, enchanted barbell, giant moxie weed, Mountain Stream soda"])))));
      }], [(0, libram_1.$item)(_templateObject3915 || (_templateObject3915 = _taggedTemplateLiteral104(["rotting barrel"]))), function() {
        return averageValue.apply(void 0, _toConsumableArray41((0, libram_1.$items)(_templateObject4015 || (_templateObject4015 = _taggedTemplateLiteral104(["Doc Galaktik's Ailment Ointment, extra-strength strongness elixir, jug-o-magicalness, Marquis de Poivre soda, suntan lotion of moxiousness"])))));
      }], [(0, libram_1.$item)(_templateObject4136 || (_templateObject4136 = _taggedTemplateLiteral104(["mouldering barrel"]))), function() {
        return averageValue.apply(void 0, _toConsumableArray41((0, libram_1.$items)(_templateObject4217 || (_templateObject4217 = _taggedTemplateLiteral104(["creepy ginger ale, haunted battery, scroll of drastic healing, synthetic marrow, the funk"])))));
      }], [(0, libram_1.$item)(_templateObject4314 || (_templateObject4314 = _taggedTemplateLiteral104(["barnacled barrel"]))), function() {
        return averageValue.apply(void 0, _toConsumableArray41((0, libram_1.$items)(_templateObject4413 || (_templateObject4413 = _taggedTemplateLiteral104(["Alewife\u2122 Ale, bazookafish bubble gum, beefy fish meat, eel battery, glistening fish meat, ink bladder, pufferfish spine, shark cartilage, slick fish meat, slug of rum, slug of shochu, slug of vodka, temporary teardrop tattoo"])))));
      }], [(0, libram_1.$item)(_templateObject4513 || (_templateObject4513 = _taggedTemplateLiteral104(["psychoanalytic jar"]))), function() {
        return (
          // Exclude jick because he's rate-limited
          Math.max.apply(Math, _toConsumableArray41((0, libram_1.$items)(_templateObject4613 || (_templateObject4613 = _taggedTemplateLiteral104(["jar of psychoses (The Meatsmith), jar of psychoses (The Captain of the Gourd), jar of psychoses (The Crackpot Mystic), jar of psychoses (The Pretentious Artist), jar of psychoses (The Old Man), jar of psychoses (The Suspicious-Looking Guy)"]))).map(function(jar) {
            return value(jar);
          })))
        );
      }], [(0, libram_1.$item)(_templateObject4713 || (_templateObject4713 = _taggedTemplateLiteral104(["warbear whosit"]))), function() {
        return (0.35 * averageValue.apply(void 0, _toConsumableArray41((0, libram_1.$items)(_templateObject4813 || (_templateObject4813 = _taggedTemplateLiteral104(["warbear auto-anvil, warbear chemistry lab, warbear high-efficiency still, warbear induction oven, warbear jackhammer drill press, warbear LP-ROM burner, warbear energy bracers, warbear exhaust manifold, warbear exo-arm, warbear foil hat, warbear laser beacon, warbear oil pan"]))))) + 0.65 * averageValue.apply(void 0, _toConsumableArray41((0, libram_1.$items)(_templateObject4913 || (_templateObject4913 = _taggedTemplateLiteral104(["warbear metalworking primer, warbear beeping telegram, warbear gyrocopter, warbear procedural hilarity drone, warbear robo-camouflage unit, warbear sequential gaiety distribution system"])))))) / 100;
      }]], _toConsumableArray41((0, libram_1.$items)(_templateObject5012 || (_templateObject5012 = _taggedTemplateLiteral104(["worthless gewgaw, worthless knick-knack, worthless trinket"]))).map(function(i) {
        return [i, currency.apply(void 0, _toConsumableArray41((0, libram_1.$items)(_templateObject5114 || (_templateObject5114 = _taggedTemplateLiteral104(["seal tooth, chisel, petrified noodles, jaba\xF1ero pepper, banjo strings, hot buttered roll, wooden figurine, ketchup, catsup, volleyball"])))).concat(_toConsumableArray41((0, kolmafia_1.myClass)() === (0, libram_1.$class)(_templateObject5212 || (_templateObject5212 = _taggedTemplateLiteral104(["Seal Clubber"]))) ? (0, libram_1.$items)(_templateObject5312 || (_templateObject5312 = _taggedTemplateLiteral104(["figurine of an ancient seal"]))) : [])))];
      })), [[(0, libram_1.$item)(_templateObject5412 || (_templateObject5412 = _taggedTemplateLiteral104(["Boris's key"]))), function() {
        return value((0, libram_1.$item)(_templateObject5512 || (_templateObject5512 = _taggedTemplateLiteral104(["Boris's key lime"])))) - value((0, libram_1.$item)(_templateObject5611 || (_templateObject5611 = _taggedTemplateLiteral104(["lime"]))));
      }], [(0, libram_1.$item)(_templateObject5710 || (_templateObject5710 = _taggedTemplateLiteral104(["Jarlsberg's key"]))), function() {
        return value((0, libram_1.$item)(_templateObject5810 || (_templateObject5810 = _taggedTemplateLiteral104(["Jarlsberg's key lime"])))) - value((0, libram_1.$item)(_templateObject5910 || (_templateObject5910 = _taggedTemplateLiteral104(["lime"]))));
      }], [(0, libram_1.$item)(_templateObject6010 || (_templateObject6010 = _taggedTemplateLiteral104(["Sneaky Pete's key"]))), function() {
        return value((0, libram_1.$item)(_templateObject6112 || (_templateObject6112 = _taggedTemplateLiteral104(["Sneaky Pete's key lime"])))) - value((0, libram_1.$item)(_templateObject6212 || (_templateObject6212 = _taggedTemplateLiteral104(["lime"]))));
      }], [(0, libram_1.$item)(_templateObject6312 || (_templateObject6312 = _taggedTemplateLiteral104(["fat loot token"]))), currency.apply(void 0, _toConsumableArray41((0, libram_1.$items)(_templateObject6412 || (_templateObject6412 = _taggedTemplateLiteral104(["Boris's key, Jarlsberg's key, Sneaky Pete's key, Boris's ring, Jarlsberg's earring, Sneaky Pete's breath spray, potato sprout, sewing kit, Spellbook: Singer's Faithful Ocelot, Spellbook: Drescher's Annoying Noise, Spellbook: Walberg's Dim Bulb, dried gelatinous cube"])))))], [(0, libram_1.$item)(_templateObject6511 || (_templateObject6511 = _taggedTemplateLiteral104(["inflammable leaf"]))), inflammableLeafCurrency()], [(0, libram_1.$item)(_templateObject6610 || (_templateObject6610 = _taggedTemplateLiteral104(["envelope full of Meat"]))), function() {
        return 5e4;
      }], [(0, libram_1.$item)(_templateObject6710 || (_templateObject6710 = _taggedTemplateLiteral104(["crystalline cheer"]))), currency.apply(void 0, _toConsumableArray41((0, libram_1.$items)(_templateObject6810 || (_templateObject6810 = _taggedTemplateLiteral104(["stale cheer wine, stale Cheer-E-Os, Cheer-Up soda, cheer-o-gram, cheerful antler hat, cheerful Crimbo sweater, cheerful pajama pants"])))))]], _toConsumableArray41(inputValues)));
      var exclusions = /* @__PURE__ */ new Set([
        // For tradeable items which can be "consumed" infinitely
        (0, libram_1.$item)(_templateObject696 || (_templateObject696 = _taggedTemplateLiteral104(["ChibiBuddy\u2122 (off)"])))
      ]);
      function saleValue(item15, useHistorical) {
        if (useHistorical) {
          if ((0, kolmafia_1.historicalAge)(item15) <= 7 && (0, kolmafia_1.historicalPrice)(item15) > 0) {
            var isMallMin = (0, kolmafia_1.historicalPrice)(item15) === Math.max(100, 2 * (0, kolmafia_1.autosellPrice)(item15));
            return isMallMin ? (0, kolmafia_1.autosellPrice)(item15) : 0.9 * (0, kolmafia_1.historicalPrice)(item15);
          }
        }
        return (0, libram_1.getSaleValue)(item15);
      }
      function currency() {
        for (var _len = arguments.length, items = new Array(_len), _key = 0; _key < _len; _key++) {
          items[_key] = arguments[_key];
        }
        var unitCost = items.map(function(i) {
          var coinmaster = kolmafia_1.Coinmaster.all().find(function(c) {
            return (0, kolmafia_1.sellsItem)(c, i);
          });
          if (!coinmaster) {
            return [i, Infinity];
          } else {
            return [i, (0, kolmafia_1.sellPrice)(coinmaster, i)];
          }
        });
        return function() {
          return Math.max.apply(Math, _toConsumableArray41(unitCost.map(function(_ref3) {
            var _ref4 = _slicedToArray35(_ref3, 2), item15 = _ref4[0], cost = _ref4[1];
            return value(item15) / cost;
          })));
        };
      }
      function inflammableLeafCurrency() {
        if (!libram_1.BurningLeaves.have()) return function() {
          return 0;
        };
        var ignored = (0, libram_1.$items)(_templateObject706 || (_templateObject706 = _taggedTemplateLiteral104(["lit leaf lasso, day shortener"])));
        var unitCost = _toConsumableArray41(libram_1.BurningLeaves.burnFor).filter(function(entry) {
          return entry[0] instanceof kolmafia_1.Item && entry[0].tradeable && !ignored.includes(entry[0]);
        });
        return function() {
          return Math.max.apply(Math, _toConsumableArray41(unitCost.map(function(_ref5) {
            var _ref6 = _slicedToArray35(_ref5, 2), item15 = _ref6[0], cost = _ref6[1];
            return value(item15) / cost;
          })));
        };
      }
      function complexCandy() {
        var candies = kolmafia_1.Item.all().filter(function(i) {
          return i.candyType === "complex";
        });
        var candyLookup = [[], [], [], [], []];
        var _iterator = _createForOfIteratorHelper27(candies), _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done; ) {
            var candy = _step.value;
            var id = (0, kolmafia_1.toInt)(candy) % 5;
            if (candy.tradeable) {
              candyLookup[id].push(candy);
            }
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
        var candyIdPrices = candies.filter(function(i) {
          return !i.tradeable;
        }).map(function(i) {
          return [i, function() {
            return Math.min.apply(Math, _toConsumableArray41(candyLookup[(0, kolmafia_1.toInt)(i) % 5].map(function(i2) {
              return value(i2);
            })));
          }];
        });
        return candyIdPrices;
      }
      function value(inputItem) {
        var _regularValueCache$ge;
        var useHistorical = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
        var _ref7 = inputItem instanceof kolmafia_1.Item ? {
          item: inputItem,
          quantity: 1
        } : inputItem, item15 = _ref7.item, quantity = _ref7.quantity;
        if (exclusions.has(item15)) return 0;
        var cachedValue = (_regularValueCache$ge = regularValueCache.get(item15)) !== null && _regularValueCache$ge !== void 0 ? _regularValueCache$ge : useHistorical ? historicalValueCache.get(item15) : void 0;
        if (cachedValue === void 0) {
          var _specialValueCompute;
          var specialValueCompute = specialValueLookup.get(item15);
          var _value = (_specialValueCompute = specialValueCompute === null || specialValueCompute === void 0 ? void 0 : specialValueCompute()) !== null && _specialValueCompute !== void 0 ? _specialValueCompute : saleValue(item15, useHistorical);
          (useHistorical ? historicalValueCache : regularValueCache).set(item15, _value);
          return _value;
        }
        return quantity * cachedValue;
      }
      function averageValue() {
        for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          items[_key2] = arguments[_key2];
        }
        return (0, libram_1.sum)(items, value) / items.length;
      }
      return {
        averageValue: averageValue,
        value: value
      };
    }
  }
});

// node_modules/garbo-lib/dist/wanderer/lib.js
var require_lib2 = __commonJS({
  "node_modules/garbo-lib/dist/wanderer/lib.js": function(exports2) {
    "use strict";
    function _typeof38(o) {
      "@babel/helpers - typeof";
      return _typeof38 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof38(o);
    }
    var _templateObject690;
    var _templateObject2172;
    var _templateObject3157;
    var _templateObject4135;
    var _templateObject5107;
    var _templateObject691;
    var _templateObject775;
    var _templateObject858;
    var _templateObject947;
    var _templateObject040;
    var _templateObject1150;
    var _templateObject1036;
    var _templateObject1151;
    var _templateObject1234;
    var _templateObject1332;
    var _templateObject1431;
    var _templateObject1530;
    var _templateObject1630;
    var _templateObject1727;
    var _templateObject1826;
    var _templateObject1926;
    var _templateObject2025;
    var _templateObject2173;
    var _templateObject2228;
    var _templateObject2326;
    var _templateObject2424;
    var _templateObject2522;
    var _templateObject2621;
    function _defineProperties27(e, r) {
      for (var t = 0; t < r.length; t++) {
        var o = r[t];
        o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e, _toPropertyKey38(o.key), o);
      }
    }
    function _createClass27(e, r, t) {
      return r && _defineProperties27(e.prototype, r), t && _defineProperties27(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
    }
    function _classCallCheck27(a, n) {
      if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperty33(e, r, t) {
      return (r = _toPropertyKey38(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
    }
    function _toPropertyKey38(t) {
      var i = _toPrimitive38(t, "string");
      return "symbol" == _typeof38(i) ? i : i + "";
    }
    function _toPrimitive38(t, r) {
      if ("object" != _typeof38(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof38(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    function _toConsumableArray41(r) {
      return _arrayWithoutHoles41(r) || _iterableToArray41(r) || _unsupportedIterableToArray57(r) || _nonIterableSpread41();
    }
    function _nonIterableSpread41() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray57(r, a) {
      if (r) {
        if ("string" == typeof r) return _arrayLikeToArray57(r, a);
        var t = {}.toString.call(r).slice(8, -1);
        return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray57(r, a) : void 0;
      }
    }
    function _iterableToArray41(r) {
      if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
    }
    function _arrayWithoutHoles41(r) {
      if (Array.isArray(r)) return _arrayLikeToArray57(r);
    }
    function _arrayLikeToArray57(r, a) {
      (null == a || a > r.length) && (a = r.length);
      for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
      return n;
    }
    function _taggedTemplateLiteral104(e, t) {
      return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
    }
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.WandererTarget = exports2.UnlockableZones = exports2.draggableFights = void 0;
    exports2.isDraggableFight = isDraggableFight;
    exports2.underwater = underwater;
    exports2.canAdventureOrUnlock = canAdventureOrUnlock;
    exports2.unlock = unlock;
    exports2.canWander = canWander;
    exports2.defaultFactory = defaultFactory;
    exports2.wandererTurnsAvailableToday = wandererTurnsAvailableToday;
    exports2.bofaValue = bofaValue;
    var kolmafia_1 = require("kolmafia");
    var libram_1 = (init_dist(), __toCommonJS(dist_exports));
    exports2.draggableFights = ["backup", "wanderer", "yellow ray", "freefight", "freerun"];
    function isDraggableFight(fight2) {
      return exports2.draggableFights.includes(fight2);
    }
    exports2.UnlockableZones = [{
      zone: "Spaaace",
      available: function() {
        return (0, libram_1.have)((0, libram_1.$effect)(_templateObject690 || (_templateObject690 = _taggedTemplateLiteral104(["Transpondent"]))));
      },
      unlocker: (0, libram_1.$item)(_templateObject2172 || (_templateObject2172 = _taggedTemplateLiteral104(["transporter transponder"]))),
      noInv: false
    }, {
      zone: "Wormwood",
      available: function() {
        return (0, libram_1.have)((0, libram_1.$effect)(_templateObject3157 || (_templateObject3157 = _taggedTemplateLiteral104(["Absinthe-Minded"]))));
      },
      unlocker: (0, libram_1.$item)(_templateObject4135 || (_templateObject4135 = _taggedTemplateLiteral104(["tiny bottle of absinthe"]))),
      noInv: false
    }, {
      zone: "Rabbit Hole",
      available: function() {
        return (0, libram_1.have)((0, libram_1.$effect)(_templateObject5107 || (_templateObject5107 = _taggedTemplateLiteral104(["Down the Rabbit Hole"]))));
      },
      unlocker: (0, libram_1.$item)(_templateObject691 || (_templateObject691 = _taggedTemplateLiteral104(['"DRINK ME" potion']))),
      noInv: false
    }, {
      zone: "Conspiracy Island",
      available: function() {
        return (0, libram_1.realmAvailable)("spooky");
      },
      unlocker: (0, libram_1.$item)(_templateObject775 || (_templateObject775 = _taggedTemplateLiteral104(["one-day ticket to Conspiracy Island"]))),
      noInv: true
    }, {
      zone: "Dinseylandfill",
      available: function() {
        return (0, libram_1.realmAvailable)("stench");
      },
      unlocker: (0, libram_1.$item)(_templateObject858 || (_templateObject858 = _taggedTemplateLiteral104(["one-day ticket to Dinseylandfill"]))),
      noInv: true
    }, {
      zone: "The Glaciest",
      available: function() {
        return (0, libram_1.realmAvailable)("cold");
      },
      unlocker: (0, libram_1.$item)(_templateObject947 || (_templateObject947 = _taggedTemplateLiteral104(["one-day ticket to The Glaciest"]))),
      noInv: true
    }, {
      zone: "Spring Break Beach",
      available: function() {
        return (0, libram_1.realmAvailable)("sleaze");
      },
      unlocker: (0, libram_1.$item)(_templateObject040 || (_templateObject040 = _taggedTemplateLiteral104(["one-day ticket to Spring Break Beach"]))),
      noInv: true
    }];
    function underwater(location7) {
      return location7.environment === "underwater";
    }
    var ILLEGAL_PARENTS = ["Clan Basement", "Psychoses", "PirateRealm", "A Monorail Station"];
    var ILLEGAL_ZONES = ["The Drip", "Suburbs"];
    var canAdventureOrUnlockSkipList = [].concat(_toConsumableArray41((0, libram_1.$locations)(_templateObject1150 || (_templateObject1150 = _taggedTemplateLiteral104(["The Oasis, The Bubblin' Caldera, Barrrney's Barrr, The F'c'le, The Poop Deck, Belowdecks, Madness Bakery, The Secret Government Laboratory, The Dire Warren, Inside the Palindome, The Haiku Dungeon, An Incredibly Strange Place (Bad Trip), An Incredibly Strange Place (Mediocre Trip), An Incredibly Strange Place (Great Trip), El Vibrato Island, The Daily Dungeon, Trick-or-Treating, Seaside Megalopolis, Frat House, Through the Spacegate"])))), _toConsumableArray41(kolmafia_1.Location.all().filter(function(_ref) {
      var parent = _ref.parent, zone = _ref.zone;
      return ILLEGAL_PARENTS.includes(parent) || ILLEGAL_ZONES.includes(zone);
    })));
    function canAdventureOrUnlock(loc) {
      var skiplist = _toConsumableArray41(canAdventureOrUnlockSkipList);
      if (!(0, libram_1.have)((0, libram_1.$item)(_templateObject1036 || (_templateObject1036 = _taggedTemplateLiteral104(["repaid diaper"])))) && (0, libram_1.have)((0, libram_1.$item)(_templateObject1151 || (_templateObject1151 = _taggedTemplateLiteral104(["Great Wolf's beastly trousers"]))))) {
        skiplist.push((0, libram_1.$location)(_templateObject1234 || (_templateObject1234 = _taggedTemplateLiteral104(["The Icy Peak"]))));
      }
      if (libram_1.GingerBread.minutesToNoon() === 0 || libram_1.GingerBread.minutesToMidnight() === 0) {
        skiplist.push.apply(skiplist, _toConsumableArray41(libram_1.GingerBread.LOCATIONS));
      }
      var canUnlock = exports2.UnlockableZones.some(function(z) {
        return loc.zone === z.zone && (z.available() || !z.noInv);
      });
      return !underwater(loc) && !skiplist.includes(loc) && ((0, kolmafia_1.canAdventure)(loc) || canUnlock);
    }
    function unlock(loc, value) {
      var unlockableZone = exports2.UnlockableZones.find(function(z) {
        return z.zone === loc.zone;
      });
      if (!unlockableZone) return (0, kolmafia_1.canAdventure)(loc);
      if (unlockableZone.available()) return true;
      if ((0, kolmafia_1.buy)(1, unlockableZone.unlocker, value) === 0) return false;
      return (0, kolmafia_1.use)(unlockableZone.unlocker);
    }
    var backupSkiplist = (0, libram_1.$locations)(_templateObject1332 || (_templateObject1332 = _taggedTemplateLiteral104(["The Overgrown Lot, The Skeleton Store, The Mansion of Dr. Weirdeaux, Professor Jacking's Huge-A-Ma-Tron"])));
    var backupSafelist = (0, libram_1.$locations)(_templateObject1431 || (_templateObject1431 = _taggedTemplateLiteral104(["The Haunted Gallery, The Haunted Ballroom, The Haunted Library, The Penultimate Fantasy Airship, Cobb's Knob Barracks, The Castle in the Clouds in the Sky (Basement), The Castle in the Clouds in the Sky (Ground Floor), The Castle in the Clouds in the Sky (Top Floor), The Haiku Dungeon, Twin Peak, A Mob of Zeppelin Protesters, The Upper Chamber, Frat House"])));
    var yellowRaySafelist = (0, libram_1.$locations)(_templateObject1530 || (_templateObject1530 = _taggedTemplateLiteral104(["The Haunted Gallery, The Haunted Ballroom, The Haunted Library, Cobb's Knob Barracks, The Castle in the Clouds in the Sky (Basement), The Castle in the Clouds in the Sky (Ground Floor), The Haiku Dungeon, Twin Peak, A Mob of Zeppelin Protesters, The Upper Chamber"])));
    function canWanderTypeBackup(location7) {
      return !backupSkiplist.includes(location7) && (location7.combatPercent >= 100 || backupSafelist.includes(location7));
    }
    function canWanderTypeFreeFight(location7) {
      if (location7 === (0, libram_1.$location)(_templateObject1630 || (_templateObject1630 = _taggedTemplateLiteral104(["The Fun-Guy Mansion"]))) && (0, libram_1.get)("funGuyMansionKills") >= 100) {
        return false;
      }
      return !backupSkiplist.includes(location7) && (location7.combatPercent >= 100 || yellowRaySafelist.includes(location7));
    }
    var wandererSkiplist = (0, libram_1.$locations)(_templateObject1727 || (_templateObject1727 = _taggedTemplateLiteral104(["The Smut Orc Logging Camp, The Batrat and Ratbat Burrow, Guano Junction, The Beanbat Chamber, A-Boo Peak, The Mouldering Mansion, The Rogue Windmill, The Stately Pleasure Dome, Pandamonium Slums"])));
    function canWanderTypeWander(location7) {
      return !wandererSkiplist.includes(location7) && location7.wanderers;
    }
    function canWander(location7, type) {
      if (underwater(location7)) return false;
      switch (type) {
        case "backup":
        case "freerun":
          return canWanderTypeBackup(location7);
        case "freefight":
        case "yellow ray":
          return canWanderTypeFreeFight(location7);
        case "wanderer":
          return canWanderTypeWander(location7);
      }
    }
    var WandererTarget = /* @__PURE__ */ _createClass27(
      /**
       * Process for determining where to put a wanderer to extract additional value from it
       * @param name name of this wanderer - for documentation/logging purposes
       * @param location returns the location to adventure to target this; null only if something goes wrong
       * @param value the expected additional value of putting a single wanderer-fight into the zone for this
       * @param prepareTurn attempt to set up, spending meat and or items as necessary
       */
      function WandererTarget2(name, location7, value) {
        var prepareTurn = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : function() {
          return true;
        };
        _classCallCheck27(this, WandererTarget2);
        _defineProperty33(this, "name", void 0);
        _defineProperty33(this, "value", void 0);
        _defineProperty33(this, "location", void 0);
        _defineProperty33(this, "prepareTurn", void 0);
        this.name = name;
        this.value = value;
        this.location = location7;
        this.prepareTurn = prepareTurn;
      }
    );
    exports2.WandererTarget = WandererTarget;
    function defaultFactory() {
      return [new WandererTarget("Default", (0, libram_1.$location)(_templateObject1826 || (_templateObject1826 = _taggedTemplateLiteral104(["The Haunted Kitchen"]))), 0)];
    }
    var WanderingSources = [{
      name: "CMG",
      item: (0, libram_1.$item)(_templateObject1926 || (_templateObject1926 = _taggedTemplateLiteral104(["cursed magnifying glass"]))),
      max: 3,
      property: "_voidFreeFights",
      type: "wanderer"
    }, {
      name: "Voter",
      item: (0, libram_1.$item)(_templateObject2025 || (_templateObject2025 = _taggedTemplateLiteral104(['"I Voted!" sticker']))),
      max: 3,
      property: "_voteFreeFights",
      type: "wanderer"
    }, {
      name: "Voter",
      item: (0, libram_1.$item)(_templateObject2173 || (_templateObject2173 = _taggedTemplateLiteral104(['"I Voted!" sticker']))),
      max: 3,
      property: "_voteFreeFights",
      type: "wanderer"
    }, {
      name: "Backup",
      item: (0, libram_1.$item)(_templateObject2228 || (_templateObject2228 = _taggedTemplateLiteral104(["backup camera"]))),
      max: 11,
      property: "_backUpUses",
      type: "backup"
    }];
    function wandererTurnsAvailableToday(options, location7, requiresMonsterKill) {
      var canWanderCache = {
        backup: canWander(location7, "backup"),
        wanderer: canWander(location7, "wanderer"),
        "yellow ray": canWander(location7, "yellow ray"),
        freefight: canWander(location7, "freefight"),
        freerun: canWander(location7, "freerun")
      };
      var digitize = canWanderCache["backup"] && options.digitzesRemaining ? options.digitzesRemaining(options.estimatedTurns()) : 0;
      var pigSkinnerRay = canWanderCache["backup"] && (0, libram_1.have)((0, libram_1.$skill)(_templateObject2326 || (_templateObject2326 = _taggedTemplateLiteral104(["Free-For-All"])))) ? Math.floor(options.estimatedTurns() / 25) : 0;
      var yellowRayCooldown = (0, libram_1.have)((0, libram_1.$skill)(_templateObject2424 || (_templateObject2424 = _taggedTemplateLiteral104(["Fondeluge"])))) ? 50 : 100;
      var yellowRay = canWanderCache["yellow ray"] ? Math.floor(options.estimatedTurns() / yellowRayCooldown) : 0;
      var wanderers2 = (0, libram_1.sum)(WanderingSources, function(source) {
        return canWanderCache[source.type] && (0, libram_1.have)(source.item) ? (0, libram_1.clamp)((0, libram_1.get)(source.property), 0, source.max) : 0;
      });
      var freeRun = !requiresMonsterKill && canWanderCache["freerun"] && (0, libram_1.have)((0, libram_1.$item)(_templateObject2522 || (_templateObject2522 = _taggedTemplateLiteral104(["spring shoes"])))) ? Math.floor(options.estimatedTurns() / 30) : 0;
      return digitize + pigSkinnerRay + yellowRay + wanderers2 + freeRun;
    }
    var LIMITED_BOFA_DROPS = (0, libram_1.$items)(_templateObject2621 || (_templateObject2621 = _taggedTemplateLiteral104(["pocket wish, tattered scrap of paper"])));
    function bofaValue(_ref2, monster2) {
      var plentifulMonsters = _ref2.plentifulMonsters, itemValue = _ref2.itemValue, effectValue = _ref2.effectValue;
      switch (monster2.factType) {
        case "item": {
          var item15 = (0, kolmafia_1.itemFact)(monster2);
          var quantity = (0, kolmafia_1.numericFact)(monster2);
          if (LIMITED_BOFA_DROPS.includes(item15) && plentifulMonsters.some(function(monster3) {
            return (0, kolmafia_1.toItem)(monster3.fact) === item15;
          })) {
            return 0;
          }
          return quantity * itemValue(item15);
        }
        case "effect": {
          var effect2 = (0, kolmafia_1.effectFact)(monster2);
          var duration = (0, kolmafia_1.numericFact)(monster2);
          return effectValue(effect2, duration);
        }
        case "meat": {
          return (0, kolmafia_1.numericFact)(monster2);
        }
        default:
          return 0;
      }
    }
  }
});

// node_modules/garbo-lib/dist/wanderer/guzzlr.js
var require_guzzlr = __commonJS({
  "node_modules/garbo-lib/dist/wanderer/guzzlr.js": function(exports2) {
    "use strict";
    var _templateObject690;
    function _taggedTemplateLiteral104(e, t) {
      return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
    }
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.guzzlrFactory = guzzlrFactory;
    var kolmafia_1 = require("kolmafia");
    var libram_1 = (init_dist(), __toCommonJS(dist_exports));
    var lib_1 = require_lib2();
    function considerAbandon(options, locationSkiplist) {
      var location7 = libram_1.Guzzlr.getLocation();
      var remaningTurns = Math.ceil((100 - (0, libram_1.get)("guzzlrDeliveryProgress")) / (10 - (0, libram_1.get)("_guzzlrDeliveries")));
      (0, kolmafia_1.print)("Got guzzlr quest ".concat(libram_1.Guzzlr.getTier(), " at ").concat(libram_1.Guzzlr.getLocation(), " with remaining turns ").concat(remaningTurns));
      if (libram_1.Guzzlr.canAbandon() && // consider abandoning
      (!location7 || // if mafia failed to track the location correctly
      locationSkiplist.includes(location7) || !(0, lib_1.canAdventureOrUnlock)(location7) || // or the zone is marked as "generally cannot adv"
      options.ascend && (0, lib_1.wandererTurnsAvailableToday)(options, location7, true) < remaningTurns)) {
        (0, kolmafia_1.print)("Abandoning...");
        libram_1.Guzzlr.abandon();
      }
    }
    function acceptGuzzlrQuest(options, locationSkiplist) {
      if (libram_1.Guzzlr.isQuestActive()) considerAbandon(options, locationSkiplist);
      while (!libram_1.Guzzlr.isQuestActive()) {
        (0, kolmafia_1.print)("Picking a guzzlr quest");
        if (libram_1.Guzzlr.canPlatinum() && !(options.prioritizeCappingGuzzlr && libram_1.Guzzlr.haveFullPlatinumBonus())) {
          libram_1.Guzzlr.acceptPlatinum();
        } else if (libram_1.Guzzlr.canGold() && (libram_1.Guzzlr.haveFullBronzeBonus() || !libram_1.Guzzlr.haveFullGoldBonus())) {
          libram_1.Guzzlr.acceptGold();
        } else {
          libram_1.Guzzlr.acceptBronze();
        }
        considerAbandon(options, locationSkiplist);
      }
    }
    function guzzlrValuePerTurn(buckValue, tier, guzzlrBooze) {
      var turnsToCompleteQuest = 100 / Math.max(3, 10 - (0, libram_1.get)("_guzzlrDeliveries"));
      var boozePrice = (0, kolmafia_1.mallPrice)(guzzlrBooze);
      switch (tier) {
        case null:
          return 0;
        case "bronze":
          return (3 * buckValue - boozePrice) / turnsToCompleteQuest;
        case "gold":
          return (6 * buckValue - boozePrice) / turnsToCompleteQuest;
        case "platinum":
          return (21.5 * buckValue - boozePrice) / turnsToCompleteQuest;
      }
    }
    function guzzlrFactory(type, locationSkiplist, options) {
      if (libram_1.Guzzlr.have() && type !== "freerun") {
        var buckValue = options.itemValue((0, libram_1.$item)(_templateObject690 || (_templateObject690 = _taggedTemplateLiteral104(["Guzzlrbuck"]))));
        acceptGuzzlrQuest(options, locationSkiplist);
        var location7 = libram_1.Guzzlr.getLocation();
        if (location7 !== null) {
          var guzzlrBooze = libram_1.Guzzlr.getTier() === "platinum" ? libram_1.Guzzlr.getCheapestPlatinumCocktail() : libram_1.Guzzlr.getBooze();
          return guzzlrBooze ? [new lib_1.WandererTarget("Guzzlr", location7, guzzlrValuePerTurn(buckValue, libram_1.Guzzlr.getTier(), guzzlrBooze), function() {
            if (!guzzlrBooze) {
              return false;
            }
            if (!(0, libram_1.have)(guzzlrBooze)) {
              var fancy = guzzlrBooze && (0, kolmafia_1.craftType)(guzzlrBooze).includes("fancy");
              if (guzzlrBooze && (!fancy || fancy && (0, libram_1.freeCrafts)("booze") > 0)) {
                (0, kolmafia_1.retrieveItem)(guzzlrBooze);
              } else if (guzzlrBooze) {
                (0, kolmafia_1.buy)(1, guzzlrBooze, buckValue * libram_1.Guzzlr.expectedReward());
              }
            }
            return (0, libram_1.have)(guzzlrBooze);
          })] : [];
        }
      }
      return [];
    }
  }
});

// node_modules/garbo-lib/dist/wanderer/lovebugs.js
var require_lovebugs = __commonJS({
  "node_modules/garbo-lib/dist/wanderer/lovebugs.js": function(exports2) {
    "use strict";
    var _templateObject690;
    var _templateObject2172;
    var _templateObject3157;
    var _templateObject4135;
    var _templateObject5107;
    var _templateObject691;
    function _taggedTemplateLiteral104(e, t) {
      return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
    }
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.lovebugsFactory = lovebugsFactory;
    var libram_1 = (init_dist(), __toCommonJS(dist_exports));
    var lib_1 = require_lib2();
    var LovebugTargets = [
      // exclude barf mountain because we spend most of our turns there anyway
      {
        element: "cold",
        location: (0, libram_1.$location)(_templateObject690 || (_templateObject690 = _taggedTemplateLiteral104(["VYKEA"]))),
        currency: (0, libram_1.$item)(_templateObject2172 || (_templateObject2172 = _taggedTemplateLiteral104(["Wal-Mart gift certificate"])))
      },
      {
        element: "sleaze",
        location: (0, libram_1.$location)(_templateObject3157 || (_templateObject3157 = _taggedTemplateLiteral104(["The Fun-Guy Mansion"]))),
        currency: (0, libram_1.$item)(_templateObject4135 || (_templateObject4135 = _taggedTemplateLiteral104(["Beach Buck"])))
      },
      {
        element: "spooky",
        location: (0, libram_1.$location)(_templateObject5107 || (_templateObject5107 = _taggedTemplateLiteral104(["The Deep Dark Jungle"]))),
        currency: (0, libram_1.$item)(_templateObject691 || (_templateObject691 = _taggedTemplateLiteral104(["Coinspiracy"])))
      }
    ];
    function lovebugsFactory(type, _locationSkiplist, options) {
      if ((0, libram_1.get)("lovebugsUnlocked") && type !== "freerun") {
        return LovebugTargets.filter(function(t) {
          return (0, libram_1.realmAvailable)(t.element);
        }).map(function(t) {
          return new lib_1.WandererTarget("Lovebugs ".concat(t.location), t.location, options.itemValue(t.currency) * 0.05);
        });
      }
      return [];
    }
  }
});

// node_modules/garbo-lib/dist/wanderer/freefight.js
var require_freefight = __commonJS({
  "node_modules/garbo-lib/dist/wanderer/freefight.js": function(exports2) {
    "use strict";
    var _templateObject690;
    function _toConsumableArray41(r) {
      return _arrayWithoutHoles41(r) || _iterableToArray41(r) || _unsupportedIterableToArray57(r) || _nonIterableSpread41();
    }
    function _nonIterableSpread41() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _iterableToArray41(r) {
      if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
    }
    function _arrayWithoutHoles41(r) {
      if (Array.isArray(r)) return _arrayLikeToArray57(r);
    }
    function _createForOfIteratorHelper27(r, e) {
      var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
      if (!t) {
        if (Array.isArray(r) || (t = _unsupportedIterableToArray57(r)) || e && r && "number" == typeof r.length) {
          t && (r = t);
          var _n = 0, F = function F2() {
          };
          return { s: F, n: function n() {
            return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
          }, e: function e2(r2) {
            throw r2;
          }, f: F };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      var o, a = true, u = false;
      return { s: function s() {
        t = t.call(r);
      }, n: function n() {
        var r2 = t.next();
        return a = r2.done, r2;
      }, e: function e2(r2) {
        u = true, o = r2;
      }, f: function f() {
        try {
          a || null == t.return || t.return();
        } finally {
          if (u) throw o;
        }
      } };
    }
    function _unsupportedIterableToArray57(r, a) {
      if (r) {
        if ("string" == typeof r) return _arrayLikeToArray57(r, a);
        var t = {}.toString.call(r).slice(8, -1);
        return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray57(r, a) : void 0;
      }
    }
    function _arrayLikeToArray57(r, a) {
      (null == a || a > r.length) && (a = r.length);
      for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
      return n;
    }
    function _taggedTemplateLiteral104(e, t) {
      return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
    }
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.freefightFactory = freefightFactory;
    var kolmafia_1 = require("kolmafia");
    var libram_1 = (init_dist(), __toCommonJS(dist_exports));
    var lib_1 = require_lib2();
    function averageYrValue(location7, forceItemDrops, options) {
      var badAttributes = ["LUCKY", "ULTRARARE", "BOSS"];
      var rates = (0, kolmafia_1.appearanceRates)(location7);
      var monsters = (0, kolmafia_1.getMonsters)(location7).filter(function(m) {
        return !badAttributes.some(function(s) {
          return m.attributes.includes(s);
        }) && rates[m.name] > 0;
      });
      var canDuplicate = libram_1.SourceTerminal.have() && libram_1.SourceTerminal.duplicateUsesRemaining() > 0;
      var canMctwist = (0, libram_1.have)((0, libram_1.$item)(_templateObject690 || (_templateObject690 = _taggedTemplateLiteral104(["pro skateboard"])))) && !(0, libram_1.get)("_epicMcTwistUsed");
      var possibleDuplicateFactor = Math.pow(2, [canDuplicate, canMctwist].filter(Boolean).length);
      if (monsters.length === 0) {
        return 0;
      } else {
        return (0, libram_1.sum)(monsters, function(m) {
          var items = (0, kolmafia_1.itemDropsArray)(m).filter(function(drop) {
            return ["", "n"].includes(drop.type);
          });
          var duplicateFactor = !m.attributes.includes("NOCOPY") ? possibleDuplicateFactor : 1;
          var meatDrop = (0, libram_1.clamp)((m.minMeat + m.maxMeat) / 2, 0, 1e3);
          var itemDrop = duplicateFactor * (0, libram_1.sum)(items, function(drop) {
            var yrRate = (drop.type === "" && forceItemDrops ? 100 : drop.rate) / 100;
            return yrRate * options.itemValue(drop.drop);
          });
          return itemDrop + meatDrop + (0, lib_1.bofaValue)(options, m);
        }) / monsters.length;
      }
    }
    function monsterValues(forceItemDrops, options) {
      var values = /* @__PURE__ */ new Map();
      var _iterator = _createForOfIteratorHelper27(kolmafia_1.Location.all().filter(function(l) {
        return (0, lib_1.canAdventureOrUnlock)(l) && !(0, lib_1.underwater)(l);
      })), _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var location7 = _step.value;
          values.set(location7, averageYrValue(location7, forceItemDrops, options) + options.freeFightExtraValue(location7));
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      return values;
    }
    function freefightFactory(type, locationSkiplist, options) {
      if (type === "yellow ray" || type === "freefight") {
        var validLocations = kolmafia_1.Location.all().filter(function(location7) {
          return (0, lib_1.canWander)(location7, "yellow ray") && (0, lib_1.canAdventureOrUnlock)(location7);
        });
        var locationValues = monsterValues(type === "yellow ray", options);
        var bestZones = new Set(validLocations.length > 0 ? [(0, libram_1.maxBy)(validLocations, function(l) {
          var _locationValues$get;
          return (_locationValues$get = locationValues.get(l)) !== null && _locationValues$get !== void 0 ? _locationValues$get : 0;
        })] : []);
        var _iterator2 = _createForOfIteratorHelper27(lib_1.UnlockableZones), _step2;
        try {
          var _loop = function _loop2() {
            var unlockableZone = _step2.value;
            var extraLocations = kolmafia_1.Location.all().filter(function(l) {
              return l.zone === unlockableZone.zone && !locationSkiplist.includes(l);
            });
            if (extraLocations.length > 0) {
              bestZones.add((0, libram_1.maxBy)(extraLocations, function(l) {
                var _locationValues$get3;
                return (_locationValues$get3 = locationValues.get(l)) !== null && _locationValues$get3 !== void 0 ? _locationValues$get3 : 0;
              }));
            }
          };
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
            _loop();
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
        if (bestZones.size > 0) {
          return _toConsumableArray41(bestZones).map(function(l) {
            var _locationValues$get2;
            return new lib_1.WandererTarget("Yellow Ray ".concat(l), l, (_locationValues$get2 = locationValues.get(l)) !== null && _locationValues$get2 !== void 0 ? _locationValues$get2 : 0);
          });
        }
      }
      return [];
    }
  }
});

// node_modules/garbo-lib/dist/wanderer/eightbit.js
var require_eightbit = __commonJS({
  "node_modules/garbo-lib/dist/wanderer/eightbit.js": function(exports2) {
    "use strict";
    var _templateObject690;
    var _templateObject2172;
    var _templateObject3157;
    var _templateObject4135;
    var _templateObject5107;
    var _templateObject691;
    function _taggedTemplateLiteral104(e, t) {
      return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
    }
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.TREASURE_HOUSE_FAT_LOOT_TOKEN_COST = exports2.bonusColor = void 0;
    exports2.eightbitFactory = eightbitFactory;
    var kolmafia_1 = require("kolmafia");
    var lib_1 = require_lib2();
    var libram_1 = (init_dist(), __toCommonJS(dist_exports));
    exports2.bonusColor = ["black", "blue", "green", "red"];
    exports2.TREASURE_HOUSE_FAT_LOOT_TOKEN_COST = 2e4;
    var locationColor = {
      black: (0, libram_1.$location)(_templateObject690 || (_templateObject690 = _taggedTemplateLiteral104(["Vanya's Castle"]))),
      blue: (0, libram_1.$location)(_templateObject2172 || (_templateObject2172 = _taggedTemplateLiteral104(["Megalo-City"]))),
      green: (0, libram_1.$location)(_templateObject3157 || (_templateObject3157 = _taggedTemplateLiteral104(["Hero's Field"]))),
      red: (0, libram_1.$location)(_templateObject4135 || (_templateObject4135 = _taggedTemplateLiteral104(["The Fungus Plains"])))
    };
    function value(color, options) {
      var denominator = options.ascend ? (0, libram_1.get)("8BitScore") - exports2.TREASURE_HOUSE_FAT_LOOT_TOKEN_COST : exports2.TREASURE_HOUSE_FAT_LOOT_TOKEN_COST;
      return options.itemValue((0, libram_1.$item)(_templateObject5107 || (_templateObject5107 = _taggedTemplateLiteral104(["fat loot token"])))) * (0, kolmafia_1.eightBitPoints)(locationColor[color]) / denominator;
    }
    function eightbitFactory(type, locationSkiplist, options) {
      if ((0, libram_1.have)((0, libram_1.$item)(_templateObject691 || (_templateObject691 = _taggedTemplateLiteral104(["continuum transfunctioner"])))) && !["backup", "freerun"].includes(type) && (0, libram_1.get)("8BitScore") < exports2.TREASURE_HOUSE_FAT_LOOT_TOKEN_COST) {
        return exports2.bonusColor.map(function(color) {
          return new lib_1.WandererTarget("8-bit (".concat(color, ")"), locationColor[color], value(color, options));
        }).filter(function(t) {
          return !locationSkiplist.includes(t.location);
        });
      }
      return [];
    }
  }
});

// node_modules/garbo-lib/dist/wanderer/gingerbreadcity.js
var require_gingerbreadcity = __commonJS({
  "node_modules/garbo-lib/dist/wanderer/gingerbreadcity.js": function(exports2) {
    "use strict";
    var _templateObject690;
    var _templateObject2172;
    var _templateObject3157;
    function _taggedTemplateLiteral104(e, t) {
      return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
    }
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.gingerbreadFactory = gingerbreadFactory;
    var kolmafia_1 = require("kolmafia");
    var lib_1 = require_lib2();
    var libram_1 = (init_dist(), __toCommonJS(dist_exports));
    function gingerbreadFactory(type, _locationSkiplist, options) {
      if (type !== "wanderer" && libram_1.GingerBread.available() && libram_1.GingerBread.minutesToMidnight() !== 0 && libram_1.GingerBread.minutesToNoon() !== 0 && (libram_1.GingerBread.minutesToMidnight() > 0 && ((0, kolmafia_1.availableAmount)((0, libram_1.$item)(_templateObject690 || (_templateObject690 = _taggedTemplateLiteral104(["sprinkles"])))) > 5 || (0, kolmafia_1.haveOutfit)("gingerbread best")) || libram_1.GingerBread.minutesToNoon() > 0)) {
        var turnsUntilNextNC = libram_1.GingerBread.minutesToNoon() > 0 ? libram_1.GingerBread.minutesToNoon() : libram_1.GingerBread.minutesToMidnight();
        return [new lib_1.WandererTarget(
          "Gingerbread Minutes",
          (0, libram_1.$location)(_templateObject2172 || (_templateObject2172 = _taggedTemplateLiteral104(["Gingerbread Civic Center"]))),
          // 50 value is arbitrary until we have proper valuation of our options from Midnight and Noons NCs
          (0, lib_1.wandererTurnsAvailableToday)(options, (0, libram_1.$location)(_templateObject3157 || (_templateObject3157 = _taggedTemplateLiteral104(["Gingerbread Civic Center"]))), false) > turnsUntilNextNC ? 50 : 0
        )];
      }
      return [];
    }
  }
});

// node_modules/garbo-lib/dist/wanderer/index.js
var require_wanderer = __commonJS({
  "node_modules/garbo-lib/dist/wanderer/index.js": function(exports2) {
    "use strict";
    function _typeof38(o) {
      "@babel/helpers - typeof";
      return _typeof38 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof38(o);
    }
    var _templateObject690;
    var _templateObject2172;
    var _templateObject3157;
    var _templateObject4135;
    var _templateObject5107;
    var _templateObject691;
    var _templateObject775;
    var _templateObject858;
    var _templateObject947;
    var _templateObject040;
    var _templateObject1150;
    var _templateObject1036;
    var _templateObject1151;
    var _templateObject1234;
    var _templateObject1332;
    var _templateObject1431;
    var _templateObject1530;
    var _templateObject1630;
    var _templateObject1727;
    var _templateObject1826;
    var _templateObject1926;
    var _templateObject2025;
    var _templateObject2173;
    var _templateObject2228;
    var _templateObject2326;
    var _templateObject2424;
    var _templateObject2522;
    var _templateObject2621;
    var _templateObject2719;
    var _templateObject2819;
    var _templateObject2919;
    var _templateObject3018;
    var _templateObject3158;
    var _templateObject3220;
    function _classCallCheck27(a, n) {
      if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties27(e, r) {
      for (var t = 0; t < r.length; t++) {
        var o = r[t];
        o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e, _toPropertyKey38(o.key), o);
      }
    }
    function _createClass27(e, r, t) {
      return r && _defineProperties27(e.prototype, r), t && _defineProperties27(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
    }
    function _defineProperty33(e, r, t) {
      return (r = _toPropertyKey38(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
    }
    function _toPropertyKey38(t) {
      var i = _toPrimitive38(t, "string");
      return "symbol" == _typeof38(i) ? i : i + "";
    }
    function _toPrimitive38(t, r) {
      if ("object" != _typeof38(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof38(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    function _toConsumableArray41(r) {
      return _arrayWithoutHoles41(r) || _iterableToArray41(r) || _unsupportedIterableToArray57(r) || _nonIterableSpread41();
    }
    function _nonIterableSpread41() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _iterableToArray41(r) {
      if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
    }
    function _arrayWithoutHoles41(r) {
      if (Array.isArray(r)) return _arrayLikeToArray57(r);
    }
    function _createForOfIteratorHelper27(r, e) {
      var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
      if (!t) {
        if (Array.isArray(r) || (t = _unsupportedIterableToArray57(r)) || e && r && "number" == typeof r.length) {
          t && (r = t);
          var _n = 0, F = function F2() {
          };
          return { s: F, n: function n() {
            return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
          }, e: function e2(r2) {
            throw r2;
          }, f: F };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      var o, a = true, u = false;
      return { s: function s() {
        t = t.call(r);
      }, n: function n() {
        var r2 = t.next();
        return a = r2.done, r2;
      }, e: function e2(r2) {
        u = true, o = r2;
      }, f: function f() {
        try {
          a || null == t.return || t.return();
        } finally {
          if (u) throw o;
        }
      } };
    }
    function _unsupportedIterableToArray57(r, a) {
      if (r) {
        if ("string" == typeof r) return _arrayLikeToArray57(r, a);
        var t = {}.toString.call(r).slice(8, -1);
        return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray57(r, a) : void 0;
      }
    }
    function _arrayLikeToArray57(r, a) {
      (null == a || a > r.length) && (a = r.length);
      for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
      return n;
    }
    function _taggedTemplateLiteral104(e, t) {
      return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
    }
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.WandererManager = void 0;
    var kolmafia_1 = require("kolmafia");
    var libram_1 = (init_dist(), __toCommonJS(dist_exports));
    var guzzlr_1 = require_guzzlr();
    var lib_1 = require_lib2();
    var lovebugs_1 = require_lovebugs();
    var freefight_1 = require_freefight();
    var eightbit_1 = require_eightbit();
    var gingerbreadcity_1 = require_gingerbreadcity();
    function sober2() {
      return (0, kolmafia_1.myInebriety)() <= (0, kolmafia_1.inebrietyLimit)() + ((0, kolmafia_1.myFamiliar)() === (0, libram_1.$familiar)(_templateObject690 || (_templateObject690 = _taggedTemplateLiteral104(["Stooper"]))) ? -1 : 0);
    }
    var wanderFactories = [lib_1.defaultFactory, freefight_1.freefightFactory, lovebugs_1.lovebugsFactory, guzzlr_1.guzzlrFactory, eightbit_1.eightbitFactory, gingerbreadcity_1.gingerbreadFactory];
    function bestWander(type, locationSkiplist, nameSkiplist, options) {
      var possibleLocations = /* @__PURE__ */ new Map();
      for (var _i = 0, _wanderFactories = wanderFactories; _i < _wanderFactories.length; _i++) {
        var wanderFactory = _wanderFactories[_i];
        var wanderTargets = wanderFactory(type, locationSkiplist, options);
        var _iterator = _createForOfIteratorHelper27(wanderTargets), _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done; ) {
            var wanderTarget = _step.value;
            if (!nameSkiplist.includes(wanderTarget.name) && !locationSkiplist.includes(wanderTarget.location) && (0, lib_1.canWander)(wanderTarget.location, type)) {
              var _possibleLocations$ge;
              var wandererLocation = (_possibleLocations$ge = possibleLocations.get(wanderTarget.location)) !== null && _possibleLocations$ge !== void 0 ? _possibleLocations$ge : {
                location: wanderTarget.location,
                targets: [],
                value: 0
              };
              wandererLocation.targets = [].concat(_toConsumableArray41(wandererLocation.targets), [wanderTarget]);
              wandererLocation.value += wanderTarget.value;
              possibleLocations.set(wandererLocation.location, wandererLocation);
            }
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      }
      if (possibleLocations.size === 0) {
        throw "Could not determine a wander target!";
      }
      return (0, libram_1.maxBy)(_toConsumableArray41(possibleLocations.values()), "value");
    }
    function wanderWhere(options, type) {
      var nameSkiplist = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
      var locationSkiplist = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : [];
      var candidate = bestWander(type, locationSkiplist, nameSkiplist, options);
      var failed = candidate.targets.filter(function(target) {
        return !target.prepareTurn();
      });
      var badLocation = !(0, lib_1.canAdventureOrUnlock)(candidate.location) || !(0, lib_1.unlock)(candidate.location, candidate.value) || !(0, lib_1.canWander)(candidate.location, type) ? [candidate.location] : [];
      if (failed.length > 0 || badLocation.length > 0) {
        return wanderWhere(options, type, [].concat(_toConsumableArray41(nameSkiplist), _toConsumableArray41(failed.map(function(target) {
          return target.name;
        }))), [].concat(_toConsumableArray41(locationSkiplist), badLocation));
      } else {
        var targets = candidate.targets.map(function(t) {
          return t.name;
        }).join("; ");
        var value = candidate.value.toFixed(2);
        (0, kolmafia_1.print)("Wandering at ".concat(candidate.location, " for expected value ").concat(value, " (").concat(targets, ")"), (0, kolmafia_1.isDarkMode)() ? "yellow" : "blue");
        return candidate.location;
      }
    }
    var WandererManager = /* @__PURE__ */ function() {
      function WandererManager2(_options) {
        _classCallCheck27(this, WandererManager2);
        _defineProperty33(this, "unsupportedChoices", /* @__PURE__ */ new Map([
          [(0, libram_1.$location)(_templateObject2172 || (_templateObject2172 = _taggedTemplateLiteral104(["The Spooky Forest"]))), {
            502: 2,
            505: 2
          }],
          [(0, libram_1.$location)(_templateObject3157 || (_templateObject3157 = _taggedTemplateLiteral104(["Guano Junction"]))), {
            1427: 1
          }],
          [(0, libram_1.$location)(_templateObject4135 || (_templateObject4135 = _taggedTemplateLiteral104(["The Hidden Apartment Building"]))), {
            780: 6,
            1578: 6
          }],
          [(0, libram_1.$location)(_templateObject5107 || (_templateObject5107 = _taggedTemplateLiteral104(["The Black Forest"]))), {
            923: 1,
            924: 1
          }],
          [(0, libram_1.$location)(_templateObject691 || (_templateObject691 = _taggedTemplateLiteral104(["LavaCo\u2122 Lamp Factory"]))), {
            1091: 9
          }],
          [(0, libram_1.$location)(_templateObject775 || (_templateObject775 = _taggedTemplateLiteral104(["The Haunted Laboratory"]))), {
            884: 6
          }],
          [(0, libram_1.$location)(_templateObject858 || (_templateObject858 = _taggedTemplateLiteral104(["The Haunted Nursery"]))), {
            885: 6
          }],
          [(0, libram_1.$location)(_templateObject947 || (_templateObject947 = _taggedTemplateLiteral104(["The Haunted Storage Room"]))), {
            886: 6
          }],
          [
            (0, libram_1.$location)(_templateObject040 || (_templateObject040 = _taggedTemplateLiteral104(["The Haunted Ballroom"]))),
            // Skip, and Choose currently playing song, or skip
            function() {
              return {
                90: 3,
                106: (0, libram_1.get)("lastQuartetRequest") || 4
              };
            }
          ],
          [(0, libram_1.$location)(_templateObject1150 || (_templateObject1150 = _taggedTemplateLiteral104(["The Haunted Library"]))), {
            163: 4,
            888: 5,
            889: 5
          }],
          [(0, libram_1.$location)(_templateObject1036 || (_templateObject1036 = _taggedTemplateLiteral104(["The Haunted Gallery"]))), {
            89: 6,
            91: 2
          }],
          [(0, libram_1.$location)(_templateObject1151 || (_templateObject1151 = _taggedTemplateLiteral104(["The Hidden Park"]))), {
            789: 6
          }],
          [(0, libram_1.$location)(_templateObject1234 || (_templateObject1234 = _taggedTemplateLiteral104(["A Mob of Zeppelin Protesters"]))), {
            1432: 1,
            856: 2,
            857: 3,
            858: 2
          }],
          [(0, libram_1.$location)(_templateObject1332 || (_templateObject1332 = _taggedTemplateLiteral104(["A-Boo Peak"]))), {
            1430: 2
          }],
          [(0, libram_1.$location)(_templateObject1431 || (_templateObject1431 = _taggedTemplateLiteral104(["Sloppy Seconds Diner"]))), {
            919: 6
          }],
          [(0, libram_1.$location)(_templateObject1530 || (_templateObject1530 = _taggedTemplateLiteral104(["VYKEA"]))), {
            1115: 6
          }],
          [(0, libram_1.$location)(_templateObject1630 || (_templateObject1630 = _taggedTemplateLiteral104(["The Ice Hotel"]))), function(options, valueOfTurn) {
            var valueOfCertificates = (0, libram_1.get)("_iceHotelRoomsRaided") ? 0 : options.itemValue((0, libram_1.$item)(_templateObject1727 || (_templateObject1727 = _taggedTemplateLiteral104(["Wal-Mart gift certificate"])))) * 3;
            return {
              1116: valueOfCertificates > valueOfTurn ? 5 : 6
            };
          }],
          [(0, libram_1.$location)(_templateObject1826 || (_templateObject1826 = _taggedTemplateLiteral104(["The Castle in the Clouds in the Sky (Basement)"]))), {
            669: 1,
            670: 4,
            671: 4
          }],
          [(0, libram_1.$location)(_templateObject1926 || (_templateObject1926 = _taggedTemplateLiteral104(["The Haunted Bedroom"]))), {
            876: 1,
            // old leather wallet, 500 meat
            877: 1,
            // old coin purse, 500 meat
            878: 1,
            // 400-600 meat
            879: 2,
            // grouchy spirit
            880: 2
            // a dumb 75 meat club
          }],
          [(0, libram_1.$location)(_templateObject2025 || (_templateObject2025 = _taggedTemplateLiteral104(["The Copperhead Club"]))), {
            855: 4
          }],
          [(0, libram_1.$location)(_templateObject2173 || (_templateObject2173 = _taggedTemplateLiteral104(["The Haunted Bathroom"]))), {
            882: 2
          }],
          // skip; it's the towel adventure but we don't want towels
          [(0, libram_1.$location)(_templateObject2228 || (_templateObject2228 = _taggedTemplateLiteral104(["The Castle in the Clouds in the Sky (Top Floor)"]))), {
            1431: 1,
            675: 4,
            // Go to Steampunk choice
            676: 4,
            // Go to Punk Rock choice
            677: 1,
            // Fight Steam Punk Giant
            678: 3
            // Go to Steampunk choice
          }],
          [(0, libram_1.$location)(_templateObject2326 || (_templateObject2326 = _taggedTemplateLiteral104(["The Castle in the Clouds in the Sky (Ground Floor)"]))), {
            672: 3,
            // Skip
            673: 3,
            // Skip
            674: 3,
            // Skip
            1026: 3
            // Skip
          }],
          [(0, libram_1.$location)(_templateObject2424 || (_templateObject2424 = _taggedTemplateLiteral104(["The Hidden Office Building"]))), {
            786: 6
          }],
          [(0, libram_1.$location)(_templateObject2522 || (_templateObject2522 = _taggedTemplateLiteral104(["Cobb's Knob Barracks"]))), {
            522: 2
          }],
          // skip
          [(0, libram_1.$location)(_templateObject2621 || (_templateObject2621 = _taggedTemplateLiteral104(["The Penultimate Fantasy Airship"]))), {
            178: 2,
            182: 1
          }],
          // Skip, and Fight random enemy
          [(0, libram_1.$location)(_templateObject2719 || (_templateObject2719 = _taggedTemplateLiteral104(["The Haiku Dungeon"]))), {
            297: 3
          }],
          // skip
          [(0, libram_1.$location)(_templateObject2819 || (_templateObject2819 = _taggedTemplateLiteral104(["Frat House"]))), {
            1425: 4
          }]
          // fight eXtreme Sports Orcs
        ]));
        _defineProperty33(this, "equipment", new Map([].concat(_toConsumableArray41(kolmafia_1.Location.all().filter(function(l) {
          return l.zone === "The 8-Bit Realm";
        }).map(function(l) {
          return [l, (0, libram_1.$items)(_templateObject2919 || (_templateObject2919 = _taggedTemplateLiteral104(["continuum transfunctioner"])))];
        })), [[(0, libram_1.$location)(_templateObject3018 || (_templateObject3018 = _taggedTemplateLiteral104(["Shadow Rift (The 8-Bit Realm)"]))), (0, libram_1.$items)(_templateObject3158 || (_templateObject3158 = _taggedTemplateLiteral104(["continuum transfunctioner"])))]])));
        _defineProperty33(this, "cacheKey", "");
        _defineProperty33(this, "targets", {});
        _defineProperty33(this, "options", void 0);
        this.options = _options;
      }
      return _createClass27(WandererManager2, [{
        key: "getTarget",
        value: function getTarget(wanderer) {
          var _this$targets, _ref2, _this$targets$_ref;
          var _ref = (0, lib_1.isDraggableFight)(wanderer) ? {
            draggableFight: wanderer,
            options: {}
          } : {
            draggableFight: wanderer.wanderer,
            options: wanderer
          }, draggableFight = _ref.draggableFight, options = _ref.options;
          var _options$drunkSafe = options.drunkSafe, drunkSafe = _options$drunkSafe === void 0 ? true : _options$drunkSafe, _options$allowEquipme = options.allowEquipment, allowEquipment = _options$allowEquipme === void 0 ? false : _options$allowEquipme;
          var newKey = "".concat((0, kolmafia_1.myTotalTurnsSpent)(), ";").concat((0, kolmafia_1.totalTurnsPlayed)(), ";").concat((0, libram_1.get)("familiarSweat"));
          if (this.cacheKey !== newKey) this.clear();
          this.cacheKey = newKey;
          var locationSkipList = allowEquipment ? [] : _toConsumableArray41(this.equipment.keys());
          return sober2() || !drunkSafe ? (_this$targets$_ref = (_this$targets = this.targets)[_ref2 = "".concat(draggableFight, ":").concat(allowEquipment)]) !== null && _this$targets$_ref !== void 0 ? _this$targets$_ref : _this$targets[_ref2] = wanderWhere(this.options, draggableFight, [], locationSkipList) : (0, libram_1.$location)(_templateObject3220 || (_templateObject3220 = _taggedTemplateLiteral104(["Drunken Stupor"])));
        }
        /**
         * Get choice map for the upcoming wander
         * @param target Description of the wander or location in which to wander
         * @param takeTurnForProfit Should the choices include any that would make a profit from your valueOfAdventure
         * @returns Map of choice numbers to decisions
         */
      }, {
        key: "getChoices",
        value: function getChoices(target) {
          var _this = this;
          var _this$options$valueOf, _this$unsupportedChoi;
          var takeTurnForProfit = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.options.takeTurnForProfit;
          var location7 = target instanceof kolmafia_1.Location ? target : this.getTarget(target);
          var valueOfTurn = takeTurnForProfit ? ((_this$options$valueOf = this.options.valueOfAdventure) !== null && _this$options$valueOf !== void 0 ? _this$options$valueOf : 0) + (0, libram_1.sum)((0, libram_1.getActiveEffects)(), function(e) {
            return _this.options.effectValue(e, 1);
          }) : Infinity;
          return (0, libram_1.undelay)((_this$unsupportedChoi = this.unsupportedChoices.get(location7)) !== null && _this$unsupportedChoi !== void 0 ? _this$unsupportedChoi : {}, this.options, valueOfTurn);
        }
      }, {
        key: "clear",
        value: function clear() {
          this.targets = {};
        }
      }, {
        key: "getEquipment",
        value: function getEquipment(wanderer) {
          var _this$equipment$get;
          return (_this$equipment$get = this.equipment.get(this.getTarget(wanderer))) !== null && _this$equipment$get !== void 0 ? _this$equipment$get : [];
        }
      }]);
    }();
    exports2.WandererManager = WandererManager;
  }
});

// node_modules/garbo-lib/dist/resources/lib.js
var require_lib3 = __commonJS({
  "node_modules/garbo-lib/dist/resources/lib.js": function(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.DEFAULT_VALUE_FUNCTIONS = void 0;
    var value_1 = require_value();
    exports2.DEFAULT_VALUE_FUNCTIONS = (0, value_1.makeValue)();
  }
});

// node_modules/garbo-lib/dist/resources/autumnaton.js
var require_autumnaton = __commonJS({
  "node_modules/garbo-lib/dist/resources/autumnaton.js": function(exports2) {
    "use strict";
    var _templateObject690;
    var _templateObject2172;
    var _templateObject3157;
    var _templateObject4135;
    var _templateObject5107;
    function _typeof38(o) {
      "@babel/helpers - typeof";
      return _typeof38 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof38(o);
    }
    function _toConsumableArray41(r) {
      return _arrayWithoutHoles41(r) || _iterableToArray41(r) || _unsupportedIterableToArray57(r) || _nonIterableSpread41();
    }
    function _nonIterableSpread41() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray57(r, a) {
      if (r) {
        if ("string" == typeof r) return _arrayLikeToArray57(r, a);
        var t = {}.toString.call(r).slice(8, -1);
        return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray57(r, a) : void 0;
      }
    }
    function _iterableToArray41(r) {
      if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
    }
    function _arrayWithoutHoles41(r) {
      if (Array.isArray(r)) return _arrayLikeToArray57(r);
    }
    function _arrayLikeToArray57(r, a) {
      (null == a || a > r.length) && (a = r.length);
      for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
      return n;
    }
    function _taggedTemplateLiteral104(e, t) {
      return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
    }
    function _classCallCheck27(a, n) {
      if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties27(e, r) {
      for (var t = 0; t < r.length; t++) {
        var o = r[t];
        o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e, _toPropertyKey38(o.key), o);
      }
    }
    function _createClass27(e, r, t) {
      return r && _defineProperties27(e.prototype, r), t && _defineProperties27(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
    }
    function _defineProperty33(e, r, t) {
      return (r = _toPropertyKey38(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
    }
    function _toPropertyKey38(t) {
      var i = _toPrimitive38(t, "string");
      return "symbol" == _typeof38(i) ? i : i + "";
    }
    function _toPrimitive38(t, r) {
      if ("object" != _typeof38(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof38(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.AutumnAtonManager = void 0;
    var kolmafia_1 = require("kolmafia");
    var lib_1 = require_lib3();
    var libram_1 = (init_dist(), __toCommonJS(dist_exports));
    var AutumnAtonManager = /* @__PURE__ */ function() {
      function AutumnAtonManager2(_ref) {
        var _this = this;
        var averageItemValue = _ref.averageItemValue, estimatedTurns = _ref.estimatedTurns, estimatedTurnsTomorrow = _ref.estimatedTurnsTomorrow;
        _classCallCheck27(this, AutumnAtonManager2);
        _defineProperty33(this, "averageItemValue", lib_1.DEFAULT_VALUE_FUNCTIONS.averageValue);
        _defineProperty33(this, "estimatedTurns", kolmafia_1.myAdventures);
        _defineProperty33(this, "estimatedTurnsTomorrow", function() {
          return 0;
        });
        _defineProperty33(this, "bestLocation", function(locations) {
          return (0, libram_1.maxBy)(_this.bestLocationsByUpgrade(locations), function(it) {
            return _this.averageValue(it);
          });
        });
        if (averageItemValue) this.averageItemValue = averageItemValue;
        if (estimatedTurns) this.estimatedTurns = estimatedTurns;
        if (estimatedTurnsTomorrow) {
          this.estimatedTurnsTomorrow = estimatedTurnsTomorrow;
        }
      }
      return _createClass27(AutumnAtonManager2, [{
        key: "seasonalItemValue",
        value: function seasonalItemValue(location7, seasonalOverride) {
          var _libram_1$AutumnAton$;
          var autumnItems = (0, libram_1.$items)(_templateObject690 || (_templateObject690 = _taggedTemplateLiteral104(["autumn leaf, AutumnFest ale, autumn breeze, autumn dollar, autumn years wisdom"])));
          var avgValueOfRandomAutumnItem = this.averageItemValue.apply(this, _toConsumableArray41(autumnItems));
          var autumnMeltables = (0, libram_1.$items)(_templateObject2172 || (_templateObject2172 = _taggedTemplateLiteral104(["autumn debris shield, autumn leaf pendant, autumn sweater-weather sweater"])));
          var autumnItem = (_libram_1$AutumnAton$ = libram_1.AutumnAton.getUniques(location7)) === null || _libram_1$AutumnAton$ === void 0 ? void 0 : _libram_1$AutumnAton$.item;
          var seasonalItemDrops = seasonalOverride !== null && seasonalOverride !== void 0 ? seasonalOverride : libram_1.AutumnAton.seasonalItems();
          if (autumnItem) {
            return (seasonalItemDrops > 1 ? avgValueOfRandomAutumnItem : 0) + (autumnMeltables.includes(autumnItem) ? (
              // If we already have the meltable, then we get a random item, else value at 0
              (0, kolmafia_1.availableAmount)(autumnItem) > 0 ? avgValueOfRandomAutumnItem : 0
            ) : this.averageItemValue(autumnItem));
          } else {
            return seasonalItemDrops > 1 ? avgValueOfRandomAutumnItem : 0;
          }
        }
      }, {
        key: "averageValue",
        value: function averageValue(location7, acuityOverride, slotOverride) {
          var _this = this;
          if (location7 === (0, libram_1.$location)(_templateObject3157 || (_templateObject3157 = _taggedTemplateLiteral104(["Shadow Rift"])))) {
            (0, kolmafia_1.setLocation)((0, libram_1.$location)(_templateObject4135 || (_templateObject4135 = _taggedTemplateLiteral104(["Shadow Rift"]))));
          }
          var rates = (0, kolmafia_1.appearanceRates)(location7);
          var monsters = (0, kolmafia_1.getMonsters)(location7).filter(function(m) {
            return !AutumnAtonManager2.badAttributes.some(function(s) {
              return m.attributes.includes(s);
            }) && rates[m.name] > 0;
          });
          if (monsters.length === 0) {
            return this.seasonalItemValue(location7);
          } else {
            var maximumDrops = slotOverride !== null && slotOverride !== void 0 ? slotOverride : libram_1.AutumnAton.zoneItems();
            var acuityCutoff = 20 - (acuityOverride !== null && acuityOverride !== void 0 ? acuityOverride : libram_1.AutumnAton.visualAcuity()) * 5;
            var validDrops = monsters.flatMap(function(m) {
              return (0, kolmafia_1.itemDropsArray)(m);
            }).map(function(_ref2) {
              var rate = _ref2.rate, type = _ref2.type, drop = _ref2.drop;
              return {
                value: !["c", "0", "a"].includes(type) ? _this.averageItemValue(drop) : 0,
                preAcuityExpectation: ["c", "0", ""].includes(type) ? 2 * rate / 100 : 0,
                postAcuityExpectation: rate >= acuityCutoff && ["c", "0", ""].includes(type) ? 8 * rate / 100 : 0
              };
            });
            var overallExpectedDropQuantity = (0, libram_1.sum)(validDrops, function(_ref3) {
              var preAcuityExpectation = _ref3.preAcuityExpectation, postAcuityExpectation = _ref3.postAcuityExpectation;
              return preAcuityExpectation + postAcuityExpectation;
            });
            var expectedCollectionValue = (0, libram_1.sum)(validDrops, function(_ref4) {
              var value = _ref4.value, preAcuityExpectation = _ref4.preAcuityExpectation, postAcuityExpectation = _ref4.postAcuityExpectation;
              var adjustedDropAmount = (preAcuityExpectation + postAcuityExpectation) * Math.min(1, maximumDrops / overallExpectedDropQuantity);
              return adjustedDropAmount * value;
            });
            return this.seasonalItemValue(location7) + expectedCollectionValue;
          }
        }
      }, {
        key: "expectedRemainingExpeditions",
        value: function expectedRemainingExpeditions() {
          var legs2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : libram_1.AutumnAton.legs();
          var availableAutumnatonTurns = this.estimatedTurns() - libram_1.AutumnAton.turnsLeft() + this.estimatedTurnsTomorrow();
          var quests2 = (0, libram_1.get)("_autumnatonQuests");
          var legOffsetFactor = 11 * Math.max(quests2 - legs2 - 1, 0);
          return Math.floor(Math.sqrt(Math.pow(quests2, 2) + 2 * (availableAutumnatonTurns - legOffsetFactor) / 11));
        }
      }, {
        key: "profitFromExtraAcuity",
        value: function profitFromExtraAcuity(bestLocationContainingUpgrade, bestLocationWithInstalledUpgrade) {
          return this.averageValue(bestLocationContainingUpgrade) + this.averageValue(bestLocationWithInstalledUpgrade) * Math.max(0, this.expectedRemainingExpeditions() - 1);
        }
      }, {
        key: "profitFromExtraLeg",
        value: function profitFromExtraLeg(bestLocationContainingUpgrade, bestLocationWithInstalledUpgrade) {
          return this.averageValue(bestLocationContainingUpgrade) + this.averageValue(bestLocationWithInstalledUpgrade) * Math.max(0, this.expectedRemainingExpeditions(libram_1.AutumnAton.legs() + 1) - 1);
        }
      }, {
        key: "profitFromExtraArm",
        value: function profitFromExtraArm(bestLocationContainingUpgrade, bestLocationWithInstalledUpgrade) {
          return this.averageValue(bestLocationContainingUpgrade) + this.averageValue(bestLocationWithInstalledUpgrade) * Math.max(0, this.expectedRemainingExpeditions() - 1);
        }
      }, {
        key: "profitFromExtraAutumnItem",
        value: function profitFromExtraAutumnItem(bestLocationContainingUpgrade, bestLocationWithInstalledUpgrade) {
          return this.averageValue(bestLocationContainingUpgrade) + (this.seasonalItemValue(bestLocationWithInstalledUpgrade) + this.averageValue(bestLocationWithInstalledUpgrade)) * Math.max(0, this.expectedRemainingExpeditions() - 1);
        }
      }, {
        key: "makeUpgradeValuator",
        value: function makeUpgradeValuator(fullLocations, currentBestLocation) {
          var _this = this;
          return function(upgrade2) {
            var upgradeLocations = fullLocations.filter(function(location7) {
              var _libram_1$AutumnAton$2;
              return ((_libram_1$AutumnAton$2 = libram_1.AutumnAton.getUniques(location7)) === null || _libram_1$AutumnAton$2 === void 0 ? void 0 : _libram_1$AutumnAton$2.upgrade) === upgrade2;
            });
            if (!upgradeLocations.length) {
              return {
                upgrade: upgrade2,
                profit: 0
              };
            }
            var bestLocationContainingUpgrade = (0, libram_1.maxBy)(upgradeLocations, function(l) {
              return _this.averageValue(l);
            });
            switch (upgrade2) {
              case "periscope":
              case "radardish": {
                var bestLocationWithInstalledUpgrade = (0, libram_1.maxBy)(fullLocations, function(loc) {
                  return _this.averageValue(loc, libram_1.AutumnAton.visualAcuity() + 1);
                });
                return {
                  upgrade: upgrade2,
                  profit: _this.profitFromExtraAcuity(bestLocationContainingUpgrade, bestLocationWithInstalledUpgrade)
                };
              }
              case "rightleg1":
              case "leftleg1": {
                return {
                  upgrade: upgrade2,
                  profit: _this.profitFromExtraLeg(bestLocationContainingUpgrade, currentBestLocation)
                };
              }
              case "rightarm1":
              case "leftarm1": {
                var _bestLocationWithInstalledUpgrade = (0, libram_1.maxBy)(fullLocations, function(loc) {
                  return _this.averageValue(loc, void 0, libram_1.AutumnAton.zoneItems() + 1);
                });
                return {
                  upgrade: upgrade2,
                  profit: _this.profitFromExtraArm(bestLocationContainingUpgrade, _bestLocationWithInstalledUpgrade)
                };
              }
              case "cowcatcher": {
                return {
                  upgrade: upgrade2,
                  profit: _this.profitFromExtraAutumnItem(bestLocationContainingUpgrade, currentBestLocation)
                };
              }
              default: {
                return {
                  upgrade: upgrade2,
                  profit: 0
                };
              }
            }
          };
        }
      }, {
        key: "bestLocationsByUpgrade",
        value: function bestLocationsByUpgrade(fullLocations) {
          var _this = this;
          var validLocations = fullLocations.filter(function(l) {
            return l.parent !== "Clan Basement" && !AutumnAtonManager2.locationBanlist.includes(l);
          });
          if (this.expectedRemainingExpeditions() < 1) {
            return validLocations;
          }
          var currentUpgrades2 = libram_1.AutumnAton.currentUpgrades();
          var acquirableUpgrades = AutumnAtonManager2.profitRelevantUpgrades.filter(function(upgrade2) {
            return !currentUpgrades2.includes(upgrade2);
          });
          if (acquirableUpgrades.length === 0) {
            return validLocations;
          }
          var currentBestLocation = (0, libram_1.maxBy)(validLocations, function(l) {
            return _this.averageValue(l);
          });
          var currentExpectedProfit = this.averageValue(currentBestLocation) * this.expectedRemainingExpeditions();
          var upgradeValuations = acquirableUpgrades.map(this.makeUpgradeValuator(validLocations, currentBestLocation));
          var _ref5 = (0, libram_1.maxBy)(upgradeValuations, "profit"), highestValueUpgrade = _ref5.upgrade, profitFromBestUpgrade = _ref5.profit;
          if (profitFromBestUpgrade > currentExpectedProfit) {
            var upgradeLocations = validLocations.filter(function(location7) {
              var _libram_1$AutumnAton$3;
              return ((_libram_1$AutumnAton$3 = libram_1.AutumnAton.getUniques(location7)) === null || _libram_1$AutumnAton$3 === void 0 ? void 0 : _libram_1$AutumnAton$3.upgrade) === highestValueUpgrade;
            });
            return upgradeLocations;
          } else {
            return validLocations;
          }
        }
      }]);
    }();
    _defineProperty33(AutumnAtonManager, "locationBanlist", (0, libram_1.$locations)(_templateObject5107 || (_templateObject5107 = _taggedTemplateLiteral104(["The Daily Dungeon"]))));
    _defineProperty33(AutumnAtonManager, "badAttributes", ["LUCKY", "ULTRARARE", "BOSS"]);
    _defineProperty33(AutumnAtonManager, "profitRelevantUpgrades", ["leftarm1", "leftleg1", "rightarm1", "rightleg1", "cowcatcher", "periscope", "radardish"]);
    exports2.AutumnAtonManager = AutumnAtonManager;
  }
});

// node_modules/garbo-lib/dist/resources/index.js
var require_resources = __commonJS({
  "node_modules/garbo-lib/dist/resources/index.js": function(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.AutumnAtonManager = void 0;
    var autumnaton_1 = require_autumnaton();
    Object.defineProperty(exports2, "AutumnAtonManager", {
      enumerable: true,
      get: function get4() {
        return autumnaton_1.AutumnAtonManager;
      }
    });
  }
});

// node_modules/garbo-lib/dist/index.js
var require_dist = __commonJS({
  "node_modules/garbo-lib/dist/index.js": function(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function get4() {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports2 && exports2.__exportStar || function(m, exports3) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports3, p)) __createBinding(exports3, m, p);
    };
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.WandererManager = exports2.makeValue = void 0;
    var value_1 = require_value();
    Object.defineProperty(exports2, "makeValue", {
      enumerable: true,
      get: function get4() {
        return value_1.makeValue;
      }
    });
    var wanderer_1 = require_wanderer();
    Object.defineProperty(exports2, "WandererManager", {
      enumerable: true,
      get: function get4() {
        return wanderer_1.WandererManager;
      }
    });
    __exportStar(require_resources(), exports2);
  }
});

// src/main.ts
var main_exports = {};
__export(main_exports, {
  main: function() {
    return main;
  }
});
module.exports = __toCommonJS(main_exports);

// node_modules/grimoire-kolmafia/dist/args.js
var import_kolmafia = require("kolmafia");
function _typeof(o) {
  "@babel/helpers - typeof";
  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof(o);
}
function _createForOfIteratorHelper(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t) {
    if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
      t && (r = t);
      var _n = 0, F = function F2() {
      };
      return { s: F, n: function n() {
        return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
      }, e: function e2(r2) {
        throw r2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o, a = true, u = false;
  return { s: function s() {
    t = t.call(r);
  }, n: function n() {
    var r2 = t.next();
    return a = r2.done, r2;
  }, e: function e2(r2) {
    u = true, o = r2;
  }, f: function f() {
    try {
      a || null == t.return || t.return();
    } finally {
      if (u) throw o;
    }
  } };
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function ownKeys(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty(e, r, t) {
  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
}
function _classCallCheck(a, n) {
  if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(e, r) {
  for (var t = 0; t < r.length; t++) {
    var o = r[t];
    o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e, _toPropertyKey(o.key), o);
  }
}
function _createClass(e, r, t) {
  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
}
function _toPropertyKey(t) {
  var i = _toPrimitive(t, "string");
  return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
  if ("object" != _typeof(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
var Args = /* @__PURE__ */ function() {
  function Args2() {
    _classCallCheck(this, Args2);
  }
  return _createClass(Args2, null, [{
    key: "custom",
    value: function custom(spec, _parser, valueHelpName) {
      var _a, _b;
      var raw_options = (_a = spec.options) === null || _a === void 0 ? void 0 : _a.map(function(option) {
        return option[0];
      });
      if ("default" in spec && raw_options) {
        if (!raw_options.includes(spec.default)) {
          throw "Invalid default value ".concat(spec.default);
        }
      }
      return _objectSpread(_objectSpread({}, spec), {}, {
        valueHelpName: valueHelpName,
        parser: function(value) {
          var parsed_value = _parser(value);
          if (parsed_value === void 0 || parsed_value instanceof ParseError) return parsed_value;
          if (raw_options) {
            if (!raw_options.includes(parsed_value)) {
              return new ParseError("received ".concat(value, " which was not in the allowed options"));
            }
          }
          return parsed_value;
        },
        options: (_b = spec.options) === null || _b === void 0 ? void 0 : _b.map(function(a) {
          return ["".concat(a[0]), a[1]];
        })
      });
    }
  }, {
    key: "arrayFromArg",
    value: function arrayFromArg(spec, argFromSpec) {
      var _a, _b, _c;
      var spec_without_default = _objectSpread({}, spec);
      if ("default" in spec_without_default) delete spec_without_default["default"];
      var arg = argFromSpec.call(this, spec_without_default);
      var raw_options = (_a = spec.options) === null || _a === void 0 ? void 0 : _a.map(function(option) {
        return option[0];
      });
      if ("default" in spec && raw_options) {
        var _iterator = _createForOfIteratorHelper(spec.default), _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done; ) {
            var default_entry = _step.value;
            if (!raw_options.includes(default_entry)) throw "Invalid default value ".concat(spec.default);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      }
      var separator = (_b = spec.separator) !== null && _b !== void 0 ? _b : ",";
      var arrayParser = function(value) {
        var values = value.split(separator);
        if (!spec.noTrim) values = values.map(function(v) {
          return v.trim();
        });
        var result = values.map(function(v) {
          return arg.parser(v);
        });
        var error2 = result.find(function(v) {
          return v instanceof ParseError;
        });
        if (error2) return error2;
        var failure_index = result.indexOf(void 0);
        if (failure_index !== -1) return new ParseError("components expected ".concat(arg.valueHelpName, " but could not parse ").concat(values[failure_index]));
        return result;
      };
      return _objectSpread(_objectSpread({}, spec), {}, {
        valueHelpName: "".concat(arg.valueHelpName).concat(separator, " ").concat(arg.valueHelpName).concat(separator, " ..."),
        parser: arrayParser,
        options: (_c = spec.options) === null || _c === void 0 ? void 0 : _c.map(function(a) {
          return ["".concat(a[0]), a[1]];
        })
      });
    }
  }, {
    key: "string",
    value: function string(spec) {
      return this.custom(spec, function(value) {
        return value;
      }, "TEXT");
    }
  }, {
    key: "strings",
    value: function strings(spec) {
      return this.arrayFromArg(spec, this.string);
    }
  }, {
    key: "number",
    value: function number(spec) {
      return this.custom(spec, function(value) {
        return isNaN(Number(value)) ? void 0 : Number(value);
      }, "NUMBER");
    }
  }, {
    key: "numbers",
    value: function numbers(spec) {
      return this.arrayFromArg(spec, this.number);
    }
  }, {
    key: "boolean",
    value: function boolean(spec) {
      return this.custom(spec, function(value) {
        if (value.toLowerCase() === "true") return true;
        if (value.toLowerCase() === "false") return false;
        return void 0;
      }, "BOOLEAN");
    }
  }, {
    key: "booleans",
    value: function booleans(spec) {
      return this.arrayFromArg(spec, this.boolean);
    }
  }, {
    key: "flag",
    value: function flag(spec) {
      return this.custom(spec, function(value) {
        if (value.toLowerCase() === "true") return true;
        if (value.toLowerCase() === "false") return false;
        return void 0;
      }, "FLAG");
    }
  }, {
    key: "class",
    value: function _class(spec) {
      return this.custom(spec, function(value) {
        var match = import_kolmafia.Class.get(value);
        if (match.toString().toUpperCase() === value.toString().toUpperCase()) return match;
        if (!isNaN(Number(value))) return match;
        return void 0;
      }, "CLASS");
    }
  }, {
    key: "classes",
    value: function classes(spec) {
      return this.arrayFromArg(spec, this.class);
    }
  }, {
    key: "effect",
    value: function effect2(spec) {
      return this.custom(spec, import_kolmafia.Effect.get, "EFFECT");
    }
  }, {
    key: "effects",
    value: function effects(spec) {
      return this.arrayFromArg(spec, this.effect);
    }
  }, {
    key: "familiar",
    value: function familiar10(spec) {
      return this.custom(spec, import_kolmafia.Familiar.get, "FAMILIAR");
    }
  }, {
    key: "familiars",
    value: function familiars(spec) {
      return this.arrayFromArg(spec, this.familiar);
    }
  }, {
    key: "item",
    value: function item15(spec) {
      return this.custom(spec, import_kolmafia.Item.get, "ITEM");
    }
  }, {
    key: "items",
    value: function items(spec) {
      return this.arrayFromArg(spec, this.item);
    }
  }, {
    key: "location",
    value: function location7(spec) {
      return this.custom(spec, import_kolmafia.Location.get, "LOCATION");
    }
  }, {
    key: "locations",
    value: function locations(spec) {
      return this.arrayFromArg(spec, this.location);
    }
  }, {
    key: "monster",
    value: function monster2(spec) {
      return this.custom(spec, import_kolmafia.Monster.get, "MONSTER");
    }
  }, {
    key: "monsters",
    value: function monsters(spec) {
      return this.arrayFromArg(spec, this.monster);
    }
  }, {
    key: "path",
    value: function path3(spec) {
      return this.custom(spec, import_kolmafia.Path.get, "PATH");
    }
  }, {
    key: "paths",
    value: function paths(spec) {
      return this.arrayFromArg(spec, this.path);
    }
  }, {
    key: "skill",
    value: function skill(spec) {
      return this.custom(spec, import_kolmafia.Skill.get, "SKILL");
    }
  }, {
    key: "skills",
    value: function skills4(spec) {
      return this.arrayFromArg(spec, this.skill);
    }
    /**
     * Create a group of arguments that will be printed separately in the help.
     *
     * Note that keys in the group must still be globally distinct.
     *
     * @param groupName The display name for the group in help.
     * @param args A JS object specifying the script arguments. Its values should
     *    be {@link Arg} objects (created by Args.string, Args.number, or others)
     *    or groups of arguments (created by Args.group).
     */
  }, {
    key: "group",
    value: function group(groupName, args2) {
      return {
        name: groupName,
        args: args2
      };
    }
    /**
     * Create a set of input arguments for a script.
     * @param scriptName Prefix for property names; often the name of the script.
     * @param scriptHelp Brief description of this script, for the help message.
     * @param args A JS object specifying the script arguments. Its values should
     *    be {@link Arg} objects (created by Args.string, Args.number, or others)
     *    or groups of arguments (created by Args.group).
     * @param options Config options for the args and arg parser.
     * @returns An object which can hold parsed argument values. The keys of this
     *    object are identical to the keys in 'args'.
     */
  }, {
    key: "create",
    value: function create3(scriptName, scriptHelp, args2, options) {
      _traverse(args2, function(keySpec, key) {
        if (key === "help" || keySpec.key === "help") throw "help is a reserved argument name";
      });
      var argsWithHelp = _objectSpread(_objectSpread({}, args2), {}, {
        help: this.flag({
          help: "Show this message and exit.",
          setting: ""
        })
      });
      var res = _objectSpread(_objectSpread({}, _loadDefaultValues(argsWithHelp)), {}, _defineProperty(_defineProperty(_defineProperty(_defineProperty({}, specSymbol, argsWithHelp), scriptSymbol, scriptName), scriptHelpSymbol, scriptHelp), optionsSymbol, options !== null && options !== void 0 ? options : {}));
      if (options === null || options === void 0 ? void 0 : options.positionalArgs) {
        var keys = [];
        var metadata = Args2.getMetadata(res);
        metadata.traverse(function(keySpec, key) {
          var _a;
          keys.push((_a = keySpec.key) !== null && _a !== void 0 ? _a : key);
        });
        var _iterator2 = _createForOfIteratorHelper(options.positionalArgs), _step2;
        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
            var arg = _step2.value;
            if (!keys.includes(arg)) throw "Unknown key for positional arg: ".concat(arg);
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
      }
      return res;
    }
    /**
     * Parse the command line input into the provided script arguments.
     * @param args An object to hold the parsed argument values, from Args.create(*).
     * @param command The command line input.
     * @param includeSettings If true, parse values from settings as well.
     */
  }, {
    key: "fill",
    value: function fill2(args2, command) {
      var includeSettings = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true;
      var _a;
      var metadata = Args2.getMetadata(args2);
      var keys = /* @__PURE__ */ new Set();
      var flags = /* @__PURE__ */ new Set();
      metadata.traverse(function(keySpec, key) {
        var _a2;
        var name = (_a2 = keySpec.key) !== null && _a2 !== void 0 ? _a2 : key;
        if (flags.has(name) || keys.has(name)) throw "Duplicate arg key ".concat(name, " is not allowed");
        if (keySpec.valueHelpName === "FLAG") flags.add(name);
        else keys.add(name);
      });
      if (includeSettings) {
        metadata.traverseAndMaybeSet(args2, function(keySpec, key) {
          var _a2, _b;
          var setting = (_a2 = keySpec.setting) !== null && _a2 !== void 0 ? _a2 : "".concat(metadata.scriptName, "_").concat((_b = keySpec.key) !== null && _b !== void 0 ? _b : key);
          if (setting === "") return void 0;
          var value_str = (0, import_kolmafia.getProperty)(setting);
          if (value_str === "") return void 0;
          return parseAndValidate(keySpec, "Setting ".concat(setting), value_str);
        });
      }
      if (command === void 0 || command === "") return;
      var parsed = new CommandParser(command, keys, flags, (_a = metadata.options.positionalArgs) !== null && _a !== void 0 ? _a : []).parse();
      metadata.traverseAndMaybeSet(args2, function(keySpec, key) {
        var _a2;
        var argKey = (_a2 = keySpec.key) !== null && _a2 !== void 0 ? _a2 : key;
        var value_str = parsed.get(argKey);
        if (value_str === void 0) return void 0;
        return parseAndValidate(keySpec, "Argument ".concat(argKey), value_str);
      });
    }
    /**
     * Parse command line input into a new set of script arguments.
     * @param scriptName Prefix to use in property names; typically the name of the script.
     * @param scriptHelp Brief description of this script, for the help message.
     * @param spec An object specifying the script arguments.
     * @param command The command line input.
     * @param options Config options for the args and arg parser.
     */
  }, {
    key: "parse",
    value: function parse(scriptName, scriptHelp, spec, command, options) {
      var args2 = this.create(scriptName, scriptHelp, spec, options);
      this.fill(args2, command);
      return args2;
    }
    /**
     * Print a description of the script arguments to the CLI.
     *
     * First, all top-level argument descriptions are printed in the order they
     * were defined. Afterwards, descriptions for groups of arguments are printed
     * in the order they were defined.
     *
     * @param args An object of parsed arguments, from Args.create(*).
     * @param maxOptionsToDisplay If given, do not list more than this many options for each arg.
     */
  }, {
    key: "showHelp",
    value: function showHelp(args2, maxOptionsToDisplay) {
      var _a;
      var metadata = Args2.getMetadata(args2);
      (0, import_kolmafia.printHtml)("".concat(metadata.scriptHelp));
      (0, import_kolmafia.printHtml)("");
      (0, import_kolmafia.printHtml)("<b>".concat((_a = metadata.options.defaultGroupName) !== null && _a !== void 0 ? _a : "Options", ":</b>"));
      metadata.traverse(function(arg, key) {
        var _a2, _b, _c, _d, _e;
        if (arg.hidden) return;
        var nameText = "<font color='".concat((0, import_kolmafia.isDarkMode)() ? "yellow" : "blue", "'>").concat((_a2 = arg.key) !== null && _a2 !== void 0 ? _a2 : key, "</font>");
        var valueText = arg.valueHelpName === "FLAG" ? "" : "<font color='purple'>".concat(arg.valueHelpName, "</font>");
        var helpText = (_b = arg.help) !== null && _b !== void 0 ? _b : "";
        var defaultText = "default" in arg ? "<font color='#888888'>[default: ".concat(arg.default, "]</font>") : "";
        var settingText = arg.setting === "" ? "" : "<font color='#888888'>[setting: ".concat((_c = arg.setting) !== null && _c !== void 0 ? _c : "".concat(metadata.scriptName, "_").concat((_d = arg.key) !== null && _d !== void 0 ? _d : key), "]</font>");
        (0, import_kolmafia.printHtml)("&nbsp;&nbsp;".concat([nameText, valueText, "-", helpText, defaultText, settingText].join(" ")));
        var valueOptions = (_e = arg.options) !== null && _e !== void 0 ? _e : [];
        if (valueOptions.length < (maxOptionsToDisplay !== null && maxOptionsToDisplay !== void 0 ? maxOptionsToDisplay : Number.MAX_VALUE)) {
          var _iterator3 = _createForOfIteratorHelper(valueOptions), _step3;
          try {
            for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
              var option = _step3.value;
              if (option.length === 1 || option[1] === void 0) {
                (0, import_kolmafia.printHtml)("&nbsp;&nbsp;&nbsp;&nbsp;<font color='blue'>".concat(nameText, "</font> ").concat(option[0]));
              } else {
                (0, import_kolmafia.printHtml)("&nbsp;&nbsp;&nbsp;&nbsp;<font color='blue'>".concat(nameText, "</font> ").concat(option[0], " - ").concat(option[1]));
              }
            }
          } catch (err) {
            _iterator3.e(err);
          } finally {
            _iterator3.f();
          }
        }
      }, function(group) {
        (0, import_kolmafia.printHtml)("");
        (0, import_kolmafia.printHtml)("<b>".concat(group.name, ":</b>"));
      });
    }
    /**
     * Load the metadata information for a set of arguments. Only for advanced usage.
     *
     * @param args A JS object specifying the script arguments. Its values should
     *    be {@link Arg} objects (created by Args.string, Args.number, or others)
     *    or groups of arguments (created by Args.group).
     * @returns A class containing metadata information.
     */
  }, {
    key: "getMetadata",
    value: function getMetadata(args2) {
      return new WrappedArgMetadata(args2);
    }
  }]);
}();
var ParseError = /* @__PURE__ */ _createClass(function ParseError2(message) {
  _classCallCheck(this, ParseError2);
  this.message = message;
});
var specSymbol = Symbol("spec");
var scriptSymbol = Symbol("script");
var scriptHelpSymbol = Symbol("scriptHelp");
var optionsSymbol = Symbol("options");
function parseAndValidate(arg, source, value) {
  var parsed_value;
  try {
    parsed_value = arg.parser(value);
  } catch (_a) {
    parsed_value = void 0;
  }
  if (parsed_value === void 0) throw "".concat(source, " expected ").concat(arg.valueHelpName, " but could not parse ").concat(value);
  if (parsed_value instanceof ParseError) throw "".concat(source, " ").concat(parsed_value.message);
  return parsed_value;
}
var WrappedArgMetadata = /* @__PURE__ */ function() {
  function WrappedArgMetadata2(args2) {
    _classCallCheck(this, WrappedArgMetadata2);
    this.spec = args2[specSymbol];
    this.scriptName = args2[scriptSymbol];
    this.scriptHelp = args2[scriptHelpSymbol];
    this.options = args2[optionsSymbol];
  }
  return _createClass(WrappedArgMetadata2, [{
    key: "loadDefaultValues",
    value: function loadDefaultValues() {
      return _loadDefaultValues(this.spec);
    }
    /**
     * Traverse the spec and possibly generate a value for each argument.
     *
     * @param result The object to hold the resulting argument values, typically
     *    the result of loadDefaultValues().
     * @param setTo A function to generate an argument value from each arg spec.
     *    If this function returns undefined, then the argument value is unchanged.
     */
  }, {
    key: "traverseAndMaybeSet",
    value: function traverseAndMaybeSet(result, setTo) {
      return _traverseAndMaybeSet(this.spec, result, setTo);
    }
    /**
     * Traverse the spec and call a method for each argument.
     *
     * @param process A function to call at each arg spec.
     */
  }, {
    key: "traverse",
    value: function traverse(process, onGroup) {
      return _traverse(this.spec, process, onGroup);
    }
  }]);
}();
function _loadDefaultValues(spec) {
  var result = {};
  for (var k in spec) {
    var argSpec = spec[k];
    if ("args" in argSpec) {
      result[k] = _loadDefaultValues(argSpec.args);
    } else {
      if ("default" in argSpec) result[k] = argSpec.default;
      else result[k] = void 0;
    }
  }
  return result;
}
function _traverseAndMaybeSet(spec, result, setTo) {
  var groups = [];
  for (var k in spec) {
    var argSpec = spec[k];
    if ("args" in argSpec) {
      groups.push([argSpec, k]);
    } else {
      var value = setTo(argSpec, k);
      if (value === void 0) continue;
      result[k] = value;
    }
  }
  for (var _i = 0, _groups = groups; _i < _groups.length; _i++) {
    var group_and_key = _groups[_i];
    _traverseAndMaybeSet(group_and_key[0].args, result[group_and_key[1]], setTo);
  }
}
function _traverse(spec, process, onGroup) {
  var groups = [];
  for (var k in spec) {
    var argSpec = spec[k];
    if ("args" in argSpec) {
      groups.push([argSpec, k]);
    } else {
      process(argSpec, k);
    }
  }
  for (var _i2 = 0, _groups2 = groups; _i2 < _groups2.length; _i2++) {
    var group_and_key = _groups2[_i2];
    onGroup === null || onGroup === void 0 ? void 0 : onGroup(group_and_key[0], group_and_key[1]);
    _traverse(group_and_key[0].args, process, onGroup);
  }
}
var CommandParser = /* @__PURE__ */ function() {
  function CommandParser2(command, keys, flags, positionalArgs) {
    _classCallCheck(this, CommandParser2);
    this.command = command;
    this.index = 0;
    this.keys = keys;
    this.flags = flags;
    this.positionalArgs = positionalArgs;
    this.positionalArgsParsed = 0;
  }
  return _createClass(CommandParser2, [{
    key: "parse",
    value: function parse() {
      var _a, _b, _c, _d;
      this.index = 0;
      var result = /* @__PURE__ */ new Map();
      while (!this.finished()) {
        var parsing_negative_flag = false;
        if (this.peek() === "!") {
          parsing_negative_flag = true;
          this.consume(["!"]);
        }
        var startIndex = this.index;
        var key = this.parseKey();
        if (result.has(key)) {
          throw "Duplicate key ".concat(key, " (first set to ").concat((_a = result.get(key)) !== null && _a !== void 0 ? _a : "", ")");
        }
        if (this.flags.has(key)) {
          result.set(key, parsing_negative_flag ? "false" : "true");
          if (this.peek() === "=") throw "Flag ".concat(key, " cannot be assigned a value");
          if (!this.finished()) this.consume([" "]);
          this.prevUnquotedKey = void 0;
        } else if (this.keys.has(key)) {
          this.consume(["=", " "]);
          var value = this.parseValue();
          if (["'", '"'].includes((_b = this.prev()) !== null && _b !== void 0 ? _b : "")) this.prevUnquotedKey = void 0;
          else this.prevUnquotedKey = key;
          if (!this.finished()) this.consume([" "]);
          result.set(key, value);
        } else if (this.positionalArgsParsed < this.positionalArgs.length && this.peek() !== "=") {
          var positionalKey = this.positionalArgs[this.positionalArgsParsed];
          this.positionalArgsParsed++;
          this.index = startIndex;
          var _value = this.parseValue();
          if (["'", '"'].includes((_c = this.prev()) !== null && _c !== void 0 ? _c : "")) this.prevUnquotedKey = void 0;
          else this.prevUnquotedKey = key;
          if (!this.finished()) this.consume([" "]);
          if (result.has(positionalKey)) throw "Cannot assign ".concat(_value, " to ").concat(positionalKey, " (positionally) since ").concat(positionalKey, " was already set to ").concat((_d = result.get(positionalKey)) !== null && _d !== void 0 ? _d : "");
          result.set(positionalKey, _value);
        } else {
          if (this.prevUnquotedKey && this.peek() !== "=") throw "Unknown argument: ".concat(key, " (if this should have been parsed as part of ").concat(this.prevUnquotedKey, ", you should surround the entire value in quotes)");
          else throw "Unknown argument: ".concat(key);
        }
      }
      return result;
    }
    /**
     * @returns True if the entire command has been parsed.
     */
  }, {
    key: "finished",
    value: function finished() {
      return this.index >= this.command.length;
    }
    /**
     * @returns The next character to parse, if it exists.
     */
  }, {
    key: "peek",
    value: function peek() {
      if (this.index >= this.command.length) return void 0;
      return this.command.charAt(this.index);
    }
    /**
     * @returns The character just parsed, if it exists.
     */
  }, {
    key: "prev",
    value: function prev() {
      if (this.index <= 0) return void 0;
      if (this.index >= this.command.length + 1) return void 0;
      return this.command.charAt(this.index - 1);
    }
    /**
     * Advance the internal marker over the next expected character.
     * Throws an error on unexpected characters.
     *
     * @param allowed Characters that are expected.
     */
  }, {
    key: "consume",
    value: function consume(allowed) {
      var _a;
      if (this.finished()) throw "Expected ".concat(allowed);
      if (allowed.includes((_a = this.peek()) !== null && _a !== void 0 ? _a : "")) {
        this.index += 1;
      }
    }
    /**
     * Find the next occurance of one of the provided characters, or the end of
     * the string if the characters never appear again.
     *
     * @param searchValue The characters to locate.
     */
  }, {
    key: "findNext",
    value: function findNext(searchValue) {
      var result = this.command.length;
      var _iterator4 = _createForOfIteratorHelper(searchValue), _step4;
      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
          var value = _step4.value;
          var index = this.command.indexOf(value, this.index);
          if (index !== -1 && index < result) result = index;
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }
      return result;
    }
    /**
     * Starting from the internal marker, parse a single key.
     * This also advances the internal marker.
     *
     * @returns The next key.
     */
  }, {
    key: "parseKey",
    value: function parseKey() {
      var keyEnd = this.findNext(["=", " "]);
      var key = this.command.substring(this.index, keyEnd);
      this.index = keyEnd;
      return key;
    }
    /**
     * Starting from the internal marker, parse a single value.
     * This also advances the internal marker.
     *
     * Values are a single word or enclosed in matching quotes, i.e. one of:
     *    "[^"]*"
     *    '[^']*"
     *    [^'"][^ ]*
     *
     * @returns The next value.
     */
  }, {
    key: "parseValue",
    value: function parseValue() {
      var _a, _b;
      var valueEnder = " ";
      var quotes = ["'", '"'];
      if (quotes.includes((_a = this.peek()) !== null && _a !== void 0 ? _a : "")) {
        valueEnder = (_b = this.peek()) !== null && _b !== void 0 ? _b : "";
        this.consume([valueEnder]);
      }
      var valueEnd = this.findNext([valueEnder]);
      var value = this.command.substring(this.index, valueEnd);
      if (valueEnder !== " " && valueEnd === this.command.length) {
        throw "No closing ".concat(valueEnder, " found for ").concat(valueEnder).concat(value);
      }
      this.index = valueEnd;
      if (valueEnder !== " ") this.consume([valueEnder]);
      return value;
    }
  }]);
}();

// node_modules/grimoire-kolmafia/dist/combat.js
var import_kolmafia95 = require("kolmafia");
init_dist();
function _typeof29(o) {
  "@babel/helpers - typeof";
  return _typeof29 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof29(o);
}
function _callSuper6(t, o, e) {
  return o = _getPrototypeOf6(o), _possibleConstructorReturn6(t, _isNativeReflectConstruct6() ? Reflect.construct(o, e || [], _getPrototypeOf6(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn6(t, e) {
  if (e && ("object" == _typeof29(e) || "function" == typeof e)) return e;
  if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
  return _assertThisInitialized6(t);
}
function _assertThisInitialized6(e) {
  if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e;
}
function _isNativeReflectConstruct6() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct6 = function _isNativeReflectConstruct10() {
    return !!t;
  })();
}
function _getPrototypeOf6(t) {
  return _getPrototypeOf6 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t2) {
    return t2.__proto__ || Object.getPrototypeOf(t2);
  }, _getPrototypeOf6(t);
}
function _inherits7(t, e) {
  if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
  t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: true, configurable: true } }), Object.defineProperty(t, "prototype", { writable: false }), e && _setPrototypeOf7(t, e);
}
function _setPrototypeOf7(t, e) {
  return _setPrototypeOf7 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t2, e2) {
    return t2.__proto__ = e2, t2;
  }, _setPrototypeOf7(t, e);
}
function _toConsumableArray30(r) {
  return _arrayWithoutHoles30(r) || _iterableToArray30(r) || _unsupportedIterableToArray45(r) || _nonIterableSpread30();
}
function _nonIterableSpread30() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray30(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles30(r) {
  if (Array.isArray(r)) return _arrayLikeToArray45(r);
}
function _createForOfIteratorHelper19(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t) {
    if (Array.isArray(r) || (t = _unsupportedIterableToArray45(r)) || e && r && "number" == typeof r.length) {
      t && (r = t);
      var _n = 0, F = function F2() {
      };
      return { s: F, n: function n() {
        return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
      }, e: function e2(r2) {
        throw r2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o, a = true, u = false;
  return { s: function s() {
    t = t.call(r);
  }, n: function n() {
    var r2 = t.next();
    return a = r2.done, r2;
  }, e: function e2(r2) {
    u = true, o = r2;
  }, f: function f() {
    try {
      a || null == t.return || t.return();
    } finally {
      if (u) throw o;
    }
  } };
}
function _unsupportedIterableToArray45(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray45(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray45(r, a) : void 0;
  }
}
function _arrayLikeToArray45(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _classCallCheck22(a, n) {
  if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties22(e, r) {
  for (var t = 0; t < r.length; t++) {
    var o = r[t];
    o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e, _toPropertyKey29(o.key), o);
  }
}
function _createClass22(e, r, t) {
  return r && _defineProperties22(e.prototype, r), t && _defineProperties22(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
}
function _toPropertyKey29(t) {
  var i = _toPrimitive29(t, "string");
  return "symbol" == _typeof29(i) ? i : i + "";
}
function _toPrimitive29(t, r) {
  if ("object" != _typeof29(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof29(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
var CombatStrategy = /* @__PURE__ */ function() {
  function CombatStrategy2() {
    _classCallCheck22(this, CombatStrategy2);
    this.macros = /* @__PURE__ */ new Map();
    this.autoattacks = /* @__PURE__ */ new Map();
    this.actions = /* @__PURE__ */ new Map();
    this.ccs_entries = /* @__PURE__ */ new Map();
  }
  return _createClass22(CombatStrategy2, [{
    key: "macro",
    value: function macro(_macro, monsters, prepend) {
      var _a, _b;
      if (monsters === void 0) {
        if (this.default_macro === void 0) this.default_macro = [];
        if (prepend) this.default_macro.unshift(_macro);
        else this.default_macro.push(_macro);
      } else {
        if (monsters instanceof import_kolmafia95.Monster) monsters = [monsters];
        var _iterator = _createForOfIteratorHelper19(monsters), _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done; ) {
            var monster2 = _step.value;
            if (!this.macros.has(monster2)) this.macros.set(monster2, []);
            if (prepend) (_a = this.macros.get(monster2)) === null || _a === void 0 ? void 0 : _a.unshift(_macro);
            else (_b = this.macros.get(monster2)) === null || _b === void 0 ? void 0 : _b.push(_macro);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      }
      return this;
    }
    /**
     * Add a macro to perform as an autoattack for this monster. If multiple
     * macros are given for the same monster, they are concatinated.
     *
     * @param macro The macro to perform as autoattack.
     * @param monsters Which monsters to use the macro on. If not given, add the
     *  macro as a general macro.
     * @param prepend If true, add the macro before all previous autoattack
     *    macros for the same monster. If false, add after all previous macros.
     * @returns this
     */
  }, {
    key: "autoattack",
    value: function autoattack(macro, monsters, prepend) {
      var _a, _b;
      if (monsters === void 0) {
        if (this.default_autoattack === void 0) this.default_autoattack = [];
        if (prepend) this.default_autoattack.unshift(macro);
        else this.default_autoattack.push(macro);
      } else {
        if (monsters instanceof import_kolmafia95.Monster) monsters = [monsters];
        var _iterator2 = _createForOfIteratorHelper19(monsters), _step2;
        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
            var monster2 = _step2.value;
            if (!this.autoattacks.has(monster2)) this.autoattacks.set(monster2, []);
            if (prepend) (_a = this.autoattacks.get(monster2)) === null || _a === void 0 ? void 0 : _a.unshift(macro);
            else (_b = this.autoattacks.get(monster2)) === null || _b === void 0 ? void 0 : _b.push(macro);
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
      }
      return this;
    }
    /**
     * Add a macro to perform at the start of combat.
     * @param macro The macro to perform.
     * @param prepend If true, add the macro before all previous starting
     *    macros. If false, add after all previous starting macros.
     * @returns this
     */
  }, {
    key: "startingMacro",
    value: function startingMacro(macro, prepend) {
      if (this.starting_macro === void 0) this.starting_macro = [];
      if (prepend) this.starting_macro.unshift(macro);
      else this.starting_macro.push(macro);
      return this;
    }
    /**
     * Add an action to perform for this monster. Only one action can be set for
     * each monster; any previous actions are overwritten.
     *
     * @param action The action to perform.
     * @param monsters Which monsters to use the action on. If not given, set the
     *  action as the general action for all monsters.
     * @returns this
     */
  }, {
    key: "action",
    value: function action(_action, monsters) {
      if (monsters === void 0) {
        this.default_action = _action;
      } else if (monsters instanceof import_kolmafia95.Monster) {
        this.actions.set(monsters, _action);
      } else {
        var _iterator3 = _createForOfIteratorHelper19(monsters), _step3;
        try {
          for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
            var monster2 = _step3.value;
            this.actions.set(monster2, _action);
          }
        } catch (err) {
          _iterator3.e(err);
        } finally {
          _iterator3.f();
        }
      }
      return this;
    }
    /**
     * Add a separate entry in the grimoire-generated CCS file for the specified
     * monster. If multiple entries are given for the same monster, they are
     * concatinated.
     *
     * This should typically be only used rarely, on monsters for which KoL does
     * not support macros in combat (e.g. rampaging adding machine).
     *
     * @param entry The entry to add for the given monster.
     * @param monsters Which monsters to add the entry to.
     * @param prepend If true, add the entry before all previous entries. If
     *   false, add after all previous entries.
     */
  }, {
    key: "ccs",
    value: function ccs(entry, monsters, prepend) {
      var _a, _b;
      if (monsters instanceof import_kolmafia95.Monster) monsters = [monsters];
      var _iterator4 = _createForOfIteratorHelper19(monsters), _step4;
      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
          var monster2 = _step4.value;
          if (!this.ccs_entries.has(monster2)) this.ccs_entries.set(monster2, []);
          if (prepend) (_a = this.ccs_entries.get(monster2)) === null || _a === void 0 ? void 0 : _a.unshift(entry);
          else (_b = this.ccs_entries.get(monster2)) === null || _b === void 0 ? void 0 : _b.push(entry);
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }
      return this;
    }
    /**
     * Check if the provided action was requested for any monsters, or for the
     * general action.
     */
  }, {
    key: "can",
    value: function can(action) {
      if (action === this.default_action) return true;
      return Array.from(this.actions.values()).includes(action);
    }
    /**
     * Return the general action (if it exists).
     */
  }, {
    key: "getDefaultAction",
    value: function getDefaultAction() {
      return this.default_action;
    }
    /**
     * Return all monsters where the provided action was requested.
     */
  }, {
    key: "where",
    value: function where(action) {
      var _this = this;
      return Array.from(this.actions.keys()).filter(function(key) {
        return _this.actions.get(key) === action;
      });
    }
    /**
     * Return the requested action (if it exists) for the provided monster.
     */
  }, {
    key: "currentStrategy",
    value: function currentStrategy(monster2) {
      var _a;
      return (_a = this.actions.get(monster2)) !== null && _a !== void 0 ? _a : this.default_action;
    }
    /**
     * Perform a deep copy of this combat strategy.
     */
  }, {
    key: "clone",
    value: function clone() {
      var result = new CombatStrategy2();
      if (this.starting_macro) result.starting_macro = _toConsumableArray30(this.starting_macro);
      if (this.default_macro) result.default_macro = _toConsumableArray30(this.default_macro);
      var _iterator5 = _createForOfIteratorHelper19(this.macros), _step5;
      try {
        for (_iterator5.s(); !(_step5 = _iterator5.n()).done; ) {
          var pair = _step5.value;
          result.macros.set(pair[0], _toConsumableArray30(pair[1]));
        }
      } catch (err) {
        _iterator5.e(err);
      } finally {
        _iterator5.f();
      }
      if (this.default_autoattack) result.default_autoattack = _toConsumableArray30(this.default_autoattack);
      var _iterator6 = _createForOfIteratorHelper19(this.autoattacks), _step6;
      try {
        for (_iterator6.s(); !(_step6 = _iterator6.n()).done; ) {
          var _pair = _step6.value;
          result.autoattacks.set(_pair[0], _toConsumableArray30(_pair[1]));
        }
      } catch (err) {
        _iterator6.e(err);
      } finally {
        _iterator6.f();
      }
      result.default_action = this.default_action;
      var _iterator7 = _createForOfIteratorHelper19(this.actions), _step7;
      try {
        for (_iterator7.s(); !(_step7 = _iterator7.n()).done; ) {
          var _pair2 = _step7.value;
          result.actions.set(_pair2[0], _pair2[1]);
        }
      } catch (err) {
        _iterator7.e(err);
      } finally {
        _iterator7.f();
      }
      var _iterator8 = _createForOfIteratorHelper19(this.ccs_entries), _step8;
      try {
        for (_iterator8.s(); !(_step8 = _iterator8.n()).done; ) {
          var _pair3 = _step8.value;
          result.ccs_entries.set(_pair3[0], _toConsumableArray30(_pair3[1]));
        }
      } catch (err) {
        _iterator8.e(err);
      } finally {
        _iterator8.f();
      }
      return result;
    }
    /**
     * Compile this combat strategy into a complete macro.
     *
     * @param resources The resources to use to fulfil actions.
     * @param defaults Macros to perform for each action without a resource.
     * @param location The adventuring location, if known.
     * @param ctx: The current engine state to be passed to task functions.
     * @returns The compiled macro.
     */
  }, {
    key: "compile",
    value: function compile(resources, defaults, location7, ctx) {
      var _a, _b;
      var result = new Macro();
      if (this.starting_macro) {
        result.step.apply(result, _toConsumableArray30(this.starting_macro.map(function(macro2) {
          return undelay(macro2, ctx);
        })));
      }
      var monster_macros = new CompressedMacro();
      this.macros.forEach(function(value, key) {
        var _Macro;
        monster_macros.add(key, (_Macro = new Macro()).step.apply(_Macro, _toConsumableArray30(value.map(function(macro2) {
          return undelay(macro2, ctx);
        }))));
      });
      result.step(monster_macros.compile());
      if (this.default_macro) result.step.apply(result, _toConsumableArray30(this.default_macro.map(function(macro2) {
        return undelay(macro2, ctx);
      })));
      var monster_actions = new CompressedMacro();
      this.actions.forEach(function(action, key) {
        var _a2, _b2;
        var macro2 = (_a2 = resources.getMacro(action, ctx)) !== null && _a2 !== void 0 ? _a2 : (_b2 = defaults === null || defaults === void 0 ? void 0 : defaults[action]) === null || _b2 === void 0 ? void 0 : _b2.call(defaults, key);
        if (macro2) monster_actions.add(key, new Macro().step(macro2));
      });
      result.step(monster_actions.compile());
      if (this.default_action) {
        var macro = (_a = resources.getMacro(this.default_action, ctx)) !== null && _a !== void 0 ? _a : (_b = defaults === null || defaults === void 0 ? void 0 : defaults[this.default_action]) === null || _b === void 0 ? void 0 : _b.call(defaults, location7);
        if (macro) result.step(macro);
      }
      return result;
    }
    /**
     * Compile the autoattack of this combat strategy into a complete macro.
     *
     * @param ctx: The current engine state to be passed to task functions.
     * @returns The compiled autoattack macro.
     */
  }, {
    key: "compileAutoattack",
    value: function compileAutoattack(ctx) {
      var result = new Macro();
      var monster_macros = new CompressedMacro();
      this.autoattacks.forEach(function(value, key) {
        var _Macro2;
        monster_macros.add(key, (_Macro2 = new Macro()).step.apply(_Macro2, _toConsumableArray30(value.map(function(macro) {
          return undelay(macro, ctx);
        }))));
      });
      result.step(monster_macros.compile());
      if (this.default_autoattack) result.step.apply(result, _toConsumableArray30(this.default_autoattack.map(function(macro) {
        return undelay(macro, ctx);
      })));
      return result;
    }
    /**
     * Compile the CCS entries of this combat strategy into a single array.
     *
     * @returns The lines of a CCS file, not including the [default] macro.
     */
  }, {
    key: "compileCcs",
    value: function compileCcs() {
      var result = [];
      var _iterator9 = _createForOfIteratorHelper19(this.ccs_entries), _step9;
      try {
        for (_iterator9.s(); !(_step9 = _iterator9.n()).done; ) {
          var ccs_entry = _step9.value;
          result.push.apply(result, ["[".concat(ccs_entry[0].name, "]")].concat(_toConsumableArray30(ccs_entry[1])));
        }
      } catch (err) {
        _iterator9.e(err);
      } finally {
        _iterator9.f();
      }
      return result;
    }
    /**
     * For advanced users, this method will generate a fluent API for requesting
     * actions. That is, it allows you to do
     *   combat.banish(monster1).kill(monster2)
     * instead of
     *   combat.action("banish", monster1).action("kill", monster2)
     *
     * Example usage:
     *   const myActions = ["kill", "banish"] as const;
     *   class MyCombatStrategy extends CombatStrategy.withActions(myActions) {}
     *
     *   const foo: MyCombatStrategy = new MyCombatStrategy();
     *   const bar: MyCombatStrategy = foo.banish($monster`crate`).kill($monster`tumbleweed`);
     */
  }], [{
    key: "withActions",
    value: function withActions(actions) {
      var CombatStrategyWithActions = /* @__PURE__ */ function(_this) {
        function CombatStrategyWithActions2() {
          _classCallCheck22(this, CombatStrategyWithActions2);
          return _callSuper6(this, CombatStrategyWithActions2, arguments);
        }
        _inherits7(CombatStrategyWithActions2, _this);
        return _createClass22(CombatStrategyWithActions2);
      }(this);
      var proto = CombatStrategyWithActions.prototype;
      var _iterator0 = _createForOfIteratorHelper19(actions), _step0;
      try {
        var _loop = function _loop2() {
          var action = _step0.value;
          proto[action] = function(monsters) {
            return this.action(action, monsters);
          };
        };
        for (_iterator0.s(); !(_step0 = _iterator0.n()).done; ) {
          _loop();
        }
      } catch (err) {
        _iterator0.e(err);
      } finally {
        _iterator0.f();
      }
      return CombatStrategyWithActions;
    }
  }]);
}();
var CompressedMacro = /* @__PURE__ */ function() {
  function CompressedMacro2() {
    _classCallCheck22(this, CompressedMacro2);
    this.components = /* @__PURE__ */ new Map();
  }
  return _createClass22(CompressedMacro2, [{
    key: "add",
    value: function add(monster2, macro) {
      var _a;
      var macro_text = macro.toString();
      if (macro_text.length === 0) return;
      if (!this.components.has(macro_text)) this.components.set(macro_text, [monster2]);
      else (_a = this.components.get(macro_text)) === null || _a === void 0 ? void 0 : _a.push(monster2);
    }
    /**
     * Compile the compressed form of the macro.
     */
  }, {
    key: "compile",
    value: function compile() {
      var result = new Macro();
      this.components.forEach(function(monsters, macro) {
        var condition = monsters.map(function(mon) {
          return "monsterid ".concat(mon.id);
        }).join(" || ");
        result.if_(condition, macro);
      });
      return result;
    }
  }]);
}();
var CombatResources = /* @__PURE__ */ function() {
  function CombatResources2() {
    _classCallCheck22(this, CombatResources2);
    this.resources = /* @__PURE__ */ new Map();
  }
  return _createClass22(CombatResources2, [{
    key: "provide",
    value: function provide(action, resource) {
      if (resource === void 0) return;
      this.resources.set(action, resource);
    }
    /**
     * Return true if the provided action has a resource provided.
     */
  }, {
    key: "has",
    value: function has(action) {
      return this.resources.has(action);
    }
    /**
     * Returns the resource for the provided action, if set.
     */
  }, {
    key: "get",
    value: function get4(action) {
      return this.resources.get(action);
    }
    /**
     * Return all provided combat resources.
     */
  }, {
    key: "all",
    value: function all2() {
      return Array.from(this.resources.values());
    }
    /**
     * Get the macro provided by the resource for this action, or undefined if
     * no resource was provided.
     */
  }, {
    key: "getMacro",
    value: function getMacro(action, ctx) {
      var resource = this.resources.get(action);
      if (resource === void 0) return void 0;
      if (resource.do instanceof import_kolmafia95.Item) return new Macro().item(resource.do);
      if (resource.do instanceof import_kolmafia95.Skill) return new Macro().skill(resource.do);
      return undelay(resource.do, ctx);
    }
  }]);
}();

// node_modules/grimoire-kolmafia/dist/engine.js
init_dist();
var import_kolmafia97 = require("kolmafia");

// node_modules/grimoire-kolmafia/dist/outfit.js
var import_kolmafia96 = require("kolmafia");
init_dist();
var _templateObject576;
var _templateObject2148;
var _templateObject3135;
var _templateObject4116;
var _templateObject577;
var _templateObject665;
var _templateObject757;
var _templateObject847;
var _templateObject938;
var _templateObject031;
var _templateObject1134;
var _templateObject1029;
var _templateObject1135;
var _templateObject1227;
var _templateObject1325;
var _templateObject1424;
var _templateObject1523;
var _templateObject1623;
var _templateObject1720;
var _templateObject1820;
var _templateObject1920;
var _templateObject2019;
var _templateObject2149;
var _templateObject2222;
var _templateObject2321;
var _templateObject2419;
var _templateObject2518;
var _templateObject2617;
var _templateObject2715;
var _templateObject2815;
var _templateObject2915;
var _templateObject3014;
var _templateObject3136;
var _templateObject3216;
var _templateObject3315;
var _templateObject3413;
var _templateObject3512;
var _templateObject3612;
var _templateObject3712;
var _templateObject3812;
var _templateObject3912;
var _templateObject4012;
var _templateObject4117;
var _templateObject4214;
var _templateObject4312;
var _templateObject4411;
var _templateObject4511;
var _templateObject4611;
var _templateObject4711;
var _templateObject4811;
var _templateObject4911;
var _templateObject5011;
var _templateObject5113;
var _templateObject5211;
var _templateObject5311;
var _templateObject5411;
var _templateObject5511;
var _templateObject5610;
var _templateObject578;
var _templateObject585;
var _templateObject595;
var _templateObject605;
var _templateObject6111;
var _templateObject6211;
var _templateObject6311;
var _templateObject6411;
var _templateObject6510;
var _templateObject666;
var _templateObject675;
var _templateObject685;
var _templateObject695;
var _templateObject705;
var _templateObject7110;
var _templateObject7210;
var _templateObject7310;
var _templateObject7410;
var _templateObject758;
var _templateObject764;
var _templateObject774;
var _templateObject784;
var _templateObject793;
var _templateObject803;
function _typeof30(o) {
  "@babel/helpers - typeof";
  return _typeof30 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof30(o);
}
function ownKeys13(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread13(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys13(Object(t), true).forEach(function(r2) {
      _defineProperty27(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys13(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty27(e, r, t) {
  return (r = _toPropertyKey30(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
}
function _slicedToArray30(r, e) {
  return _arrayWithHoles30(r) || _iterableToArrayLimit30(r, e) || _unsupportedIterableToArray46(r, e) || _nonIterableRest30();
}
function _nonIterableRest30() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit30(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles30(r) {
  if (Array.isArray(r)) return r;
}
function _createForOfIteratorHelper20(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t) {
    if (Array.isArray(r) || (t = _unsupportedIterableToArray46(r)) || e && r && "number" == typeof r.length) {
      t && (r = t);
      var _n = 0, F = function F2() {
      };
      return { s: F, n: function n() {
        return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
      }, e: function e2(r2) {
        throw r2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o, a = true, u = false;
  return { s: function s() {
    t = t.call(r);
  }, n: function n() {
    var r2 = t.next();
    return a = r2.done, r2;
  }, e: function e2(r2) {
    u = true, o = r2;
  }, f: function f() {
    try {
      a || null == t.return || t.return();
    } finally {
      if (u) throw o;
    }
  } };
}
function _taggedTemplateLiteral83(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function _toConsumableArray31(r) {
  return _arrayWithoutHoles31(r) || _iterableToArray31(r) || _unsupportedIterableToArray46(r) || _nonIterableSpread31();
}
function _nonIterableSpread31() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray46(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray46(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray46(r, a) : void 0;
  }
}
function _iterableToArray31(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles31(r) {
  if (Array.isArray(r)) return _arrayLikeToArray46(r);
}
function _arrayLikeToArray46(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _classCallCheck23(a, n) {
  if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties23(e, r) {
  for (var t = 0; t < r.length; t++) {
    var o = r[t];
    o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e, _toPropertyKey30(o.key), o);
  }
}
function _createClass23(e, r, t) {
  return r && _defineProperties23(e.prototype, r), t && _defineProperties23(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
}
function _toPropertyKey30(t) {
  var i = _toPrimitive30(t, "string");
  return "symbol" == _typeof30(i) ? i : i + "";
}
function _toPrimitive30(t, r) {
  if ("object" != _typeof30(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof30(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
var FORCE_REFRESH_REQUIREMENT = new Requirement([], {
  forceUpdate: true
});
var outfitSlots = ["hat", "back", "weapon", "offhand", "shirt", "pants", "acc1", "acc2", "acc3", "famequip"];
var weaponHands2 = function(i) {
  return i ? (0, import_kolmafia96.weaponHands)(i) : 0;
};
var modeableCommands2 = ["backupcamera", "umbrella", "snowsuit", "edpiece", "retrocape", "parka", "jillcandle"];
var Outfit = /* @__PURE__ */ function() {
  function Outfit2() {
    _classCallCheck23(this, Outfit2);
    this.equips = /* @__PURE__ */ new Map();
    this.riders = /* @__PURE__ */ new Map();
    this.modes = {};
    this.skipDefaults = false;
    this.modifier = [];
    this.avoid = [];
    this.bonuses = /* @__PURE__ */ new Map();
    this.postActions = [];
    this.preActions = [];
  }
  return _createClass23(Outfit2, [{
    key: "equippedAmount",
    value: (
      /**
       * Check how many of an item is equipped on the outfit.
       */
      function equippedAmount4(item15) {
        return _toConsumableArray31(this.equips.values()).filter(function(i) {
          return i === item15;
        }).length;
      }
    )
  }, {
    key: "isAvailable",
    value: function isAvailable(item15) {
      var _a;
      if ((_a = this.avoid) === null || _a === void 0 ? void 0 : _a.includes(item15)) return false;
      if (!have(item15, this.equippedAmount(item15) + 1)) return false;
      if ((0, import_kolmafia96.booleanModifier)(item15, "Single Equip") && this.equippedAmount(item15) > 0) return false;
      return true;
    }
    /**
     * Check whether an item is equipped on the outfit, optionally in a specific slot.
     */
  }, {
    key: "haveEquipped",
    value: function haveEquipped6(item15, slot) {
      if (slot === void 0) return this.equippedAmount(item15) > 0;
      return this.equips.get(slot) === item15;
    }
  }, {
    key: "equipItemNone",
    value: function equipItemNone(item15, slot) {
      if (item15 !== $item.none) return false;
      if (slot === void 0) return true;
      if (this.equips.has(slot)) return false;
      this.equips.set(slot, item15);
      return true;
    }
  }, {
    key: "equipNonAccessory",
    value: function equipNonAccessory(item15, slot) {
      if ($slots(_templateObject576 || (_templateObject576 = _taggedTemplateLiteral83(["acc1, acc2, acc3"]))).includes((0, import_kolmafia96.toSlot)(item15))) return false;
      if (slot !== void 0 && slot !== (0, import_kolmafia96.toSlot)(item15)) return false;
      if (this.equips.has((0, import_kolmafia96.toSlot)(item15))) return false;
      switch ((0, import_kolmafia96.toSlot)(item15)) {
        case $slot(_templateObject2148 || (_templateObject2148 = _taggedTemplateLiteral83(["off-hand"]))):
          if (this.equips.has($slot(_templateObject3135 || (_templateObject3135 = _taggedTemplateLiteral83(["weapon"])))) && weaponHands2(this.equips.get($slot(_templateObject4116 || (_templateObject4116 = _taggedTemplateLiteral83(["weapon"]))))) !== 1) {
            return false;
          }
          break;
        case $slot(_templateObject577 || (_templateObject577 = _taggedTemplateLiteral83(["familiar"]))):
          if (this.familiar !== void 0 && !(0, import_kolmafia96.canEquip)(this.familiar, item15)) return false;
          break;
        case $slot(_templateObject665 || (_templateObject665 = _taggedTemplateLiteral83(["weapon"]))):
          if (!weaponsCompatible(item15, this.equips.get($slot(_templateObject757 || (_templateObject757 = _taggedTemplateLiteral83(["off-hand"])))))) return false;
          break;
      }
      if ((0, import_kolmafia96.toSlot)(item15) !== $slot(_templateObject847 || (_templateObject847 = _taggedTemplateLiteral83(["familiar"]))) && !(0, import_kolmafia96.canEquip)(item15)) return false;
      this.equips.set((0, import_kolmafia96.toSlot)(item15), item15);
      return true;
    }
  }, {
    key: "equipAccessory",
    value: function equipAccessory(item15, slot) {
      var _this = this;
      if (![void 0].concat(_toConsumableArray31($slots(_templateObject938 || (_templateObject938 = _taggedTemplateLiteral83(["acc1, acc2, acc3"]))))).includes(slot)) return false;
      if ((0, import_kolmafia96.toSlot)(item15) !== $slot(_templateObject031 || (_templateObject031 = _taggedTemplateLiteral83(["acc1"])))) return false;
      if (!(0, import_kolmafia96.canEquip)(item15)) return false;
      if (slot === void 0) {
        var empty = $slots(_templateObject1134 || (_templateObject1134 = _taggedTemplateLiteral83(["acc1, acc2, acc3"]))).find(function(s) {
          return !_this.equips.has(s);
        });
        if (empty === void 0) return false;
        this.equips.set(empty, item15);
      } else {
        if (this.equips.has(slot)) return false;
        this.equips.set(slot, item15);
      }
      return true;
    }
  }, {
    key: "equipUsingDualWield",
    value: function equipUsingDualWield(item15, slot) {
      if (![void 0, $slot(_templateObject1029 || (_templateObject1029 = _taggedTemplateLiteral83(["off-hand"])))].includes(slot)) return false;
      if ((0, import_kolmafia96.toSlot)(item15) !== $slot(_templateObject1135 || (_templateObject1135 = _taggedTemplateLiteral83(["weapon"])))) return false;
      if (this.equips.has($slot(_templateObject1227 || (_templateObject1227 = _taggedTemplateLiteral83(["weapon"])))) && weaponHands2(this.equips.get($slot(_templateObject1325 || (_templateObject1325 = _taggedTemplateLiteral83(["weapon"]))))) !== 1) {
        return false;
      }
      if (this.equips.has($slot(_templateObject1424 || (_templateObject1424 = _taggedTemplateLiteral83(["off-hand"]))))) return false;
      if (!have($skill(_templateObject1523 || (_templateObject1523 = _taggedTemplateLiteral83(["Double-Fisted Skull Smashing"]))))) return false;
      if (weaponHands2(item15) !== 1) return false;
      if (!(0, import_kolmafia96.canEquip)(item15)) return false;
      if (!weaponsCompatible(this.equips.get($slot(_templateObject1623 || (_templateObject1623 = _taggedTemplateLiteral83(["weapon"])))), item15)) return false;
      this.equips.set($slot(_templateObject1720 || (_templateObject1720 = _taggedTemplateLiteral83(["off-hand"]))), item15);
      return true;
    }
  }, {
    key: "getHoldingFamiliar",
    value: function getHoldingFamiliar(item15) {
      switch ((0, import_kolmafia96.toSlot)(item15)) {
        case $slot(_templateObject1820 || (_templateObject1820 = _taggedTemplateLiteral83(["weapon"]))):
          return $familiar(_templateObject1920 || (_templateObject1920 = _taggedTemplateLiteral83(["Disembodied Hand"])));
        case $slot(_templateObject2019 || (_templateObject2019 = _taggedTemplateLiteral83(["off-hand"]))):
          return $familiar(_templateObject2149 || (_templateObject2149 = _taggedTemplateLiteral83(["Left-Hand Man"])));
        case $slot(_templateObject2222 || (_templateObject2222 = _taggedTemplateLiteral83(["pants"]))):
          return $familiar(_templateObject2321 || (_templateObject2321 = _taggedTemplateLiteral83(["Fancypants Scarecrow"])));
        case $slot(_templateObject2419 || (_templateObject2419 = _taggedTemplateLiteral83(["hat"]))):
          return $familiar(_templateObject2518 || (_templateObject2518 = _taggedTemplateLiteral83(["Mad Hatrack"])));
        default:
          return void 0;
      }
    }
    /**
     * Returns the bonus value associated with a given item.
     *
     * @param item The item to check the bonus of.
     * @returns The bonus assigned to that item.
     */
  }, {
    key: "getBonus",
    value: function getBonus(item15) {
      var _a;
      return (_a = this.bonuses.get(item15)) !== null && _a !== void 0 ? _a : 0;
    }
    /**
     * Applies a value to any existing bonus this item has, using a rule assigned by the `reducer` parameter
     *
     * @param item The item to try to apply a bonus to.
     * @param value The value to try to apply.
     * @param reducer Function that combines new and current bonus
     * @returns The total assigned bonus to that item.
     */
  }, {
    key: "applyBonus",
    value: function applyBonus(item15, value, reducer) {
      var previous = this.getBonus(item15);
      return this.setBonus(item15, reducer(value, previous));
    }
    /**
     * Sets the bonus value of an item equal to a given value, overriding any current bonus assigned.
     *
     * @param item The item to try to apply a bonus to.
     * @param value The value to try to apply.
     * @returns The total assigned bonus to that item.
     */
  }, {
    key: "setBonus",
    value: function setBonus(item15, value) {
      this.bonuses.set(item15, value);
      return value;
    }
    /**
     * Adds a value to any existing bonus this item has
     *
     * @param item The item to try to add a bonus to.
     * @param value The value to try to add.
     * @returns The total assigned bonus to that item.
     */
  }, {
    key: "addBonus",
    value: function addBonus(item15, value) {
      return this.applyBonus(item15, value, function(a, b) {
        return a + b;
      });
    }
    /**
     * Apply the given items' bonuses to the outfit, using a rule given by the reducer
     *
     * @param items A map containing items and their bonuses
     * @param reducer A way of combining new bonuses with existing bonuses
     */
  }, {
    key: "applyBonuses",
    value: function applyBonuses(items, reducer) {
      var _iterator = _createForOfIteratorHelper20(items), _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var _step$value = _slicedToArray30(_step.value, 2), item15 = _step$value[0], value = _step$value[1];
          this.applyBonus(item15, value, reducer);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    /**
     * Sets the bonuses of the given items, overriding existing bonuses
     *
     * @param items Map containing items and bonuses
     */
  }, {
    key: "setBonuses",
    value: function setBonuses(items) {
      this.applyBonuses(items, function(a) {
        return a;
      });
    }
    /**
     * Adds the bonuses of the given items to any existing bonuses they ahave
     *
     * @param items Map containing items and bonuses
     */
  }, {
    key: "addBonuses",
    value: function addBonuses(items) {
      this.applyBonuses(items, function(a, b) {
        return a + b;
      });
    }
  }, {
    key: "equipUsingFamiliar",
    value: function equipUsingFamiliar(item15, slot) {
      if (![void 0, $slot(_templateObject2617 || (_templateObject2617 = _taggedTemplateLiteral83(["familiar"])))].includes(slot)) return false;
      if (this.equips.has($slot(_templateObject2715 || (_templateObject2715 = _taggedTemplateLiteral83(["familiar"]))))) return false;
      if ((0, import_kolmafia96.booleanModifier)(item15, "Single Equip")) return false;
      var familiar10 = this.getHoldingFamiliar(item15);
      if (familiar10 === void 0 || $familiars(_templateObject2815 || (_templateObject2815 = _taggedTemplateLiteral83(["Fancypants Scarecrow, Mad Hatrack"]))).includes(familiar10) && slot === void 0) {
        return false;
      }
      if (!this.equip(familiar10)) return false;
      this.equips.set($slot(_templateObject2915 || (_templateObject2915 = _taggedTemplateLiteral83(["familiar"]))), item15);
      return true;
    }
  }, {
    key: "equipItem",
    value: function equipItem(item15, slot) {
      return this.haveEquipped(item15, slot) || this.equipItemNone(item15, slot) || this.isAvailable(item15) && (this.equipNonAccessory(item15, slot) || this.equipAccessory(item15, slot) || this.equipUsingDualWield(item15, slot) || this.equipUsingFamiliar(item15, slot));
    }
  }, {
    key: "equipFamiliar",
    value: function equipFamiliar(familiar10) {
      if (familiar10 === this.familiar) return true;
      if (this.familiar !== void 0) return false;
      if (familiar10 !== $familiar.none) {
        if (!have(familiar10)) return false;
        if (Array.from(this.riders.values()).includes(familiar10)) return false;
      }
      var item15 = this.equips.get($slot(_templateObject3014 || (_templateObject3014 = _taggedTemplateLiteral83(["familiar"]))));
      if (item15 !== void 0 && item15 !== $item.none && !(0, import_kolmafia96.canEquip)(familiar10, item15)) return false;
      this.familiar = familiar10;
      return true;
    }
  }, {
    key: "equipSpec",
    value: function equipSpec(spec) {
      var _this$avoid;
      var _a, _b, _c, _d, _e, _f;
      var succeeded = true;
      for (var _i = 0, _outfitSlots2 = outfitSlots; _i < _outfitSlots2.length; _i++) {
        var slotName = _outfitSlots2[_i];
        var slot = (_a = (/* @__PURE__ */ new Map([["famequip", $slot(_templateObject3136 || (_templateObject3136 = _taggedTemplateLiteral83(["familiar"])))], ["offhand", $slot(_templateObject3216 || (_templateObject3216 = _taggedTemplateLiteral83(["off-hand"])))]])).get(slotName)) !== null && _a !== void 0 ? _a : (0, import_kolmafia96.toSlot)(slotName);
        var itemOrItems = spec[slotName];
        if (itemOrItems !== void 0 && !this.equip(itemOrItems, slot)) succeeded = false;
      }
      var _iterator2 = _createForOfIteratorHelper20((_b = spec === null || spec === void 0 ? void 0 : spec.equip) !== null && _b !== void 0 ? _b : []), _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
          var item15 = _step2.value;
          if (!this.equip(item15)) succeeded = false;
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
      if ((spec === null || spec === void 0 ? void 0 : spec.familiar) !== void 0) {
        if (!this.equip(spec.familiar)) succeeded = false;
      }
      (_this$avoid = this.avoid).push.apply(_this$avoid, _toConsumableArray31((_c = spec === null || spec === void 0 ? void 0 : spec.avoid) !== null && _c !== void 0 ? _c : []));
      this.skipDefaults = this.skipDefaults || ((_d = spec.skipDefaults) !== null && _d !== void 0 ? _d : false);
      if (spec.modifier) {
        var _this$modifier;
        if (Array.isArray(spec.modifier)) (_this$modifier = this.modifier).push.apply(_this$modifier, _toConsumableArray31(spec.modifier));
        else this.modifier.push(spec.modifier);
      }
      if (spec.modes) {
        if (!this.setModes(spec.modes)) {
          succeeded = false;
        }
      }
      if (spec.riders) {
        if (spec.riders["buddy-bjorn"] && !this.bjornify(spec.riders["buddy-bjorn"])) succeeded = false;
        if (spec.riders["crown-of-thrones"] && !this.enthrone(spec.riders["crown-of-thrones"])) succeeded = false;
      }
      if (spec.bonuses) {
        this.addBonuses(spec.bonuses);
      }
      this.beforeDress.apply(this, _toConsumableArray31((_e = spec.beforeDress) !== null && _e !== void 0 ? _e : []));
      this.afterDress.apply(this, _toConsumableArray31((_f = spec.afterDress) !== null && _f !== void 0 ? _f : []));
      return succeeded;
    }
    /**
     * Equip the first thing that can be equipped to the outfit.
     *
     * @param things The things to equip.
     * @param slot The slot to equip them.
     * @returns True if one of the things is equipped, and false otherwise.
     */
  }, {
    key: "equipFirst",
    value: function equipFirst(things, slot) {
      var _this = this;
      if (things.length === 0) return true;
      return things.some(function(val) {
        return _this.equip(val, slot);
      });
    }
    /**
     * Equip a thing to the outfit.
     *
     * If no slot is given, then the thing will be equipped wherever possible
     * (possibly using dual-wielding, any of the accessory slots, or as
     * familiar equipment). If it is impossible to add this thing anywhere to
     * the outfit, this function will return false.
     *
     * If a slot is given, the item will be equipped only in that slot. If the
     * slot is filled with a different item, this function will return false.
     *
     * If the thing is already equipped in the provided slot, or if no slot is
     * given and the thing is already equipped in any slot, this function will
     * return true and not change the outfit.
     *
     * @param thing The thing or things to equip.
     * @param slot The slot to equip them.
     * @returns True if the thing was sucessfully equipped, and false otherwise.
     */
  }, {
    key: "equip",
    value: function equip8(thing, slot) {
      var _this = this;
      if (Array.isArray(thing)) {
        if (slot !== void 0) return this.equipFirst(thing, slot);
        return thing.every(function(val) {
          return _this.equip(val);
        });
      }
      if (thing instanceof import_kolmafia96.Item) return this.equipItem(thing, slot);
      if (thing instanceof import_kolmafia96.Familiar) return this.equipFamiliar(thing);
      if (thing instanceof Outfit2) return this.equipSpec(thing.spec());
      return this.equipSpec(thing);
    }
  }, {
    key: "equipRider",
    value: (
      /**
       * Add a rider to the outfit.
       *
       * This function does *not* equip the corresponding item; it must be equipped separately.
       *
       * If a familiar is already specified as the rider that is different from the provided target, this function will return false and not change the rider.
       * @param target The familiar to use as the rider, or a ranked list of familiars to try to use as the rider.
       * @returns True if we successfully set the slot to a valid rider.
       */
      function equipRider(target, slot) {
        var _this = this;
        var current2 = this.riders.get(slot);
        var targets = Array.isArray(target) ? target : [target];
        if (current2) {
          return targets.includes(current2);
        }
        var otherRiders = _toConsumableArray31(this.riders.entries()).filter(function(_ref) {
          var _ref2 = _slicedToArray30(_ref, 1), key = _ref2[0];
          return slot !== key;
        }).map(function(_ref3) {
          var _ref4 = _slicedToArray30(_ref3, 2), value = _ref4[1];
          return value;
        });
        var fam = targets.find(function(f) {
          return have(f) && _this.familiar !== f && !otherRiders.includes(f);
        });
        if (fam) {
          this.riders.set(slot, fam);
          return true;
        }
        return false;
      }
    )
    /**
     * Add a bjornified familiar to the outfit.
     *
     * This function does *not* equip the buddy bjorn itself; it must be equipped separately.
     *
     * If a familiar is already specified for the buddy bjorn that is different from the provided target, this function will return false and not change the buddy bjorn.
     * @param target The familiar to bjornify, or a ranked list of familiars to try to bjornify.
     * @returns True if we successfully set the bjorn to a valid target.
     */
  }, {
    key: "bjornify",
    value: function bjornify(target) {
      return this.equipRider(target, $slot(_templateObject3315 || (_templateObject3315 = _taggedTemplateLiteral83(["buddy-bjorn"]))));
    }
    /**
     * Add anenthroned familiar to the outfit.
     *
     * This function does *not* equip the crown of thrones itself; it must be equipped separately.
     *
     * If a familiar is already specified for the crown of thrones that is different from the provided target, this function will return false and not change the crown of thrones.
     * @param target The familiar to enthrone, or a ranked list of familiars to try to enthrone.
     * @returns True if we successfully set the enthrone to a valid target.
     */
  }, {
    key: "enthrone",
    value: function enthrone(target) {
      return this.equipRider(target, $slot(_templateObject3413 || (_templateObject3413 = _taggedTemplateLiteral83(["crown-of-thrones"]))));
    }
    /**
     * Set the provided modes for items that may be equipped in the outfit.
     *
     * This function does *not* equip items for the set modes; they must be
     * equipped separately.
     *
     * If a mode is already set for an item that is different from the provided
     * mode, this function will return false and not change the mode for that
     * item. (But other modes might still be changed if they are compatible.)
     *
     * Note that the superhero and instuctions of a retrocape can be set
     * independently (`undefined` is treated as "don't care").
     *
     * @param modes Modes to set in this outfit.
     * @returns True if all modes were sucessfully set, and false otherwise.
     */
  }, {
    key: "setModes",
    value: function setModes(modes) {
      var _a, _b;
      var compatible = true;
      for (var _i2 = 0, _modeableCommands = modeableCommands2; _i2 < _modeableCommands.length; _i2++) {
        var mode = _modeableCommands[_i2];
        if (mode === "retrocape") continue;
        if (this.modes[mode] && modes[mode] && this.modes[mode] !== modes[mode]) {
          compatible = false;
        }
      }
      if (this.modes["retrocape"] && modes["retrocape"]) {
        if (this.modes["retrocape"][0] && modes["retrocape"][0] && this.modes["retrocape"][0] !== modes["retrocape"][0]) {
          compatible = false;
        }
        if (this.modes["retrocape"][1] && modes["retrocape"][1] && this.modes["retrocape"][1] !== modes["retrocape"][1]) {
          compatible = false;
        }
        this.modes["retrocape"][0] = (_a = this.modes["retrocape"][0]) !== null && _a !== void 0 ? _a : modes["retrocape"][0];
        this.modes["retrocape"][1] = (_b = this.modes["retrocape"][1]) !== null && _b !== void 0 ? _b : modes["retrocape"][1];
      }
      this.modes = _objectSpread13(_objectSpread13({}, modes), this.modes);
      return compatible;
    }
    /**
     * Check if it is possible to equip a thing to this outfit using .equip().
     *
     * This does not change the current outfit.
     *
     * @param thing The thing to equip.
     * @param slot The slot to equip them.
     * @returns True if this thing can be equipped.
     */
  }, {
    key: "canEquip",
    value: function canEquip9(thing, slot) {
      var outfit2 = this.clone();
      return outfit2.equip(thing, slot);
    }
    /**
     * Check if it is possible to equip a thing to this outfit using .equip(); if it is, do so.
     *
     * This does change the current outfit.
     * @param thing The thing to equip.
     * @param slot The slot to equip them.
     * @returns True if this thing was successfully equipped.
     */
  }, {
    key: "tryEquip",
    value: function tryEquip(thing, slot) {
      return this.canEquip(thing, slot) && this.equip(thing, slot);
    }
  }, {
    key: "afterDress",
    value: function afterDress() {
      var _this$postActions;
      (_this$postActions = this.postActions).push.apply(_this$postActions, arguments);
    }
  }, {
    key: "beforeDress",
    value: function beforeDress() {
      var _this$preActions;
      (_this$preActions = this.preActions).push.apply(_this$preActions, arguments);
    }
    /**
     * Equip this outfit.
     */
  }, {
    key: "_dress",
    value: function _dress(refreshed) {
      var _this = this;
      if (this.familiar) (0, import_kolmafia96.useFamiliar)(this.familiar);
      var targetEquipment = Array.from(this.equips.values());
      var usedSlots = /* @__PURE__ */ new Set();
      var nonaccessorySlots = $slots(_templateObject3512 || (_templateObject3512 = _taggedTemplateLiteral83(["weapon, off-hand, hat, back, shirt, pants, familiar"])));
      var bjorn = this.riders.get($slot(_templateObject3612 || (_templateObject3612 = _taggedTemplateLiteral83(["buddy-bjorn"]))));
      if (bjorn && (this.equips.get($slot(_templateObject3712 || (_templateObject3712 = _taggedTemplateLiteral83(["back"])))) === $item(_templateObject3812 || (_templateObject3812 = _taggedTemplateLiteral83(["Buddy Bjorn"]))) || this.getBonus($item(_templateObject3912 || (_templateObject3912 = _taggedTemplateLiteral83(["Buddy Bjorn"])))))) {
        usedSlots.add($slot(_templateObject4012 || (_templateObject4012 = _taggedTemplateLiteral83(["buddy-bjorn"]))));
        usedSlots.add($slot(_templateObject4117 || (_templateObject4117 = _taggedTemplateLiteral83(["crown-of-thrones"]))));
      }
      var crown = this.riders.get($slot(_templateObject4214 || (_templateObject4214 = _taggedTemplateLiteral83(["crown-of-thrones"]))));
      if (crown && (this.equips.get($slot(_templateObject4312 || (_templateObject4312 = _taggedTemplateLiteral83(["hat"])))) === $item(_templateObject4411 || (_templateObject4411 = _taggedTemplateLiteral83(["Crown of Thrones"]))) || this.getBonus($item(_templateObject4511 || (_templateObject4511 = _taggedTemplateLiteral83(["Crown of Thrones"])))))) {
        usedSlots.add($slot(_templateObject4611 || (_templateObject4611 = _taggedTemplateLiteral83(["buddy-bjorn"]))));
        usedSlots.add($slot(_templateObject4711 || (_templateObject4711 = _taggedTemplateLiteral83(["crown-of-thrones"]))));
      }
      if (weaponHands2((0, import_kolmafia96.equippedItem)($slot(_templateObject4811 || (_templateObject4811 = _taggedTemplateLiteral83(["weapon"]))))) !== 1 && this.equips.has($slot(_templateObject4911 || (_templateObject4911 = _taggedTemplateLiteral83(["offhand"])))) && !this.equips.has($slot(_templateObject5011 || (_templateObject5011 = _taggedTemplateLiteral83(["weapon"]))))) (0, import_kolmafia96.equip)($slot(_templateObject5113 || (_templateObject5113 = _taggedTemplateLiteral83(["weapon"]))), $item.none);
      if (!weaponsCompatible(this.equips.get($slot(_templateObject5211 || (_templateObject5211 = _taggedTemplateLiteral83(["weapon"])))), (0, import_kolmafia96.equippedItem)($slot(_templateObject5311 || (_templateObject5311 = _taggedTemplateLiteral83(["off-hand"])))))) (0, import_kolmafia96.equip)($slot(_templateObject5411 || (_templateObject5411 = _taggedTemplateLiteral83(["off-hand"]))), $item.none);
      var _iterator3 = _createForOfIteratorHelper20(nonaccessorySlots), _step3;
      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
          var slot = _step3.value;
          if (targetEquipment.includes((0, import_kolmafia96.equippedItem)(slot)) && this.equips.get(slot) !== (0, import_kolmafia96.equippedItem)(slot) || this.avoid.includes((0, import_kolmafia96.equippedItem)(slot))) (0, import_kolmafia96.equip)(slot, $item.none);
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
      var _iterator4 = _createForOfIteratorHelper20(nonaccessorySlots), _step4;
      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
          var _slot = _step4.value;
          var equipment = this.equips.get(_slot);
          if (equipment) {
            (0, import_kolmafia96.equip)(_slot, equipment);
            usedSlots.add(_slot);
          }
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }
      var accessorySlots = $slots(_templateObject5511 || (_templateObject5511 = _taggedTemplateLiteral83(["acc1, acc2, acc3"])));
      var accessoryEquips = accessorySlots.map(function(slot2) {
        return _this.equips.get(slot2);
      }).filter(function(item15) {
        return item15 !== void 0;
      });
      var missingAccessories = [];
      var _iterator5 = _createForOfIteratorHelper20(accessoryEquips), _step5;
      try {
        var _loop = function _loop3() {
          var accessory2 = _step5.value;
          var alreadyEquipped = accessorySlots.find(function(slot2) {
            return !usedSlots.has(slot2) && (0, import_kolmafia96.equippedItem)(slot2) === accessory2;
          });
          if (alreadyEquipped) {
            usedSlots.add(alreadyEquipped);
          } else {
            missingAccessories.push(accessory2);
          }
        };
        for (_iterator5.s(); !(_step5 = _iterator5.n()).done; ) {
          _loop();
        }
      } catch (err) {
        _iterator5.e(err);
      } finally {
        _iterator5.f();
      }
      for (var _i3 = 0, _missingAccessories = missingAccessories; _i3 < _missingAccessories.length; _i3++) {
        var accessory = _missingAccessories[_i3];
        var unusedSlot = accessorySlots.find(function(slot2) {
          return !usedSlots.has(slot2);
        });
        if (unusedSlot === void 0) {
          throw "No accessory slots remaining";
        }
        (0, import_kolmafia96.equip)(unusedSlot, accessory);
        usedSlots.add(unusedSlot);
      }
      var modes = convertToLibramModes(this.modes);
      if (this.modifier.length > 0 || _toConsumableArray31(this.bonuses).filter(function(_ref5) {
        var _ref6 = _slicedToArray30(_ref5, 2), value = _ref6[1];
        return value;
      }).length > 0) {
        var allRequirements = [new Requirement(this.modifier, {
          preventSlot: _toConsumableArray31(usedSlots),
          preventEquip: this.avoid,
          modes: modes,
          bonusEquip: this.bonuses
        })];
        if (refreshed) allRequirements.push(FORCE_REFRESH_REQUIREMENT);
        if (!Requirement.merge(allRequirements).maximize()) {
          if (!refreshed) {
            (0, import_kolmafia96.cliExecute)("refresh inventory");
            this._dress(true);
            return;
          } else throw new Error("Failed to maximize properly!");
        }
        (0, import_kolmafia96.logprint)("Maximize: ".concat(this.modifier));
      }
      applyModes(modes);
      if (bjorn && (0, import_kolmafia96.haveEquipped)($item(_templateObject5610 || (_templateObject5610 = _taggedTemplateLiteral83(["Buddy Bjorn"]))))) {
        if ((0, import_kolmafia96.myEnthronedFamiliar)() === bjorn) (0, import_kolmafia96.enthroneFamiliar)($familiar.none);
        if ((0, import_kolmafia96.myBjornedFamiliar)() !== bjorn) (0, import_kolmafia96.bjornifyFamiliar)(bjorn);
      }
      if (crown && (0, import_kolmafia96.haveEquipped)($item(_templateObject578 || (_templateObject578 = _taggedTemplateLiteral83(["Crown of Thrones"]))))) {
        if ((0, import_kolmafia96.myBjornedFamiliar)() === crown) (0, import_kolmafia96.bjornifyFamiliar)($familiar.none);
        if ((0, import_kolmafia96.myEnthronedFamiliar)() !== crown) (0, import_kolmafia96.enthroneFamiliar)(crown);
      }
      if (this.familiar !== void 0 && (0, import_kolmafia96.myFamiliar)() !== this.familiar) throw "Failed to fully dress (expected: familiar ".concat(this.familiar, ")");
      var _iterator6 = _createForOfIteratorHelper20(nonaccessorySlots), _step6;
      try {
        for (_iterator6.s(); !(_step6 = _iterator6.n()).done; ) {
          var _slot2 = _step6.value;
          if (this.equips.has(_slot2) && (0, import_kolmafia96.equippedItem)(_slot2) !== this.equips.get(_slot2)) {
            throw "Failed to fully dress (expected: ".concat(_slot2, " ").concat(this.equips.get(_slot2), ")");
          }
        }
      } catch (err) {
        _iterator6.e(err);
      } finally {
        _iterator6.f();
      }
      var _iterator7 = _createForOfIteratorHelper20(accessoryEquips), _step7;
      try {
        var _loop2 = function _loop22() {
          var accessory2 = _step7.value;
          if ((0, import_kolmafia96.equippedAmount)(accessory2) < accessoryEquips.filter(function(acc) {
            return acc === accessory2;
          }).length) {
            throw "Failed to fully dress (expected: acc ".concat(accessory2, ")");
          }
        };
        for (_iterator7.s(); !(_step7 = _iterator7.n()).done; ) {
          _loop2();
        }
      } catch (err) {
        _iterator7.e(err);
      } finally {
        _iterator7.f();
      }
      for (var _i4 = 0, _arr = [[$slot(_templateObject585 || (_templateObject585 = _taggedTemplateLiteral83(["buddy-bjorn"]))), $item(_templateObject595 || (_templateObject595 = _taggedTemplateLiteral83(["Buddy Bjorn"]))), import_kolmafia96.myBjornedFamiliar], [$slot(_templateObject605 || (_templateObject605 = _taggedTemplateLiteral83(["crown-of-thrones"]))), $item(_templateObject6111 || (_templateObject6111 = _taggedTemplateLiteral83(["Crown of Thrones"]))), import_kolmafia96.myEnthronedFamiliar]]; _i4 < _arr.length; _i4++) {
        var _arr$_i = _slicedToArray30(_arr[_i4], 3), rider = _arr$_i[0], throne = _arr$_i[1], checkingFunction = _arr$_i[2];
        var wanted = this.riders.get(rider);
        if (_toConsumableArray31(this.equips.values()).includes(throne) && wanted && checkingFunction() !== wanted) {
          throw "Failed to fully dress: (expected ".concat(rider, " ").concat(wanted, ")");
        }
      }
    }
  }, {
    key: "dress",
    value: function dress() {
      var _iterator8 = _createForOfIteratorHelper20(this.preActions), _step8;
      try {
        for (_iterator8.s(); !(_step8 = _iterator8.n()).done; ) {
          var action = _step8.value;
          action();
        }
      } catch (err) {
        _iterator8.e(err);
      } finally {
        _iterator8.f();
      }
      this._dress(false);
      var _iterator9 = _createForOfIteratorHelper20(this.postActions), _step9;
      try {
        for (_iterator9.s(); !(_step9 = _iterator9.n()).done; ) {
          var _action = _step9.value;
          _action();
        }
      } catch (err) {
        _iterator9.e(err);
      } finally {
        _iterator9.f();
      }
    }
    /**
     * Build an Outfit identical to this outfit.
     */
  }, {
    key: "clone",
    value: function clone() {
      var result = new Outfit2();
      result.equips = new Map(this.equips);
      result.skipDefaults = this.skipDefaults;
      result.familiar = this.familiar;
      result.modifier = _toConsumableArray31(this.modifier);
      result.avoid = _toConsumableArray31(this.avoid);
      result.modes = _objectSpread13({}, this.modes);
      result.riders = new Map(this.riders);
      result.bonuses = new Map(this.bonuses);
      result.beforeDress.apply(result, _toConsumableArray31(this.preActions));
      result.afterDress.apply(result, _toConsumableArray31(this.postActions));
      return result;
    }
    /**
     * Build an OutfitSpec identical to this outfit.
     */
  }, {
    key: "spec",
    value: function spec() {
      var _a;
      var result = {
        modifier: _toConsumableArray31(this.modifier),
        avoid: _toConsumableArray31(this.avoid),
        skipDefaults: this.skipDefaults,
        modes: _objectSpread13({}, this.modes),
        bonuses: new Map(this.bonuses)
      };
      if (this.familiar) result.familiar = this.familiar;
      for (var _i5 = 0, _outfitSlots2 = outfitSlots; _i5 < _outfitSlots2.length; _i5++) {
        var slotName = _outfitSlots2[_i5];
        var entry = this.equips.get((_a = (/* @__PURE__ */ new Map([["famequip", $slot(_templateObject6211 || (_templateObject6211 = _taggedTemplateLiteral83(["familiar"])))], ["offhand", $slot(_templateObject6311 || (_templateObject6311 = _taggedTemplateLiteral83(["off-hand"])))]])).get(slotName)) !== null && _a !== void 0 ? _a : (0, import_kolmafia96.toSlot)(slotName));
        if (entry) result[slotName] = entry;
      }
      var riders = {};
      var buddyRider = this.riders.get($slot(_templateObject6411 || (_templateObject6411 = _taggedTemplateLiteral83(["buddy-bjorn"]))));
      if (buddyRider !== void 0) riders["buddy-bjorn"] = buddyRider;
      var throneRider = this.riders.get($slot(_templateObject6510 || (_templateObject6510 = _taggedTemplateLiteral83(["crown-of-thrones"]))));
      if (throneRider !== void 0) riders["crown-of-thrones"] = throneRider;
      if (buddyRider !== void 0 || throneRider !== void 0) result.riders = riders;
      if (this.preActions.length) result.beforeDress = this.preActions;
      if (this.postActions.length) result.afterDress = this.postActions;
      return result;
    }
  }], [{
    key: "current",
    value: function current2() {
      var _a;
      var outfit2 = new Outfit2();
      var familiar10 = (0, import_kolmafia96.myFamiliar)();
      if (outfit2.equip(familiar10)) {
        throw "Failed to create outfit from current state (expected: familiar ".concat(familiar10, ")");
      }
      for (var _i6 = 0, _outfitSlots3 = outfitSlots; _i6 < _outfitSlots3.length; _i6++) {
        var slotName = _outfitSlots3[_i6];
        var slot = (_a = (/* @__PURE__ */ new Map([["famequip", $slot(_templateObject666 || (_templateObject666 = _taggedTemplateLiteral83(["familiar"])))], ["offhand", $slot(_templateObject675 || (_templateObject675 = _taggedTemplateLiteral83(["off-hand"])))]])).get(slotName)) !== null && _a !== void 0 ? _a : (0, import_kolmafia96.toSlot)(slotName);
        var item15 = (0, import_kolmafia96.equippedItem)(slot);
        if (!outfit2.equip(item15, slot)) {
          throw "Failed to create outfit from current state (expected: ".concat(slot, " ").concat(item15, ")");
        }
      }
      if ((0, import_kolmafia96.haveEquipped)($item(_templateObject685 || (_templateObject685 = _taggedTemplateLiteral83(["Crown of Thrones"]))))) outfit2.riders.set($slot(_templateObject695 || (_templateObject695 = _taggedTemplateLiteral83(["crown-of-thrones"]))), (0, import_kolmafia96.myEnthronedFamiliar)());
      if ((0, import_kolmafia96.haveEquipped)($item(_templateObject705 || (_templateObject705 = _taggedTemplateLiteral83(["Buddy Bjorn"]))))) outfit2.riders.set($slot(_templateObject7110 || (_templateObject7110 = _taggedTemplateLiteral83(["buddy-bjorn"]))), (0, import_kolmafia96.myBjornedFamiliar)());
      outfit2.setModes(getCurrentModes2());
      return outfit2;
    }
  }, {
    key: "from",
    value: function from(spec) {
      var error2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
      var _a;
      var outfit2 = new Outfit2();
      if (spec instanceof Requirement) {
        var result = {};
        result.modifier = spec.maximizeParameters;
        if ((_a = spec.maximizeOptions.forceEquip) === null || _a === void 0 ? void 0 : _a.length) {
          result.equip = spec.maximizeOptions.forceEquip;
        }
        result.avoid = spec.maximizeOptions.preventEquip;
        result.bonuses = spec.maximizeOptions.bonusEquip;
        if (spec.maximizeOptions.modes) {
          result.modes = convertFromLibramModes(spec.maximizeOptions.modes);
        }
        var cleanedResult = Object.fromEntries(_toConsumableArray31(Object.entries(result)).filter(function(_ref7) {
          var _ref8 = _slicedToArray30(_ref7, 2), v = _ref8[1];
          return v !== void 0;
        }));
        return Outfit2.from(cleanedResult);
      }
      var success = outfit2.equip(spec);
      if (!success && error2) throw error2;
      return success ? outfit2 : null;
    }
  }]);
}();
function convertToLibramModes(modes) {
  var _a;
  return {
    backupcamera: modes["backupcamera"],
    umbrella: modes["umbrella"],
    snowsuit: modes["snowsuit"],
    edpiece: modes["edpiece"],
    retrocape: (_a = modes["retrocape"]) === null || _a === void 0 ? void 0 : _a.filter(function(s) {
      return s !== void 0;
    }).join(" "),
    parka: modes["parka"],
    jillcandle: modes["jillcandle"]
  };
}
function convertFromLibramModes(modes) {
  return modes.retrocape ? _objectSpread13(_objectSpread13({}, modes), {}, {
    retrocape: modes.retrocape.split(" ")
  }) : modes;
}
function getCurrentModes2() {
  return {
    backupcamera: getMode("backupCameraMode", ["ml", "meat", "init"]),
    umbrella: getMode("umbrellaState", ["broken", "forward-facing", "bucket style", "pitchfork style", "constantly twirling", "cocoon"]),
    snowsuit: getMode("snowsuit", ["eyebrows", "smirk", "nose", "goatee", "hat"]),
    edpiece: getMode("edPiece", ["bear", "owl", "puma", "hyena", "mouse", "weasel", "fish"]),
    retrocape: [getMode("retroCapeSuperhero", ["vampire", "heck", "robot"]), getMode("retroCapeWashingInstructions", ["hold", "thrill", "kiss", "kill"])],
    parka: getMode("parkaMode", ["kachungasaur", "dilophosaur", "ghostasaurus", "spikolodon", "pterodactyl"]),
    jillcandle: getMode("jillcandle", ["disco", "ultraviolet", "reading", "red"])
  };
}
function getMode(property, options) {
  var val = get(property, "");
  return options.find(function(s) {
    return s === val;
  });
}
function weaponsCompatible(weapon2, offhand) {
  if (!weapon2 || weapon2 === $item(_templateObject7210 || (_templateObject7210 = _taggedTemplateLiteral83(["none"])))) return true;
  if (!offhand || offhand === $item(_templateObject7310 || (_templateObject7310 = _taggedTemplateLiteral83(["none"])))) return true;
  if ((0, import_kolmafia96.toSlot)(offhand) !== $slot(_templateObject7410 || (_templateObject7410 = _taggedTemplateLiteral83(["weapon"])))) return true;
  var weaponStat = (0, import_kolmafia96.weaponType)(weapon2);
  var offhandStat = (0, import_kolmafia96.weaponType)(offhand);
  if (weaponStat === $stat(_templateObject758 || (_templateObject758 = _taggedTemplateLiteral83(["Moxie"]))) && (offhandStat === $stat(_templateObject764 || (_templateObject764 = _taggedTemplateLiteral83(["Mysticality"]))) || offhandStat === $stat(_templateObject774 || (_templateObject774 = _taggedTemplateLiteral83(["Muscle"]))))) return false;
  if (offhandStat === $stat(_templateObject784 || (_templateObject784 = _taggedTemplateLiteral83(["Moxie"]))) && (weaponStat === $stat(_templateObject793 || (_templateObject793 = _taggedTemplateLiteral83(["Mysticality"]))) || weaponStat === $stat(_templateObject803 || (_templateObject803 = _taggedTemplateLiteral83(["Muscle"]))))) return false;
  return true;
}

// node_modules/grimoire-kolmafia/dist/engine.js
function _typeof31(o) {
  "@babel/helpers - typeof";
  return _typeof31 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof31(o);
}
var _templateObject579;
function _taggedTemplateLiteral84(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function _callSuper7(t, o, e) {
  return o = _getPrototypeOf7(o), _possibleConstructorReturn7(t, _isNativeReflectConstruct7() ? Reflect.construct(o, e || [], _getPrototypeOf7(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn7(t, e) {
  if (e && ("object" == _typeof31(e) || "function" == typeof e)) return e;
  if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
  return _assertThisInitialized7(t);
}
function _assertThisInitialized7(e) {
  if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e;
}
function _isNativeReflectConstruct7() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct7 = function _isNativeReflectConstruct10() {
    return !!t;
  })();
}
function _getPrototypeOf7(t) {
  return _getPrototypeOf7 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t2) {
    return t2.__proto__ || Object.getPrototypeOf(t2);
  }, _getPrototypeOf7(t);
}
function _inherits8(t, e) {
  if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
  t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: true, configurable: true } }), Object.defineProperty(t, "prototype", { writable: false }), e && _setPrototypeOf8(t, e);
}
function _setPrototypeOf8(t, e) {
  return _setPrototypeOf8 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t2, e2) {
    return t2.__proto__ = e2, t2;
  }, _setPrototypeOf8(t, e);
}
function _toConsumableArray32(r) {
  return _arrayWithoutHoles32(r) || _iterableToArray32(r) || _unsupportedIterableToArray47(r) || _nonIterableSpread32();
}
function _nonIterableSpread32() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray32(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles32(r) {
  if (Array.isArray(r)) return _arrayLikeToArray47(r);
}
function _slicedToArray31(r, e) {
  return _arrayWithHoles31(r) || _iterableToArrayLimit31(r, e) || _unsupportedIterableToArray47(r, e) || _nonIterableRest31();
}
function _nonIterableRest31() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit31(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles31(r) {
  if (Array.isArray(r)) return r;
}
function _createForOfIteratorHelper21(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t) {
    if (Array.isArray(r) || (t = _unsupportedIterableToArray47(r)) || e && r && "number" == typeof r.length) {
      t && (r = t);
      var _n = 0, F = function F2() {
      };
      return { s: F, n: function n() {
        return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
      }, e: function e2(r2) {
        throw r2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o, a = true, u = false;
  return { s: function s() {
    t = t.call(r);
  }, n: function n() {
    var r2 = t.next();
    return a = r2.done, r2;
  }, e: function e2(r2) {
    u = true, o = r2;
  }, f: function f() {
    try {
      a || null == t.return || t.return();
    } finally {
      if (u) throw o;
    }
  } };
}
function _unsupportedIterableToArray47(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray47(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray47(r, a) : void 0;
  }
}
function _arrayLikeToArray47(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function ownKeys14(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread14(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys14(Object(t), true).forEach(function(r2) {
      _defineProperty28(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys14(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty28(e, r, t) {
  return (r = _toPropertyKey31(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
}
function _defineProperties24(e, r) {
  for (var t = 0; t < r.length; t++) {
    var o = r[t];
    o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e, _toPropertyKey31(o.key), o);
  }
}
function _createClass24(e, r, t) {
  return r && _defineProperties24(e.prototype, r), t && _defineProperties24(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
}
function _toPropertyKey31(t) {
  var i = _toPrimitive31(t, "string");
  return "symbol" == _typeof31(i) ? i : i + "";
}
function _toPrimitive31(t, r) {
  if ("object" != _typeof31(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof31(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _classCallCheck24(a, n) {
  if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
var grimoireCCS = "grimoire_macro";
var ContextualEngine = /* @__PURE__ */ function() {
  function ContextualEngine2(tasks, options) {
    var _this = this;
    _classCallCheck24(this, ContextualEngine2);
    this.attempts = {};
    this.propertyManager = new PropertiesManager();
    this.tasks_by_name = /* @__PURE__ */ new Map();
    this.cachedCcsContents = "";
    this.options = options !== null && options !== void 0 ? options : {};
    this.tasks = tasks.map(function(task2) {
      return _objectSpread14(_objectSpread14({}, _this.options.default_task_options), task2);
    });
    var _iterator = _createForOfIteratorHelper21(this.tasks), _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done; ) {
        var task = _step.value;
        this.tasks_by_name.set(task.name, task);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    this.initPropertiesManager(this.propertyManager);
  }
  return _createClass24(ContextualEngine2, [{
    key: "getNextTask",
    value: function getNextTask() {
      var _this = this;
      return this.tasks.find(function(task) {
        return _this.available(task);
      });
    }
    /**
     * Continually get the next task and execute it.
     * @param actions If given, only perform up to this many tasks.
     */
  }, {
    key: "run",
    value: function run(actions) {
      for (var i = 0; i < (actions !== null && actions !== void 0 ? actions : Infinity); i++) {
        var task = this.getNextTask();
        if (!task) return;
        this.execute(task);
      }
    }
    /**
     * Close the engine and reset all properties.
     * After this has been called, this object should not be used.
     */
  }, {
    key: "destruct",
    value: function destruct() {
      this.propertyManager.resetAll();
      (0, import_kolmafia97.setAutoAttack)(0);
    }
    /**
     * Check if the given task is available at this moment.
     * @param task: The task to check.
     * @returns true if all dependencies are complete and the task is ready.
     *  Note that dependencies are not checked transitively. That is, if
     *  A depends on B which depends on C, then A is ready if B is complete
     *  (regardless of if C is complete or not).
     */
  }, {
    key: "available",
    value: function available7(task) {
      var _a, _b;
      if (((_a = task.limit) === null || _a === void 0 ? void 0 : _a.skip) !== void 0 && this.attempts[task.name] >= task.limit.skip) return false;
      var _iterator2 = _createForOfIteratorHelper21((_b = task.after) !== null && _b !== void 0 ? _b : []), _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
          var after = _step2.value;
          var after_task = this.tasks_by_name.get(after);
          if (after_task === void 0) throw "Unknown task dependency ".concat(after, " on ").concat(task.name);
          if (!after_task.completed(this.getContext(task))) return false;
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
      if (task.ready && !task.ready(this.getContext(task))) return false;
      if (task.completed(this.getContext(task))) return false;
      return true;
    }
    /**
     * Perform all steps to execute the provided task.
     * This is the main entry point for the Engine.
     * @param task The current executing task.
     */
  }, {
    key: "execute",
    value: function execute(task) {
      var _a, _b, _c, _d, _e;
      this.printExecutingMessage(task);
      var postcondition = (_b = (_a = task.limit) === null || _a === void 0 ? void 0 : _a.guard) === null || _b === void 0 ? void 0 : _b.call(_a, this.getContext(task));
      this.acquireItems(task);
      this.acquireEffects(task);
      var task_combat = (_d = (_c = task.combat) === null || _c === void 0 ? void 0 : _c.clone()) !== null && _d !== void 0 ? _d : new CombatStrategy();
      var outfit2 = this.createOutfit(task);
      var task_resources = new CombatResources();
      this.customize(task, outfit2, task_combat, task_resources);
      this.dress(task, outfit2);
      this.setCombat(task, task_combat, task_resources);
      this.setChoices(task, this.propertyManager);
      var _iterator3 = _createForOfIteratorHelper21(task_resources.all()), _step3;
      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
          var resource = _step3.value;
          (_e = resource.prepare) === null || _e === void 0 ? void 0 : _e.call(resource, this.getContext(task));
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
      this.prepare(task);
      this.do(task);
      while (this.shouldRepeatAdv(task)) {
        _set("lastEncounter", "");
        this.do(task);
      }
      this.post(task);
      this.markAttempt(task);
      this.checkLimits(task, postcondition);
    }
    /**
     * Print a message to indicate the task has begun.
     * @param task The current executing task.
     */
  }, {
    key: "printExecutingMessage",
    value: function printExecutingMessage(task) {
      (0, import_kolmafia97.print)("");
      (0, import_kolmafia97.print)("Executing ".concat(task.name), "blue");
    }
    /**
     * Acquire all items for the task.
     * @param task The current executing task.
     */
  }, {
    key: "acquireItems",
    value: function acquireItems(task) {
      var _a;
      var acquire = undelay(task.acquire, this.getContext(task));
      var _iterator4 = _createForOfIteratorHelper21(acquire || []), _step4;
      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
          var to_get = _step4.value;
          var num_needed = (_a = to_get.num) !== null && _a !== void 0 ? _a : 1;
          var num_have = (0, import_kolmafia97.itemAmount)(to_get.item) + (0, import_kolmafia97.equippedAmount)(to_get.item);
          if (num_needed <= num_have) continue;
          if (to_get.useful !== void 0 && !to_get.useful()) continue;
          if (to_get.get) {
            to_get.get();
          } else if (to_get.price !== void 0) {
            (0, import_kolmafia97.buy)(to_get.item, num_needed - num_have, to_get.price);
          } else if (Object.keys((0, import_kolmafia97.getRelated)(to_get.item, "fold")).length > 0) {
            (0, import_kolmafia97.cliExecute)("fold ".concat(to_get.item));
          } else {
            (0, import_kolmafia97.retrieveItem)(to_get.item, num_needed);
          }
          if ((0, import_kolmafia97.itemAmount)(to_get.item) + (0, import_kolmafia97.equippedAmount)(to_get.item) < num_needed && !to_get.optional) {
            throw "Task ".concat(task.name, " was unable to acquire ").concat(num_needed, " ").concat(to_get.item);
          }
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }
    }
    /**
     * Acquire all effects for the task.
     * @param task The current executing task.
     */
  }, {
    key: "acquireEffects",
    value: function acquireEffects(task) {
      var _a;
      var effects = (_a = undelay(task.effects, this.getContext(task))) !== null && _a !== void 0 ? _a : [];
      var songs = effects.filter(function(effect3) {
        return isSong(effect3);
      });
      if (songs.length > maxSongs()) throw "Too many AT songs";
      var extraSongs = Object.keys((0, import_kolmafia97.myEffects)()).map(function(effectName) {
        return (0, import_kolmafia97.toEffect)(effectName);
      }).filter(function(effect3) {
        return isSong(effect3) && !songs.includes(effect3);
      });
      while (songs.length + extraSongs.length > maxSongs()) {
        var toRemove = extraSongs.pop();
        if (toRemove === void 0) {
          break;
        } else {
          uneffect(toRemove);
        }
      }
      var _iterator5 = _createForOfIteratorHelper21(effects), _step5;
      try {
        for (_iterator5.s(); !(_step5 = _iterator5.n()).done; ) {
          var effect2 = _step5.value;
          ensureEffect(effect2);
        }
      } catch (err) {
        _iterator5.e(err);
      } finally {
        _iterator5.f();
      }
    }
    /**
     * Create an outfit for the task with all required equipment.
     * @param task The current executing task.
     */
  }, {
    key: "createOutfit",
    value: function createOutfit(task) {
      var spec = undelay(task.outfit, this.getContext(task));
      if (spec instanceof Outfit) return spec.clone();
      var outfit2 = new Outfit();
      if (spec !== void 0) {
        if (!outfit2.equip(spec) && !this.options.allow_partial_outfits) {
          throw "Unable to equip all items for ".concat(task.name);
        }
      }
      return outfit2;
    }
    /**
     * Equip the outfit for the task.
     * @param task The current executing task.
     * @param outfit The outfit for the task, possibly augmented by the engine.
     */
  }, {
    key: "dress",
    value: function dress(task, outfit2) {
      if (task.do instanceof import_kolmafia97.Location) (0, import_kolmafia97.setLocation)(task.do);
      outfit2.dress();
    }
    /* eslint-disable @typescript-eslint/no-unused-vars */
    /**
     * Perform any engine-specific customization for the outfit and combat plan.
     *
     * This is a natural method to override in order to:
     *   * Enable the use of any resources in the outfit or combat (e.g., allocate banishers).
     *   * Equip a default outfit.
     *   * Determine additional monster macros at a global level (e.g., use flyers).
     * @param task The current executing task.
     * @param outfit The outfit for the task.
     * @param combat The combat strategy so far for the task.
     * @param resources The combat resources assigned so far for the task.
     */
  }, {
    key: "customize",
    value: function customize(task, outfit2, combat, resources) {
    }
    /* eslint-enable @typescript-eslint/no-unused-vars */
    /**
     * Set the choice settings for the task.
     * @param task The current executing task.
     * @param manager The property manager to use.
     */
  }, {
    key: "setChoices",
    value: function setChoices(task, manager) {
      var _a;
      for (var _i = 0, _Object$entries = Object.entries(undelay((_a = task.choices) !== null && _a !== void 0 ? _a : {}, this.getContext(task))); _i < _Object$entries.length; _i++) {
        var _Object$entries$_i = _slicedToArray31(_Object$entries[_i], 2), key = _Object$entries$_i[0], value = _Object$entries$_i[1];
        if (value === void 0) continue;
        manager.setChoice(parseInt(key), value);
      }
    }
    /**
     * Save the combat macro for this task.
     * @param task The current executing task.
     * @param task_combat The completed combat strategy far for the task.
     * @param task_resources The combat resources assigned for the task.
     */
  }, {
    key: "setCombat",
    value: function setCombat(task, task_combat, task_resources) {
      var _a;
      var macro = task_combat.compile(task_resources, (_a = this.options) === null || _a === void 0 ? void 0 : _a.combat_defaults, task.do instanceof import_kolmafia97.Location ? task.do : void 0, this.getContext(task));
      macro.save();
      if (!this.options.ccs) {
        var otherCCSEntries = task_combat.compileCcs();
        var ccsContents = ["[default]", '"'.concat(macro.toString(), '"')].concat(_toConsumableArray32(otherCCSEntries)).join("\n");
        (0, import_kolmafia97.logprint)("CCS: ".concat(ccsContents.replace("\n", "\\n ")));
        if (ccsContents !== this.cachedCcsContents) {
          (0, import_kolmafia97.writeCcs)(ccsContents, grimoireCCS);
          (0, import_kolmafia97.cliExecute)("ccs ".concat(grimoireCCS));
          this.cachedCcsContents = ccsContents;
        }
      }
      var autoattack = task_combat.compileAutoattack(this.getContext(task));
      if (autoattack.toString().length > 1) {
        (0, import_kolmafia97.logprint)("Autoattack macro: ".concat(autoattack.toString()));
        autoattack.setAutoAttack();
      } else {
        (0, import_kolmafia97.setAutoAttack)(0);
      }
    }
    /**
     * Do any task-specific preparation.
     * @param task The current executing task.
     */
  }, {
    key: "prepare",
    value: function prepare(task) {
      var _a;
      (_a = task.prepare) === null || _a === void 0 ? void 0 : _a.call(task, this.getContext(task));
    }
    /**
     * Actually perform the task.
     * @param task The current executing task.
     */
  }, {
    key: "do",
    value: function _do(task) {
      var result = typeof task.do === "function" ? task.do(this.getContext(task)) : task.do;
      if (result instanceof import_kolmafia97.Location) (0, import_kolmafia97.adv1)(result, -1, "");
      (0, import_kolmafia97.runCombat)();
      while ((0, import_kolmafia97.inMultiFight)()) (0, import_kolmafia97.runCombat)();
      if ((0, import_kolmafia97.choiceFollowsFight)()) (0, import_kolmafia97.runChoice)(-1);
    }
    /**
     * Check if the task.do should be immediately repeated without any prep.
     *
     * By default, this is only used to repeat a task if we hit one of:
     *   1. Halloweener dog noncombats,
     *   2. June cleaver noncombats,
     *   3. Lil' Doctor™ bag noncombat, or
     *   4. Turtle taming noncombats.
     * @param task The current executing task.
     * @returns True if the task should be immediately repeated.
     */
  }, {
    key: "shouldRepeatAdv",
    value: function shouldRepeatAdv(task) {
      return task.do instanceof import_kolmafia97.Location && lastEncounterWasWanderingNC();
    }
    /**
     * Do any task-specific wrapup activities.
     * @param task The current executing task.
     */
  }, {
    key: "post",
    value: function post(task) {
      var _a;
      (_a = task.post) === null || _a === void 0 ? void 0 : _a.call(task, this.getContext(task));
    }
    /**
     * Mark that an attempt was made on the current task.
     * @param task The current executing task.
     */
  }, {
    key: "markAttempt",
    value: function markAttempt(task) {
      if (!(task.name in this.attempts)) this.attempts[task.name] = 0;
      this.attempts[task.name]++;
    }
    /**
     * Check if the task has passed any of its internal limits.
     * @param task The task to check.
     * @param postcondition The postcondition from the task guard.
     * @throws An error if any of the internal limits have been passed.
     */
  }, {
    key: "checkLimits",
    value: function checkLimits(task, postcondition) {
      var _a;
      if (!task.limit) return;
      var failureMessage = task.limit.message ? " ".concat(task.limit.message) : "";
      if (!task.completed(this.getContext(task))) {
        if (task.limit.tries && this.attempts[task.name] >= task.limit.tries) throw "Task ".concat(task.name, " did not complete within ").concat(task.limit.tries, " attempts. Please check what went wrong.").concat(failureMessage);
        if (task.limit.soft && this.attempts[task.name] >= task.limit.soft) throw "Task ".concat(task.name, " did not complete within ").concat(task.limit.soft, " attempts. Please check what went wrong (you may just be unlucky).").concat(failureMessage);
        if (task.limit.turns && task.do instanceof import_kolmafia97.Location && task.do.turnsSpent >= task.limit.turns) throw "Task ".concat(task.name, " did not complete within ").concat(task.limit.turns, " turns. Please check what went wrong.").concat(failureMessage);
        if (task.limit.unready && ((_a = task.ready) === null || _a === void 0 ? void 0 : _a.call(task, this.getContext(task)))) throw "Task ".concat(task.name, " is still ready, but it should not be. Please check what went wrong.").concat(failureMessage);
        if (task.limit.completed) throw "Task ".concat(task.name, " is not completed, but it should be. Please check what went wrong.").concat(failureMessage);
      }
      if (postcondition && !postcondition()) {
        throw "Task ".concat(task.name, " failed its guard. Please check what went wrong.").concat(failureMessage);
      }
    }
  }, {
    key: "getDefaultSettings",
    value: function getDefaultSettings() {
      return this.constructor.defaultSettings;
    }
    /**
     * Initialize properties for the script.
     * @param manager The properties manager to use.
     */
  }, {
    key: "initPropertiesManager",
    value: function initPropertiesManager(manager) {
      var _a;
      manager.set(this.getDefaultSettings());
      if (this.options.ccs !== "") {
        if (this.options.ccs === void 0 && (0, import_kolmafia97.readCcs)(grimoireCCS) === "") {
          (0, import_kolmafia97.writeCcs)("[ default ]\nabort", grimoireCCS);
        }
        manager.set({
          customCombatScript: (_a = this.options.ccs) !== null && _a !== void 0 ? _a : grimoireCCS
        });
      }
    }
  }]);
}();
ContextualEngine.defaultSettings = {
  logPreferenceChange: true,
  logPreferenceChangeFilter: _toConsumableArray32(new Set([].concat(_toConsumableArray32(get("logPreferenceChangeFilter").split(",")), ["libram_savedMacro", "maximizerMRUList", "testudinalTeachings", "_lastCombatStarted"]))).sort().filter(function(a) {
    return a;
  }).join(","),
  battleAction: "custom combat script",
  autoSatisfyWithMall: true,
  autoSatisfyWithNPCs: true,
  autoSatisfyWithCoinmasters: true,
  autoSatisfyWithStash: false,
  dontStopForCounters: true,
  maximizerFoldables: true,
  hpAutoRecovery: "-0.05",
  hpAutoRecoveryTarget: "0.0",
  mpAutoRecovery: "-0.05",
  mpAutoRecoveryTarget: "0.0",
  afterAdventureScript: "",
  betweenBattleScript: "",
  choiceAdventureScript: "",
  familiarScript: "",
  currentMood: "apathetic",
  autoTuxedo: true,
  autoPinkyRing: true,
  autoGarish: true,
  allowNonMoodBurning: false,
  allowSummonBurning: true,
  libramSkillsSoftcore: "none"
};
var Engine = /* @__PURE__ */ function(_ContextualEngine) {
  function Engine2() {
    _classCallCheck24(this, Engine2);
    return _callSuper7(this, Engine2, arguments);
  }
  _inherits8(Engine2, _ContextualEngine);
  return _createClass24(Engine2, [{
    key: "getContext",
    value: (
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      function getContext(task) {
        return;
      }
    )
  }]);
}(ContextualEngine);
function maxSongs() {
  return have($skill(_templateObject579 || (_templateObject579 = _taggedTemplateLiteral84(["Mariachi Memory"])))) ? 4 : 3;
}
var wanderingNCs = /* @__PURE__ */ new Set([
  // Halloweener dog noncombats
  "Wooof! Wooooooof!",
  "Playing Fetch*",
  // June cleaver noncombats
  "Aunts not Ants",
  "Bath Time",
  "Beware of Aligator",
  "Delicious Sprouts",
  "Hypnotic Master",
  "Lost and Found",
  "Poetic Justice",
  "Summer Days",
  "Teacher's Pet",
  // Lil' Doctor™ bag noncombat
  "A Pound of Cure"
]);
var environmentSpecificNCs = /* @__PURE__ */ new Map([["Even Tamer Than Usual", "indoor"], ["Never Break the Chain", "indoor"], ["Close, but Yes Cigar", "indoor"], ["Armchair Quarterback", "indoor"], ["This Turtle Rocks!", "outdoor"], ["Really Sticking Her Neck Out", "outdoor"], ["It Came from Beneath the Sewer? Great!", "outdoor"], ["Don't Be Alarmed, Now", "outdoor"], ["Puttin' it on Wax", "underground"], ["More Like... Hurtle", "underground"], ["Musk! Musk! Musk!", "underground"], ["Silent Strolling", "underwater"]]);
var zoneSpecificNCs = new Map(Object.entries((0, import_kolmafia97.fileToBuffer)("data/encounters.txt").split("\n").reduce(function(obj, line) {
  var _a;
  var _line$split = line.split("	"), _line$split2 = _slicedToArray31(_line$split, 3), location7 = _line$split2[0], type = _line$split2[1], name = _line$split2[2];
  if (type !== "TURTLE" || location7 === "*") return obj;
  return _objectSpread14(_objectSpread14({}, obj), {}, _defineProperty28({}, name, [].concat(_toConsumableArray32((_a = obj[name]) !== null && _a !== void 0 ? _a : []), [(0, import_kolmafia97.toLocation)(location7)])));
}, {})));
function lastEncounterWasWanderingNC() {
  var _a, _b, _c;
  var last = get("lastEncounter");
  if (zoneSpecificNCs.has(last)) {
    var zones = (_a = zoneSpecificNCs.get(last)) !== null && _a !== void 0 ? _a : [];
    return zones.includes((_b = get("lastAdventure")) !== null && _b !== void 0 ? _b : $location.none);
  } else {
    var environment = environmentSpecificNCs.get(last);
    if (environment === ((_c = get("lastAdventure")) === null || _c === void 0 ? void 0 : _c.environment)) return true;
    return wanderingNCs.has(last);
  }
}

// node_modules/grimoire-kolmafia/dist/route.js
function _typeof32(o) {
  "@babel/helpers - typeof";
  return _typeof32 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof32(o);
}
function ownKeys15(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread15(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys15(Object(t), true).forEach(function(r2) {
      _defineProperty29(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys15(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty29(e, r, t) {
  return (r = _toPropertyKey32(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
}
function _toPropertyKey32(t) {
  var i = _toPrimitive32(t, "string");
  return "symbol" == _typeof32(i) ? i : i + "";
}
function _toPrimitive32(t, r) {
  if ("object" != _typeof32(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof32(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _createForOfIteratorHelper22(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t) {
    if (Array.isArray(r) || (t = _unsupportedIterableToArray48(r)) || e && r && "number" == typeof r.length) {
      t && (r = t);
      var _n = 0, F = function F2() {
      };
      return { s: F, n: function n() {
        return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
      }, e: function e2(r2) {
        throw r2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o, a = true, u = false;
  return { s: function s() {
    t = t.call(r);
  }, n: function n() {
    var r2 = t.next();
    return a = r2.done, r2;
  }, e: function e2(r2) {
    u = true, o = r2;
  }, f: function f() {
    try {
      a || null == t.return || t.return();
    } finally {
      if (u) throw o;
    }
  } };
}
function _unsupportedIterableToArray48(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray48(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray48(r, a) : void 0;
  }
}
function _arrayLikeToArray48(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function getTasks(quests2) {
  var implicitAfter = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
  var verifyTaskDependencies = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true;
  var _a;
  var result = [];
  var _iterator = _createForOfIteratorHelper22(quests2), _step;
  try {
    var _loop = function _loop2() {
      var quest7 = _step.value;
      var questCompleted = quest7.completed;
      var questReady = quest7.ready;
      var _iterator2 = _createForOfIteratorHelper22(quest7.tasks), _step2;
      try {
        var _loop22 = function _loop23() {
          var task = _step2.value;
          var renamedTask = _objectSpread15({}, task);
          renamedTask.name = "".concat(quest7.name, "/").concat(task.name);
          renamedTask.after = (_a = task.after) === null || _a === void 0 ? void 0 : _a.map(function(after) {
            return after.includes("/") ? after : "".concat(quest7.name, "/").concat(after);
          });
          if (implicitAfter && task.after === void 0 && result.length > 0) renamedTask.after = [result[result.length - 1].name];
          if (questCompleted !== void 0) {
            var taskCompleted = task.completed;
            renamedTask.completed = function() {
              return questCompleted() || taskCompleted();
            };
          }
          var taskReady = renamedTask.ready;
          if (questReady !== void 0 && taskReady !== void 0) {
            renamedTask.ready = function() {
              return questReady() && taskReady();
            };
          } else if (questReady !== void 0) {
            renamedTask.ready = function() {
              return questReady();
            };
          }
          result.push(renamedTask);
        };
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
          _loop22();
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    };
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      _loop();
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  if (verifyTaskDependencies) verifyDependencies(result);
  return result;
}
function verifyDependencies(tasks) {
  var _a;
  var names = /* @__PURE__ */ new Set();
  var _iterator3 = _createForOfIteratorHelper22(tasks), _step3;
  try {
    for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
      var task = _step3.value;
      names.add(task.name);
    }
  } catch (err) {
    _iterator3.e(err);
  } finally {
    _iterator3.f();
  }
  var _iterator4 = _createForOfIteratorHelper22(tasks), _step4;
  try {
    for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
      var _task = _step4.value;
      var _iterator5 = _createForOfIteratorHelper22((_a = _task.after) !== null && _a !== void 0 ? _a : []), _step5;
      try {
        for (_iterator5.s(); !(_step5 = _iterator5.n()).done; ) {
          var after = _step5.value;
          if (!names.has(after)) {
            throw "Unknown task dependency ".concat(after, " of ").concat(_task.name);
          }
        }
      } catch (err) {
        _iterator5.e(err);
      } finally {
        _iterator5.f();
      }
    }
  } catch (err) {
    _iterator4.e(err);
  } finally {
    _iterator4.f();
  }
  return tasks;
}

// src/main.ts
var import_kolmafia109 = require("kolmafia");
init_dist();

// src/engine.ts
var import_kolmafia100 = require("kolmafia");
init_dist();

// src/garboValue.ts
var import_garbo_lib = __toESM(require_dist(), 1);
init_dist();
var _templateObject580;
function _taggedTemplateLiteral85(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
var _valueFunctions = void 0;
function garboValueFunctions() {
  if (!_valueFunctions) {
    _valueFunctions = (0, import_garbo_lib.makeValue)({
      itemValues: /* @__PURE__ */ new Map([[$item(_templateObject580 || (_templateObject580 = _taggedTemplateLiteral85(["fake hand"]))), 5e4]])
    });
  }
  return _valueFunctions;
}
function garboValue(item15) {
  return garboValueFunctions().value(item15);
}
function garboAverageValue() {
  var _garboValueFunctions;
  return (_garboValueFunctions = garboValueFunctions()).averageValue.apply(_garboValueFunctions, arguments);
}

// src/juneCleaver.ts
var import_kolmafia99 = require("kolmafia");
init_dist();

// src/lib.ts
var import_kolmafia98 = require("kolmafia");
init_dist();
var _templateObject581;
function _taggedTemplateLiteral86(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function maxBy2(array, optimizer) {
  var reverse = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
  if (typeof optimizer === "function") {
    return maxBy2(array.map(function(key) {
      return {
        key: key,
        value: optimizer(key)
      };
    }), "value", reverse).key;
  } else {
    return array.reduce(function(a, b) {
      return a[optimizer] > b[optimizer] !== reverse ? a : b;
    });
  }
}
function shouldRedigitize() {
  var digitizesLeft = SourceTerminal_exports.getDigitizeUsesRemaining();
  var monsterCount = SourceTerminal_exports.getDigitizeMonsterCount() + 1;
  var digitizeAdventuresUsed = monsterCount * (monsterCount + 1) * 5 - 3;
  return SourceTerminal_exports.have() && SourceTerminal_exports.canDigitize() && (0, import_kolmafia98.myAdventures)() / 0.96 < digitizesLeft * digitizeAdventuresUsed;
}
var HIGHLIGHT = (0, import_kolmafia98.isDarkMode)() ? "yellow" : "blue";
function printh(message) {
  (0, import_kolmafia98.print)(message, HIGHLIGHT);
}
function printd(message) {
  if (args.debug) {
    (0, import_kolmafia98.print)(message, HIGHLIGHT);
  }
}
function sober() {
  return (0, import_kolmafia98.myInebriety)() <= (0, import_kolmafia98.inebrietyLimit)() + ((0, import_kolmafia98.myFamiliar)() === $familiar(_templateObject581 || (_templateObject581 = _taggedTemplateLiteral86(["Stooper"]))) ? -1 : 0);
}
var args = Args.create("chrono", "A script for farming chroner", {
  turns: Args.number({
    help: "The number of turns to run (use negative numbers for the number of turns remaining)",
    default: Infinity
  }),
  mode: Args.string({
    options: [["capsule", "Farm Time Capsules from the Cave Before Time"], ["future", "Farm... something from the Automated Future"], ["rock", "Get Caveman Dan's Favorite Rock - duped as much as possible"], ["rose", "Farm Roses from The Main Stage"], ["skeleton", "Farm rares from skeletal fascists"], ["soup", "Farm soup ingredients from the Primordial Stew"]],
    default: "rose"
  }),
  debug: Args.flag({
    help: "Turn on debug printing",
    default: false
  })
});
function getCMCChoices() {
  var options = (0, import_kolmafia98.visitUrl)("campground.php?action=workshed");
  var i = 0;
  var match;
  var entries = [];
  var regexp = /descitem\((\d+)\)/g;
  while ((match = regexp.exec(options)) !== null) {
    entries.push(["".concat((0, import_kolmafia98.descToItem)(match[1])), ++i]);
  }
  return Object.fromEntries(entries);
}
function tryGetCMCItem(item15) {
  var choice = getCMCChoices()["".concat(item15)];
  if (choice) {
    (0, import_kolmafia98.runChoice)(choice);
  }
}
function countEnvironment(environment) {
  return get("lastCombatEnvironments").split("").filter(function(e) {
    return e === environment;
  }).length;
}
function realmAvailable2(identifier) {
  if (identifier === "fantasy") {
    return get("_frToday") || get("frAlways");
  } else if (identifier === "pirate") {
    return get("_prToday") || get("prAlways");
  }
  return get("_".concat(identifier, "AirportToday"), false) || get("".concat(identifier, "AirportAlways"), false);
}
function getBestAutomatedFutureSide() {
  var _page$match$, _page$match, _page$match$2, _page$match2;
  var stored = import_kolmafia98.sessionStorage.getItem("automatedFutureBest");
  if (stored) return stored;
  var page = (0, import_kolmafia98.visitUrl)("place.php?whichplace=twitch");
  var springbros = Number((_page$match$ = (_page$match = page.match(/title='(-?\d+)' href=adventure.php\?snarfblat=581/)) === null || _page$match === void 0 ? void 0 : _page$match[1]) !== null && _page$match$ !== void 0 ? _page$match$ : "0");
  var boltsmann = Number((_page$match$2 = (_page$match2 = page.match(/title='(-?\d+)' href=adventure.php\?snarfblat=582/)) === null || _page$match2 === void 0 ? void 0 : _page$match2[1]) !== null && _page$match$2 !== void 0 ? _page$match$2 : "0");
  var best = springbros > boltsmann ? "springbros" : "boltsmann";
  import_kolmafia98.sessionStorage.setItem("automatedFutureBest", best);
  return best;
}

// src/juneCleaver.ts
var _templateObject586;
var _templateObject2150;
var _templateObject3137;
var _templateObject4118;
var _templateObject587;
var _templateObject667;
var _templateObject759;
var _templateObject848;
function _toConsumableArray33(r) {
  return _arrayWithoutHoles33(r) || _iterableToArray33(r) || _unsupportedIterableToArray49(r) || _nonIterableSpread33();
}
function _nonIterableSpread33() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray49(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray49(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray49(r, a) : void 0;
  }
}
function _iterableToArray33(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles33(r) {
  if (Array.isArray(r)) return _arrayLikeToArray49(r);
}
function _arrayLikeToArray49(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _taggedTemplateLiteral87(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
var juneCleaverChoiceValues = {
  1467: {
    1: 0,
    2: 0,
    3: 5 * get("valueOfAdventure")
  },
  1468: {
    1: 0,
    2: 5,
    3: 0
  },
  1469: {
    1: 0,
    2: $item(_templateObject586 || (_templateObject586 = _taggedTemplateLiteral87(["Dad's brandy"]))),
    3: 1500
  },
  1470: {
    1: 0,
    2: $item(_templateObject2150 || (_templateObject2150 = _taggedTemplateLiteral87(["teacher's pen"]))),
    3: 0
  },
  1471: {
    1: $item(_templateObject3137 || (_templateObject3137 = _taggedTemplateLiteral87(["savings bond"]))),
    2: 250,
    3: 0
  },
  1472: {
    1: $item(_templateObject4118 || (_templateObject4118 = _taggedTemplateLiteral87(["trampled ticket stub"]))),
    2: $item(_templateObject587 || (_templateObject587 = _taggedTemplateLiteral87(["fire-roasted lake trout"]))),
    3: 0
  },
  1473: {
    1: $item(_templateObject667 || (_templateObject667 = _taggedTemplateLiteral87(["gob of wet hair"]))),
    2: 0,
    3: 0
  },
  1474: {
    1: 0,
    2: $item(_templateObject759 || (_templateObject759 = _taggedTemplateLiteral87(["guilty sprout"]))),
    3: 0
  },
  1475: {
    1: $item(_templateObject848 || (_templateObject848 = _taggedTemplateLiteral87(["mother's necklace"]))),
    2: 0,
    3: 0
  }
};
function valueJuneCleaverOption(result) {
  return result instanceof import_kolmafia99.Item ? garboValue(result) : result;
}
function bestJuneCleaverOption(id) {
  var options = [1, 2, 3];
  return maxBy2(options, function(option) {
    return valueJuneCleaverOption(juneCleaverChoiceValues[id][option]);
  });
}
var juneCleaverSkipChoices;
function skipJuneCleaverChoices() {
  if (!juneCleaverSkipChoices) {
    juneCleaverSkipChoices = _toConsumableArray33(JuneCleaver_exports.choices).sort(function(a, b) {
      return valueJuneCleaverOption(juneCleaverChoiceValues[a][bestJuneCleaverOption(a)]) - valueJuneCleaverOption(juneCleaverChoiceValues[b][bestJuneCleaverOption(b)]);
    }).splice(0, 3);
  }
  return juneCleaverSkipChoices;
}
function shouldSkip(choice) {
  return JuneCleaver_exports.skipsRemaining() > 0 && skipJuneCleaverChoices().includes(choice);
}

// src/engine.ts
function _typeof33(o) {
  "@babel/helpers - typeof";
  return _typeof33 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof33(o);
}
var _templateObject588;
var _templateObject2151;
var _templateObject3138;
var _templateObject4119;
var _templateObject589;
function _createForOfIteratorHelper23(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t) {
    if (Array.isArray(r) || (t = _unsupportedIterableToArray50(r)) || e && r && "number" == typeof r.length) {
      t && (r = t);
      var _n = 0, F = function F2() {
      };
      return { s: F, n: function n() {
        return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
      }, e: function e2(r2) {
        throw r2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o, a = true, u = false;
  return { s: function s() {
    t = t.call(r);
  }, n: function n() {
    var r2 = t.next();
    return a = r2.done, r2;
  }, e: function e2(r2) {
    u = true, o = r2;
  }, f: function f() {
    try {
      a || null == t.return || t.return();
    } finally {
      if (u) throw o;
    }
  } };
}
function _taggedTemplateLiteral88(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function _superPropGet2(t, o, e, r) {
  var p = _get2(_getPrototypeOf8(1 & r ? t.prototype : t), o, e);
  return 2 & r && "function" == typeof p ? function(t2) {
    return p.apply(e, t2);
  } : p;
}
function _get2() {
  return _get2 = "undefined" != typeof Reflect && Reflect.get ? Reflect.get.bind() : function(e, t, r) {
    var p = _superPropBase2(e, t);
    if (p) {
      var n = Object.getOwnPropertyDescriptor(p, t);
      return n.get ? n.get.call(arguments.length < 3 ? e : r) : n.value;
    }
  }, _get2.apply(null, arguments);
}
function _superPropBase2(t, o) {
  for (; !{}.hasOwnProperty.call(t, o) && null !== (t = _getPrototypeOf8(t)); ) ;
  return t;
}
function _slicedToArray32(r, e) {
  return _arrayWithHoles32(r) || _iterableToArrayLimit32(r, e) || _unsupportedIterableToArray50(r, e) || _nonIterableRest32();
}
function _nonIterableRest32() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit32(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles32(r) {
  if (Array.isArray(r)) return r;
}
function _toConsumableArray34(r) {
  return _arrayWithoutHoles34(r) || _iterableToArray34(r) || _unsupportedIterableToArray50(r) || _nonIterableSpread34();
}
function _nonIterableSpread34() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray50(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray50(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray50(r, a) : void 0;
  }
}
function _iterableToArray34(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles34(r) {
  if (Array.isArray(r)) return _arrayLikeToArray50(r);
}
function _arrayLikeToArray50(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _defineProperties25(e, r) {
  for (var t = 0; t < r.length; t++) {
    var o = r[t];
    o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e, _toPropertyKey33(o.key), o);
  }
}
function _createClass25(e, r, t) {
  return r && _defineProperties25(e.prototype, r), t && _defineProperties25(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
}
function _toPropertyKey33(t) {
  var i = _toPrimitive33(t, "string");
  return "symbol" == _typeof33(i) ? i : i + "";
}
function _toPrimitive33(t, r) {
  if ("object" != _typeof33(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof33(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _classCallCheck25(a, n) {
  if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _callSuper8(t, o, e) {
  return o = _getPrototypeOf8(o), _possibleConstructorReturn8(t, _isNativeReflectConstruct8() ? Reflect.construct(o, e || [], _getPrototypeOf8(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn8(t, e) {
  if (e && ("object" == _typeof33(e) || "function" == typeof e)) return e;
  if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
  return _assertThisInitialized8(t);
}
function _assertThisInitialized8(e) {
  if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e;
}
function _isNativeReflectConstruct8() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct8 = function _isNativeReflectConstruct10() {
    return !!t;
  })();
}
function _getPrototypeOf8(t) {
  return _getPrototypeOf8 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t2) {
    return t2.__proto__ || Object.getPrototypeOf(t2);
  }, _getPrototypeOf8(t);
}
function _inherits9(t, e) {
  if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
  t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: true, configurable: true } }), Object.defineProperty(t, "prototype", { writable: false }), e && _setPrototypeOf9(t, e);
}
function _setPrototypeOf9(t, e) {
  return _setPrototypeOf9 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t2, e2) {
    return t2.__proto__ = e2, t2;
  }, _setPrototypeOf9(t, e);
}
var introAdventures = ["The Cave Before Time"];
var ChronerStrategy = /* @__PURE__ */ function(_CombatStrategy) {
  function ChronerStrategy2(macro) {
    var _this;
    _classCallCheck25(this, ChronerStrategy2);
    _this = _callSuper8(this, ChronerStrategy2);
    _this.macro(macro).autoattack(macro);
    return _this;
  }
  _inherits9(ChronerStrategy2, _CombatStrategy);
  return _createClass25(ChronerStrategy2);
}(CombatStrategy);
function dropsValueFunction(drops) {
  return Array.isArray(drops) ? garboAverageValue.apply(void 0, _toConsumableArray34(drops)) : sum(_toConsumableArray34(drops.entries()), function(_ref) {
    var _ref2 = _slicedToArray32(_ref, 2), item15 = _ref2[0], quantity = _ref2[1];
    return quantity * garboValue(item15);
  }) / sumNumbers(_toConsumableArray34(drops.values()));
}
CrownOfThrones_exports.createRiderMode("default", {
  dropsValueFunction: dropsValueFunction
});
var chooseRider = function() {
  return CrownOfThrones_exports.pickRider("default");
};
var ChronerEngine = /* @__PURE__ */ function(_Engine) {
  function ChronerEngine2() {
    _classCallCheck25(this, ChronerEngine2);
    return _callSuper8(this, ChronerEngine2, arguments);
  }
  _inherits9(ChronerEngine2, _Engine);
  return _createClass25(ChronerEngine2, [{
    key: "available",
    value: function available7(task) {
      var sobriety = task.sobriety === "either" || sober() && task.sobriety === "sober" || !sober() && task.sobriety === "drunk";
      if (task.forced) {
        return sobriety && get("noncombatForcerActive") && _superPropGet2(ChronerEngine2, "available", this, 3)([task]);
      }
      return sobriety && _superPropGet2(ChronerEngine2, "available", this, 3)([task]);
    }
  }, {
    key: "createOutfit",
    value: function createOutfit(task) {
      var outfit2 = _superPropGet2(ChronerEngine2, "createOutfit", this, 3)([task]);
      if (outfit2.equips.get($slot(_templateObject588 || (_templateObject588 = _taggedTemplateLiteral88(["hat"])))) === $item(_templateObject2151 || (_templateObject2151 = _taggedTemplateLiteral88(["Crown of Thrones"])))) {
        var choice = chooseRider();
        if (choice) (0, import_kolmafia100.enthroneFamiliar)(choice.familiar);
      } else if (outfit2.equips.get($slot(_templateObject3138 || (_templateObject3138 = _taggedTemplateLiteral88(["back"])))) === $item(_templateObject4119 || (_templateObject4119 = _taggedTemplateLiteral88(["Buddy Bjorn"])))) {
        var _choice = chooseRider();
        if (_choice) (0, import_kolmafia100.bjornifyFamiliar)(_choice.familiar);
      }
      return outfit2;
    }
  }, {
    key: "setChoices",
    value: function setChoices(task, manager) {
      _superPropGet2(ChronerEngine2, "setChoices", this, 3)([task, manager]);
      if ((0, import_kolmafia100.equippedAmount)($item(_templateObject589 || (_templateObject589 = _taggedTemplateLiteral88(["June cleaver"])))) > 0) {
        this.propertyManager.setChoices(Object.fromEntries(JuneCleaver_exports.choices.map(function(choice) {
          return [choice, shouldSkip(choice) ? 4 : bestJuneCleaverOption(choice)];
        })));
      }
    }
  }, {
    key: "shouldRepeatAdv",
    value: function shouldRepeatAdv(task) {
      if (["Poetic Justice", "Lost and Found"].includes(get("lastEncounter"))) {
        printd("Skipping repeating Adventure despite free NC (beaten up)");
        return false;
      }
      if (introAdventures.includes(get("lastEncounter"))) {
        printd("Hit Intro adventure ".concat(get("lastEncounter"), " which is a free NC"));
        return true;
      }
      return _superPropGet2(ChronerEngine2, "shouldRepeatAdv", this, 3)([task]);
    }
  }, {
    key: "print",
    value: function print8() {
      printd("Task List:");
      var _iterator = _createForOfIteratorHelper23(this.tasks), _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var task = _step.value;
          printd("".concat(task.name, ": available:").concat(this.available(task)));
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
  }, {
    key: "destruct",
    value: function destruct() {
      _superPropGet2(ChronerEngine2, "destruct", this, 3)([]);
      (0, import_kolmafia100.setAutoAttack)(0);
    }
  }]);
}(Engine);

// src/macro.ts
var import_kolmafia104 = require("kolmafia");
init_dist();

// src/familiar/freeFightFamiliar.ts
var import_kolmafia103 = require("kolmafia");
init_dist();

// src/familiar/constantValueFamiliars.ts
var import_kolmafia101 = require("kolmafia");
init_dist();
var _templateObject590;
var _templateObject2152;
var _templateObject3139;
var _templateObject4120;
var _templateObject591;
var _templateObject668;
var _templateObject760;
var _templateObject849;
var _templateObject939;
var _templateObject032;
var _templateObject1136;
var _templateObject1030;
var _templateObject1137;
var _templateObject1228;
var _templateObject1326;
var _templateObject1425;
var _templateObject1524;
var _templateObject1624;
var _templateObject1721;
function _toConsumableArray35(r) {
  return _arrayWithoutHoles35(r) || _iterableToArray35(r) || _unsupportedIterableToArray51(r) || _nonIterableSpread35();
}
function _nonIterableSpread35() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray51(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray51(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray51(r, a) : void 0;
  }
}
function _iterableToArray35(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles35(r) {
  if (Array.isArray(r)) return _arrayLikeToArray51(r);
}
function _arrayLikeToArray51(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _taggedTemplateLiteral89(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
var standardFamiliars = [{
  familiar: $familiar(_templateObject590 || (_templateObject590 = _taggedTemplateLiteral89(["Obtuse Angel"]))),
  value: function() {
    return 0.02 * garboValue($item(_templateObject2152 || (_templateObject2152 = _taggedTemplateLiteral89(["time's arrow"]))));
  }
}, {
  familiar: $familiar(_templateObject3139 || (_templateObject3139 = _taggedTemplateLiteral89(["Stocking Mimic"]))),
  value: function() {
    return garboAverageValue.apply(void 0, _toConsumableArray35($items(_templateObject4120 || (_templateObject4120 = _taggedTemplateLiteral89(["Polka Pop, BitterSweetTarts, Piddles"]))))) / 6 + (1 / 3 + (have($effect(_templateObject591 || (_templateObject591 = _taggedTemplateLiteral89(["Jingle Jangle Jingle"])))) ? 0.1 : 0)) * ((0, import_kolmafia101.familiarWeight)($familiar(_templateObject668 || (_templateObject668 = _taggedTemplateLiteral89(["Stocking Mimic"])))) + (0, import_kolmafia101.weightAdjustment)());
  }
}, {
  familiar: $familiar(_templateObject760 || (_templateObject760 = _taggedTemplateLiteral89(["Shorter-Order Cook"]))),
  value: function() {
    return garboAverageValue.apply(void 0, _toConsumableArray35($items(_templateObject849 || (_templateObject849 = _taggedTemplateLiteral89(["short beer, short stack of pancakes, short stick of butter, short glass of water, short white"]))))) / 11;
  }
}, {
  familiar: $familiar(_templateObject939 || (_templateObject939 = _taggedTemplateLiteral89(["Robortender"]))),
  value: function() {
    return garboValue($item(_templateObject032 || (_templateObject032 = _taggedTemplateLiteral89(["elemental sugarcube"])))) / 5 + (Robortender_exports.currentDrinks().includes($item(_templateObject1136 || (_templateObject1136 = _taggedTemplateLiteral89(["Feliz Navidad"])))) ? get("garbo_felizValue", 0) * 0.25 : 0) + (Robortender_exports.currentDrinks().includes($item(_templateObject1030 || (_templateObject1030 = _taggedTemplateLiteral89(["Newark"])))) ? get("garbo_newarkValue", 0) * 0.25 : 0);
  }
}, {
  familiar: $familiar(_templateObject1137 || (_templateObject1137 = _taggedTemplateLiteral89(["Twitching Space Critter"]))),
  // Item is ludicrously overvalued and incredibly low-volume.
  // We can remove this cap once the price reaches a lower equilibrium
  // we probably won't, but we can.
  value: function() {
    return Math.min(garboValue($item(_templateObject1228 || (_templateObject1228 = _taggedTemplateLiteral89(["twitching space egg"])))) * 2e-4, 690);
  }
}, {
  familiar: $familiar(_templateObject1326 || (_templateObject1326 = _taggedTemplateLiteral89(["Hobo Monkey"]))),
  value: function() {
    return 75;
  }
}, {
  familiar: $familiar(_templateObject1425 || (_templateObject1425 = _taggedTemplateLiteral89(["Red-Nosed Snapper"]))),
  value: function(_ref) {
    var location7 = _ref.location;
    return location7 === $location(_templateObject1524 || (_templateObject1524 = _taggedTemplateLiteral89(["Globe Theatre Main Stage"]))) ? garboValue($item(_templateObject1624 || (_templateObject1624 = _taggedTemplateLiteral89(["human musk"])))) / 11 : 0;
  }
}, {
  familiar: $familiar(_templateObject1721 || (_templateObject1721 = _taggedTemplateLiteral89(["Mosquito"]))),
  // Acts as default familiar.
  // Extra roses when using an attacking familiar and everyone has this one
  value: function() {
    return 1;
  }
}];
function getConstantValueFamiliars() {
  var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  return standardFamiliars.filter(function(_ref2) {
    var familiar10 = _ref2.familiar;
    return have(familiar10);
  }).map(function(_ref3) {
    var familiar10 = _ref3.familiar, value = _ref3.value;
    return {
      familiar: familiar10,
      expectedValue: value(options),
      leprechaunMultiplier: findLeprechaunMultiplier(familiar10),
      limit: "none"
    };
  });
}

// src/familiar/dropFamiliars.ts
init_dist();
var _templateObject596;
var _templateObject2153;
var _templateObject3140;
var _templateObject4121;
var _templateObject597;
var _templateObject669;
var _templateObject761;
var _templateObject850;
var _templateObject940;
var _templateObject033;
var _templateObject1138;
var _templateObject1031;
var _templateObject1139;
var _templateObject1229;
var _templateObject1327;
var _templateObject1426;
var _templateObject1525;
var _templateObject1625;
var _templateObject1722;
var _templateObject1821;
var _templateObject1921;
var _templateObject2020;
var _templateObject2154;
var _templateObject2223;
var _templateObject2322;
var _templateObject2420;
var _templateObject2519;
var _templateObject2618;
var _templateObject2716;
var _templateObject2816;
var _templateObject2916;
var _templateObject3015;
var _templateObject3141;
var _templateObject3217;
var _templateObject3316;
var _templateObject3414;
var _templateObject3513;
var _templateObject3613;
var _templateObject3713;
var _templateObject3813;
function _taggedTemplateLiteral90(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function valueStandardDropFamiliar(_ref) {
  var _additionalValue;
  var familiar10 = _ref.familiar, expected8 = _ref.expected, drop = _ref.drop, pref = _ref.pref, additionalValue = _ref.additionalValue;
  var expectedTurns = expected8[get(pref)] || Infinity;
  var expectedValue = garboValue(drop) / expectedTurns + ((_additionalValue = additionalValue === null || additionalValue === void 0 ? void 0 : additionalValue()) !== null && _additionalValue !== void 0 ? _additionalValue : 0);
  return {
    familiar: familiar10,
    expectedValue: expectedValue,
    leprechaunMultiplier: findLeprechaunMultiplier(familiar10),
    limit: "drops"
  };
}
var rotatingFamiliars = [{
  familiar: $familiar(_templateObject596 || (_templateObject596 = _taggedTemplateLiteral90(["Fist Turkey"]))),
  expected: [3.91, 4.52, 4.52, 5.29, 5.29],
  drop: $item(_templateObject2153 || (_templateObject2153 = _taggedTemplateLiteral90(["Ambitious Turkey"]))),
  pref: "_turkeyBooze"
}, {
  familiar: $familiar(_templateObject3140 || (_templateObject3140 = _taggedTemplateLiteral90(["Llama Lama"]))),
  expected: [3.42, 3.91, 4.52, 5.29, 5.29],
  drop: $item(_templateObject4121 || (_templateObject4121 = _taggedTemplateLiteral90(["llama lama gong"]))),
  pref: "_gongDrops"
}, {
  familiar: $familiar(_templateObject597 || (_templateObject597 = _taggedTemplateLiteral90(["Astral Badger"]))),
  expected: [3.03, 3.42, 3.91, 4.52, 5.29],
  drop: $item(_templateObject669 || (_templateObject669 = _taggedTemplateLiteral90(["astral mushroom"]))),
  pref: "_astralDrops"
}, {
  familiar: $familiar(_templateObject761 || (_templateObject761 = _taggedTemplateLiteral90(["Li'l Xenomorph"]))),
  expected: [3.03, 3.42, 3.91, 4.52, 5.29],
  drop: $item(_templateObject850 || (_templateObject850 = _taggedTemplateLiteral90(["transporter transponder"]))),
  pref: "_transponderDrops"
}, {
  familiar: $familiar(_templateObject940 || (_templateObject940 = _taggedTemplateLiteral90(["Rogue Program"]))),
  expected: [3.03, 3.42, 3.91, 4.52, 5.29],
  drop: $item(_templateObject033 || (_templateObject033 = _taggedTemplateLiteral90(["Game Grid token"]))),
  pref: "_tokenDrops"
}, {
  familiar: $familiar(_templateObject1138 || (_templateObject1138 = _taggedTemplateLiteral90(["Bloovian Groose"]))),
  expected: [3.03, 3.42, 3.91, 4.52, 5.29],
  drop: $item(_templateObject1031 || (_templateObject1031 = _taggedTemplateLiteral90(["groose grease"]))),
  pref: "_grooseDrops"
}, {
  familiar: $familiar(_templateObject1139 || (_templateObject1139 = _taggedTemplateLiteral90(["Baby Sandworm"]))),
  expected: [3.03, 3.42, 3.91, 4.52, 5.29],
  drop: $item(_templateObject1229 || (_templateObject1229 = _taggedTemplateLiteral90(["agua de vida"]))),
  pref: "_aguaDrops"
}, {
  familiar: $familiar(_templateObject1327 || (_templateObject1327 = _taggedTemplateLiteral90(["Green Pixie"]))),
  expected: [3.03, 3.42, 3.91, 4.52, 5.29],
  drop: $item(_templateObject1426 || (_templateObject1426 = _taggedTemplateLiteral90(["tiny bottle of absinthe"]))),
  pref: "_absintheDrops"
}, {
  familiar: $familiar(_templateObject1525 || (_templateObject1525 = _taggedTemplateLiteral90(["Blavious Kloop"]))),
  expected: [3.03, 3.42, 3.91, 4.52, 5.29],
  drop: $item(_templateObject1625 || (_templateObject1625 = _taggedTemplateLiteral90(["devilish folio"]))),
  pref: "_kloopDrops"
}, {
  familiar: $familiar(_templateObject1722 || (_templateObject1722 = _taggedTemplateLiteral90(["Galloping Grill"]))),
  expected: [3.03, 3.42, 3.91, 4.52, 5.29],
  drop: $item(_templateObject1821 || (_templateObject1821 = _taggedTemplateLiteral90(["hot ashes"]))),
  pref: "_hotAshesDrops"
}, {
  familiar: $familiar(_templateObject1921 || (_templateObject1921 = _taggedTemplateLiteral90(["Grim Brother"]))),
  expected: [3.03, 3.42, 3.91, 4.52, 5.29],
  drop: $item(_templateObject2020 || (_templateObject2020 = _taggedTemplateLiteral90(["grim fairy tale"]))),
  pref: "_grimFairyTaleDrops"
}, {
  familiar: $familiar(_templateObject2154 || (_templateObject2154 = _taggedTemplateLiteral90(["Golden Monkey"]))),
  expected: [3.03, 3.42, 3.91, 4.52, 5.29],
  drop: $item(_templateObject2223 || (_templateObject2223 = _taggedTemplateLiteral90(["powdered gold"]))),
  pref: "_powderedGoldDrops"
}, {
  familiar: $familiar(_templateObject2322 || (_templateObject2322 = _taggedTemplateLiteral90(["Unconscious Collective"]))),
  expected: [3.03, 3.42, 3.91, 4.52, 5.29],
  drop: $item(_templateObject2420 || (_templateObject2420 = _taggedTemplateLiteral90(["Unconscious Collective Dream Jar"]))),
  pref: "_dreamJarDrops"
}, {
  familiar: $familiar(_templateObject2519 || (_templateObject2519 = _taggedTemplateLiteral90(["Ms. Puck Man"]))),
  expected: Array($familiar(_templateObject2618 || (_templateObject2618 = _taggedTemplateLiteral90(["Ms. Puck Man"]))).dropsLimit).fill(12.85),
  drop: $item(_templateObject2716 || (_templateObject2716 = _taggedTemplateLiteral90(["power pill"]))),
  pref: "_powerPillDrops",
  additionalValue: function() {
    return garboValue($item(_templateObject2816 || (_templateObject2816 = _taggedTemplateLiteral90(["yellow pixel"]))));
  }
}, {
  familiar: $familiar(_templateObject2916 || (_templateObject2916 = _taggedTemplateLiteral90(["Puck Man"]))),
  expected: Array($familiar(_templateObject3015 || (_templateObject3015 = _taggedTemplateLiteral90(["Puck Man"]))).dropsLimit).fill(12.85),
  drop: $item(_templateObject3141 || (_templateObject3141 = _taggedTemplateLiteral90(["power pill"]))),
  pref: "_powerPillDrops",
  additionalValue: function() {
    return garboValue($item(_templateObject3217 || (_templateObject3217 = _taggedTemplateLiteral90(["yellow pixel"]))));
  }
}, {
  familiar: $familiar(_templateObject3316 || (_templateObject3316 = _taggedTemplateLiteral90(["Adventurous Spelunker"]))),
  expected: [7],
  drop: $item(_templateObject3414 || (_templateObject3414 = _taggedTemplateLiteral90(["Tales of Spelunking"]))),
  pref: "_spelunkingTalesDrops"
}, {
  familiar: $familiar(_templateObject3513 || (_templateObject3513 = _taggedTemplateLiteral90(["Angry Jung Man"]))),
  expected: [30],
  drop: $item(_templateObject3613 || (_templateObject3613 = _taggedTemplateLiteral90(["psychoanalytic jar"]))),
  pref: "_jungDrops"
}, {
  familiar: $familiar(_templateObject3713 || (_templateObject3713 = _taggedTemplateLiteral90(["Grimstone Golem"]))),
  expected: [45],
  drop: $item(_templateObject3813 || (_templateObject3813 = _taggedTemplateLiteral90(["grimstone mask"]))),
  pref: "_grimstoneMaskDrops"
}];
function getDropFamiliars() {
  return rotatingFamiliars.map(valueStandardDropFamiliar).filter(function(_ref2) {
    var familiar10 = _ref2.familiar, expectedValue = _ref2.expectedValue, leprechaunMultiplier = _ref2.leprechaunMultiplier;
    return have(familiar10) && (expectedValue || leprechaunMultiplier);
  });
}

// src/familiar/experienceFamiliars.ts
init_dist();
var _templateObject598;
var _templateObject2155;
var _templateObject3142;
function _taggedTemplateLiteral91(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
var experienceFamiliars = [{
  familiar: $familiar(_templateObject598 || (_templateObject598 = _taggedTemplateLiteral91(["Pocket Professor"]))),
  used: "_thesisDelivered",
  useValue: 11 * get("valueOfAdventure")
}, {
  familiar: $familiar(_templateObject2155 || (_templateObject2155 = _taggedTemplateLiteral91(["Grey Goose"]))),
  used: "_meatifyMatterUsed",
  useValue: Math.pow(15, 4)
}];
function valueExperienceFamiliar(_ref) {
  var familiar10 = _ref.familiar, useValue = _ref.useValue;
  var currentExp = familiar10.experience || (have($familiar(_templateObject3142 || (_templateObject3142 = _taggedTemplateLiteral91(["Shorter-Order Cook"])))) ? 100 : 0);
  var experienceNeeded = 400 - currentExp;
  var estimatedExperience = 3;
  return {
    familiar: familiar10,
    expectedValue: useValue / (experienceNeeded / estimatedExperience),
    leprechaunMultiplier: findLeprechaunMultiplier(familiar10),
    limit: "experience"
  };
}
function getExperienceFamiliars() {
  return experienceFamiliars.filter(function(_ref2) {
    var used = _ref2.used, familiar10 = _ref2.familiar;
    return have(familiar10) && !get(used) && familiar10.experience < 400;
  }).map(valueExperienceFamiliar);
}

// src/familiar/lib.ts
var import_kolmafia102 = require("kolmafia");
init_dist();
var _templateObject599;
var _templateObject2156;
var _templateObject3143;
var _templateObject4122;
var _templateObject5100;
var _templateObject670;
var _templateObject765;
var _templateObject851;
var _templateObject034;
var _templateObject1140;
function _taggedTemplateLiteral92(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function timeToMeatify() {
  if (!have($familiar(_templateObject599 || (_templateObject599 = _taggedTemplateLiteral92(["Grey Goose"])))) || get("_meatifyMatterUsed") || !sober()) {
    return false;
  } else if ($familiar(_templateObject2156 || (_templateObject2156 = _taggedTemplateLiteral92(["Grey Goose"]))).experience >= 400) return true;
  else if ((0, import_kolmafia102.myAdventures)() > 50) return false;
  var totalTurns = (0, import_kolmafia102.totalTurnsPlayed)();
  var baseMeat = have($item(_templateObject3143 || (_templateObject3143 = _taggedTemplateLiteral92(["SongBoom\u2122 BoomBox"])))) ? 275 : 250;
  var usingLatte = have($item(_templateObject4122 || (_templateObject4122 = _taggedTemplateLiteral92(["latte lovers member's mug"])))) && get("latteModifier").split(",").includes("Meat Drop: 40");
  var nextProtonicGhost = have($item(_templateObject5100 || (_templateObject5100 = _taggedTemplateLiteral92(["protonic accelerator pack"])))) ? Math.max(1, get("nextParanormalActivity") - totalTurns) : Infinity;
  var nextVoteMonster = have($item(_templateObject670 || (_templateObject670 = _taggedTemplateLiteral92(['"I Voted!" sticker'])))) && get("_voteFreeFights") < 3 ? Math.max(0, (totalTurns % 11 - 1) % 11) : Infinity;
  var nextVoidMonster = have($item(_templateObject765 || (_templateObject765 = _taggedTemplateLiteral92(["cursed magnifying glass"])))) && get("_voidFreeFights") < 5 && get("valueOfFreeFight", 2e3) / 13 > baseMeat * (usingLatte ? 0.75 : 0.6) ? -get("cursedMagnifyingGlassCount") % 13 : Infinity;
  var freeFightNow = get("questPAGhost") !== "unstarted" || nextVoteMonster === 0 || nextVoidMonster === 0;
  var delay = Math.min(nextProtonicGhost, nextVoteMonster === 0 ? get("_voteFreeFights") < 2 ? 11 : Infinity : nextVoteMonster, nextVoidMonster === 0 ? 13 : nextVoidMonster);
  if (delay < (0, import_kolmafia102.myAdventures)()) return false;
  else if (freeFightNow || $familiar(_templateObject851 || (_templateObject851 = _taggedTemplateLiteral92(["Grey Goose"]))).experience >= 121) return true;
  return false;
}
function canOpenRedPresent() {
  return have($familiar(_templateObject034 || (_templateObject034 = _taggedTemplateLiteral92(["Crimbo Shrub"])))) && !have($effect(_templateObject1140 || (_templateObject1140 = _taggedTemplateLiteral92(["Everything Looks Red"])))) && get("shrubGifts") === "meat" && sober();
}

// src/familiar/freeFightFamiliar.ts
function _typeof34(o) {
  "@babel/helpers - typeof";
  return _typeof34 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof34(o);
}
var _templateObject600;
var _templateObject2157;
var _templateObject3144;
var _templateObject4123;
var _templateObject5101;
var _templateObject671;
var _templateObject766;
function _toConsumableArray36(r) {
  return _arrayWithoutHoles36(r) || _iterableToArray36(r) || _unsupportedIterableToArray52(r) || _nonIterableSpread36();
}
function _nonIterableSpread36() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray52(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray52(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray52(r, a) : void 0;
  }
}
function _iterableToArray36(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles36(r) {
  if (Array.isArray(r)) return _arrayLikeToArray52(r);
}
function _arrayLikeToArray52(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function ownKeys16(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread16(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys16(Object(t), true).forEach(function(r2) {
      _defineProperty30(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys16(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty30(e, r, t) {
  return (r = _toPropertyKey34(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
}
function _toPropertyKey34(t) {
  var i = _toPrimitive34(t, "string");
  return "symbol" == _typeof34(i) ? i : i + "";
}
function _toPrimitive34(t, r) {
  if ("object" != _typeof34(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof34(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _taggedTemplateLiteral93(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
var DEFAULT_MENU_OPTIONS = {
  canChooseMacro: true,
  location: $location(_templateObject600 || (_templateObject600 = _taggedTemplateLiteral93(["none"]))),
  extraFamiliars: [],
  includeExperienceFamiliars: true,
  allowAttackFamiliars: true
};
function menu() {
  var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var _DEFAULT_MENU_OPTIONS = _objectSpread16(_objectSpread16({}, DEFAULT_MENU_OPTIONS), options), includeExperienceFamiliars = _DEFAULT_MENU_OPTIONS.includeExperienceFamiliars, canChooseMacro = _DEFAULT_MENU_OPTIONS.canChooseMacro, location7 = _DEFAULT_MENU_OPTIONS.location, extraFamiliars = _DEFAULT_MENU_OPTIONS.extraFamiliars, allowAttackFamiliars = _DEFAULT_MENU_OPTIONS.allowAttackFamiliars;
  var familiarMenu = [].concat(_toConsumableArray36(getConstantValueFamiliars()), _toConsumableArray36(getDropFamiliars()), _toConsumableArray36(includeExperienceFamiliars ? getExperienceFamiliars() : []), _toConsumableArray36(extraFamiliars), [{
    familiar: $familiar.none,
    expectedValue: 0,
    leprechaunMultiplier: 0,
    limit: "none"
  }]);
  if (canChooseMacro && sober()) {
    if (timeToMeatify()) {
      familiarMenu.push({
        familiar: $familiar(_templateObject2157 || (_templateObject2157 = _taggedTemplateLiteral93(["Grey Goose"]))),
        expectedValue: Math.pow((Math.max((0, import_kolmafia103.familiarWeight)($familiar(_templateObject3144 || (_templateObject3144 = _taggedTemplateLiteral93(["Grey Goose"])))) - 5), 0), 4),
        leprechaunMultiplier: 0,
        limit: "experience"
      });
    }
    if (canOpenRedPresent()) {
      familiarMenu.push({
        familiar: $familiar(_templateObject4123 || (_templateObject4123 = _taggedTemplateLiteral93(["Crimbo Shrub"]))),
        expectedValue: 2500,
        leprechaunMultiplier: 0,
        limit: "special"
      });
    }
    if (location7.zone === "Dinseylandfill" && have($familiar(_templateObject5101 || (_templateObject5101 = _taggedTemplateLiteral93(["Space Jellyfish"]))))) {
      familiarMenu.push({
        familiar: $familiar(_templateObject671 || (_templateObject671 = _taggedTemplateLiteral93(["Space Jellyfish"]))),
        expectedValue: garboValue($item(_templateObject766 || (_templateObject766 = _taggedTemplateLiteral93(["stench jelly"])))) / (get("_spaceJellyfishDrops") < 5 ? get("_spaceJellyfishDrops") + 1 : 20),
        leprechaunMultiplier: 0,
        limit: "special"
      });
    }
  }
  if (!allowAttackFamiliars) {
    return familiarMenu.filter(function(fam) {
      return !(fam.familiar.physicalDamage || fam.familiar.elementalDamage);
    });
  }
  return familiarMenu;
}
function freeFightFamiliarData() {
  var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var compareFamiliars = function(a, b) {
    if (a.expectedValue === b.expectedValue) {
      return a.leprechaunMultiplier > b.leprechaunMultiplier ? a : b;
    }
    return a.expectedValue > b.expectedValue ? a : b;
  };
  return menu(options).reduce(compareFamiliars);
}
function freeFightFamiliar() {
  var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  return freeFightFamiliarData(options).familiar;
}

// src/macro.ts
function _typeof35(o) {
  "@babel/helpers - typeof";
  return _typeof35 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof35(o);
}
var _templateObject601;
var _templateObject2158;
var _templateObject3145;
var _templateObject4124;
var _templateObject5102;
var _templateObject676;
var _templateObject767;
var _templateObject853;
var _templateObject941;
var _templateObject035;
var _templateObject1141;
var _templateObject1032;
var _templateObject1142;
var _templateObject1230;
var _templateObject1328;
var _templateObject1427;
var _templateObject1526;
var _templateObject1626;
var _templateObject1723;
var _templateObject1822;
var _templateObject1922;
var _templateObject2021;
var _templateObject2159;
var _templateObject2224;
function _toConsumableArray37(r) {
  return _arrayWithoutHoles37(r) || _iterableToArray37(r) || _unsupportedIterableToArray53(r) || _nonIterableSpread37();
}
function _nonIterableSpread37() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray37(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles37(r) {
  if (Array.isArray(r)) return _arrayLikeToArray53(r);
}
function _createForOfIteratorHelper24(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t) {
    if (Array.isArray(r) || (t = _unsupportedIterableToArray53(r)) || e && r && "number" == typeof r.length) {
      t && (r = t);
      var _n = 0, F = function F2() {
      };
      return { s: F, n: function n() {
        return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
      }, e: function e2(r2) {
        throw r2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o, a = true, u = false;
  return { s: function s() {
    t = t.call(r);
  }, n: function n() {
    var r2 = t.next();
    return a = r2.done, r2;
  }, e: function e2(r2) {
    u = true, o = r2;
  }, f: function f() {
    try {
      a || null == t.return || t.return();
    } finally {
      if (u) throw o;
    }
  } };
}
function _unsupportedIterableToArray53(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray53(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray53(r, a) : void 0;
  }
}
function _arrayLikeToArray53(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _taggedTemplateLiteral94(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function _classCallCheck26(a, n) {
  if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties26(e, r) {
  for (var t = 0; t < r.length; t++) {
    var o = r[t];
    o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e, _toPropertyKey35(o.key), o);
  }
}
function _createClass26(e, r, t) {
  return r && _defineProperties26(e.prototype, r), t && _defineProperties26(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
}
function _toPropertyKey35(t) {
  var i = _toPrimitive35(t, "string");
  return "symbol" == _typeof35(i) ? i : i + "";
}
function _toPrimitive35(t, r) {
  if ("object" != _typeof35(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof35(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _callSuper9(t, o, e) {
  return o = _getPrototypeOf9(o), _possibleConstructorReturn9(t, _isNativeReflectConstruct9() ? Reflect.construct(o, e || [], _getPrototypeOf9(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn9(t, e) {
  if (e && ("object" == _typeof35(e) || "function" == typeof e)) return e;
  if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
  return _assertThisInitialized9(t);
}
function _assertThisInitialized9(e) {
  if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e;
}
function _isNativeReflectConstruct9() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct9 = function _isNativeReflectConstruct10() {
    return !!t;
  })();
}
function _getPrototypeOf9(t) {
  return _getPrototypeOf9 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t2) {
    return t2.__proto__ || Object.getPrototypeOf(t2);
  }, _getPrototypeOf9(t);
}
function _inherits10(t, e) {
  if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
  t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: true, configurable: true } }), Object.defineProperty(t, "prototype", { writable: false }), e && _setPrototypeOf10(t, e);
}
function _setPrototypeOf10(t, e) {
  return _setPrototypeOf10 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t2, e2) {
    return t2.__proto__ = e2, t2;
  }, _setPrototypeOf10(t, e);
}
var Macro2 = /* @__PURE__ */ function(_StrictMacro) {
  function Macro3() {
    _classCallCheck26(this, Macro3);
    return _callSuper9(this, Macro3, arguments);
  }
  _inherits10(Macro3, _StrictMacro);
  return _createClass26(Macro3, [{
    key: "tryHaveSkill",
    value: function tryHaveSkill(skill) {
      return this.externalIf(have(skill), Macro3.trySkill(skill));
    }
  }, {
    key: "tryHaveItem",
    value: function tryHaveItem(item15) {
      return this.externalIf(have(item15), Macro3.tryItem(item15));
    }
  }, {
    key: "seeMoreOf",
    value: function seeMoreOf(monster2) {
      return this.if_(monster2, Macro3.externalIf(get("olfactedMonster") !== monster2 && get("_olfactionsUsed") < 3, Macro3.trySkill($skill(_templateObject601 || (_templateObject601 = _taggedTemplateLiteral94(["Transcendent Olfaction"]))))).externalIf(get("_gallapagosMonster") !== monster2, Macro3.trySkill($skill(_templateObject2158 || (_templateObject2158 = _taggedTemplateLiteral94(["Gallapagosian Mating Call"]))))));
    }
  }, {
    key: "redigitize",
    value: function redigitize() {
      var _get3;
      return this.externalIf(shouldRedigitize(), Macro3.if_((_get3 = get("_sourceTerminalDigitizeMonster")) !== null && _get3 !== void 0 ? _get3 : $monster.none, Macro3.skill($skill(_templateObject3145 || (_templateObject3145 = _taggedTemplateLiteral94(["Digitize"]))))));
    }
  }, {
    key: "doItems",
    value: function doItems() {
      var steps = new Macro3();
      var items = $items(_templateObject4124 || (_templateObject4124 = _taggedTemplateLiteral94(["Rain-Doh blue balls, Time-Spinner, Rain-Doh indigo cup, HOA citation pad, porquoise-handled sixgun"]))).filter(function(i2) {
        return have(i2);
      });
      if (items.length) {
        if (!have($skill(_templateObject5102 || (_templateObject5102 = _taggedTemplateLiteral94(["Ambidextrous Funkslinging"]))))) {
          var _iterator = _createForOfIteratorHelper24(items), _step;
          try {
            for (_iterator.s(); !(_step = _iterator.n()).done; ) {
              var item15 = _step.value;
              steps.tryItem(item15);
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
        } else {
          for (var i = 0; i <= items.length; i += 2) {
            var chunk2 = items.slice(i, i + 2);
            if (chunk2.length === 2) steps.tryItem(chunk2);
            else steps.tryItem.apply(steps, _toConsumableArray37(chunk2));
          }
        }
      } else {
        steps.tryHaveItem($item(_templateObject676 || (_templateObject676 = _taggedTemplateLiteral94(["seal tooth"]))));
      }
      return this.step(steps);
    }
  }, {
    key: "getRocks",
    value: function getRocks() {
      return this.externalIf((0, import_kolmafia104.myFamiliar)() === $familiar(_templateObject767 || (_templateObject767 = _taggedTemplateLiteral94(["Grey Goose"]))) && $familiar(_templateObject853 || (_templateObject853 = _taggedTemplateLiteral94(["Grey Goose"]))).experience >= 36, Macro3.trySkill($skill(_templateObject941 || (_templateObject941 = _taggedTemplateLiteral94(["Emit Matter Duplicating Drones"]))))).externalIf((0, import_kolmafia104.haveEquipped)($item(_templateObject035 || (_templateObject035 = _taggedTemplateLiteral94(["pro skateboard"])))), Macro3.trySkill($skill(_templateObject1141 || (_templateObject1141 = _taggedTemplateLiteral94(["Do an epic McTwist!"])))));
    }
  }, {
    key: "spikes",
    value: function spikes() {
      return this.trySkill($skill(_templateObject1032 || (_templateObject1032 = _taggedTemplateLiteral94(["Launch spikolodon spikes"]))));
    }
  }, {
    key: "standardCombat",
    value: function standardCombat() {
      return this.externalIf(canOpenRedPresent() && (0, import_kolmafia104.myFamiliar)() === $familiar(_templateObject1142 || (_templateObject1142 = _taggedTemplateLiteral94(["Crimbo Shrub"]))), Macro3.trySkill($skill(_templateObject1230 || (_templateObject1230 = _taggedTemplateLiteral94(["Open a Big Red Present"]))))).externalIf(timeToMeatify() && (0, import_kolmafia104.myFamiliar)() === $familiar(_templateObject1328 || (_templateObject1328 = _taggedTemplateLiteral94(["Grey Goose"]))), Macro3.trySkill($skill(_templateObject1427 || (_templateObject1427 = _taggedTemplateLiteral94(["Meatify Matter"]))))).externalIf(get("cosmicBowlingBallReturnCombats") < 1, Macro3.trySkill($skill(_templateObject1526 || (_templateObject1526 = _taggedTemplateLiteral94(["Bowl Straight Up"]))))).tryHaveSkill($skill(_templateObject1626 || (_templateObject1626 = _taggedTemplateLiteral94(["Summon Mayfly Swarm"])))).externalIf(SongBoom_exports.song() === "Total Eclipse of Your Meat", Macro3.tryHaveSkill($skill(_templateObject1723 || (_templateObject1723 = _taggedTemplateLiteral94(["Sing Along"]))))).tryHaveSkill($skill(_templateObject1822 || (_templateObject1822 = _taggedTemplateLiteral94(["Extract"])))).tryHaveSkill($skill(_templateObject1922 || (_templateObject1922 = _taggedTemplateLiteral94(["Micrometeorite"])))).doItems().tryHaveSkill($skill(_templateObject2021 || (_templateObject2021 = _taggedTemplateLiteral94(["Nantlers"])))).tryHaveSkill($skill(_templateObject2159 || (_templateObject2159 = _taggedTemplateLiteral94(["Nanoshock"])))).tryHaveSkill($skill(_templateObject2224 || (_templateObject2224 = _taggedTemplateLiteral94(["Audioclasm"])))).attack().repeat();
    }
  }], [{
    key: "tryHaveSkill",
    value: function tryHaveSkill(skill) {
      return new Macro3().tryHaveSkill(skill);
    }
  }, {
    key: "seeMoreOf",
    value: function seeMoreOf(monster2) {
      return new Macro3().seeMoreOf(monster2);
    }
  }, {
    key: "tryHaveItem",
    value: function tryHaveItem(item15) {
      return new Macro3().tryHaveItem(item15);
    }
  }, {
    key: "redigitize",
    value: function redigitize() {
      return new Macro3().redigitize();
    }
  }, {
    key: "getRocks",
    value: function getRocks() {
      return new Macro3().getRocks();
    }
  }, {
    key: "spikes",
    value: function spikes() {
      return new Macro3().spikes();
    }
  }, {
    key: "standardCombat",
    value: function standardCombat() {
      return new Macro3().standardCombat();
    }
  }]);
}(StrictMacro);

// src/outfit.ts
var import_kolmafia105 = require("kolmafia");
init_dist();
var _templateObject606;
var _templateObject2160;
var _templateObject3146;
var _templateObject4125;
var _templateObject5103;
var _templateObject677;
var _templateObject768;
var _templateObject854;
var _templateObject943;
var _templateObject036;
var _templateObject1143;
var _templateObject1033;
var _templateObject1144;
var _templateObject1231;
var _templateObject1329;
var _templateObject1428;
var _templateObject1527;
var _templateObject1627;
var _templateObject1724;
var _templateObject1823;
var _templateObject1923;
var _templateObject2022;
var _templateObject2161;
var _templateObject2225;
var _templateObject2323;
var _templateObject2421;
var _templateObject2520;
var _templateObject2619;
var _templateObject2717;
var _templateObject2817;
var _templateObject2917;
var _templateObject3016;
var _templateObject3147;
var _templateObject3218;
var _templateObject3317;
var _templateObject3415;
var _templateObject3514;
var _templateObject3614;
var _templateObject3714;
var _templateObject3814;
var _templateObject3913;
var _templateObject4013;
var _templateObject4126;
var _templateObject4215;
function _typeof36(o) {
  "@babel/helpers - typeof";
  return _typeof36 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof36(o);
}
function _slicedToArray33(r, e) {
  return _arrayWithHoles33(r) || _iterableToArrayLimit33(r, e) || _unsupportedIterableToArray54(r, e) || _nonIterableRest33();
}
function _nonIterableRest33() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit33(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles33(r) {
  if (Array.isArray(r)) return r;
}
function _toConsumableArray38(r) {
  return _arrayWithoutHoles38(r) || _iterableToArray38(r) || _unsupportedIterableToArray54(r) || _nonIterableSpread38();
}
function _nonIterableSpread38() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray54(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray54(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray54(r, a) : void 0;
  }
}
function _iterableToArray38(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles38(r) {
  if (Array.isArray(r)) return _arrayLikeToArray54(r);
}
function _arrayLikeToArray54(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _taggedTemplateLiteral95(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function ownKeys17(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread17(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys17(Object(t), true).forEach(function(r2) {
      _defineProperty31(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys17(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty31(e, r, t) {
  return (r = _toPropertyKey36(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
}
function _toPropertyKey36(t) {
  var i = _toPrimitive36(t, "string");
  return "symbol" == _typeof36(i) ? i : i + "";
}
function _toPrimitive36(t, r) {
  if ("object" != _typeof36(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof36(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function ifHave(slot, item15, condition) {
  var _condition;
  return have(item15) && (0, import_kolmafia105.canEquip)(item15) && ((_condition = condition === null || condition === void 0 ? void 0 : condition()) !== null && _condition !== void 0 ? _condition : true) ? Object.fromEntries([[slot, item15]]) : {};
}
function mergeSpecs() {
  for (var _len = arguments.length, outfits = new Array(_len), _key = 0; _key < _len; _key++) {
    outfits[_key] = arguments[_key];
  }
  return outfits.reduce(function(current2, next2) {
    return _objectSpread17(_objectSpread17({}, next2), current2);
  }, {});
}
var chooseFamiliar = function chooseFamiliar2() {
  var _find;
  var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  return (0, import_kolmafia105.canInteract)() && sober() ? (_find = $familiars(_templateObject606 || (_templateObject606 = _taggedTemplateLiteral95(["Reagnimated Gnome, Temporal Riftlet"]))).find(function(f) {
    return have(f);
  })) !== null && _find !== void 0 ? _find : freeFightFamiliar(options) : freeFightFamiliar(options);
};
function chooseQuestOutfit(_ref) {
  var _mergedInputSpec$fami, _equipmentFamiliars$g;
  var location7 = _ref.location, isFree = _ref.isFree;
  for (var _len2 = arguments.length, outfits = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
    outfits[_key2 - 1] = arguments[_key2];
  }
  var mergedInputSpec = mergeSpecs.apply(void 0, outfits);
  var familiar10 = (_mergedInputSpec$fami = mergedInputSpec.familiar) !== null && _mergedInputSpec$fami !== void 0 ? _mergedInputSpec$fami : chooseFamiliar({
    location: location7
  });
  var famEquip = (_equipmentFamiliars$g = equipmentFamiliars.get(familiar10)) !== null && _equipmentFamiliars$g !== void 0 ? _equipmentFamiliars$g : !(location7 === $location(_templateObject2160 || (_templateObject2160 = _taggedTemplateLiteral95(["Globe Theatre Main Stage"]))) && !(familiar10.elementalDamage || familiar10.physicalDamage)) ? $item(_templateObject3146 || (_templateObject3146 = _taggedTemplateLiteral95(["tiny stillsuit"]))) : $item(_templateObject4125 || (_templateObject4125 = _taggedTemplateLiteral95(["oversized fish scaler"])));
  var freeChance = [{
    i: $item(_templateObject5103 || (_templateObject5103 = _taggedTemplateLiteral95(["Kramco Sausage-o-Matic\u2122"]))),
    p: getKramcoWandererChance()
  }, {
    i: $item(_templateObject677 || (_templateObject677 = _taggedTemplateLiteral95(["carnivorous potted plant"]))),
    p: 0.04
  }, {
    i: $item(_templateObject768 || (_templateObject768 = _taggedTemplateLiteral95(["cursed magnifying glass"]))),
    p: get("_voidFreeFights") < 5 ? 1 / 13 : 0
  }].filter(function(_ref2) {
    var i2 = _ref2.i;
    return have(i2) && (0, import_kolmafia105.canEquip)(i2);
  });
  var offhands = freeChance.length ? {
    offhand: maxBy2(freeChance, "p").i
  } : {};
  var weapons2 = mergeSpecs(ifHave("weapon", $item(_templateObject854 || (_templateObject854 = _taggedTemplateLiteral95(["June cleaver"])))), ifHave("weapon", $item(_templateObject943 || (_templateObject943 = _taggedTemplateLiteral95(["Fourth of May Cosplay Saber"])))));
  var backs = mergeSpecs(ifHave("back", $item(_templateObject036 || (_templateObject036 = _taggedTemplateLiteral95(["protonic accelerator pack"]))), function() {
    return get("questPAGhost") === "unstarted" && get("nextParanormalActivity") <= (0, import_kolmafia105.totalTurnsPlayed)() && sober();
  }), ifHave("back", $item(_templateObject1143 || (_templateObject1143 = _taggedTemplateLiteral95(["Time Cloak"])))));
  var spec = mergeSpecs(ifHave("hat", $item(_templateObject1033 || (_templateObject1033 = _taggedTemplateLiteral95(["Crown of Thrones"])))), offhands, weapons2, backs, {
    familiar: familiar10
  }, ifHave("famequip", famEquip), ifHave("pants", $item(_templateObject1144 || (_templateObject1144 = _taggedTemplateLiteral95(["designer sweatpants"]))), function() {
    return 25 * get("_sweatOutSomeBoozeUsed") + get("sweat") < 75;
  }));
  var bestAccessories = getBestAccessories(isFree);
  for (var i = 0; i < 3; i++) {
    var accessory = bestAccessories[i];
    if (!accessory) break;
    spec["acc".concat(i + 1)] = accessory;
  }
  var mergedSpec = mergeSpecs.apply(void 0, outfits.concat([spec]));
  if (!sober()) {
    mergedSpec.offhand = $item(_templateObject1231 || (_templateObject1231 = _taggedTemplateLiteral95(["Drunkula's wineglass"])));
  }
  if (!have($item(_templateObject1329 || (_templateObject1329 = _taggedTemplateLiteral95(["Crown of Thrones"])))) && have($item(_templateObject1428 || (_templateObject1428 = _taggedTemplateLiteral95(["Buddy Bjorn"])))) && !("back" in mergedSpec)) {
    mergedSpec.back = $item(_templateObject1527 || (_templateObject1527 = _taggedTemplateLiteral95(["Buddy Bjorn"])));
  }
  mergedSpec.modifier = $familiars(_templateObject1627 || (_templateObject1627 = _taggedTemplateLiteral95(["Reagnimated Gnome, Temporal Riftlet"]))).includes(familiar10) ? "Familiar Weight" : "Item Drop";
  return mergedSpec;
}
var equipmentFamiliars = /* @__PURE__ */ new Map([[$familiar(_templateObject1724 || (_templateObject1724 = _taggedTemplateLiteral95(["Reagnimated Gnome"]))), $item(_templateObject1823 || (_templateObject1823 = _taggedTemplateLiteral95(["gnomish housemaid's kgnee"])))], [$familiar(_templateObject1923 || (_templateObject1923 = _taggedTemplateLiteral95(["Shorter-Order Cook"]))), $item(_templateObject2022 || (_templateObject2022 = _taggedTemplateLiteral95(["blue plate"])))], [$familiar(_templateObject2161 || (_templateObject2161 = _taggedTemplateLiteral95(["Stocking Mimic"]))), $item(_templateObject2225 || (_templateObject2225 = _taggedTemplateLiteral95(["bag of many confections"])))]]);
function luckyGoldRing() {
  var dropValues = [100].concat(_toConsumableArray38([
    (0, import_kolmafia105.itemAmount)($item(_templateObject2323 || (_templateObject2323 = _taggedTemplateLiteral95(["hobo nickel"])))) > 0 ? 100 : 0,
    // This should be closeted
    (0, import_kolmafia105.itemAmount)($item(_templateObject2421 || (_templateObject2421 = _taggedTemplateLiteral95(["sand dollar"])))) > 0 ? garboValue($item(_templateObject2520 || (_templateObject2520 = _taggedTemplateLiteral95(["sand dollar"])))) : 0,
    // This should be closeted
    (0, import_kolmafia105.itemAmount)($item(_templateObject2619 || (_templateObject2619 = _taggedTemplateLiteral95(["Freddy Kruegerand"])))) > 0 ? garboValue($item(_templateObject2717 || (_templateObject2717 = _taggedTemplateLiteral95(["Freddy Kruegerand"])))) : 0,
    realmAvailable2("sleaze") ? garboValue($item(_templateObject2817 || (_templateObject2817 = _taggedTemplateLiteral95(["Beach Buck"])))) : 0,
    realmAvailable2("spooky") ? garboValue($item(_templateObject2917 || (_templateObject2917 = _taggedTemplateLiteral95(["Coinspiracy"])))) : 0,
    realmAvailable2("stench") ? garboValue($item(_templateObject3016 || (_templateObject3016 = _taggedTemplateLiteral95(["FunFunds\u2122"])))) : 0,
    realmAvailable2("hot") && !get("_luckyGoldRingVolcoino") ? garboValue($item(_templateObject3147 || (_templateObject3147 = _taggedTemplateLiteral95(["Volcoino"])))) : 0,
    realmAvailable2("cold") ? garboValue($item(_templateObject3218 || (_templateObject3218 = _taggedTemplateLiteral95(["Wal-Mart gift certificate"])))) : 0,
    realmAvailable2("fantasy") ? garboValue($item(_templateObject3317 || (_templateObject3317 = _taggedTemplateLiteral95(["Rubee\u2122"])))) : 0
  ].filter(function(value) {
    return value > 0;
  })));
  return sumNumbers(dropValues) / dropValues.length / 10;
}
var accessories = /* @__PURE__ */ new Map([
  [$item(_templateObject3415 || (_templateObject3415 = _taggedTemplateLiteral95(["mafia thumb ring"]))), function(isFree) {
    return !isFree ? (1 / 0.96 - 1) * get("valueOfAdventure") : 0;
  }],
  // 18.2 expected turns per drug
  // https://kol.coldfront.net/thekolwiki/index.php/Time-twitching_toolbelt
  [$item(_templateObject3514 || (_templateObject3514 = _taggedTemplateLiteral95(["time-twitching toolbelt"]))), function() {
    return garboAverageValue.apply(void 0, _toConsumableArray38($items(_templateObject3614 || (_templateObject3614 = _taggedTemplateLiteral95(["future drug: Muscularactum, future drug: Smartinex, future drug: Coolscaline"]))))) / 18.2;
  }],
  [$item(_templateObject3714 || (_templateObject3714 = _taggedTemplateLiteral95(["mayfly bait necklace"]))), function() {
    return get("_mayflySummons") < 30 ? 0.5 * garboValue($item(_templateObject3814 || (_templateObject3814 = _taggedTemplateLiteral95(["rose"])))) : 0;
  }],
  [$item(_templateObject3913 || (_templateObject3913 = _taggedTemplateLiteral95(["lucky gold ring"]))), luckyGoldRing],
  [$item(_templateObject4013 || (_templateObject4013 = _taggedTemplateLiteral95(["Mr. Screege's spectacles"]))), function() {
    return 180;
  }],
  [$item(_templateObject4126 || (_templateObject4126 = _taggedTemplateLiteral95(["Mr. Cheeng's spectacles"]))), function() {
    return 220;
  }],
  [$item(_templateObject4215 || (_templateObject4215 = _taggedTemplateLiteral95(["pro skateboard"]))), function() {
    return args.mode === "rock" && get("_questCaveDan", 0) === 5 ? 1e4 : 0;
  }]
]);
function getBestAccessories(isFree) {
  return Array.from(accessories.entries()).filter(function(_ref3) {
    var _ref4 = _slicedToArray33(_ref3, 1), item15 = _ref4[0];
    return have(item15) && (0, import_kolmafia105.canEquip)(item15);
  }).map(function(_ref5) {
    var _ref6 = _slicedToArray33(_ref5, 2), item15 = _ref6[0], valueFunction = _ref6[1];
    return [item15, valueFunction(isFree)];
  }).sort(function(_ref7, _ref8) {
    var _ref9 = _slicedToArray33(_ref7, 2), a = _ref9[1];
    var _ref0 = _slicedToArray33(_ref8, 2), b = _ref0[1];
    return b - a;
  }).map(function(_ref1) {
    var _ref10 = _slicedToArray33(_ref1, 1), item15 = _ref10[0];
    return item15;
  }).splice(0, 3);
}

// src/modes/skeleton.ts
init_dist();
var _templateObject607;
var _templateObject2162;
var _templateObject3148;
var _templateObject4127;
function _taggedTemplateLiteral96(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
var location = $location(_templateObject607 || (_templateObject607 = _taggedTemplateLiteral96(["No Man's And Also No Skeleton's Land"])));
var detector = $item(_templateObject2162 || (_templateObject2162 = _taggedTemplateLiteral96(["chocolate and nylons detector"])));
var quest = {
  name: "Skeleton",
  location: location,
  tasks: [{
    name: "No Man's and No Skeleton's Land",
    completed: function() {
      return false;
    },
    do: location,
    acquire: [{
      item: detector
    }],
    outfit: function() {
      var spec = getKramcoWandererChance() >= 1 ? ifHave("offhand", $item(_templateObject3148 || (_templateObject3148 = _taggedTemplateLiteral96(["Kramco Sausage-o-Matic\u2122"])))) : ifHave("offhand", detector);
      return chooseQuestOutfit({
        location: location,
        isFree: getKramcoWandererChance() >= 1
      }, spec);
    },
    combat: new ChronerStrategy(function() {
      return Macro2.standardCombat();
    }),
    sobriety: "either"
  }]
};
var targetItems = $items(_templateObject4127 || (_templateObject4127 = _taggedTemplateLiteral96(["ordnance magnet, confetti grenade, orphaned baby skeleton, chocolate rations, nice nylon stockings"])));

// src/modes/capsule.ts
init_dist();
var _templateObject608;
var _templateObject2163;
var _templateObject3149;
var _templateObject4128;
function _taggedTemplateLiteral97(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
var location2 = $location(_templateObject608 || (_templateObject608 = _taggedTemplateLiteral97(["The Cave Before Time"])));
var quest2 = {
  name: "Capsule",
  location: location2,
  tasks: [{
    name: "Chroner",
    completed: function() {
      return false;
    },
    do: $location(_templateObject2163 || (_templateObject2163 = _taggedTemplateLiteral97(["The Cave Before Time"]))),
    outfit: function() {
      var sausageSpec = getKramcoWandererChance() >= 1 ? ifHave("offhand", $item(_templateObject3149 || (_templateObject3149 = _taggedTemplateLiteral97(["Kramco Sausage-o-Matic\u2122"])))) : {};
      return chooseQuestOutfit({
        location: location2,
        isFree: getKramcoWandererChance() >= 1
      }, sausageSpec);
    },
    combat: new ChronerStrategy(function() {
      return Macro2.standardCombat();
    }),
    sobriety: "either"
  }]
};
var targetItems2 = $items(_templateObject4128 || (_templateObject4128 = _taggedTemplateLiteral97(["twitching time capsule"])));

// src/modes/future.ts
init_dist();
var _templateObject609;
var _templateObject2164;
var _templateObject3150;
var _templateObject4129;
function _taggedTemplateLiteral98(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
var location3 = $location(_templateObject609 || (_templateObject609 = _taggedTemplateLiteral98(["The Home of The Future"])));
var monster = $monster(_templateObject2164 || (_templateObject2164 = _taggedTemplateLiteral98(["robot maid"])));
var quest3 = {
  name: "Home of the Future",
  location: location3,
  tasks: [{
    name: "Core",
    completed: function() {
      return false;
    },
    do: location3,
    outfit: function() {
      var sausageSpec = getKramcoWandererChance() >= 1 ? ifHave("offhand", $item(_templateObject3150 || (_templateObject3150 = _taggedTemplateLiteral98(["Kramco Sausage-o-Matic\u2122"])))) : {};
      return chooseQuestOutfit({
        location: location3,
        isFree: getKramcoWandererChance() >= 1
      }, sausageSpec);
    },
    combat: new ChronerStrategy(function() {
      return Macro2.step("pickpocket").seeMoreOf(monster).standardCombat();
    }),
    sobriety: "either"
  }]
};
var targetItems3 = $items(_templateObject4129 || (_templateObject4129 = _taggedTemplateLiteral98(["housekeeping automa-core"])));

// src/modes/rock.ts
var import_kolmafia106 = require("kolmafia");
init_dist();
var _templateObject678;
var _templateObject2165;
var _templateObject3151;
var _templateObject4130;
var _templateObject5104;
var _templateObject679;
var _templateObject769;
var _templateObject855;
var _templateObject944;
var _templateObject037;
var _templateObject1145;
function _taggedTemplateLiteral99(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
var location4 = $location(_templateObject678 || (_templateObject678 = _taggedTemplateLiteral99(["The Cave Before Time"])));
var quest4 = {
  name: "Get Rock",
  location: location4,
  tasks: [{
    name: "Set properties after ascension",
    ready: function() {
      return get("lastCaveDanPropertyReset", 0) !== (0, import_kolmafia106.myAscensions)();
    },
    completed: function() {
      return (0, import_kolmafia106.myAscensions)() <= get("lastCaveDanDefeat", 0) || get("questCaveDan", 0) === 0;
    },
    do: function() {
      _set("questCaveDan", 0);
      _set("lastCaveDanPropertyReset", (0, import_kolmafia106.myAscensions)());
    },
    sobriety: "either"
  }, {
    name: "Inital Visit to Dan's Cave",
    completed: function() {
      return get("questCaveDan", 0) > 0 || get("lastCaveDanDefeat", 0) >= (0, import_kolmafia106.myAscensions)();
    },
    do: function() {
      (0, import_kolmafia106.visitUrl)("place.php?whichplace=twitch&action=twitch_dancave1");
      _set("questCaveDan", 1);
    },
    sobriety: "sober"
  }, {
    name: "Play Rock^3 with Ook the Mook",
    after: ["Inital Visit to Dan's Cave"],
    completed: function() {
      return get("questCaveDan", 0) > 1 || get("lastCaveDanDefeat", 0) >= (0, import_kolmafia106.myAscensions)();
    },
    do: function() {
      (0, import_kolmafia106.visitUrl)((0, import_kolmafia106.toUrl)(location4));
      for (var _i = 0, _arr = [3, 1, 2, 1, 2]; _i < _arr.length; _i++) {
        var choiceValue = _arr[_i];
        (0, import_kolmafia106.runChoice)(choiceValue);
      }
      if (get("lastEncounter") === "Ook the Mook") {
        _set("questCaveDan", 2);
      }
    },
    outfit: function() {
      var sausageSpec = getKramcoWandererChance() >= 1 ? ifHave("offhand", $item(_templateObject2165 || (_templateObject2165 = _taggedTemplateLiteral99(["Kramco Sausage-o-Matic\u2122"])))) : {};
      return chooseQuestOutfit({
        location: location4,
        isFree: getKramcoWandererChance() >= 1
      }, sausageSpec);
    },
    combat: new ChronerStrategy(function() {
      return Macro2.standardCombat();
    }),
    forced: true,
    sobriety: "sober"
  }, {
    name: "Teach Ook about Paper",
    after: ["Play Rock^3 with Ook the Mook"],
    completed: function() {
      return get("questCaveDan", 0) > 2 || get("lastCaveDanDefeat", 0) >= (0, import_kolmafia106.myAscensions)();
    },
    do: function() {
      (0, import_kolmafia106.visitUrl)((0, import_kolmafia106.toUrl)(location4));
      for (var _i2 = 0, _arr2 = [3, 1, 1, 2]; _i2 < _arr2.length; _i2++) {
        var choiceValue = _arr2[_i2];
        (0, import_kolmafia106.runChoice)(choiceValue);
      }
      if (get("lastEncounter") === "Ook the Mook") {
        _set("questCaveDan", 3);
      }
    },
    outfit: function() {
      var sausageSpec = getKramcoWandererChance() >= 1 ? ifHave("offhand", $item(_templateObject3151 || (_templateObject3151 = _taggedTemplateLiteral99(["Kramco Sausage-o-Matic\u2122"])))) : {};
      return chooseQuestOutfit({
        location: location4,
        isFree: getKramcoWandererChance() >= 1
      }, sausageSpec);
    },
    combat: new ChronerStrategy(function() {
      return Macro2.standardCombat();
    }),
    forced: true,
    sobriety: "sober"
  }, {
    name: "Teach Ook about Scissors",
    after: ["Teach Ook about Paper"],
    completed: function() {
      return get("questCaveDan", 0) > 3 || get("lastCaveDanDefeat", 0) >= (0, import_kolmafia106.myAscensions)();
    },
    do: function() {
      (0, import_kolmafia106.visitUrl)((0, import_kolmafia106.toUrl)(location4));
      for (var _i3 = 0, _arr3 = [3, 1, 1, 2]; _i3 < _arr3.length; _i3++) {
        var choiceValue = _arr3[_i3];
        (0, import_kolmafia106.runChoice)(choiceValue);
      }
      if (get("lastEncounter") === "Ook the Mook") {
        _set("questCaveDan", 4);
      }
    },
    outfit: function() {
      var sausageSpec = getKramcoWandererChance() >= 1 ? ifHave("offhand", $item(_templateObject4130 || (_templateObject4130 = _taggedTemplateLiteral99(["Kramco Sausage-o-Matic\u2122"])))) : {};
      return chooseQuestOutfit({
        location: location4,
        isFree: getKramcoWandererChance() >= 1
      }, sausageSpec);
    },
    combat: new ChronerStrategy(function() {
      return Macro2.standardCombat();
    }),
    forced: true,
    sobriety: "sober"
  }, {
    name: "Play RoShamBo to obtain Password",
    after: ["Teach Ook about Scissors"],
    completed: function() {
      return get("questCaveDan", 0) > 4 || get("lastCaveDanDefeat", 0) >= (0, import_kolmafia106.myAscensions)();
    },
    do: function() {
      (0, import_kolmafia106.visitUrl)((0, import_kolmafia106.toUrl)(location4));
      if ((0, import_kolmafia106.handlingChoice)()) {
        (0, import_kolmafia106.runChoice)(3);
        (0, import_kolmafia106.runChoice)(1);
        (0, import_kolmafia106.runChoice)(2);
        while ((0, import_kolmafia106.handlingChoice)()) {
          (0, import_kolmafia106.runChoice)(1);
        }
      }
      if (get("lastEncounter") === "Ook the Mook") {
        _set("questCaveDan", 5);
      }
    },
    outfit: function() {
      var sausageSpec = getKramcoWandererChance() >= 1 ? ifHave("offhand", $item(_templateObject5104 || (_templateObject5104 = _taggedTemplateLiteral99(["Kramco Sausage-o-Matic\u2122"])))) : {};
      return chooseQuestOutfit({
        location: location4,
        isFree: getKramcoWandererChance() >= 1
      }, sausageSpec);
    },
    combat: new ChronerStrategy(function() {
      return Macro2.standardCombat();
    }),
    forced: true,
    sobriety: "sober"
  }, {
    name: "Charge Goose",
    after: ["Play RoShamBo to obtain Password"],
    completed: function() {
      return (0, import_kolmafia106.familiarWeight)($familiar(_templateObject679 || (_templateObject679 = _taggedTemplateLiteral99(["Grey Goose"])))) >= 7 || get("questCaveDan", 0) > 5 || get("lastCaveDanDefeat", 0) >= (0, import_kolmafia106.myAscensions)();
    },
    do: function() {
      (0, import_kolmafia106.use)($item(_templateObject769 || (_templateObject769 = _taggedTemplateLiteral99(["Ghost Dog Chow"]))));
    },
    outfit: {
      familiar: $familiar(_templateObject855 || (_templateObject855 = _taggedTemplateLiteral99(["Grey Goose"])))
    },
    sobriety: "sober",
    limit: {
      tries: 5
    }
  }, {
    name: "Fight CaveDan",
    after: ["Charge Goose", "Play RoShamBo to obtain Password"],
    completed: function() {
      return get("questCaveDan", 0) > 5 || get("lastCaveDanDefeat", 0) >= (0, import_kolmafia106.myAscensions)();
    },
    do: function() {
      (0, import_kolmafia106.visitUrl)("place.php?whichplace=twitch&action=twitch_dancave3");
      _set("questCaveDan", 6);
      _set("lastCaveDanDefeat", (0, import_kolmafia106.myAscensions)());
    },
    outfit: function() {
      return chooseQuestOutfit({
        location: location4
      }, {
        familiar: $familiar(_templateObject944 || (_templateObject944 = _taggedTemplateLiteral99(["Grey Goose"]))),
        acc1: $items(_templateObject037 || (_templateObject037 = _taggedTemplateLiteral99(["pro skateboard"])))
      });
    },
    combat: new ChronerStrategy(function() {
      return Macro2.getRocks().standardCombat();
    }),
    sobriety: "sober"
  }]
};
var targetItems4 = $items(_templateObject1145 || (_templateObject1145 = _taggedTemplateLiteral99(["Caveman Dan's favorite rock"])));

// src/modes/rose.ts
var import_kolmafia107 = require("kolmafia");
init_dist();
var _templateObject680;
var _templateObject2166;
var _templateObject3152;
var _templateObject4131;
function _createForOfIteratorHelper25(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t) {
    if (Array.isArray(r) || (t = _unsupportedIterableToArray55(r)) || e && r && "number" == typeof r.length) {
      t && (r = t);
      var _n = 0, F = function F2() {
      };
      return { s: F, n: function n() {
        return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
      }, e: function e2(r2) {
        throw r2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o, a = true, u = false;
  return { s: function s() {
    t = t.call(r);
  }, n: function n() {
    var r2 = t.next();
    return a = r2.done, r2;
  }, e: function e2(r2) {
    u = true, o = r2;
  }, f: function f() {
    try {
      a || null == t.return || t.return();
    } finally {
      if (u) throw o;
    }
  } };
}
function _toConsumableArray39(r) {
  return _arrayWithoutHoles39(r) || _iterableToArray39(r) || _unsupportedIterableToArray55(r) || _nonIterableSpread39();
}
function _nonIterableSpread39() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray55(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray55(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray55(r, a) : void 0;
  }
}
function _iterableToArray39(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles39(r) {
  if (Array.isArray(r)) return _arrayLikeToArray55(r);
}
function _arrayLikeToArray55(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _taggedTemplateLiteral100(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
var location5 = $location(_templateObject680 || (_templateObject680 = _taggedTemplateLiteral100(["Globe Theatre Main Stage"])));
var triedFlorist = false;
var quest5 = {
  name: "Rose",
  location: location5,
  tasks: [{
    name: "Flowers",
    ready: function() {
      return Florist_exports.have() && (0, import_kolmafia107.myLocation)() === location5;
    },
    completed: function() {
      return Florist_exports.isFull() || triedFlorist;
    },
    do: function() {
      var flowers = [Florist_exports.ArcticMoss, Florist_exports.SpiderPlant, Florist_exports.BamBoo].concat(_toConsumableArray39(Florist_exports.flowersAvailableFor(location5)));
      var _iterator = _createForOfIteratorHelper25(flowers), _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var flower = _step.value;
          flower.plant();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      triedFlorist = true;
    },
    sobriety: "either"
  }, {
    name: "Chroner",
    completed: function() {
      return false;
    },
    do: $location(_templateObject2166 || (_templateObject2166 = _taggedTemplateLiteral100(["Globe Theatre Main Stage"]))),
    outfit: function() {
      var sausageSpec = getKramcoWandererChance() >= 1 ? ifHave("offhand", $item(_templateObject3152 || (_templateObject3152 = _taggedTemplateLiteral100(["Kramco Sausage-o-Matic\u2122"])))) : {};
      return chooseQuestOutfit({
        location: location5,
        isFree: getKramcoWandererChance() >= 1
      }, sausageSpec);
    },
    combat: new ChronerStrategy(function() {
      return Macro2.standardCombat();
    }),
    sobriety: "either"
  }]
};
var targetItems5 = $items(_templateObject4131 || (_templateObject4131 = _taggedTemplateLiteral100(["rose, red tulip, white tulip, blue tulip"])));

// src/modes/soup.ts
init_dist();
var _templateObject681;
var _templateObject2167;
var _templateObject3153;
function _taggedTemplateLiteral101(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
var location6 = $location(_templateObject681 || (_templateObject681 = _taggedTemplateLiteral101(["The Primordial Stew"])));
var quest6 = {
  name: "Soup",
  location: location6,
  tasks: [{
    name: "Soup",
    completed: function() {
      return false;
    },
    do: location6,
    outfit: function() {
      var sausageSpec = getKramcoWandererChance() >= 1 ? ifHave("offhand", $item(_templateObject2167 || (_templateObject2167 = _taggedTemplateLiteral101(["Kramco Sausage-o-Matic\u2122"])))) : {};
      return chooseQuestOutfit({
        location: location6,
        isFree: getKramcoWandererChance() >= 1
      }, sausageSpec);
    },
    combat: new ChronerStrategy(function() {
      return Macro2.standardCombat();
    }),
    sobriety: "either"
  }]
};
var targetItems6 = $items(_templateObject3153 || (_templateObject3153 = _taggedTemplateLiteral101(["flagellate flagon, messenger bag RNA, proto-proto-protozoa"])));

// src/setup.ts
var import_kolmafia108 = require("kolmafia");
init_dist();
var _templateObject686;
var _templateObject2168;
var _templateObject3154;
var _templateObject4132;
var _templateObject5105;
var _templateObject687;
var _templateObject770;
var _templateObject856;
var _templateObject945;
var _templateObject038;
var _templateObject1146;
var _templateObject1034;
var _templateObject1147;
var _templateObject1232;
var _templateObject1330;
var _templateObject1429;
var _templateObject1528;
var _templateObject1628;
var _templateObject1725;
var _templateObject1824;
var _templateObject1924;
var _templateObject2023;
var _templateObject2169;
var _templateObject2226;
var _templateObject2324;
var _templateObject2422;
function _taggedTemplateLiteral102(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
var poisons = $effects(_templateObject686 || (_templateObject686 = _taggedTemplateLiteral102(["Hardly Poisoned at All, A Little Bit Poisoned, Somewhat Poisoned, Really Quite Poisoned, Majorly Poisoned"])));
function cmcTarget() {
  if (args.mode === "rose") {
    return {
      item: $item(_templateObject2168 || (_templateObject2168 = _taggedTemplateLiteral102(["Extrovermectin\u2122"]))),
      environment: "i"
    };
  } else {
    return {
      item: $item(_templateObject3154 || (_templateObject3154 = _taggedTemplateLiteral102(["Breathitin\u2122"]))),
      environment: "u"
    };
  }
}
var setup = {
  name: "Setup",
  tasks: [{
    name: "Beaten Up",
    completed: function() {
      return !have($effect(_templateObject4132 || (_templateObject4132 = _taggedTemplateLiteral102(["Beaten Up"]))));
    },
    do: function() {
      if (["Poetic Justice", "Lost and Found"].includes(get("lastEncounter"))) {
        uneffect($effect(_templateObject5105 || (_templateObject5105 = _taggedTemplateLiteral102(["Beaten Up"]))));
      }
      if (have($effect(_templateObject687 || (_templateObject687 = _taggedTemplateLiteral102(["Beaten Up"]))))) {
        throw "Got beaten up for no discernable reason!";
      }
    },
    sobriety: "either"
  }, {
    name: "Disco Nap",
    ready: function() {
      return have($skill(_templateObject770 || (_templateObject770 = _taggedTemplateLiteral102(["Disco Nap"])))) && have($skill(_templateObject856 || (_templateObject856 = _taggedTemplateLiteral102(["Adventurer of Leisure"]))));
    },
    completed: function() {
      return poisons.every(function(e) {
        return !have(e);
      });
    },
    do: function() {
      return (0, import_kolmafia108.useSkill)($skill(_templateObject945 || (_templateObject945 = _taggedTemplateLiteral102(["Disco Nap"]))));
    },
    sobriety: "either"
  }, {
    name: "Antidote",
    completed: function() {
      return poisons.every(function(e) {
        return !have(e);
      });
    },
    do: function() {
      return poisons.forEach(function(e) {
        return uneffect(e);
      });
    },
    sobriety: "either"
  }, {
    name: "Recover",
    ready: function() {
      return have($skill(_templateObject038 || (_templateObject038 = _taggedTemplateLiteral102(["Cannelloni Cocoon"]))));
    },
    completed: function() {
      return (0, import_kolmafia108.myHp)() / (0, import_kolmafia108.myMaxhp)() >= 0.5;
    },
    do: function() {
      (0, import_kolmafia108.useSkill)($skill(_templateObject1146 || (_templateObject1146 = _taggedTemplateLiteral102(["Cannelloni Cocoon"]))));
    },
    sobriety: "either"
  }, {
    name: "Recover Failed",
    completed: function() {
      return (0, import_kolmafia108.myHp)() / (0, import_kolmafia108.myMaxhp)() >= 0.5;
    },
    do: function() {
      throw "Unable to heal above 50% HP, heal yourself!";
    },
    sobriety: "either"
  }, {
    name: "Kgnee",
    ready: function() {
      return !get("_gnomePart");
    },
    completed: function() {
      return !have($familiar(_templateObject1034 || (_templateObject1034 = _taggedTemplateLiteral102(["Reagnimated Gnome"])))) || have($item(_templateObject1147 || (_templateObject1147 = _taggedTemplateLiteral102(["gnomish housemaid's kgnee"]))));
    },
    do: function() {
      (0, import_kolmafia108.create)($item(_templateObject1232 || (_templateObject1232 = _taggedTemplateLiteral102(["gnomish housemaid's kgnee"]))));
    },
    sobriety: "sober"
  }, {
    name: "Closet Sand Dollars",
    completed: function() {
      return (0, import_kolmafia108.itemAmount)($item(_templateObject1330 || (_templateObject1330 = _taggedTemplateLiteral102(["sand dollar"])))) === 0;
    },
    do: function() {
      return (0, import_kolmafia108.putCloset)((0, import_kolmafia108.itemAmount)($item(_templateObject1429 || (_templateObject1429 = _taggedTemplateLiteral102(["sand dollar"])))), $item(_templateObject1528 || (_templateObject1528 = _taggedTemplateLiteral102(["sand dollar"]))));
    },
    sobriety: "either"
  }, {
    name: "Closet Hobo Nickels",
    completed: function() {
      return (0, import_kolmafia108.itemAmount)($item(_templateObject1628 || (_templateObject1628 = _taggedTemplateLiteral102(["hobo nickel"])))) === 0 || !have($familiar(_templateObject1725 || (_templateObject1725 = _taggedTemplateLiteral102(["Hobo Monkey"])))) && !have($item(_templateObject1824 || (_templateObject1824 = _taggedTemplateLiteral102(["hobo nickel"]))), 1e3);
    },
    do: function() {
      return (0, import_kolmafia108.putCloset)((0, import_kolmafia108.itemAmount)($item(_templateObject1924 || (_templateObject1924 = _taggedTemplateLiteral102(["hobo nickel"])))), $item(_templateObject2023 || (_templateObject2023 = _taggedTemplateLiteral102(["hobo nickel"]))));
    },
    sobriety: "either"
  }, {
    name: "Snapper",
    completed: function() {
      return Snapper_exports.getTrackedPhylum() === $phylum(_templateObject2169 || (_templateObject2169 = _taggedTemplateLiteral102(["dude"])));
    },
    do: function() {
      return Snapper_exports.trackPhylum($phylum(_templateObject2226 || (_templateObject2226 = _taggedTemplateLiteral102(["dude"]))));
    },
    ready: function() {
      return Snapper_exports.have();
    },
    sobriety: "either"
  }, {
    name: "Autumn-Aton",
    completed: function() {
      return AutumnAton_exports.currentlyIn() !== null;
    },
    do: function() {
      AutumnAton_exports.sendTo($locations(_templateObject2324 || (_templateObject2324 = _taggedTemplateLiteral102(["The Post-Mall, Moonshiners' Woods, The Cave Before Time, The Sleazy Back Alley"]))));
    },
    ready: function() {
      return AutumnAton_exports.available();
    },
    sobriety: "either"
  }, {
    name: "Cold Medicine Cabinent",
    completed: function() {
      return (0, import_kolmafia108.getWorkshed)() !== $item(_templateObject2422 || (_templateObject2422 = _taggedTemplateLiteral102(["cold medicine cabinet"]))) || (0, import_kolmafia108.totalTurnsPlayed)() < get("_nextColdMedicineConsult") || get("_coldMedicineConsults") >= 5 || countEnvironment(cmcTarget().environment) <= 10;
    },
    do: function() {
      return tryGetCMCItem(cmcTarget().item);
    },
    sobriety: "either"
  }, {
    name: "Boombox",
    completed: function() {
      return !SongBoom_exports.have() || SongBoom_exports.song() === "Food Vibrations" || SongBoom_exports.songChangesLeft() === 0;
    },
    do: function() {
      return SongBoom_exports.setSong("Food Vibrations");
    },
    sobriety: "either"
  }]
};

// src/main.ts
var _templateObject688;
var _templateObject2170;
var _templateObject3155;
var _templateObject4133;
var _templateObject5106;
var _templateObject689;
var _templateObject771;
var _templateObject857;
var _templateObject946;
var _templateObject039;
var _templateObject1148;
var _templateObject1035;
var _templateObject1149;
var _templateObject1233;
var _templateObject1331;
var _templateObject1430;
var _templateObject1529;
var _templateObject1629;
var _templateObject1726;
var _templateObject1825;
var _templateObject1925;
var _templateObject2024;
var _templateObject2171;
var _templateObject2227;
var _templateObject2325;
var _templateObject2423;
var _templateObject2521;
var _templateObject2620;
var _templateObject2718;
var _templateObject2818;
var _templateObject2918;
var _templateObject3017;
var _templateObject3156;
var _templateObject3219;
var _templateObject3318;
var _templateObject3416;
var _templateObject3515;
var _templateObject3615;
var _templateObject3715;
var _templateObject3815;
var _templateObject3914;
var _templateObject4014;
var _templateObject4134;
var _templateObject4216;
var _templateObject4313;
var _templateObject4412;
var _templateObject4512;
var _templateObject4612;
var _templateObject4712;
var _templateObject4812;
var _templateObject4912;
function _typeof37(o) {
  "@babel/helpers - typeof";
  return _typeof37 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof37(o);
}
function _slicedToArray34(r, e) {
  return _arrayWithHoles34(r) || _iterableToArrayLimit34(r, e) || _unsupportedIterableToArray56(r, e) || _nonIterableRest34();
}
function _nonIterableRest34() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit34(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles34(r) {
  if (Array.isArray(r)) return r;
}
function _createForOfIteratorHelper26(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t) {
    if (Array.isArray(r) || (t = _unsupportedIterableToArray56(r)) || e && r && "number" == typeof r.length) {
      t && (r = t);
      var _n = 0, F = function F2() {
      };
      return { s: F, n: function n() {
        return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
      }, e: function e2(r2) {
        throw r2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o, a = true, u = false;
  return { s: function s() {
    t = t.call(r);
  }, n: function n() {
    var r2 = t.next();
    return a = r2.done, r2;
  }, e: function e2(r2) {
    u = true, o = r2;
  }, f: function f() {
    try {
      a || null == t.return || t.return();
    } finally {
      if (u) throw o;
    }
  } };
}
function _taggedTemplateLiteral103(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function _toConsumableArray40(r) {
  return _arrayWithoutHoles40(r) || _iterableToArray40(r) || _unsupportedIterableToArray56(r) || _nonIterableSpread40();
}
function _nonIterableSpread40() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray56(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray56(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray56(r, a) : void 0;
  }
}
function _iterableToArray40(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles40(r) {
  if (Array.isArray(r)) return _arrayLikeToArray56(r);
}
function _arrayLikeToArray56(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function ownKeys18(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread18(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys18(Object(t), true).forEach(function(r2) {
      _defineProperty32(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys18(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty32(e, r, t) {
  return (r = _toPropertyKey37(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e;
}
function _toPropertyKey37(t) {
  var i = _toPrimitive37(t, "string");
  return "symbol" == _typeof37(i) ? i : i + "";
}
function _toPrimitive37(t, r) {
  if ("object" != _typeof37(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof37(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
var completed = function() {
  var turncount = (0, import_kolmafia109.myTurncount)();
  return args.turns > 0 ? function() {
    return (0, import_kolmafia109.myTurncount)() - turncount >= args.turns || (0, import_kolmafia109.myAdventures)() === 0;
  } : function() {
    return (0, import_kolmafia109.myAdventures)() === -args.turns;
  };
};
function getQuest2() {
  switch (args.mode) {
    case "capsule":
      return _objectSpread18(_objectSpread18({}, quest2), {}, {
        completed: completed()
      });
    case "future":
      return _objectSpread18(_objectSpread18({}, quest3), {}, {
        completed: completed()
      });
    case "rock":
      return _objectSpread18(_objectSpread18({}, quest4), {}, {
        completed: completed()
      });
    case "rose":
      return _objectSpread18(_objectSpread18({}, quest5), {}, {
        completed: completed()
      });
    case "skeleton":
      return _objectSpread18(_objectSpread18({}, quest), {}, {
        completed: completed()
      });
    case "soup":
      return _objectSpread18(_objectSpread18({}, quest6), {}, {
        completed: completed()
      });
    default:
      throw "Unrecognized mode";
  }
}
var targetItems7 = [].concat(_toConsumableArray40($items(_templateObject688 || (_templateObject688 = _taggedTemplateLiteral103(["Chroner"])))), _toConsumableArray40(targetItems2), _toConsumableArray40(targetItems3), _toConsumableArray40(targetItems4), _toConsumableArray40(targetItems5), _toConsumableArray40(targetItems), _toConsumableArray40(targetItems6));
function main(command) {
  Args.fill(args, command);
  if (args.help) {
    Args.showHelp(args);
    return;
  }
  sinceKolmafiaRevision(27668);
  var digitizes = -1;
  var yrTarget = $location(_templateObject2170 || (_templateObject2170 = _taggedTemplateLiteral103(["The Cave Before Time"])));
  var quest7 = getQuest2();
  var global = {
    name: "Global",
    completed: completed(),
    tasks: [{
      name: "Check Access",
      completed: function() {
        return get("timeTowerAvailable");
      },
      do: function() {
        (0, import_kolmafia109.visitUrl)("place.php?whichplace=twitch");
        if (!get("timeTowerAvailable")) {
          throw "The Time-Twitching Tower is currently unavailable";
        }
      },
      sobriety: "either"
    }, {
      name: "Grey You Attack Skill",
      completed: function() {
        return have($skill(_templateObject3155 || (_templateObject3155 = _taggedTemplateLiteral103(["Nantlers"])))) || have($skill(_templateObject4133 || (_templateObject4133 = _taggedTemplateLiteral103(["Nanoshock"])))) || have($skill(_templateObject5106 || (_templateObject5106 = _taggedTemplateLiteral103(["Audioclasm"]))));
      },
      do: $location(_templateObject689 || (_templateObject689 = _taggedTemplateLiteral103(["The Haunted Storage Room"]))),
      ready: function() {
        return (0, import_kolmafia109.myClass)() === $class(_templateObject771 || (_templateObject771 = _taggedTemplateLiteral103(["Grey Goo"]))) && (0, import_kolmafia109.canAdventure)($location(_templateObject857 || (_templateObject857 = _taggedTemplateLiteral103(["The Haunted Storage Room"]))));
      },
      combat: new ChronerStrategy(function() {
        return Macro2.standardCombat();
      }),
      sobriety: "sober",
      choices: {
        886: 6
      }
    }, {
      name: "Clara's Bell",
      completed: function() {
        return !have($item(_templateObject946 || (_templateObject946 = _taggedTemplateLiteral103(["Clara's bell"])))) || get("_claraBellUsed") || get("noncombatForcerActive");
      },
      do: function() {
        (0, import_kolmafia109.use)($item(_templateObject039 || (_templateObject039 = _taggedTemplateLiteral103(["Clara's bell"]))));
      },
      sobriety: "either"
    }, {
      name: "Fiesta Exit",
      ready: function() {
        return CinchoDeMayo_exports.totalAvailableCinch() > 60;
      },
      completed: function() {
        return get("noncombatForcerActive");
      },
      do: function() {
        var turns2 = (0, import_kolmafia109.totalTurnsPlayed)();
        while (CinchoDeMayo_exports.currentCinch() < 60) {
          (0, import_kolmafia109.cliExecute)("rest");
          if ((0, import_kolmafia109.totalTurnsPlayed)() > turns2) break;
        }
        (0, import_kolmafia109.useSkill)(1, $skill(_templateObject1148 || (_templateObject1148 = _taggedTemplateLiteral103(["Cincho: Fiesta Exit"]))));
      },
      sobriety: "either"
    }, {
      name: "Proton Ghost",
      ready: function() {
        return have($item(_templateObject1035 || (_templateObject1035 = _taggedTemplateLiteral103(["protonic accelerator pack"])))) && get("questPAGhost") !== "unstarted" && !!get("ghostLocation");
      },
      do: function() {
        var location7 = get("ghostLocation");
        if (location7) {
          (0, import_kolmafia109.adv1)(location7, 0, "");
        } else {
          throw "Could not determine Proton Ghost location!";
        }
      },
      outfit: function() {
        return chooseQuestOutfit({
          location: quest7.location,
          isFree: true
        }, {
          back: $item(_templateObject1149 || (_templateObject1149 = _taggedTemplateLiteral103(["protonic accelerator pack"]))),
          avoid: get("ghostLocation") === $location(_templateObject1233 || (_templateObject1233 = _taggedTemplateLiteral103(["The Icy Peak"]))) ? $items(_templateObject1331 || (_templateObject1331 = _taggedTemplateLiteral103(["Great Wolf's beastly trousers"]))) : []
        });
      },
      completed: function() {
        return get("questPAGhost") === "unstarted";
      },
      combat: new ChronerStrategy(function() {
        return Macro2.trySkill($skill(_templateObject1430 || (_templateObject1430 = _taggedTemplateLiteral103(["Sing Along"])))).trySkill($skill(_templateObject1529 || (_templateObject1529 = _taggedTemplateLiteral103(["Shoot Ghost"])))).trySkill($skill(_templateObject1629 || (_templateObject1629 = _taggedTemplateLiteral103(["Shoot Ghost"])))).trySkill($skill(_templateObject1726 || (_templateObject1726 = _taggedTemplateLiteral103(["Shoot Ghost"])))).trySkill($skill(_templateObject1825 || (_templateObject1825 = _taggedTemplateLiteral103(["Trap Ghost"]))));
      }),
      sobriety: "sober"
    }, {
      name: "Vote Wanderer",
      ready: function() {
        return have($item(_templateObject1925 || (_templateObject1925 = _taggedTemplateLiteral103(['"I Voted!" sticker'])))) && (0, import_kolmafia109.totalTurnsPlayed)() % 11 === 1 && get("lastVoteMonsterTurn") < (0, import_kolmafia109.totalTurnsPlayed)() && get("_voteFreeFights") < 3;
      },
      do: function() {
        (0, import_kolmafia109.adv1)(quest7.location, -1, "");
      },
      outfit: function() {
        return chooseQuestOutfit({
          location: quest7.location,
          isFree: true
        }, {
          acc3: $item(_templateObject2024 || (_templateObject2024 = _taggedTemplateLiteral103(['"I Voted!" sticker'])))
        });
      },
      completed: function() {
        return get("lastVoteMonsterTurn") === (0, import_kolmafia109.totalTurnsPlayed)();
      },
      combat: new ChronerStrategy(function() {
        return Macro2.redigitize().standardCombat();
      }),
      sobriety: "either"
    }, {
      name: "Digitize Wanderer",
      ready: function() {
        return counter_exports.get("Digitize") <= 0;
      },
      outfit: function() {
        var _get3;
        return chooseQuestOutfit({
          location: quest7.location,
          isFree: (_get3 = get("_sourceTerminalDigitizeMonster")) === null || _get3 === void 0 ? void 0 : _get3.attributes.includes("FREE")
        });
      },
      completed: function() {
        return get("_sourceTerminalDigitizeMonsterCount") !== digitizes;
      },
      do: function() {
        (0, import_kolmafia109.adv1)(quest7.location, -1, "");
        digitizes = get("_sourceTerminalDigitizeMonsterCount");
      },
      combat: new ChronerStrategy(function() {
        return Macro2.redigitize().standardCombat();
      }),
      sobriety: "either"
    }, {
      name: "Void Monster",
      ready: function() {
        return have($item(_templateObject2171 || (_templateObject2171 = _taggedTemplateLiteral103(["cursed magnifying glass"])))) && get("cursedMagnifyingGlassCount") === 13;
      },
      completed: function() {
        return get("_voidFreeFights") >= 5;
      },
      outfit: function() {
        return chooseQuestOutfit({
          location: quest7.location,
          isFree: true
        }, {
          offhand: $item(_templateObject2227 || (_templateObject2227 = _taggedTemplateLiteral103(["cursed magnifying glass"])))
        });
      },
      do: quest7.location,
      sobriety: "sober",
      combat: new ChronerStrategy(function() {
        return Macro2.standardCombat();
      })
    }, {
      name: "Work in the Future",
      ready: function() {
        return have($item(_templateObject2325 || (_templateObject2325 = _taggedTemplateLiteral103(["Spring Bros. ID badge"])))) && have($item(_templateObject2423 || (_templateObject2423 = _taggedTemplateLiteral103(["Boltsmann ID badge"]))));
      },
      completed: function() {
        return get("_automatedFutureManufactures") >= 11;
      },
      do: function() {
        return getBestAutomatedFutureSide() === "springbros" ? $location(_templateObject2521 || (_templateObject2521 = _taggedTemplateLiteral103(["Spring Bros. Solenoids"]))) : $location(_templateObject2620 || (_templateObject2620 = _taggedTemplateLiteral103(["Boltsmann Bearings"])));
      },
      outfit: function() {
        return {
          acc1: getBestAutomatedFutureSide() === "springbros" ? $item(_templateObject2718 || (_templateObject2718 = _taggedTemplateLiteral103(["Spring Bros. ID badge"]))) : $item(_templateObject2818 || (_templateObject2818 = _taggedTemplateLiteral103(["Boltsmann ID badge"])))
        };
      },
      choices: {
        1512: 1,
        1513: 1
      },
      sobriety: "either"
    }, {
      name: "Time Capsule",
      ready: function() {
        return args.mode !== "rock" || get("_questCaveDan", 0) > 4 || get("lastCaveDanDefeat", 0) >= (0, import_kolmafia109.myAscensions)();
      },
      do: function() {
        var turns2 = (0, import_kolmafia109.totalTurnsPlayed)();
        (0, import_kolmafia109.adv1)($location(_templateObject2918 || (_templateObject2918 = _taggedTemplateLiteral103(["The Cave Before Time"]))), 0, "");
        if ((0, import_kolmafia109.totalTurnsPlayed)() > turns2 && get("lastEncounter") !== "Time Cave.  Period.") {
          throw "We expected to force the NC";
        }
      },
      forced: true,
      sobriety: "either",
      completed: function() {
        return false;
      },
      choices: {
        955: 2
      },
      combat: new ChronerStrategy(function() {
        return Macro2.standardCombat();
      })
    }, {
      name: "Spikolodon Spikes",
      ready: function() {
        return have($item(_templateObject3017 || (_templateObject3017 = _taggedTemplateLiteral103(["Jurassic Parka"])))) && have($skill(_templateObject3156 || (_templateObject3156 = _taggedTemplateLiteral103(["Torso Awareness"])))) && get("_spikolodonSpikeUses") < 5;
      },
      outfit: function() {
        return chooseQuestOutfit({
          location: quest7.location
        }, {
          shirt: $item(_templateObject3219 || (_templateObject3219 = _taggedTemplateLiteral103(["Jurassic Parka"])))
        });
      },
      do: quest7.location,
      completed: function() {
        return get("noncombatForcerActive");
      },
      prepare: function() {
        return (0, import_kolmafia109.cliExecute)("parka spikolodon");
      },
      combat: new ChronerStrategy(function() {
        return Macro2.spikes().standardCombat();
      }),
      sobriety: "sober"
    }, {
      name: "Bowling Ball Run",
      ready: function() {
        return get("cosmicBowlingBallReturnCombats") < 1 && get("hasCosmicBowlingBall") && !get("noncombatForcerActive");
      },
      do: $location(_templateObject3318 || (_templateObject3318 = _taggedTemplateLiteral103(["The Cave Before Time"]))),
      sobriety: "sober",
      completed: function() {
        return false;
      },
      combat: new ChronerStrategy(function() {
        var romance = get("romanticTarget");
        var freeMonsters = $monsters(_templateObject3416 || (_templateObject3416 = _taggedTemplateLiteral103(["sausage goblin"])));
        if (romance !== null && romance !== void 0 && romance.attributes.includes("FREE")) freeMonsters.push(romance);
        return Macro2.if_(freeMonsters, Macro2.standardCombat()).tryHaveSkill($skill(_templateObject3515 || (_templateObject3515 = _taggedTemplateLiteral103(["Curse of Weaksauce"])))).trySkill($skill(_templateObject3615 || (_templateObject3615 = _taggedTemplateLiteral103(["Bowl a Curveball"])))).abort();
      })
    }, {
      name: "Asdon Bumper",
      ready: function() {
        return AsdonMartin_exports.installed() && !get("noncombatForcerActive");
      },
      completed: function() {
        return get("banishedMonsters").includes("Spring-Loaded Front Bumper");
      },
      sobriety: "sober",
      do: $location(_templateObject3715 || (_templateObject3715 = _taggedTemplateLiteral103(["The Cave Before Time"]))),
      combat: new ChronerStrategy(function() {
        var romance = get("romanticTarget");
        var freeMonsters = $monsters(_templateObject3815 || (_templateObject3815 = _taggedTemplateLiteral103(["sausage goblin"])));
        if (romance !== null && romance !== void 0 && romance.attributes.includes("FREE")) freeMonsters.push(romance);
        return Macro2.if_(freeMonsters, Macro2.standardCombat()).skill($skill(_templateObject3914 || (_templateObject3914 = _taggedTemplateLiteral103(["Asdon Martin: Spring-Loaded Front Bumper"])))).abort();
      }),
      prepare: function() {
        return AsdonMartin_exports.fillTo(50);
      }
    }, {
      name: "Asdon Missile",
      ready: function() {
        return AsdonMartin_exports.installed() && !get("noncombatForcerActive");
      },
      completed: function() {
        return get("_missileLauncherUsed");
      },
      combat: new ChronerStrategy(function() {
        var romance = get("romanticTarget");
        var freeMonsters = $monsters(_templateObject4014 || (_templateObject4014 = _taggedTemplateLiteral103(["sausage goblin"])));
        if (romance !== null && romance !== void 0 && romance.attributes.includes("FREE")) freeMonsters.push(romance);
        return Macro2.if_(freeMonsters, Macro2.standardCombat()).tryHaveSkill($skill(_templateObject4134 || (_templateObject4134 = _taggedTemplateLiteral103(["Summon Mayfly Swarm"])))).skill($skill(_templateObject4216 || (_templateObject4216 = _taggedTemplateLiteral103(["Asdon Martin: Missile Launcher"])))).abort();
      }),
      outfit: function() {
        return chooseQuestOutfit({
          location: yrTarget,
          isFree: true
        });
      },
      prepare: function() {
        return AsdonMartin_exports.fillTo(100);
      },
      do: yrTarget,
      sobriety: "sober"
    }, {
      name: "Spit Jurassic Acid",
      completed: function() {
        return have($effect(_templateObject4313 || (_templateObject4313 = _taggedTemplateLiteral103(["Everything Looks Yellow"]))));
      },
      ready: function() {
        return have($item(_templateObject4412 || (_templateObject4412 = _taggedTemplateLiteral103(["Jurassic Parka"])))) && have($skill(_templateObject4512 || (_templateObject4512 = _taggedTemplateLiteral103(["Torso Awareness"])))) && !get("noncombatForcerActive");
      },
      outfit: function() {
        return chooseQuestOutfit({
          location: yrTarget,
          isFree: true
        }, {
          shirt: $item(_templateObject4612 || (_templateObject4612 = _taggedTemplateLiteral103(["Jurassic Parka"])))
        });
      },
      prepare: function() {
        return (0, import_kolmafia109.cliExecute)("parka dilophosaur");
      },
      do: yrTarget,
      combat: new ChronerStrategy(function() {
        var romance = get("romanticTarget");
        var freeMonsters = $monsters(_templateObject4712 || (_templateObject4712 = _taggedTemplateLiteral103(["sausage goblin"])));
        if (romance !== null && romance !== void 0 && romance.attributes.includes("FREE")) freeMonsters.push(romance);
        return Macro2.if_(freeMonsters, Macro2.standardCombat()).tryHaveSkill($skill(_templateObject4812 || (_templateObject4812 = _taggedTemplateLiteral103(["Summon Mayfly Swarm"])))).skill($skill(_templateObject4912 || (_templateObject4912 = _taggedTemplateLiteral103(["Spit jurassic acid"])))).abort();
      }),
      sobriety: "sober"
    }]
  };
  var engine = new ChronerEngine(getTasks([setup, global, quest7]));
  engine.print();
  var sessionStart = Session.current();
  withProperty("recoveryScript", "", function() {
    try {
      engine.run();
    } finally {
      engine.destruct();
    }
  });
  var sessionResults = Session.current().diff(sessionStart);
  printh("SESSION RESULTS:");
  var _iterator = _createForOfIteratorHelper26(sessionResults.items.entries()), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var _step$value = _slicedToArray34(_step.value, 2), item15 = _step$value[0], count = _step$value[1];
      var fn = targetItems7.includes(item15) ? printh : import_kolmafia109.print;
      fn("ITEM ".concat(item15, " QTY ").concat(count));
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  main
});
